### YamlMime:UniversalReference
api_name: []
items:
- children:
  - google.cloud.spanner_v1.client.Client.SCOPE
  - google.cloud.spanner_v1.client.Client.copy
  - google.cloud.spanner_v1.client.Client.credentials
  - google.cloud.spanner_v1.client.Client.database_admin_api
  - google.cloud.spanner_v1.client.Client.instance
  - google.cloud.spanner_v1.client.Client.instance_admin_api
  - google.cloud.spanner_v1.client.Client.list_instance_configs
  - google.cloud.spanner_v1.client.Client.list_instances
  - google.cloud.spanner_v1.client.Client.project_name
  class: google.cloud.spanner_v1.client.Client
  fullName: google.cloud.spanner_v1.client.Client
  inheritance:
  - inheritance:
    - inheritance:
      - inheritance:
        - type: builtins.object
        type: google.cloud.client._ClientFactoryMixin
      type: google.cloud.client.Client
    - inheritance:
      - type: builtins.object
      type: google.cloud.client._ClientProjectMixin
    type: google.cloud.client.ClientWithProject
  langs:
  - python
  module: google.cloud.spanner_v1.client
  name: Client
  source:
    id: Client
    path: google/cloud/spanner_v1/client.py
    remote:
      branch: HEAD
      path: google/cloud/spanner_v1/client.py
      repo: https://github.com/googleapis/python-spanner.git
    startLine: 77
  summary: 'Client for interacting with Cloud Spanner API.



    > [!NOTE]

    > Since the Cloud Spanner API requires the gRPC transport, no

    >

    > _http argument is accepted by this class.

    >'
  syntax:
    content: Client(project=None, credentials=None, client_info=<google.api_core.gapic_v1.client_info.ClientInfo
      object>, client_options=None, query_options=None)
    parameters:
    - description: '(Optional) The ID of the project which owns the

        instances, tables and data. If not provided, will

        attempt to determine from the environment.'
      id: project
      type:
      - google.cloud.spanner_v1.client.str
      - google.cloud.spanner_v1.client.unicode
    - description: '(Optional) The authorization credentials to attach to requests.

        These credentials identify this application to the service.

        If none are specified, the client will attempt to ascertain

        the credentials from the environment.'
      id: credentials
      type:
      - google.auth.credentials.Credentials
      - types.NoneType
    - description: '(Optional) The client info used to send a user-agent string along
        with

        API requests. If `None`, then default info will be used. Generally,

        you only need to set this if you''re developing your own library or

        partner tool.'
      id: client_info
      type:
      - google.api_core.gapic_v1.client_info.ClientInfo
    - description: '(Optional) Client options used to set user options

        on the client. API Endpoint should be set through client_options.'
      id: client_options
      type:
      - google.api_core.client_options.ClientOptions
      - google.cloud.spanner_v1.client.dict
    - description: '(Optional) Query optimizer configuration to use for the given
        query.

        If a dict is provided, it must be of the same form as the protobuf

        message <xref:google.cloud.spanner_v1.QueryOptions>'
      id: query_options
      type:
      - google.cloud.spanner_v1.ExecuteSqlRequest.QueryOptions
      - google.cloud.spanner_v1.client.dict
  type: class
  uid: google.cloud.spanner_v1.client.Client
- class: google.cloud.spanner_v1.client.Client
  fullName: google.cloud.spanner_v1.client.Client.SCOPE
  langs:
  - python
  module: google.cloud.spanner_v1.client
  name: SCOPE
  source:
    id: SCOPE
    path: null
    remote:
      branch: HEAD
      path: null
      repo: https://github.com/googleapis/python-spanner.git
    startLine: null
  summary: The scopes required for Google Cloud Spanner.
  syntax:
    content: SCOPE = ('https://www.googleapis.com/auth/spanner.admin',)
  type: attribute
  uid: google.cloud.spanner_v1.client.Client.SCOPE
- class: google.cloud.spanner_v1.client.Client
  fullName: google.cloud.spanner_v1.client.Client.copy
  langs:
  - python
  module: google.cloud.spanner_v1.client
  name: copy()
  namewithoutparameters: copy
  source:
    id: copy
    path: google/cloud/spanner_v1/client.py
    remote:
      branch: HEAD
      path: google/cloud/spanner_v1/client.py
      repo: https://github.com/googleapis/python-spanner.git
    startLine: 245
  summary: 'Make a copy of this client.


    Copies the local data stored as simple types but does not copy the

    current state of any open connections with the Cloud Bigtable API.'
  syntax:
    content: copy()
    parameters: []
    return:
      description: A copy of the current client.
      type:
      - <xref:google.cloud.spanner_v1.client.Client>
  type: method
  uid: google.cloud.spanner_v1.client.Client.copy
- class: google.cloud.spanner_v1.client.Client
  fullName: google.cloud.spanner_v1.client.Client.credentials
  langs:
  - python
  module: google.cloud.spanner_v1.client
  name: credentials
  source:
    id: credentials
    path: null
    remote:
      branch: HEAD
      path: null
      repo: https://github.com/googleapis/python-spanner.git
    startLine: null
  summary: Getter for client's credentials.
  syntax:
    return:
      description: The credentials stored on the client.
      type:
      - <xref:google.auth.credentials.Credentials>
  type: attribute
  uid: google.cloud.spanner_v1.client.Client.credentials
- class: google.cloud.spanner_v1.client.Client
  fullName: google.cloud.spanner_v1.client.Client.database_admin_api
  langs:
  - python
  module: google.cloud.spanner_v1.client
  name: database_admin_api
  source:
    id: database_admin_api
    path: null
    remote:
      branch: HEAD
      path: null
      repo: https://github.com/googleapis/python-spanner.git
    startLine: null
  summary: Helper for session-related API calls.
  syntax: {}
  type: attribute
  uid: google.cloud.spanner_v1.client.Client.database_admin_api
- class: google.cloud.spanner_v1.client.Client
  fullName: google.cloud.spanner_v1.client.Client.instance
  langs:
  - python
  module: google.cloud.spanner_v1.client
  name: instance(instance_id, configuration_name=None, display_name=None, node_count=1)
  namewithoutparameters: instance
  source:
    id: instance
    path: google/cloud/spanner_v1/client.py
    remote:
      branch: HEAD
      path: google/cloud/spanner_v1/client.py
      repo: https://github.com/googleapis/python-spanner.git
    startLine: 286
  summary: Factory to create a instance associated with this client.
  syntax:
    content: instance(instance_id, configuration_name=None, display_name=None, node_count=1)
    parameters:
    - description: The ID of the instance.
      id: instance_id
      isRequired: true
      type:
      - str
    - defaultValue: None
      description: '(Optional) Name of the instance configuration used to set up the

        instance''s cluster, in the form:

        `projects/<project>/instanceConfigs/`

        `<config>`.

        **Required** for instances which do not yet exist.'
      id: configuration_name
      type:
      - string
    - defaultValue: None
      description: '(Optional) The display name for the instance in

        the Cloud Console UI. (Must be between 4 and 30

        characters.) If this value is not set in the

        constructor, will fall back to the instance ID.'
      id: display_name
      type:
      - str
    - defaultValue: '1'
      description: '(Optional) The number of nodes in the instance''s

        cluster; used to set up the instance''s cluster.'
      id: node_count
      type:
      - int
    return:
      description: an instance owned by this client.
      type:
      - google.cloud.spanner_v1.instance.Instance
  type: method
  uid: google.cloud.spanner_v1.client.Client.instance
- class: google.cloud.spanner_v1.client.Client
  fullName: google.cloud.spanner_v1.client.Client.instance_admin_api
  langs:
  - python
  module: google.cloud.spanner_v1.client
  name: instance_admin_api
  source:
    id: instance_admin_api
    path: null
    remote:
      branch: HEAD
      path: null
      repo: https://github.com/googleapis/python-spanner.git
    startLine: null
  summary: Helper for session-related API calls.
  syntax: {}
  type: attribute
  uid: google.cloud.spanner_v1.client.Client.instance_admin_api
- class: google.cloud.spanner_v1.client.Client
  fullName: google.cloud.spanner_v1.client.Client.list_instance_configs
  langs:
  - python
  module: google.cloud.spanner_v1.client
  name: list_instance_configs(page_size=None)
  namewithoutparameters: list_instance_configs
  source:
    id: list_instance_configs
    path: google/cloud/spanner_v1/client.py
    remote:
      branch: HEAD
      path: google/cloud/spanner_v1/client.py
      repo: https://github.com/googleapis/python-spanner.git
    startLine: 256
  summary: 'List available instance configurations for the client''s project.



    See reference<!-- {"ids": [], "classes": [], "names": [], "dupnames": [], "backrefs":
    [], "name": "RPC docs", "refname": "rpc docs"} -->.'
  syntax:
    content: list_instance_configs(page_size=None)
    parameters:
    - defaultValue: None
      description: 'Optional. The maximum number of configs in each page of results

        from this request. Non-positive values are ignored. Defaults

        to a sensible value set by the API.'
      id: page_size
      type:
      - int
    return:
      description: 'Iterator of

        <xref:google.cloud.spanner_admin_instance_v1.types.InstanceConfig>

        resources within the client''s project.'
      type:
      - google.api_core.page_iterator.Iterator
  type: method
  uid: google.cloud.spanner_v1.client.Client.list_instance_configs
- class: google.cloud.spanner_v1.client.Client
  fullName: google.cloud.spanner_v1.client.Client.list_instances
  langs:
  - python
  module: google.cloud.spanner_v1.client
  name: list_instances(filter_='', page_size=None)
  namewithoutparameters: list_instances
  source:
    id: list_instances
    path: google/cloud/spanner_v1/client.py
    remote:
      branch: HEAD
      path: google/cloud/spanner_v1/client.py
      repo: https://github.com/googleapis/python-spanner.git
    startLine: 328
  summary: 'List instances for the client''s project.


    See

    [https://cloud.google.com/spanner/reference/rpc/google.spanner.admin.database.v1#google.spanner.admin.database.v1.InstanceAdmin.ListInstances](https://cloud.google.com/spanner/reference/rpc/google.spanner.admin.database.v1#google.spanner.admin.database.v1.InstanceAdmin.ListInstances)'
  syntax:
    content: list_instances(filter_='', page_size=None)
    parameters:
    - defaultValue: ''
      description: '(Optional) Filter to select instances listed.  See

        the `ListInstancesRequest` docs above for examples.'
      id: filter
      type:
      - string
    - defaultValue: None
      description: 'Optional. The maximum number of instances in each page of results

        from this request. Non-positive values are ignored. Defaults

        to a sensible value set by the API.'
      id: page_size
      type:
      - int
    return:
      description: 'Iterator of <xref:google.cloud.spanner_v1.instance.Instance>

        resources within the client''s project.'
      type:
      - google.api_core.page_iterator.Iterator
  type: method
  uid: google.cloud.spanner_v1.client.Client.list_instances
- class: google.cloud.spanner_v1.client.Client
  fullName: google.cloud.spanner_v1.client.Client.project_name
  langs:
  - python
  module: google.cloud.spanner_v1.client
  name: project_name
  source:
    id: project_name
    path: null
    remote:
      branch: HEAD
      path: null
      repo: https://github.com/googleapis/python-spanner.git
    startLine: null
  summary: "Project name to be used with Spanner APIs.\n\n\n> [!NOTE]\n> This property\
    \ will not change if project does not, but the\n>\n> return value is not cached.\n\
    >\n\nThe project name is of the form\n\n   `\"projects/{project}\"`"
  syntax:
    return:
      description: 'The project name to be used with the Cloud Spanner Admin

        API RPC service.'
      type:
      - str
  type: attribute
  uid: google.cloud.spanner_v1.client.Client.project_name
references:
- fullName: google.cloud.spanner_v1.client.Client.SCOPE
  isExternal: false
  name: SCOPE
  parent: google.cloud.spanner_v1.client.Client
  uid: google.cloud.spanner_v1.client.Client.SCOPE
- fullName: google.cloud.spanner_v1.client.Client.copy
  isExternal: false
  name: copy()
  parent: google.cloud.spanner_v1.client.Client
  uid: google.cloud.spanner_v1.client.Client.copy
- fullName: google.cloud.spanner_v1.client.Client.credentials
  isExternal: false
  name: credentials
  parent: google.cloud.spanner_v1.client.Client
  uid: google.cloud.spanner_v1.client.Client.credentials
- fullName: google.cloud.spanner_v1.client.Client.database_admin_api
  isExternal: false
  name: database_admin_api
  parent: google.cloud.spanner_v1.client.Client
  uid: google.cloud.spanner_v1.client.Client.database_admin_api
- fullName: google.cloud.spanner_v1.client.Client.instance
  isExternal: false
  name: instance(instance_id, configuration_name=None, display_name=None, node_count=1)
  parent: google.cloud.spanner_v1.client.Client
  uid: google.cloud.spanner_v1.client.Client.instance
- fullName: google.cloud.spanner_v1.client.Client.instance_admin_api
  isExternal: false
  name: instance_admin_api
  parent: google.cloud.spanner_v1.client.Client
  uid: google.cloud.spanner_v1.client.Client.instance_admin_api
- fullName: google.cloud.spanner_v1.client.Client.list_instance_configs
  isExternal: false
  name: list_instance_configs(page_size=None)
  parent: google.cloud.spanner_v1.client.Client
  uid: google.cloud.spanner_v1.client.Client.list_instance_configs
- fullName: google.cloud.spanner_v1.client.Client.list_instances
  isExternal: false
  name: list_instances(filter_='', page_size=None)
  parent: google.cloud.spanner_v1.client.Client
  uid: google.cloud.spanner_v1.client.Client.list_instances
- fullName: google.cloud.spanner_v1.client.Client.project_name
  isExternal: false
  name: project_name
  parent: google.cloud.spanner_v1.client.Client
  uid: google.cloud.spanner_v1.client.Client.project_name
