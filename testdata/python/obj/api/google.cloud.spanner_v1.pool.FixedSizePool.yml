### YamlMime:UniversalReference
api_name: []
items:
- children:
  - google.cloud.spanner_v1.pool.FixedSizePool.bind
  - google.cloud.spanner_v1.pool.FixedSizePool.clear
  - google.cloud.spanner_v1.pool.FixedSizePool.get
  - google.cloud.spanner_v1.pool.FixedSizePool.put
  class: google.cloud.spanner_v1.pool.FixedSizePool
  fullName: google.cloud.spanner_v1.pool.FixedSizePool
  inheritance:
  - inheritance:
    - type: builtins.object
    type: google.cloud.spanner_v1.pool.AbstractSessionPool
  langs:
  - python
  module: google.cloud.spanner_v1.pool
  name: FixedSizePool
  source:
    id: FixedSizePool
    path: google/cloud/spanner_v1/pool.py
    remote:
      branch: HEAD
      path: google/cloud/spanner_v1/pool.py
      repo: https://github.com/googleapis/python-spanner.git
    startLine: 125
  summary: "Concrete session pool implementation:\n\n* Pre-allocates / creates a fixed\
    \ number of sessions. \n\n* \"Pings\" existing sessions via <xref:session.exists>\
    \ before returning them, and replaces expired sessions. \n\n* Blocks, with a timeout,\
    \ when <xref:google.cloud.spanner_v1.pool.FixedSizePool.get> is called on an empty\
    \ pool. Raises after timing out. \n\n* Raises when <xref:google.cloud.spanner_v1.pool.FixedSizePool.put>\
    \ is called on a full pool.  That error is never expected in normal practice,\
    \ as users should be calling <xref:google.cloud.spanner_v1.pool.FixedSizePool.get>\
    \ followed by <xref:google.cloud.spanner_v1.pool.FixedSizePool.put> whenever in\
    \ need of a session."
  syntax:
    content: FixedSizePool(size=10, default_timeout=10, labels=None)
    parameters:
    - description: fixed pool size
      id: size
      type:
      - int
    - description: 'default timeout, in seconds, to wait for

        a returned session.'
      id: default_timeout
      type:
      - int
    - description: '(Optional) user-assigned labels for sessions created

        by the pool.'
      id: labels
      type:
      - dict (str -> str)
      - None
  type: class
  uid: google.cloud.spanner_v1.pool.FixedSizePool
- class: google.cloud.spanner_v1.pool.FixedSizePool
  fullName: google.cloud.spanner_v1.pool.FixedSizePool.bind
  langs:
  - python
  module: google.cloud.spanner_v1.pool
  name: bind(database)
  namewithoutparameters: bind
  source:
    id: bind
    path: google/cloud/spanner_v1/pool.py
    remote:
      branch: HEAD
      path: google/cloud/spanner_v1/pool.py
      repo: https://github.com/googleapis/python-spanner.git
    startLine: 161
  summary: Associate the pool with a database.
  syntax:
    content: bind(database)
    parameters:
    - description: 'database used by the pool:  used to create sessions

        when needed.'
      id: database
      isRequired: true
      type:
      - google.cloud.spanner_v1.database.Database
  type: method
  uid: google.cloud.spanner_v1.pool.FixedSizePool.bind
- class: google.cloud.spanner_v1.pool.FixedSizePool
  fullName: google.cloud.spanner_v1.pool.FixedSizePool.clear
  langs:
  - python
  module: google.cloud.spanner_v1.pool
  name: clear()
  namewithoutparameters: clear
  source:
    id: clear
    path: google/cloud/spanner_v1/pool.py
    remote:
      branch: HEAD
      path: google/cloud/spanner_v1/pool.py
      repo: https://github.com/googleapis/python-spanner.git
    startLine: 217
  summary: Delete all sessions in the pool.
  syntax:
    content: clear()
    parameters: []
  type: method
  uid: google.cloud.spanner_v1.pool.FixedSizePool.clear
- class: google.cloud.spanner_v1.pool.FixedSizePool
  exceptions:
  - type: six.moves.queue.Empty
  fullName: google.cloud.spanner_v1.pool.FixedSizePool.get
  langs:
  - python
  module: google.cloud.spanner_v1.pool
  name: get(timeout=None)
  namewithoutparameters: get
  source:
    id: get
    path: google/cloud/spanner_v1/pool.py
    remote:
      branch: HEAD
      path: google/cloud/spanner_v1/pool.py
      repo: https://github.com/googleapis/python-spanner.git
    startLine: 183
  summary: Check a session out from the pool.
  syntax:
    content: get(timeout=None)
    parameters:
    - defaultValue: None
      description: seconds to block waiting for an available session
      id: timeout
      type:
      - int
    return:
      description: 'an existing session from the pool, or a newly-created

        session.'
      type:
      - <xref:google.cloud.spanner_v1.session.Session>
  type: method
  uid: google.cloud.spanner_v1.pool.FixedSizePool.get
- class: google.cloud.spanner_v1.pool.FixedSizePool
  exceptions:
  - type: six.moves.queue.Full
  fullName: google.cloud.spanner_v1.pool.FixedSizePool.put
  langs:
  - python
  module: google.cloud.spanner_v1.pool
  name: put(session)
  namewithoutparameters: put
  source:
    id: put
    path: google/cloud/spanner_v1/pool.py
    remote:
      branch: HEAD
      path: google/cloud/spanner_v1/pool.py
      repo: https://github.com/googleapis/python-spanner.git
    startLine: 205
  summary: 'Return a session to the pool.


    Never blocks:  if the pool is full, raises.'
  syntax:
    content: put(session)
    parameters:
    - description: the session being returned.
      id: session
      isRequired: true
      type:
      - <xref:google.cloud.spanner_v1.session.Session>
  type: method
  uid: google.cloud.spanner_v1.pool.FixedSizePool.put
references:
- fullName: google.cloud.spanner_v1.pool.FixedSizePool.bind
  isExternal: false
  name: bind(database)
  parent: google.cloud.spanner_v1.pool.FixedSizePool
  uid: google.cloud.spanner_v1.pool.FixedSizePool.bind
- fullName: google.cloud.spanner_v1.pool.FixedSizePool.clear
  isExternal: false
  name: clear()
  parent: google.cloud.spanner_v1.pool.FixedSizePool
  uid: google.cloud.spanner_v1.pool.FixedSizePool.clear
- fullName: google.cloud.spanner_v1.pool.FixedSizePool.get
  isExternal: false
  name: get(timeout=None)
  parent: google.cloud.spanner_v1.pool.FixedSizePool
  uid: google.cloud.spanner_v1.pool.FixedSizePool.get
- fullName: google.cloud.spanner_v1.pool.FixedSizePool.put
  isExternal: false
  name: put(session)
  parent: google.cloud.spanner_v1.pool.FixedSizePool
  uid: google.cloud.spanner_v1.pool.FixedSizePool.put
- fullName: dict (str -> str)
  name: dict (str -> str)
  spec.python:
  - fullName: 'dict '
    name: 'dict '
    uid: 'dict '
  - fullName: (
    name: (
  - fullName: str -> str
    name: str -> str
    uid: str -> str
  - fullName: )
    name: )
  uid: dict (str -> str)
