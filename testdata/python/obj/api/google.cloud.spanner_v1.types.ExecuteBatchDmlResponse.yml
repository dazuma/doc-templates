### YamlMime:UniversalReference
api_name: []
items:
- children: []
  class: google.cloud.spanner_v1.types.ExecuteBatchDmlResponse
  fullName: google.cloud.spanner_v1.types.ExecuteBatchDmlResponse
  inheritance:
  - inheritance:
    - type: builtins.object
    type: proto.message.Message
  langs:
  - python
  module: google.cloud.spanner_v1.types
  name: ExecuteBatchDmlResponse
  source:
    id: ExecuteBatchDmlResponse
    path: google/cloud/spanner_v1/types/spanner.py
    remote:
      branch: HEAD
      path: google/cloud/spanner_v1/types/spanner.py
      repo: https://github.com/googleapis/python-spanner.git
    startLine: 493
  summary: "The response for\n[ExecuteBatchDml][google.spanner.v1.Spanner.ExecuteBatchDml].\n\
    Contains a list of [ResultSet][google.spanner.v1.ResultSet]\nmessages, one for\
    \ each DML statement that has successfully executed,\nin the same order as the\
    \ statements in the request. If a statement\nfails, the status in the response\
    \ body identifies the cause of the\nfailure.\n\nTo check for DML statements that\
    \ failed, use the following approach:\n\n1. Check the status in the response message.\
    \ The [google.rpc.Code][google.rpc.Code] enum value `OK` indicates that all statements\
    \ were executed successfully. \n\n2. If the status was not `OK`, check the number\
    \ of result sets in the response. If the response contains `N` [ResultSet][google.spanner.v1.ResultSet]\
    \ messages, then statement `N+1` in the request failed. \n\nExample 1:\n\n* Request:\
    \ 5 DML statements, all executed successfully. \n\n* Response: 5 [ResultSet][google.spanner.v1.ResultSet]\
    \ messages, with the status `OK`. \n\nExample 2:\n\n* Request: 5 DML statements.\
    \ The third statement has a syntax error. \n\n* Response: 2 [ResultSet][google.spanner.v1.ResultSet]\
    \ messages, and a syntax error (`INVALID_ARGUMENT`) status. The number of [ResultSet][google.spanner.v1.ResultSet]\
    \ messages indicates that the third statement failed, and the fourth and fifth\
    \ statements were not executed."
  syntax:
    content: ExecuteBatchDmlResponse(mapping=None, *, ignore_unknown_fields=False,
      **kwargs)
  type: class
  uid: google.cloud.spanner_v1.types.ExecuteBatchDmlResponse
references: []
