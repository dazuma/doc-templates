### YamlMime:ManagedReference
items:
- uid: "com.google.cloud.bigquery.QueryParameterValue"
  id: "QueryParameterValue"
  parent: "com.google.cloud.bigquery"
  children:
  - "com.google.cloud.bigquery.QueryParameterValue.<T>array(T[],com.google.cloud.bigquery.StandardSQLTypeName)"
  - "com.google.cloud.bigquery.QueryParameterValue.<T>array(T[],java.lang.Class<T>)"
  - "com.google.cloud.bigquery.QueryParameterValue.<T>of(T,com.google.cloud.bigquery.StandardSQLTypeName)"
  - "com.google.cloud.bigquery.QueryParameterValue.<T>of(T,java.lang.Class<T>)"
  - "com.google.cloud.bigquery.QueryParameterValue.Builder"
  - "com.google.cloud.bigquery.QueryParameterValue.bigNumeric(java.math.BigDecimal)"
  - "com.google.cloud.bigquery.QueryParameterValue.bool(java.lang.Boolean)"
  - "com.google.cloud.bigquery.QueryParameterValue.bytes(byte[])"
  - "com.google.cloud.bigquery.QueryParameterValue.date(java.lang.String)"
  - "com.google.cloud.bigquery.QueryParameterValue.dateTime(java.lang.String)"
  - "com.google.cloud.bigquery.QueryParameterValue.float64(java.lang.Double)"
  - "com.google.cloud.bigquery.QueryParameterValue.float64(java.lang.Float)"
  - "com.google.cloud.bigquery.QueryParameterValue.getArrayType()"
  - "com.google.cloud.bigquery.QueryParameterValue.getArrayValues()"
  - "com.google.cloud.bigquery.QueryParameterValue.getStructTypes()"
  - "com.google.cloud.bigquery.QueryParameterValue.getStructValues()"
  - "com.google.cloud.bigquery.QueryParameterValue.getType()"
  - "com.google.cloud.bigquery.QueryParameterValue.getValue()"
  - "com.google.cloud.bigquery.QueryParameterValue.int64(java.lang.Integer)"
  - "com.google.cloud.bigquery.QueryParameterValue.int64(java.lang.Long)"
  - "com.google.cloud.bigquery.QueryParameterValue.newBuilder()"
  - "com.google.cloud.bigquery.QueryParameterValue.numeric(java.math.BigDecimal)"
  - "com.google.cloud.bigquery.QueryParameterValue.string(java.lang.String)"
  - "com.google.cloud.bigquery.QueryParameterValue.struct(java.util.Map<java.lang.String,com.google.cloud.bigquery.QueryParameterValue>)"
  - "com.google.cloud.bigquery.QueryParameterValue.time(java.lang.String)"
  - "com.google.cloud.bigquery.QueryParameterValue.timestamp(java.lang.Long)"
  - "com.google.cloud.bigquery.QueryParameterValue.timestamp(java.lang.String)"
  - "com.google.cloud.bigquery.QueryParameterValue.toBuilder()"
  langs:
  - "java"
  name: "QueryParameterValue"
  nameWithType: "QueryParameterValue"
  fullName: "com.google.cloud.bigquery.QueryParameterValue"
  type: "Class"
  package: "com.google.cloud.bigquery"
  summary: "A value for a QueryParameter along with its type.\n\nA static factory method is provided for each of the possible types (e.g. <xref uid=\"com.google.cloud.bigquery.QueryParameterValue.int64(java.lang.Long)\" data-throw-if-not-resolved=\"false\">#int64(Long)</xref> for StandardSQLTypeName.INT64). Alternatively, an instance can be constructed by calling <xref uid=\"com.google.cloud.bigquery.QueryParameterValue.of*\" data-throw-if-not-resolved=\"false\">#of(Object, Class)</xref> with the value and a Class object, which will use these mappings:\n\n *  Boolean: StandardSQLTypeName.BOOL\n *  String: StandardSQLTypeName.STRING\n *  Integer: StandardSQLTypeName.INT64\n *  Long: StandardSQLTypeName.INT64\n *  Double: StandardSQLTypeName.FLOAT64\n *  Float: StandardSQLTypeName.FLOAT64\n *  BigDecimal: StandardSQLTypeName.NUMERIC\n *  BigNumeric: StandardSQLTypeName.BIGNUMERIC\n\nNo other types are supported through that entry point. The other types can be created by calling <xref uid=\"com.google.cloud.bigquery.QueryParameterValue.of*\" data-throw-if-not-resolved=\"false\">#of(Object, StandardSQLTypeName)</xref> with the value and a particular StandardSQLTypeName enum value.\n\nStruct parameters are currently not supported."
  syntax:
    content: "public abstract class QueryParameterValue implements Serializable"
  inheritance:
  - "java.lang.Object"
  implements:
  - "java.io.Serializable"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.google.cloud.bigquery.QueryParameterValue.<T>array(T[],com.google.cloud.bigquery.StandardSQLTypeName)"
  id: "<T>array(T[],com.google.cloud.bigquery.StandardSQLTypeName)"
  parent: "com.google.cloud.bigquery.QueryParameterValue"
  langs:
  - "java"
  name: "<T>array(T[] array, StandardSQLTypeName type)"
  nameWithType: "QueryParameterValue.<T>array(T[] array, StandardSQLTypeName type)"
  fullName: "com.google.cloud.bigquery.QueryParameterValue.<T>array(T[] array, StandardSQLTypeName type)"
  overload: "com.google.cloud.bigquery.QueryParameterValue.array*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Creates a `QueryParameterValue` object with a type of ARRAY the given array element type."
  syntax:
    content: "public static QueryParameterValue <T>array(T[] array, StandardSQLTypeName type)"
    parameters:
    - id: "array"
      type: "T[]"
    - id: "type"
      type: "com.google.cloud.bigquery.StandardSQLTypeName"
    return:
      type: "com.google.cloud.bigquery.QueryParameterValue"
- uid: "com.google.cloud.bigquery.QueryParameterValue.<T>array(T[],java.lang.Class<T>)"
  id: "<T>array(T[],java.lang.Class<T>)"
  parent: "com.google.cloud.bigquery.QueryParameterValue"
  langs:
  - "java"
  name: "<T>array(T[] array, Class<T> clazz)"
  nameWithType: "QueryParameterValue.<T>array(T[] array, Class<T> clazz)"
  fullName: "com.google.cloud.bigquery.QueryParameterValue.<T>array(T[] array, Class<T> clazz)"
  overload: "com.google.cloud.bigquery.QueryParameterValue.array*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Creates a `QueryParameterValue` object with a type of ARRAY, and an array element type based on the given class."
  syntax:
    content: "public static QueryParameterValue <T>array(T[] array, Class<T> clazz)"
    parameters:
    - id: "array"
      type: "T[]"
    - id: "clazz"
      type: "java.lang.Class<T>"
    return:
      type: "com.google.cloud.bigquery.QueryParameterValue"
- uid: "com.google.cloud.bigquery.QueryParameterValue.<T>of(T,com.google.cloud.bigquery.StandardSQLTypeName)"
  id: "<T>of(T,com.google.cloud.bigquery.StandardSQLTypeName)"
  parent: "com.google.cloud.bigquery.QueryParameterValue"
  langs:
  - "java"
  name: "<T>of(T value, StandardSQLTypeName type)"
  nameWithType: "QueryParameterValue.<T>of(T value, StandardSQLTypeName type)"
  fullName: "com.google.cloud.bigquery.QueryParameterValue.<T>of(T value, StandardSQLTypeName type)"
  overload: "com.google.cloud.bigquery.QueryParameterValue.of*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Creates a `QueryParameterValue` object with the given value and type."
  syntax:
    content: "public static QueryParameterValue <T>of(T value, StandardSQLTypeName type)"
    parameters:
    - id: "value"
      type: "T"
    - id: "type"
      type: "com.google.cloud.bigquery.StandardSQLTypeName"
    return:
      type: "com.google.cloud.bigquery.QueryParameterValue"
- uid: "com.google.cloud.bigquery.QueryParameterValue.<T>of(T,java.lang.Class<T>)"
  id: "<T>of(T,java.lang.Class<T>)"
  parent: "com.google.cloud.bigquery.QueryParameterValue"
  langs:
  - "java"
  name: "<T>of(T value, Class<T> type)"
  nameWithType: "QueryParameterValue.<T>of(T value, Class<T> type)"
  fullName: "com.google.cloud.bigquery.QueryParameterValue.<T>of(T value, Class<T> type)"
  overload: "com.google.cloud.bigquery.QueryParameterValue.of*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Creates a `QueryParameterValue` object with the given value and type. Note: this does not support BigNumeric"
  syntax:
    content: "public static QueryParameterValue <T>of(T value, Class<T> type)"
    parameters:
    - id: "value"
      type: "T"
    - id: "type"
      type: "java.lang.Class<T>"
    return:
      type: "com.google.cloud.bigquery.QueryParameterValue"
- uid: "com.google.cloud.bigquery.QueryParameterValue.QueryParameterValue()"
  id: "QueryParameterValue()"
  parent: "com.google.cloud.bigquery.QueryParameterValue"
  langs:
  - "java"
  name: "QueryParameterValue()"
  nameWithType: "QueryParameterValue.QueryParameterValue()"
  fullName: "com.google.cloud.bigquery.QueryParameterValue.QueryParameterValue()"
  overload: "com.google.cloud.bigquery.QueryParameterValue.QueryParameterValue*"
  type: "Constructor"
  package: "com.google.cloud.bigquery"
  syntax:
    content: " QueryParameterValue()"
- uid: "com.google.cloud.bigquery.QueryParameterValue.bigNumeric(java.math.BigDecimal)"
  id: "bigNumeric(java.math.BigDecimal)"
  parent: "com.google.cloud.bigquery.QueryParameterValue"
  langs:
  - "java"
  name: "bigNumeric(BigDecimal value)"
  nameWithType: "QueryParameterValue.bigNumeric(BigDecimal value)"
  fullName: "com.google.cloud.bigquery.QueryParameterValue.bigNumeric(BigDecimal value)"
  overload: "com.google.cloud.bigquery.QueryParameterValue.bigNumeric*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Creates a `QueryParameterValue` object with a type of BIGNUMERIC."
  syntax:
    content: "public static QueryParameterValue bigNumeric(BigDecimal value)"
    parameters:
    - id: "value"
      type: "java.math.BigDecimal"
    return:
      type: "com.google.cloud.bigquery.QueryParameterValue"
- uid: "com.google.cloud.bigquery.QueryParameterValue.bool(java.lang.Boolean)"
  id: "bool(java.lang.Boolean)"
  parent: "com.google.cloud.bigquery.QueryParameterValue"
  langs:
  - "java"
  name: "bool(Boolean value)"
  nameWithType: "QueryParameterValue.bool(Boolean value)"
  fullName: "com.google.cloud.bigquery.QueryParameterValue.bool(Boolean value)"
  overload: "com.google.cloud.bigquery.QueryParameterValue.bool*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Creates a `QueryParameterValue` object with a type of BOOL."
  syntax:
    content: "public static QueryParameterValue bool(Boolean value)"
    parameters:
    - id: "value"
      type: "java.lang.Boolean"
    return:
      type: "com.google.cloud.bigquery.QueryParameterValue"
- uid: "com.google.cloud.bigquery.QueryParameterValue.bytes(byte[])"
  id: "bytes(byte[])"
  parent: "com.google.cloud.bigquery.QueryParameterValue"
  langs:
  - "java"
  name: "bytes(byte[] value)"
  nameWithType: "QueryParameterValue.bytes(byte[] value)"
  fullName: "com.google.cloud.bigquery.QueryParameterValue.bytes(byte[] value)"
  overload: "com.google.cloud.bigquery.QueryParameterValue.bytes*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Creates a `QueryParameterValue` object with a type of BYTES."
  syntax:
    content: "public static QueryParameterValue bytes(byte[] value)"
    parameters:
    - id: "value"
      type: "byte[]"
    return:
      type: "com.google.cloud.bigquery.QueryParameterValue"
- uid: "com.google.cloud.bigquery.QueryParameterValue.date(java.lang.String)"
  id: "date(java.lang.String)"
  parent: "com.google.cloud.bigquery.QueryParameterValue"
  langs:
  - "java"
  name: "date(String value)"
  nameWithType: "QueryParameterValue.date(String value)"
  fullName: "com.google.cloud.bigquery.QueryParameterValue.date(String value)"
  overload: "com.google.cloud.bigquery.QueryParameterValue.date*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Creates a `QueryParameterValue` object with a type of DATE. Must be in the format \"yyyy-MM-dd\", e.g. \"2014-08-19\"."
  syntax:
    content: "public static QueryParameterValue date(String value)"
    parameters:
    - id: "value"
      type: "java.lang.String"
    return:
      type: "com.google.cloud.bigquery.QueryParameterValue"
- uid: "com.google.cloud.bigquery.QueryParameterValue.dateTime(java.lang.String)"
  id: "dateTime(java.lang.String)"
  parent: "com.google.cloud.bigquery.QueryParameterValue"
  langs:
  - "java"
  name: "dateTime(String value)"
  nameWithType: "QueryParameterValue.dateTime(String value)"
  fullName: "com.google.cloud.bigquery.QueryParameterValue.dateTime(String value)"
  overload: "com.google.cloud.bigquery.QueryParameterValue.dateTime*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Creates a `QueryParameterValue` object with a type of DATETIME. Must be in the format \"yyyy-MM-dd HH:mm:ss.SSSSSS\", e.g. \"\"2014-08-19 12:41:35.220000\"."
  syntax:
    content: "public static QueryParameterValue dateTime(String value)"
    parameters:
    - id: "value"
      type: "java.lang.String"
    return:
      type: "com.google.cloud.bigquery.QueryParameterValue"
- uid: "com.google.cloud.bigquery.QueryParameterValue.float64(java.lang.Double)"
  id: "float64(java.lang.Double)"
  parent: "com.google.cloud.bigquery.QueryParameterValue"
  langs:
  - "java"
  name: "float64(Double value)"
  nameWithType: "QueryParameterValue.float64(Double value)"
  fullName: "com.google.cloud.bigquery.QueryParameterValue.float64(Double value)"
  overload: "com.google.cloud.bigquery.QueryParameterValue.float64*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Creates a `QueryParameterValue` object with a type of FLOAT64."
  syntax:
    content: "public static QueryParameterValue float64(Double value)"
    parameters:
    - id: "value"
      type: "java.lang.Double"
    return:
      type: "com.google.cloud.bigquery.QueryParameterValue"
- uid: "com.google.cloud.bigquery.QueryParameterValue.float64(java.lang.Float)"
  id: "float64(java.lang.Float)"
  parent: "com.google.cloud.bigquery.QueryParameterValue"
  langs:
  - "java"
  name: "float64(Float value)"
  nameWithType: "QueryParameterValue.float64(Float value)"
  fullName: "com.google.cloud.bigquery.QueryParameterValue.float64(Float value)"
  overload: "com.google.cloud.bigquery.QueryParameterValue.float64*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Creates a `QueryParameterValue` object with a type of FLOAT64."
  syntax:
    content: "public static QueryParameterValue float64(Float value)"
    parameters:
    - id: "value"
      type: "java.lang.Float"
    return:
      type: "com.google.cloud.bigquery.QueryParameterValue"
- uid: "com.google.cloud.bigquery.QueryParameterValue.getArrayType()"
  id: "getArrayType()"
  parent: "com.google.cloud.bigquery.QueryParameterValue"
  langs:
  - "java"
  name: "getArrayType()"
  nameWithType: "QueryParameterValue.getArrayType()"
  fullName: "com.google.cloud.bigquery.QueryParameterValue.getArrayType()"
  overload: "com.google.cloud.bigquery.QueryParameterValue.getArrayType*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns the data type of the array elements."
  syntax:
    content: "public abstract StandardSQLTypeName getArrayType()"
    return:
      type: "com.google.cloud.bigquery.StandardSQLTypeName"
- uid: "com.google.cloud.bigquery.QueryParameterValue.getArrayValues()"
  id: "getArrayValues()"
  parent: "com.google.cloud.bigquery.QueryParameterValue"
  langs:
  - "java"
  name: "getArrayValues()"
  nameWithType: "QueryParameterValue.getArrayValues()"
  fullName: "com.google.cloud.bigquery.QueryParameterValue.getArrayValues()"
  overload: "com.google.cloud.bigquery.QueryParameterValue.getArrayValues*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns the array values of this parameter. The returned list, if not null, is immutable."
  syntax:
    content: "public List<QueryParameterValue> getArrayValues()"
    return:
      type: "java.util.List<com.google.cloud.bigquery.QueryParameterValue>"
- uid: "com.google.cloud.bigquery.QueryParameterValue.getStructTypes()"
  id: "getStructTypes()"
  parent: "com.google.cloud.bigquery.QueryParameterValue"
  langs:
  - "java"
  name: "getStructTypes()"
  nameWithType: "QueryParameterValue.getStructTypes()"
  fullName: "com.google.cloud.bigquery.QueryParameterValue.getStructTypes()"
  overload: "com.google.cloud.bigquery.QueryParameterValue.getStructTypes*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns the data type of the struct elements."
  syntax:
    content: "public Map<String,QueryParameterValue> getStructTypes()"
    return:
      type: "java.util.Map<java.lang.String,com.google.cloud.bigquery.QueryParameterValue>"
- uid: "com.google.cloud.bigquery.QueryParameterValue.getStructValues()"
  id: "getStructValues()"
  parent: "com.google.cloud.bigquery.QueryParameterValue"
  langs:
  - "java"
  name: "getStructValues()"
  nameWithType: "QueryParameterValue.getStructValues()"
  fullName: "com.google.cloud.bigquery.QueryParameterValue.getStructValues()"
  overload: "com.google.cloud.bigquery.QueryParameterValue.getStructValues*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns the struct values of this parameter. The returned map, if not null, is immutable."
  syntax:
    content: "public Map<String,QueryParameterValue> getStructValues()"
    return:
      type: "java.util.Map<java.lang.String,com.google.cloud.bigquery.QueryParameterValue>"
- uid: "com.google.cloud.bigquery.QueryParameterValue.getType()"
  id: "getType()"
  parent: "com.google.cloud.bigquery.QueryParameterValue"
  langs:
  - "java"
  name: "getType()"
  nameWithType: "QueryParameterValue.getType()"
  fullName: "com.google.cloud.bigquery.QueryParameterValue.getType()"
  overload: "com.google.cloud.bigquery.QueryParameterValue.getType*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns the data type of this parameter."
  syntax:
    content: "public abstract StandardSQLTypeName getType()"
    return:
      type: "com.google.cloud.bigquery.StandardSQLTypeName"
- uid: "com.google.cloud.bigquery.QueryParameterValue.getValue()"
  id: "getValue()"
  parent: "com.google.cloud.bigquery.QueryParameterValue"
  langs:
  - "java"
  name: "getValue()"
  nameWithType: "QueryParameterValue.getValue()"
  fullName: "com.google.cloud.bigquery.QueryParameterValue.getValue()"
  overload: "com.google.cloud.bigquery.QueryParameterValue.getValue*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns the value of this parameter."
  syntax:
    content: "public abstract String getValue()"
    return:
      type: "java.lang.String"
- uid: "com.google.cloud.bigquery.QueryParameterValue.int64(java.lang.Integer)"
  id: "int64(java.lang.Integer)"
  parent: "com.google.cloud.bigquery.QueryParameterValue"
  langs:
  - "java"
  name: "int64(Integer value)"
  nameWithType: "QueryParameterValue.int64(Integer value)"
  fullName: "com.google.cloud.bigquery.QueryParameterValue.int64(Integer value)"
  overload: "com.google.cloud.bigquery.QueryParameterValue.int64*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Creates a `QueryParameterValue` object with a type of INT64."
  syntax:
    content: "public static QueryParameterValue int64(Integer value)"
    parameters:
    - id: "value"
      type: "java.lang.Integer"
    return:
      type: "com.google.cloud.bigquery.QueryParameterValue"
- uid: "com.google.cloud.bigquery.QueryParameterValue.int64(java.lang.Long)"
  id: "int64(java.lang.Long)"
  parent: "com.google.cloud.bigquery.QueryParameterValue"
  langs:
  - "java"
  name: "int64(Long value)"
  nameWithType: "QueryParameterValue.int64(Long value)"
  fullName: "com.google.cloud.bigquery.QueryParameterValue.int64(Long value)"
  overload: "com.google.cloud.bigquery.QueryParameterValue.int64*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Creates a `QueryParameterValue` object with a type of INT64."
  syntax:
    content: "public static QueryParameterValue int64(Long value)"
    parameters:
    - id: "value"
      type: "java.lang.Long"
    return:
      type: "com.google.cloud.bigquery.QueryParameterValue"
- uid: "com.google.cloud.bigquery.QueryParameterValue.newBuilder()"
  id: "newBuilder()"
  parent: "com.google.cloud.bigquery.QueryParameterValue"
  langs:
  - "java"
  name: "newBuilder()"
  nameWithType: "QueryParameterValue.newBuilder()"
  fullName: "com.google.cloud.bigquery.QueryParameterValue.newBuilder()"
  overload: "com.google.cloud.bigquery.QueryParameterValue.newBuilder*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns a builder for the `QueryParameterValue` object."
  syntax:
    content: "public static QueryParameterValue.Builder newBuilder()"
    return:
      type: "com.google.cloud.bigquery.QueryParameterValue.Builder"
- uid: "com.google.cloud.bigquery.QueryParameterValue.numeric(java.math.BigDecimal)"
  id: "numeric(java.math.BigDecimal)"
  parent: "com.google.cloud.bigquery.QueryParameterValue"
  langs:
  - "java"
  name: "numeric(BigDecimal value)"
  nameWithType: "QueryParameterValue.numeric(BigDecimal value)"
  fullName: "com.google.cloud.bigquery.QueryParameterValue.numeric(BigDecimal value)"
  overload: "com.google.cloud.bigquery.QueryParameterValue.numeric*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Creates a `QueryParameterValue` object with a type of NUMERIC."
  syntax:
    content: "public static QueryParameterValue numeric(BigDecimal value)"
    parameters:
    - id: "value"
      type: "java.math.BigDecimal"
    return:
      type: "com.google.cloud.bigquery.QueryParameterValue"
- uid: "com.google.cloud.bigquery.QueryParameterValue.string(java.lang.String)"
  id: "string(java.lang.String)"
  parent: "com.google.cloud.bigquery.QueryParameterValue"
  langs:
  - "java"
  name: "string(String value)"
  nameWithType: "QueryParameterValue.string(String value)"
  fullName: "com.google.cloud.bigquery.QueryParameterValue.string(String value)"
  overload: "com.google.cloud.bigquery.QueryParameterValue.string*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Creates a `QueryParameterValue` object with a type of STRING."
  syntax:
    content: "public static QueryParameterValue string(String value)"
    parameters:
    - id: "value"
      type: "java.lang.String"
    return:
      type: "com.google.cloud.bigquery.QueryParameterValue"
- uid: "com.google.cloud.bigquery.QueryParameterValue.struct(java.util.Map<java.lang.String,com.google.cloud.bigquery.QueryParameterValue>)"
  id: "struct(java.util.Map<java.lang.String,com.google.cloud.bigquery.QueryParameterValue>)"
  parent: "com.google.cloud.bigquery.QueryParameterValue"
  langs:
  - "java"
  name: "struct(Map<String,QueryParameterValue> struct)"
  nameWithType: "QueryParameterValue.struct(Map<String,QueryParameterValue> struct)"
  fullName: "com.google.cloud.bigquery.QueryParameterValue.struct(Map<String,QueryParameterValue> struct)"
  overload: "com.google.cloud.bigquery.QueryParameterValue.struct*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Creates a map with `QueryParameterValue` object and a type of STRUCT the given struct element type."
  syntax:
    content: "public static QueryParameterValue struct(Map<String,QueryParameterValue> struct)"
    parameters:
    - id: "struct"
      type: "java.util.Map<java.lang.String,com.google.cloud.bigquery.QueryParameterValue>"
    return:
      type: "com.google.cloud.bigquery.QueryParameterValue"
- uid: "com.google.cloud.bigquery.QueryParameterValue.time(java.lang.String)"
  id: "time(java.lang.String)"
  parent: "com.google.cloud.bigquery.QueryParameterValue"
  langs:
  - "java"
  name: "time(String value)"
  nameWithType: "QueryParameterValue.time(String value)"
  fullName: "com.google.cloud.bigquery.QueryParameterValue.time(String value)"
  overload: "com.google.cloud.bigquery.QueryParameterValue.time*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Creates a `QueryParameterValue` object with a type of TIME. Must be in the format \"HH:mm:ss.SSSSSS\", e.g. \"12:41:35.220000\"."
  syntax:
    content: "public static QueryParameterValue time(String value)"
    parameters:
    - id: "value"
      type: "java.lang.String"
    return:
      type: "com.google.cloud.bigquery.QueryParameterValue"
- uid: "com.google.cloud.bigquery.QueryParameterValue.timestamp(java.lang.Long)"
  id: "timestamp(java.lang.Long)"
  parent: "com.google.cloud.bigquery.QueryParameterValue"
  langs:
  - "java"
  name: "timestamp(Long value)"
  nameWithType: "QueryParameterValue.timestamp(Long value)"
  fullName: "com.google.cloud.bigquery.QueryParameterValue.timestamp(Long value)"
  overload: "com.google.cloud.bigquery.QueryParameterValue.timestamp*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Creates a `QueryParameterValue` object with a type of TIMESTAMP."
  syntax:
    content: "public static QueryParameterValue timestamp(Long value)"
    parameters:
    - id: "value"
      type: "java.lang.Long"
    return:
      type: "com.google.cloud.bigquery.QueryParameterValue"
- uid: "com.google.cloud.bigquery.QueryParameterValue.timestamp(java.lang.String)"
  id: "timestamp(java.lang.String)"
  parent: "com.google.cloud.bigquery.QueryParameterValue"
  langs:
  - "java"
  name: "timestamp(String value)"
  nameWithType: "QueryParameterValue.timestamp(String value)"
  fullName: "com.google.cloud.bigquery.QueryParameterValue.timestamp(String value)"
  overload: "com.google.cloud.bigquery.QueryParameterValue.timestamp*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Creates a `QueryParameterValue` object with a type of TIMESTAMP. Must be in the format \"yyyy-MM-dd HH:mm:ss.SSSSSSZZ\", e.g. \"2014-08-19 12:41:35.220000+00:00\"."
  syntax:
    content: "public static QueryParameterValue timestamp(String value)"
    parameters:
    - id: "value"
      type: "java.lang.String"
    return:
      type: "com.google.cloud.bigquery.QueryParameterValue"
- uid: "com.google.cloud.bigquery.QueryParameterValue.toBuilder()"
  id: "toBuilder()"
  parent: "com.google.cloud.bigquery.QueryParameterValue"
  langs:
  - "java"
  name: "toBuilder()"
  nameWithType: "QueryParameterValue.toBuilder()"
  fullName: "com.google.cloud.bigquery.QueryParameterValue.toBuilder()"
  overload: "com.google.cloud.bigquery.QueryParameterValue.toBuilder*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns a builder for a QueryParameterValue object with given value."
  syntax:
    content: "public abstract QueryParameterValue.Builder toBuilder()"
    return:
      type: "com.google.cloud.bigquery.QueryParameterValue.Builder"
references:
- uid: "com.google.cloud.bigquery.QueryParameterValue.QueryParameterValue*"
  name: "QueryParameterValue"
  nameWithType: "QueryParameterValue.QueryParameterValue"
  fullName: "com.google.cloud.bigquery.QueryParameterValue.QueryParameterValue"
  package: "com.google.cloud.bigquery"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.google.cloud.bigquery.QueryParameterValue.getValue*"
  name: "getValue"
  nameWithType: "QueryParameterValue.getValue"
  fullName: "com.google.cloud.bigquery.QueryParameterValue.getValue"
  package: "com.google.cloud.bigquery"
- uid: "java.util.List<com.google.cloud.bigquery.QueryParameterValue>"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "com.google.cloud.bigquery.QueryParameterValue"
    name: "QueryParameterValue"
    fullName: "com.google.cloud.bigquery.QueryParameterValue"
  - name: ">"
    fullName: ">"
- uid: "com.google.cloud.bigquery.QueryParameterValue.getArrayValues*"
  name: "getArrayValues"
  nameWithType: "QueryParameterValue.getArrayValues"
  fullName: "com.google.cloud.bigquery.QueryParameterValue.getArrayValues"
  package: "com.google.cloud.bigquery"
- uid: "java.util.Map<java.lang.String,com.google.cloud.bigquery.QueryParameterValue>"
  spec.java:
  - uid: "java.util.Map"
    name: "Map"
    fullName: "java.util.Map"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ","
    fullName: ","
  - uid: "com.google.cloud.bigquery.QueryParameterValue"
    name: "QueryParameterValue"
    fullName: "com.google.cloud.bigquery.QueryParameterValue"
  - name: ">"
    fullName: ">"
- uid: "com.google.cloud.bigquery.QueryParameterValue.getStructValues*"
  name: "getStructValues"
  nameWithType: "QueryParameterValue.getStructValues"
  fullName: "com.google.cloud.bigquery.QueryParameterValue.getStructValues"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.StandardSQLTypeName"
  name: "StandardSQLTypeName"
  nameWithType: "StandardSQLTypeName"
  fullName: "com.google.cloud.bigquery.StandardSQLTypeName"
- uid: "com.google.cloud.bigquery.QueryParameterValue.getType*"
  name: "getType"
  nameWithType: "QueryParameterValue.getType"
  fullName: "com.google.cloud.bigquery.QueryParameterValue.getType"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.QueryParameterValue.getArrayType*"
  name: "getArrayType"
  nameWithType: "QueryParameterValue.getArrayType"
  fullName: "com.google.cloud.bigquery.QueryParameterValue.getArrayType"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.QueryParameterValue.getStructTypes*"
  name: "getStructTypes"
  nameWithType: "QueryParameterValue.getStructTypes"
  fullName: "com.google.cloud.bigquery.QueryParameterValue.getStructTypes"
  package: "com.google.cloud.bigquery"
- uid: "T"
  spec.java:
  - uid: "T"
    name: "T"
    fullName: "T"
- uid: "java.lang.Class<T>"
  spec.java:
  - uid: "java.lang.Class"
    name: "Class"
    fullName: "java.lang.Class"
  - name: "<"
    fullName: "<"
  - uid: "T"
    name: "T"
    fullName: "T"
  - name: ">"
    fullName: ">"
- uid: "com.google.cloud.bigquery.QueryParameterValue.of*"
  name: "<T>of"
  nameWithType: "QueryParameterValue.<T>of"
  fullName: "com.google.cloud.bigquery.QueryParameterValue.<T>of"
  package: "com.google.cloud.bigquery"
- uid: "java.lang.Boolean"
  spec.java:
  - uid: "java.lang.Boolean"
    name: "Boolean"
    fullName: "java.lang.Boolean"
- uid: "com.google.cloud.bigquery.QueryParameterValue.bool*"
  name: "bool"
  nameWithType: "QueryParameterValue.bool"
  fullName: "com.google.cloud.bigquery.QueryParameterValue.bool"
  package: "com.google.cloud.bigquery"
- uid: "java.lang.Long"
  spec.java:
  - uid: "java.lang.Long"
    name: "Long"
    fullName: "java.lang.Long"
- uid: "com.google.cloud.bigquery.QueryParameterValue.int64*"
  name: "int64"
  nameWithType: "QueryParameterValue.int64"
  fullName: "com.google.cloud.bigquery.QueryParameterValue.int64"
  package: "com.google.cloud.bigquery"
- uid: "java.lang.Integer"
  spec.java:
  - uid: "java.lang.Integer"
    name: "Integer"
    fullName: "java.lang.Integer"
- uid: "java.lang.Double"
  spec.java:
  - uid: "java.lang.Double"
    name: "Double"
    fullName: "java.lang.Double"
- uid: "com.google.cloud.bigquery.QueryParameterValue.float64*"
  name: "float64"
  nameWithType: "QueryParameterValue.float64"
  fullName: "com.google.cloud.bigquery.QueryParameterValue.float64"
  package: "com.google.cloud.bigquery"
- uid: "java.lang.Float"
  spec.java:
  - uid: "java.lang.Float"
    name: "Float"
    fullName: "java.lang.Float"
- uid: "java.math.BigDecimal"
  spec.java:
  - uid: "java.math.BigDecimal"
    name: "BigDecimal"
    fullName: "java.math.BigDecimal"
- uid: "com.google.cloud.bigquery.QueryParameterValue.numeric*"
  name: "numeric"
  nameWithType: "QueryParameterValue.numeric"
  fullName: "com.google.cloud.bigquery.QueryParameterValue.numeric"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.QueryParameterValue.bigNumeric*"
  name: "bigNumeric"
  nameWithType: "QueryParameterValue.bigNumeric"
  fullName: "com.google.cloud.bigquery.QueryParameterValue.bigNumeric"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.QueryParameterValue.string*"
  name: "string"
  nameWithType: "QueryParameterValue.string"
  fullName: "com.google.cloud.bigquery.QueryParameterValue.string"
  package: "com.google.cloud.bigquery"
- uid: "byte[]"
  spec.java:
  - uid: "byte"
    name: "byte"
    fullName: "byte"
  - name: "[]"
    fullName: "[]"
- uid: "com.google.cloud.bigquery.QueryParameterValue.bytes*"
  name: "bytes"
  nameWithType: "QueryParameterValue.bytes"
  fullName: "com.google.cloud.bigquery.QueryParameterValue.bytes"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.QueryParameterValue.timestamp*"
  name: "timestamp"
  nameWithType: "QueryParameterValue.timestamp"
  fullName: "com.google.cloud.bigquery.QueryParameterValue.timestamp"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.QueryParameterValue.date*"
  name: "date"
  nameWithType: "QueryParameterValue.date"
  fullName: "com.google.cloud.bigquery.QueryParameterValue.date"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.QueryParameterValue.time*"
  name: "time"
  nameWithType: "QueryParameterValue.time"
  fullName: "com.google.cloud.bigquery.QueryParameterValue.time"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.QueryParameterValue.dateTime*"
  name: "dateTime"
  nameWithType: "QueryParameterValue.dateTime"
  fullName: "com.google.cloud.bigquery.QueryParameterValue.dateTime"
  package: "com.google.cloud.bigquery"
- uid: "T[]"
  spec.java:
  - uid: "T"
    name: "T"
    fullName: "T"
  - name: "[]"
    fullName: "[]"
- uid: "com.google.cloud.bigquery.QueryParameterValue.array*"
  name: "<T>array"
  nameWithType: "QueryParameterValue.<T>array"
  fullName: "com.google.cloud.bigquery.QueryParameterValue.<T>array"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.QueryParameterValue.struct*"
  name: "struct"
  nameWithType: "QueryParameterValue.struct"
  fullName: "com.google.cloud.bigquery.QueryParameterValue.struct"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.QueryParameterValue.Builder"
  name: "QueryParameterValue.Builder"
  nameWithType: "QueryParameterValue.Builder"
  fullName: "com.google.cloud.bigquery.QueryParameterValue.Builder"
- uid: "com.google.cloud.bigquery.QueryParameterValue.toBuilder*"
  name: "toBuilder"
  nameWithType: "QueryParameterValue.toBuilder"
  fullName: "com.google.cloud.bigquery.QueryParameterValue.toBuilder"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.QueryParameterValue.newBuilder*"
  name: "newBuilder"
  nameWithType: "QueryParameterValue.newBuilder"
  fullName: "com.google.cloud.bigquery.QueryParameterValue.newBuilder"
  package: "com.google.cloud.bigquery"
- uid: "java.io.Serializable"
  name: "Serializable"
  nameWithType: "Serializable"
  fullName: "java.io.Serializable"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.util.List"
  name: "List"
  nameWithType: "List"
  fullName: "java.util.List"
- uid: "java.lang.String,com.google.cloud.bigquery.QueryParameterValue"
  name: "String,QueryParameterValue"
  nameWithType: "String,QueryParameterValue"
  fullName: "java.lang.String,com.google.cloud.bigquery.QueryParameterValue"
- uid: "java.util.Map"
  name: "Map"
  nameWithType: "Map"
  fullName: "java.util.Map"
- uid: "java.lang.Class"
  name: "Class"
  nameWithType: "Class"
  fullName: "java.lang.Class"
