### YamlMime:ManagedReference
items:
- uid: "com.google.cloud.bigquery.FieldValue.Attribute"
  id: "Attribute"
  parent: "com.google.cloud.bigquery"
  children:
  - "com.google.cloud.bigquery.FieldValue.Attribute.PRIMITIVE"
  - "com.google.cloud.bigquery.FieldValue.Attribute.RECORD"
  - "com.google.cloud.bigquery.FieldValue.Attribute.REPEATED"
  - "com.google.cloud.bigquery.FieldValue.Attribute.valueOf(java.lang.String)"
  - "com.google.cloud.bigquery.FieldValue.Attribute.values()"
  langs:
  - "java"
  name: "FieldValue.Attribute"
  nameWithType: "FieldValue.Attribute"
  fullName: "com.google.cloud.bigquery.FieldValue.Attribute"
  type: "Enum"
  package: "com.google.cloud.bigquery"
  summary: "The field value's attribute, giving information on the field's content type."
  syntax:
    content: "public enum FieldValue.Attribute extends Enum<FieldValue.Attribute>"
  inheritance:
  - "java.lang.Object"
  - "java.lang.Enum"
  inheritedMembers:
  - "java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)"
  - "java.lang.Enum.clone()"
  - "java.lang.Enum.compareTo(E)"
  - "java.lang.Enum.equals(java.lang.Object)"
  - "java.lang.Enum.finalize()"
  - "java.lang.Enum.getDeclaringClass()"
  - "java.lang.Enum.hashCode()"
  - "java.lang.Enum.name()"
  - "java.lang.Enum.ordinal()"
  - "java.lang.Enum.toString()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.google.cloud.bigquery.FieldValue.Attribute.Attribute()"
  id: "Attribute()"
  parent: "com.google.cloud.bigquery.FieldValue.Attribute"
  langs:
  - "java"
  name: "Attribute()"
  nameWithType: "FieldValue.Attribute.Attribute()"
  fullName: "com.google.cloud.bigquery.FieldValue.Attribute.Attribute()"
  overload: "com.google.cloud.bigquery.FieldValue.Attribute.Attribute*"
  type: "Constructor"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "private Attribute()"
- uid: "com.google.cloud.bigquery.FieldValue.Attribute.PRIMITIVE"
  id: "PRIMITIVE"
  parent: "com.google.cloud.bigquery.FieldValue.Attribute"
  langs:
  - "java"
  name: "PRIMITIVE"
  nameWithType: "FieldValue.Attribute.PRIMITIVE"
  fullName: "com.google.cloud.bigquery.FieldValue.Attribute.PRIMITIVE"
  type: "Field"
  package: "com.google.cloud.bigquery"
  summary: "A primitive field value. A `FieldValue` is primitive when the corresponding field has type <xref uid=\"com.google.cloud.bigquery.LegacySQLTypeName.BYTES\" data-throw-if-not-resolved=\"false\">LegacySQLTypeName#BYTES</xref>, <xref uid=\"com.google.cloud.bigquery.LegacySQLTypeName.BOOLEAN\" data-throw-if-not-resolved=\"false\">LegacySQLTypeName#BOOLEAN</xref>, <xref uid=\"com.google.cloud.bigquery.LegacySQLTypeName.STRING\" data-throw-if-not-resolved=\"false\">LegacySQLTypeName#STRING</xref>, <xref uid=\"com.google.cloud.bigquery.LegacySQLTypeName.FLOAT\" data-throw-if-not-resolved=\"false\">LegacySQLTypeName#FLOAT</xref>, <xref uid=\"com.google.cloud.bigquery.LegacySQLTypeName.INTEGER\" data-throw-if-not-resolved=\"false\">LegacySQLTypeName#INTEGER</xref>, <xref uid=\"com.google.cloud.bigquery.LegacySQLTypeName.NUMERIC\" data-throw-if-not-resolved=\"false\">LegacySQLTypeName#NUMERIC</xref>, <xref uid=\"com.google.cloud.bigquery.LegacySQLTypeName.TIMESTAMP\" data-throw-if-not-resolved=\"false\">LegacySQLTypeName#TIMESTAMP</xref>, <xref uid=\"com.google.cloud.bigquery.LegacySQLTypeName.GEOGRAPHY\" data-throw-if-not-resolved=\"false\">LegacySQLTypeName#GEOGRAPHY</xref> or the value is set to `null`."
  syntax:
    content: "public static final FieldValue.Attribute PRIMITIVE"
    return:
      type: "com.google.cloud.bigquery.FieldValue.Attribute"
- uid: "com.google.cloud.bigquery.FieldValue.Attribute.RECORD"
  id: "RECORD"
  parent: "com.google.cloud.bigquery.FieldValue.Attribute"
  langs:
  - "java"
  name: "RECORD"
  nameWithType: "FieldValue.Attribute.RECORD"
  fullName: "com.google.cloud.bigquery.FieldValue.Attribute.RECORD"
  type: "Field"
  package: "com.google.cloud.bigquery"
  summary: "A `FieldValue` for a field of type <xref uid=\"com.google.cloud.bigquery.LegacySQLTypeName.RECORD\" data-throw-if-not-resolved=\"false\">LegacySQLTypeName#RECORD</xref>."
  syntax:
    content: "public static final FieldValue.Attribute RECORD"
    return:
      type: "com.google.cloud.bigquery.FieldValue.Attribute"
- uid: "com.google.cloud.bigquery.FieldValue.Attribute.REPEATED"
  id: "REPEATED"
  parent: "com.google.cloud.bigquery.FieldValue.Attribute"
  langs:
  - "java"
  name: "REPEATED"
  nameWithType: "FieldValue.Attribute.REPEATED"
  fullName: "com.google.cloud.bigquery.FieldValue.Attribute.REPEATED"
  type: "Field"
  package: "com.google.cloud.bigquery"
  summary: "A `FieldValue` for a field with <xref uid=\"com.google.cloud.bigquery.Field.Mode.REPEATED\" data-throw-if-not-resolved=\"false\">Field.Mode#REPEATED</xref> mode."
  syntax:
    content: "public static final FieldValue.Attribute REPEATED"
    return:
      type: "com.google.cloud.bigquery.FieldValue.Attribute"
- uid: "com.google.cloud.bigquery.FieldValue.Attribute.valueOf(java.lang.String)"
  id: "valueOf(java.lang.String)"
  parent: "com.google.cloud.bigquery.FieldValue.Attribute"
  langs:
  - "java"
  name: "valueOf(String name)"
  nameWithType: "FieldValue.Attribute.valueOf(String name)"
  fullName: "com.google.cloud.bigquery.FieldValue.Attribute.valueOf(String name)"
  overload: "com.google.cloud.bigquery.FieldValue.Attribute.valueOf*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public static FieldValue.Attribute valueOf(String name)"
    parameters:
    - id: "name"
      type: "java.lang.String"
    return:
      type: "com.google.cloud.bigquery.FieldValue.Attribute"
- uid: "com.google.cloud.bigquery.FieldValue.Attribute.values()"
  id: "values()"
  parent: "com.google.cloud.bigquery.FieldValue.Attribute"
  langs:
  - "java"
  name: "values()"
  nameWithType: "FieldValue.Attribute.values()"
  fullName: "com.google.cloud.bigquery.FieldValue.Attribute.values()"
  overload: "com.google.cloud.bigquery.FieldValue.Attribute.values*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public static FieldValue.Attribute[] values()"
    return:
      type: "com.google.cloud.bigquery.FieldValue.Attribute[]"
references:
- uid: "com.google.cloud.bigquery.FieldValue.Attribute.Attribute*"
  name: "Attribute"
  nameWithType: "FieldValue.Attribute.Attribute"
  fullName: "com.google.cloud.bigquery.FieldValue.Attribute.Attribute"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.FieldValue.Attribute[]"
  spec.java:
  - uid: "com.google.cloud.bigquery.FieldValue.Attribute"
    name: "Attribute"
    fullName: "com.google.cloud.bigquery.FieldValue.Attribute"
  - name: "[]"
    fullName: "[]"
- uid: "com.google.cloud.bigquery.FieldValue.Attribute.values*"
  name: "values"
  nameWithType: "FieldValue.Attribute.values"
  fullName: "com.google.cloud.bigquery.FieldValue.Attribute.values"
  package: "com.google.cloud.bigquery"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.google.cloud.bigquery.FieldValue.Attribute.valueOf*"
  name: "valueOf"
  nameWithType: "FieldValue.Attribute.valueOf"
  fullName: "com.google.cloud.bigquery.FieldValue.Attribute.valueOf"
  package: "com.google.cloud.bigquery"
- uid: "java.lang.Enum<com.google.cloud.bigquery.FieldValue.Attribute>"
  name: "Enum<FieldValue.Attribute>"
  nameWithType: "Enum<FieldValue.Attribute>"
  fullName: "java.lang.Enum<com.google.cloud.bigquery.FieldValue.Attribute>"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Enum.toString()"
  name: "Enum.toString()"
  nameWithType: "Enum.toString()"
  fullName: "java.lang.Enum.toString()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Enum.clone()"
  name: "Enum.clone()"
  nameWithType: "Enum.clone()"
  fullName: "java.lang.Enum.clone()"
- uid: "java.lang.Enum.finalize()"
  name: "Enum.finalize()"
  nameWithType: "Enum.finalize()"
  fullName: "java.lang.Enum.finalize()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Enum.compareTo(E)"
  name: "Enum.compareTo(E)"
  nameWithType: "Enum.compareTo(E)"
  fullName: "java.lang.Enum.compareTo(E)"
- uid: "java.lang.Enum.name()"
  name: "Enum.name()"
  nameWithType: "Enum.name()"
  fullName: "java.lang.Enum.name()"
- uid: "java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)"
  name: "Enum.<T>valueOf(Class<T>,String)"
  nameWithType: "Enum.<T>valueOf(Class<T>,String)"
  fullName: "java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Enum.getDeclaringClass()"
  name: "Enum.getDeclaringClass()"
  nameWithType: "Enum.getDeclaringClass()"
  fullName: "java.lang.Enum.getDeclaringClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Enum.ordinal()"
  name: "Enum.ordinal()"
  nameWithType: "Enum.ordinal()"
  fullName: "java.lang.Enum.ordinal()"
- uid: "java.lang.Enum.hashCode()"
  name: "Enum.hashCode()"
  nameWithType: "Enum.hashCode()"
  fullName: "java.lang.Enum.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Enum.equals(java.lang.Object)"
  name: "Enum.equals(Object)"
  nameWithType: "Enum.equals(Object)"
  fullName: "java.lang.Enum.equals(java.lang.Object)"
- uid: "java.lang.Enum"
  name: "Enum"
  nameWithType: "Enum"
  fullName: "java.lang.Enum"
- uid: "java.lang.Enum."
  name: "Enum."
  nameWithType: "Enum."
  fullName: "java.lang.Enum."
- uid: "T>,java.lang.String)"
  name: "T>,String)"
  nameWithType: "T>,String)"
  fullName: "T>,java.lang.String)"
- uid: "T>valueOf(java.lang.Class"
  name: "T>valueOf(Class"
  nameWithType: "T>valueOf(Class"
  fullName: "T>valueOf(java.lang.Class"
