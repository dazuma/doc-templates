### YamlMime:ManagedReference
items:
- uid: "com.google.cloud.bigquery.BigQueryOptions"
  id: "BigQueryOptions"
  parent: "com.google.cloud.bigquery"
  children:
  - "com.google.cloud.bigquery.BigQueryOptions.Builder"
  - "com.google.cloud.bigquery.BigQueryOptions.DefaultBigQueryFactory"
  - "com.google.cloud.bigquery.BigQueryOptions.DefaultBigQueryRpcFactory"
  - "com.google.cloud.bigquery.BigQueryOptions.equals(java.lang.Object)"
  - "com.google.cloud.bigquery.BigQueryOptions.getBigQueryRpcV2()"
  - "com.google.cloud.bigquery.BigQueryOptions.getDefaultHttpTransportOptions()"
  - "com.google.cloud.bigquery.BigQueryOptions.getDefaultInstance()"
  - "com.google.cloud.bigquery.BigQueryOptions.getLocation()"
  - "com.google.cloud.bigquery.BigQueryOptions.getScopes()"
  - "com.google.cloud.bigquery.BigQueryOptions.getThrowNotFound()"
  - "com.google.cloud.bigquery.BigQueryOptions.hashCode()"
  - "com.google.cloud.bigquery.BigQueryOptions.newBuilder()"
  - "com.google.cloud.bigquery.BigQueryOptions.setThrowNotFound(boolean)"
  - "com.google.cloud.bigquery.BigQueryOptions.toBuilder()"
  langs:
  - "java"
  name: "BigQueryOptions"
  nameWithType: "BigQueryOptions"
  fullName: "com.google.cloud.bigquery.BigQueryOptions"
  type: "Class"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public class BigQueryOptions extends ServiceOptions<BigQuery,BigQueryOptions>"
  inheritance:
  - "java.lang.Object"
  - "com.google.cloud.ServiceOptions"
  inheritedMembers:
  - "com.google.cloud.ServiceOptions.<B>toBuilder()"
  - "com.google.cloud.ServiceOptions.<T>getFromServiceLoader(java.lang.Class<? extends T>,T)"
  - "com.google.cloud.ServiceOptions.<T>newInstance(java.lang.String)"
  - "com.google.cloud.ServiceOptions.baseEquals(com.google.cloud.ServiceOptions<?,?>)"
  - "com.google.cloud.ServiceOptions.baseHashCode()"
  - "com.google.cloud.ServiceOptions.defaultRetrySettings()"
  - "com.google.cloud.ServiceOptions.getAppEngineAppId()"
  - "com.google.cloud.ServiceOptions.getAppEngineProjectId()"
  - "com.google.cloud.ServiceOptions.getAppEngineProjectIdFromAppId()"
  - "com.google.cloud.ServiceOptions.getApplicationName()"
  - "com.google.cloud.ServiceOptions.getClientLibToken()"
  - "com.google.cloud.ServiceOptions.getClock()"
  - "com.google.cloud.ServiceOptions.getCredentials()"
  - "com.google.cloud.ServiceOptions.getDefaultHost()"
  - "com.google.cloud.ServiceOptions.getDefaultProject()"
  - "com.google.cloud.ServiceOptions.getDefaultProjectId()"
  - "com.google.cloud.ServiceOptions.getDefaultRetrySettings()"
  - "com.google.cloud.ServiceOptions.getGoogApiClientLibName()"
  - "com.google.cloud.ServiceOptions.getGoogleCloudProjectId()"
  - "com.google.cloud.ServiceOptions.getHost()"
  - "com.google.cloud.ServiceOptions.getLibraryName()"
  - "com.google.cloud.ServiceOptions.getLibraryVersion()"
  - "com.google.cloud.ServiceOptions.getMergedHeaderProvider(com.google.api.gax.rpc.HeaderProvider)"
  - "com.google.cloud.ServiceOptions.getNoRetrySettings()"
  - "com.google.cloud.ServiceOptions.getProjectId()"
  - "com.google.cloud.ServiceOptions.getQuotaProjectId()"
  - "com.google.cloud.ServiceOptions.getRetrySettings()"
  - "com.google.cloud.ServiceOptions.getRpc()"
  - "com.google.cloud.ServiceOptions.getScopedCredentials()"
  - "com.google.cloud.ServiceOptions.getScopes()"
  - "com.google.cloud.ServiceOptions.getService()"
  - "com.google.cloud.ServiceOptions.getServiceAccountProjectId()"
  - "com.google.cloud.ServiceOptions.getTransportOptions()"
  - "com.google.cloud.ServiceOptions.getUserAgent()"
  - "com.google.cloud.ServiceOptions.projectIdRequired()"
  - "com.google.cloud.ServiceOptions.shouldRefreshRpc(com.google.cloud.ServiceRpc)"
  - "com.google.cloud.ServiceOptions.shouldRefreshService(ServiceT)"
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.google.cloud.bigquery.BigQueryOptions.BigQueryOptions(com.google.cloud.bigquery.BigQueryOptions.Builder)"
  id: "BigQueryOptions(com.google.cloud.bigquery.BigQueryOptions.Builder)"
  parent: "com.google.cloud.bigquery.BigQueryOptions"
  langs:
  - "java"
  name: "BigQueryOptions(BigQueryOptions.Builder builder)"
  nameWithType: "BigQueryOptions.BigQueryOptions(BigQueryOptions.Builder builder)"
  fullName: "com.google.cloud.bigquery.BigQueryOptions.BigQueryOptions(BigQueryOptions.Builder builder)"
  overload: "com.google.cloud.bigquery.BigQueryOptions.BigQueryOptions*"
  type: "Constructor"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "private BigQueryOptions(BigQueryOptions.Builder builder)"
    parameters:
    - id: "builder"
      type: "com.google.cloud.bigquery.BigQueryOptions.Builder"
- uid: "com.google.cloud.bigquery.BigQueryOptions.equals(java.lang.Object)"
  id: "equals(java.lang.Object)"
  parent: "com.google.cloud.bigquery.BigQueryOptions"
  langs:
  - "java"
  name: "equals(Object obj)"
  nameWithType: "BigQueryOptions.equals(Object obj)"
  fullName: "com.google.cloud.bigquery.BigQueryOptions.equals(Object obj)"
  overload: "com.google.cloud.bigquery.BigQueryOptions.equals*"
  overridden: "java.lang.Object.equals(java.lang.Object)"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public boolean equals(Object obj)"
    parameters:
    - id: "obj"
      type: "java.lang.Object"
    return:
      type: "boolean"
- uid: "com.google.cloud.bigquery.BigQueryOptions.getBigQueryRpcV2()"
  id: "getBigQueryRpcV2()"
  parent: "com.google.cloud.bigquery.BigQueryOptions"
  langs:
  - "java"
  name: "getBigQueryRpcV2()"
  nameWithType: "BigQueryOptions.getBigQueryRpcV2()"
  fullName: "com.google.cloud.bigquery.BigQueryOptions.getBigQueryRpcV2()"
  overload: "com.google.cloud.bigquery.BigQueryOptions.getBigQueryRpcV2*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "protected BigQueryRpc getBigQueryRpcV2()"
    return:
      type: "com.google.cloud.bigquery.spi.v2.BigQueryRpc"
- uid: "com.google.cloud.bigquery.BigQueryOptions.getDefaultHttpTransportOptions()"
  id: "getDefaultHttpTransportOptions()"
  parent: "com.google.cloud.bigquery.BigQueryOptions"
  langs:
  - "java"
  name: "getDefaultHttpTransportOptions()"
  nameWithType: "BigQueryOptions.getDefaultHttpTransportOptions()"
  fullName: "com.google.cloud.bigquery.BigQueryOptions.getDefaultHttpTransportOptions()"
  overload: "com.google.cloud.bigquery.BigQueryOptions.getDefaultHttpTransportOptions*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public static HttpTransportOptions getDefaultHttpTransportOptions()"
    return:
      type: "com.google.cloud.http.HttpTransportOptions"
- uid: "com.google.cloud.bigquery.BigQueryOptions.getDefaultInstance()"
  id: "getDefaultInstance()"
  parent: "com.google.cloud.bigquery.BigQueryOptions"
  langs:
  - "java"
  name: "getDefaultInstance()"
  nameWithType: "BigQueryOptions.getDefaultInstance()"
  fullName: "com.google.cloud.bigquery.BigQueryOptions.getDefaultInstance()"
  overload: "com.google.cloud.bigquery.BigQueryOptions.getDefaultInstance*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public static BigQueryOptions getDefaultInstance()"
    return:
      type: "com.google.cloud.bigquery.BigQueryOptions"
- uid: "com.google.cloud.bigquery.BigQueryOptions.getLocation()"
  id: "getLocation()"
  parent: "com.google.cloud.bigquery.BigQueryOptions"
  langs:
  - "java"
  name: "getLocation()"
  nameWithType: "BigQueryOptions.getLocation()"
  fullName: "com.google.cloud.bigquery.BigQueryOptions.getLocation()"
  overload: "com.google.cloud.bigquery.BigQueryOptions.getLocation*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public String getLocation()"
    return:
      type: "java.lang.String"
- uid: "com.google.cloud.bigquery.BigQueryOptions.getScopes()"
  id: "getScopes()"
  parent: "com.google.cloud.bigquery.BigQueryOptions"
  langs:
  - "java"
  name: "getScopes()"
  nameWithType: "BigQueryOptions.getScopes()"
  fullName: "com.google.cloud.bigquery.BigQueryOptions.getScopes()"
  overload: "com.google.cloud.bigquery.BigQueryOptions.getScopes*"
  overridden: "com.google.cloud.ServiceOptions.getScopes()"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "protected Set<String> getScopes()"
    return:
      type: "java.util.Set<java.lang.String>"
- uid: "com.google.cloud.bigquery.BigQueryOptions.getThrowNotFound()"
  id: "getThrowNotFound()"
  parent: "com.google.cloud.bigquery.BigQueryOptions"
  langs:
  - "java"
  name: "getThrowNotFound()"
  nameWithType: "BigQueryOptions.getThrowNotFound()"
  fullName: "com.google.cloud.bigquery.BigQueryOptions.getThrowNotFound()"
  overload: "com.google.cloud.bigquery.BigQueryOptions.getThrowNotFound*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public boolean getThrowNotFound()"
    return:
      type: "boolean"
- uid: "com.google.cloud.bigquery.BigQueryOptions.hashCode()"
  id: "hashCode()"
  parent: "com.google.cloud.bigquery.BigQueryOptions"
  langs:
  - "java"
  name: "hashCode()"
  nameWithType: "BigQueryOptions.hashCode()"
  fullName: "com.google.cloud.bigquery.BigQueryOptions.hashCode()"
  overload: "com.google.cloud.bigquery.BigQueryOptions.hashCode*"
  overridden: "java.lang.Object.hashCode()"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public int hashCode()"
    return:
      type: "int"
- uid: "com.google.cloud.bigquery.BigQueryOptions.newBuilder()"
  id: "newBuilder()"
  parent: "com.google.cloud.bigquery.BigQueryOptions"
  langs:
  - "java"
  name: "newBuilder()"
  nameWithType: "BigQueryOptions.newBuilder()"
  fullName: "com.google.cloud.bigquery.BigQueryOptions.newBuilder()"
  overload: "com.google.cloud.bigquery.BigQueryOptions.newBuilder*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public static BigQueryOptions.Builder newBuilder()"
    return:
      type: "com.google.cloud.bigquery.BigQueryOptions.Builder"
- uid: "com.google.cloud.bigquery.BigQueryOptions.setThrowNotFound(boolean)"
  id: "setThrowNotFound(boolean)"
  parent: "com.google.cloud.bigquery.BigQueryOptions"
  langs:
  - "java"
  name: "setThrowNotFound(boolean setThrowNotFound)"
  nameWithType: "BigQueryOptions.setThrowNotFound(boolean setThrowNotFound)"
  fullName: "com.google.cloud.bigquery.BigQueryOptions.setThrowNotFound(boolean setThrowNotFound)"
  overload: "com.google.cloud.bigquery.BigQueryOptions.setThrowNotFound*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public void setThrowNotFound(boolean setThrowNotFound)"
    parameters:
    - id: "setThrowNotFound"
      type: "boolean"
- uid: "com.google.cloud.bigquery.BigQueryOptions.toBuilder()"
  id: "toBuilder()"
  parent: "com.google.cloud.bigquery.BigQueryOptions"
  langs:
  - "java"
  name: "toBuilder()"
  nameWithType: "BigQueryOptions.toBuilder()"
  fullName: "com.google.cloud.bigquery.BigQueryOptions.toBuilder()"
  overload: "com.google.cloud.bigquery.BigQueryOptions.toBuilder*"
  overridden: "com.google.cloud.ServiceOptions.<B>toBuilder()"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public BigQueryOptions.Builder toBuilder()"
    return:
      type: "com.google.cloud.bigquery.BigQueryOptions.Builder"
references:
- uid: "com.google.cloud.bigquery.BigQueryOptions.Builder"
  name: "BigQueryOptions.Builder"
  nameWithType: "BigQueryOptions.Builder"
  fullName: "com.google.cloud.bigquery.BigQueryOptions.Builder"
- uid: "com.google.cloud.bigquery.BigQueryOptions.BigQueryOptions*"
  name: "BigQueryOptions"
  nameWithType: "BigQueryOptions.BigQueryOptions"
  fullName: "com.google.cloud.bigquery.BigQueryOptions.BigQueryOptions"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.http.HttpTransportOptions"
  spec.java:
  - uid: "com.google.cloud.http.HttpTransportOptions"
    name: "HttpTransportOptions"
    fullName: "com.google.cloud.http.HttpTransportOptions"
- uid: "com.google.cloud.bigquery.BigQueryOptions.getDefaultHttpTransportOptions*"
  name: "getDefaultHttpTransportOptions"
  nameWithType: "BigQueryOptions.getDefaultHttpTransportOptions"
  fullName: "com.google.cloud.bigquery.BigQueryOptions.getDefaultHttpTransportOptions"
  package: "com.google.cloud.bigquery"
- uid: "java.util.Set<java.lang.String>"
  spec.java:
  - uid: "java.util.Set"
    name: "Set"
    fullName: "java.util.Set"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ">"
    fullName: ">"
- uid: "com.google.cloud.bigquery.BigQueryOptions.getScopes*"
  name: "getScopes"
  nameWithType: "BigQueryOptions.getScopes"
  fullName: "com.google.cloud.bigquery.BigQueryOptions.getScopes"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.spi.v2.BigQueryRpc"
  name: "BigQueryRpc"
  nameWithType: "BigQueryRpc"
  fullName: "com.google.cloud.bigquery.spi.v2.BigQueryRpc"
- uid: "com.google.cloud.bigquery.BigQueryOptions.getBigQueryRpcV2*"
  name: "getBigQueryRpcV2"
  nameWithType: "BigQueryOptions.getBigQueryRpcV2"
  fullName: "com.google.cloud.bigquery.BigQueryOptions.getBigQueryRpcV2"
  package: "com.google.cloud.bigquery"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.google.cloud.bigquery.BigQueryOptions.getLocation*"
  name: "getLocation"
  nameWithType: "BigQueryOptions.getLocation"
  fullName: "com.google.cloud.bigquery.BigQueryOptions.getLocation"
  package: "com.google.cloud.bigquery"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "com.google.cloud.bigquery.BigQueryOptions.setThrowNotFound*"
  name: "setThrowNotFound"
  nameWithType: "BigQueryOptions.setThrowNotFound"
  fullName: "com.google.cloud.bigquery.BigQueryOptions.setThrowNotFound"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.BigQueryOptions.getThrowNotFound*"
  name: "getThrowNotFound"
  nameWithType: "BigQueryOptions.getThrowNotFound"
  fullName: "com.google.cloud.bigquery.BigQueryOptions.getThrowNotFound"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.BigQueryOptions.toBuilder*"
  name: "toBuilder"
  nameWithType: "BigQueryOptions.toBuilder"
  fullName: "com.google.cloud.bigquery.BigQueryOptions.toBuilder"
  package: "com.google.cloud.bigquery"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "com.google.cloud.bigquery.BigQueryOptions.hashCode*"
  name: "hashCode"
  nameWithType: "BigQueryOptions.hashCode"
  fullName: "com.google.cloud.bigquery.BigQueryOptions.hashCode"
  package: "com.google.cloud.bigquery"
- uid: "java.lang.Object"
  spec.java:
  - uid: "java.lang.Object"
    name: "Object"
    fullName: "java.lang.Object"
- uid: "com.google.cloud.bigquery.BigQueryOptions.equals*"
  name: "equals"
  nameWithType: "BigQueryOptions.equals"
  fullName: "com.google.cloud.bigquery.BigQueryOptions.equals"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.BigQueryOptions.getDefaultInstance*"
  name: "getDefaultInstance"
  nameWithType: "BigQueryOptions.getDefaultInstance"
  fullName: "com.google.cloud.bigquery.BigQueryOptions.getDefaultInstance"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.BigQueryOptions.newBuilder*"
  name: "newBuilder"
  nameWithType: "BigQueryOptions.newBuilder"
  fullName: "com.google.cloud.bigquery.BigQueryOptions.newBuilder"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.ServiceOptions<com.google.cloud.bigquery.BigQuery,com.google.cloud.bigquery.BigQueryOptions>"
  name: "ServiceOptions<BigQuery,BigQueryOptions>"
  nameWithType: "ServiceOptions<BigQuery,BigQueryOptions>"
  fullName: "com.google.cloud.ServiceOptions<com.google.cloud.bigquery.BigQuery,com.google.cloud.bigquery.BigQueryOptions>"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "com.google.cloud.ServiceOptions.getClientLibToken()"
  name: "ServiceOptions.getClientLibToken()"
  nameWithType: "ServiceOptions.getClientLibToken()"
  fullName: "com.google.cloud.ServiceOptions.getClientLibToken()"
- uid: "com.google.cloud.ServiceOptions.getUserAgent()"
  name: "ServiceOptions.getUserAgent()"
  nameWithType: "ServiceOptions.getUserAgent()"
  fullName: "com.google.cloud.ServiceOptions.getUserAgent()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "com.google.cloud.ServiceOptions.getDefaultRetrySettings()"
  name: "ServiceOptions.getDefaultRetrySettings()"
  nameWithType: "ServiceOptions.getDefaultRetrySettings()"
  fullName: "com.google.cloud.ServiceOptions.getDefaultRetrySettings()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "com.google.cloud.ServiceOptions.getLibraryVersion()"
  name: "ServiceOptions.getLibraryVersion()"
  nameWithType: "ServiceOptions.getLibraryVersion()"
  fullName: "com.google.cloud.ServiceOptions.getLibraryVersion()"
- uid: "com.google.cloud.ServiceOptions.getDefaultHost()"
  name: "ServiceOptions.getDefaultHost()"
  nameWithType: "ServiceOptions.getDefaultHost()"
  fullName: "com.google.cloud.ServiceOptions.getDefaultHost()"
- uid: "com.google.cloud.ServiceOptions.<B>toBuilder()"
  name: "ServiceOptions.<B>toBuilder()"
  nameWithType: "ServiceOptions.<B>toBuilder()"
  fullName: "com.google.cloud.ServiceOptions.<B>toBuilder()"
- uid: "com.google.cloud.ServiceOptions.shouldRefreshRpc(com.google.cloud.ServiceRpc)"
  name: "ServiceOptions.shouldRefreshRpc(ServiceRpc)"
  nameWithType: "ServiceOptions.shouldRefreshRpc(ServiceRpc)"
  fullName: "com.google.cloud.ServiceOptions.shouldRefreshRpc(com.google.cloud.ServiceRpc)"
- uid: "com.google.cloud.ServiceOptions.getGoogApiClientLibName()"
  name: "ServiceOptions.getGoogApiClientLibName()"
  nameWithType: "ServiceOptions.getGoogApiClientLibName()"
  fullName: "com.google.cloud.ServiceOptions.getGoogApiClientLibName()"
- uid: "com.google.cloud.ServiceOptions.getQuotaProjectId()"
  name: "ServiceOptions.getQuotaProjectId()"
  nameWithType: "ServiceOptions.getQuotaProjectId()"
  fullName: "com.google.cloud.ServiceOptions.getQuotaProjectId()"
- uid: "com.google.cloud.ServiceOptions.getCredentials()"
  name: "ServiceOptions.getCredentials()"
  nameWithType: "ServiceOptions.getCredentials()"
  fullName: "com.google.cloud.ServiceOptions.getCredentials()"
- uid: "com.google.cloud.ServiceOptions.getMergedHeaderProvider(com.google.api.gax.rpc.HeaderProvider)"
  name: "ServiceOptions.getMergedHeaderProvider(HeaderProvider)"
  nameWithType: "ServiceOptions.getMergedHeaderProvider(HeaderProvider)"
  fullName: "com.google.cloud.ServiceOptions.getMergedHeaderProvider(com.google.api.gax.rpc.HeaderProvider)"
- uid: "com.google.cloud.ServiceOptions.getApplicationName()"
  name: "ServiceOptions.getApplicationName()"
  nameWithType: "ServiceOptions.getApplicationName()"
  fullName: "com.google.cloud.ServiceOptions.getApplicationName()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "com.google.cloud.ServiceOptions.getLibraryName()"
  name: "ServiceOptions.getLibraryName()"
  nameWithType: "ServiceOptions.getLibraryName()"
  fullName: "com.google.cloud.ServiceOptions.getLibraryName()"
- uid: "com.google.cloud.ServiceOptions.getRetrySettings()"
  name: "ServiceOptions.getRetrySettings()"
  nameWithType: "ServiceOptions.getRetrySettings()"
  fullName: "com.google.cloud.ServiceOptions.getRetrySettings()"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "com.google.cloud.ServiceOptions.<T>newInstance(java.lang.String)"
  name: "ServiceOptions.<T>newInstance(String)"
  nameWithType: "ServiceOptions.<T>newInstance(String)"
  fullName: "com.google.cloud.ServiceOptions.<T>newInstance(java.lang.String)"
- uid: "com.google.cloud.ServiceOptions.getService()"
  name: "ServiceOptions.getService()"
  nameWithType: "ServiceOptions.getService()"
  fullName: "com.google.cloud.ServiceOptions.getService()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "com.google.cloud.ServiceOptions.projectIdRequired()"
  name: "ServiceOptions.projectIdRequired()"
  nameWithType: "ServiceOptions.projectIdRequired()"
  fullName: "com.google.cloud.ServiceOptions.projectIdRequired()"
- uid: "com.google.cloud.ServiceOptions.getAppEngineAppId()"
  name: "ServiceOptions.getAppEngineAppId()"
  nameWithType: "ServiceOptions.getAppEngineAppId()"
  fullName: "com.google.cloud.ServiceOptions.getAppEngineAppId()"
- uid: "com.google.cloud.ServiceOptions.getRpc()"
  name: "ServiceOptions.getRpc()"
  nameWithType: "ServiceOptions.getRpc()"
  fullName: "com.google.cloud.ServiceOptions.getRpc()"
- uid: "com.google.cloud.ServiceOptions.getScopedCredentials()"
  name: "ServiceOptions.getScopedCredentials()"
  nameWithType: "ServiceOptions.getScopedCredentials()"
  fullName: "com.google.cloud.ServiceOptions.getScopedCredentials()"
- uid: "com.google.cloud.ServiceOptions.getNoRetrySettings()"
  name: "ServiceOptions.getNoRetrySettings()"
  nameWithType: "ServiceOptions.getNoRetrySettings()"
  fullName: "com.google.cloud.ServiceOptions.getNoRetrySettings()"
- uid: "com.google.cloud.ServiceOptions.getProjectId()"
  name: "ServiceOptions.getProjectId()"
  nameWithType: "ServiceOptions.getProjectId()"
  fullName: "com.google.cloud.ServiceOptions.getProjectId()"
- uid: "com.google.cloud.ServiceOptions.getServiceAccountProjectId()"
  name: "ServiceOptions.getServiceAccountProjectId()"
  nameWithType: "ServiceOptions.getServiceAccountProjectId()"
  fullName: "com.google.cloud.ServiceOptions.getServiceAccountProjectId()"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "com.google.cloud.ServiceOptions.getTransportOptions()"
  name: "ServiceOptions.getTransportOptions()"
  nameWithType: "ServiceOptions.getTransportOptions()"
  fullName: "com.google.cloud.ServiceOptions.getTransportOptions()"
- uid: "com.google.cloud.ServiceOptions.getAppEngineProjectIdFromAppId()"
  name: "ServiceOptions.getAppEngineProjectIdFromAppId()"
  nameWithType: "ServiceOptions.getAppEngineProjectIdFromAppId()"
  fullName: "com.google.cloud.ServiceOptions.getAppEngineProjectIdFromAppId()"
- uid: "com.google.cloud.ServiceOptions.<T>getFromServiceLoader(java.lang.Class<? extends T>,T)"
  name: "ServiceOptions.<T>getFromServiceLoader(Class<? extends T>,T)"
  nameWithType: "ServiceOptions.<T>getFromServiceLoader(Class<? extends T>,T)"
  fullName: "com.google.cloud.ServiceOptions.<T>getFromServiceLoader(java.lang.Class<? extends T>,T)"
- uid: "com.google.cloud.ServiceOptions.getGoogleCloudProjectId()"
  name: "ServiceOptions.getGoogleCloudProjectId()"
  nameWithType: "ServiceOptions.getGoogleCloudProjectId()"
  fullName: "com.google.cloud.ServiceOptions.getGoogleCloudProjectId()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "com.google.cloud.ServiceOptions.getClock()"
  name: "ServiceOptions.getClock()"
  nameWithType: "ServiceOptions.getClock()"
  fullName: "com.google.cloud.ServiceOptions.getClock()"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "com.google.cloud.ServiceOptions.shouldRefreshService(ServiceT)"
  name: "ServiceOptions.shouldRefreshService(ServiceT)"
  nameWithType: "ServiceOptions.shouldRefreshService(ServiceT)"
  fullName: "com.google.cloud.ServiceOptions.shouldRefreshService(ServiceT)"
- uid: "com.google.cloud.ServiceOptions.getDefaultProjectId()"
  name: "ServiceOptions.getDefaultProjectId()"
  nameWithType: "ServiceOptions.getDefaultProjectId()"
  fullName: "com.google.cloud.ServiceOptions.getDefaultProjectId()"
- uid: "com.google.cloud.ServiceOptions.getDefaultProject()"
  name: "ServiceOptions.getDefaultProject()"
  nameWithType: "ServiceOptions.getDefaultProject()"
  fullName: "com.google.cloud.ServiceOptions.getDefaultProject()"
- uid: "com.google.cloud.ServiceOptions.defaultRetrySettings()"
  name: "ServiceOptions.defaultRetrySettings()"
  nameWithType: "ServiceOptions.defaultRetrySettings()"
  fullName: "com.google.cloud.ServiceOptions.defaultRetrySettings()"
- uid: "com.google.cloud.ServiceOptions.getAppEngineProjectId()"
  name: "ServiceOptions.getAppEngineProjectId()"
  nameWithType: "ServiceOptions.getAppEngineProjectId()"
  fullName: "com.google.cloud.ServiceOptions.getAppEngineProjectId()"
- uid: "com.google.cloud.ServiceOptions.getScopes()"
  name: "ServiceOptions.getScopes()"
  nameWithType: "ServiceOptions.getScopes()"
  fullName: "com.google.cloud.ServiceOptions.getScopes()"
- uid: "com.google.cloud.ServiceOptions.baseEquals(com.google.cloud.ServiceOptions<?,?>)"
  name: "ServiceOptions.baseEquals(ServiceOptions<?,?>)"
  nameWithType: "ServiceOptions.baseEquals(ServiceOptions<?,?>)"
  fullName: "com.google.cloud.ServiceOptions.baseEquals(com.google.cloud.ServiceOptions<?,?>)"
- uid: "com.google.cloud.ServiceOptions.baseHashCode()"
  name: "ServiceOptions.baseHashCode()"
  nameWithType: "ServiceOptions.baseHashCode()"
  fullName: "com.google.cloud.ServiceOptions.baseHashCode()"
- uid: "com.google.cloud.ServiceOptions.getHost()"
  name: "ServiceOptions.getHost()"
  nameWithType: "ServiceOptions.getHost()"
  fullName: "com.google.cloud.ServiceOptions.getHost()"
- uid: "com.google.cloud.bigquery.BigQueryOptions.DefaultBigQueryFactory"
  name: "BigQueryOptions.DefaultBigQueryFactory"
  nameWithType: "BigQueryOptions.DefaultBigQueryFactory"
  fullName: "com.google.cloud.bigquery.BigQueryOptions.DefaultBigQueryFactory"
- uid: "com.google.cloud.bigquery.BigQueryOptions.DefaultBigQueryRpcFactory"
  name: "BigQueryOptions.DefaultBigQueryRpcFactory"
  nameWithType: "BigQueryOptions.DefaultBigQueryRpcFactory"
  fullName: "com.google.cloud.bigquery.BigQueryOptions.DefaultBigQueryRpcFactory"
- uid: "java.util.Set"
  name: "Set"
  nameWithType: "Set"
  fullName: "java.util.Set"
- uid: "com.google.cloud.bigquery.BigQuery,com.google.cloud.bigquery.BigQueryOptions"
  name: "BigQuery,BigQueryOptions"
  nameWithType: "BigQuery,BigQueryOptions"
  fullName: "com.google.cloud.bigquery.BigQuery,com.google.cloud.bigquery.BigQueryOptions"
- uid: "com.google.cloud.ServiceOptions"
  name: "ServiceOptions"
  nameWithType: "ServiceOptions"
  fullName: "com.google.cloud.ServiceOptions"
- uid: "com.google.cloud.ServiceOptions."
  name: "ServiceOptions."
  nameWithType: "ServiceOptions."
  fullName: "com.google.cloud.ServiceOptions."
- uid: "B>toBuilder()"
  name: "B>toBuilder()"
  nameWithType: "B>toBuilder()"
  fullName: "B>toBuilder()"
- uid: "T>newInstance(java.lang.String)"
  name: "T>newInstance(String)"
  nameWithType: "T>newInstance(String)"
  fullName: "T>newInstance(java.lang.String)"
- uid: "? extends T>,T)"
  name: "? extends T>,T)"
  nameWithType: "? extends T>,T)"
  fullName: "? extends T>,T)"
- uid: "T>getFromServiceLoader(java.lang.Class"
  name: "T>getFromServiceLoader(Class"
  nameWithType: "T>getFromServiceLoader(Class"
  fullName: "T>getFromServiceLoader(java.lang.Class"
- uid: "?,?>)"
  name: "?,?>)"
  nameWithType: "?,?>)"
  fullName: "?,?>)"
- uid: "com.google.cloud.ServiceOptions.baseEquals(com.google.cloud.ServiceOptions"
  name: "ServiceOptions.baseEquals(ServiceOptions"
  nameWithType: "ServiceOptions.baseEquals(ServiceOptions"
  fullName: "com.google.cloud.ServiceOptions.baseEquals(com.google.cloud.ServiceOptions"
