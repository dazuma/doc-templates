### YamlMime:ManagedReference
items:
- uid: Google.Cloud.Spanner.V1.PlanNode.Types.ShortRepresentation
  commentId: T:Google.Cloud.Spanner.V1.PlanNode.Types.ShortRepresentation
  id: PlanNode.Types.ShortRepresentation
  parent: Google.Cloud.Spanner.V1
  children:
  - Google.Cloud.Spanner.V1.PlanNode.Types.ShortRepresentation.#ctor
  - Google.Cloud.Spanner.V1.PlanNode.Types.ShortRepresentation.#ctor(Google.Cloud.Spanner.V1.PlanNode.Types.ShortRepresentation)
  - Google.Cloud.Spanner.V1.PlanNode.Types.ShortRepresentation.Description
  - Google.Cloud.Spanner.V1.PlanNode.Types.ShortRepresentation.Subqueries
  langs:
  - csharp
  - vb
  name: PlanNode.Types.ShortRepresentation
  nameWithType: PlanNode.Types.ShortRepresentation
  fullName: Google.Cloud.Spanner.V1.PlanNode.Types.ShortRepresentation
  type: Class
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/QueryPlan.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: ShortRepresentation
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/QueryPlan.cs
    startLine: 800
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nCondensed representation of a node and its subtree. Only present for\n`SCALAR` [PlanNode(s)][google.spanner.v1.PlanNode].\n"
  example: []
  syntax:
    content: 'public sealed class ShortRepresentation : IMessage<PlanNode.Types.ShortRepresentation>, IEquatable<PlanNode.Types.ShortRepresentation>, IDeepCloneable<PlanNode.Types.ShortRepresentation>, IBufferMessage, IMessage'
    content.vb: >-
      Public NotInheritable Class ShortRepresentation
          Implements IMessage(Of PlanNode.Types.ShortRepresentation), IEquatable(Of PlanNode.Types.ShortRepresentation), IDeepCloneable(Of PlanNode.Types.ShortRepresentation), IBufferMessage, IMessage
  inheritance:
  - System.Object
  implements:
  - Google.Protobuf.IMessage{Google.Cloud.Spanner.V1.PlanNode.Types.ShortRepresentation}
  - System.IEquatable{Google.Cloud.Spanner.V1.PlanNode.Types.ShortRepresentation}
  - Google.Protobuf.IDeepCloneable{Google.Cloud.Spanner.V1.PlanNode.Types.ShortRepresentation}
  - Google.Protobuf.IBufferMessage
  - Google.Protobuf.IMessage
  inheritedMembers:
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Google.Cloud.Spanner.V1.PlanNode.Types.ShortRepresentation.#ctor
  commentId: M:Google.Cloud.Spanner.V1.PlanNode.Types.ShortRepresentation.#ctor
  id: '#ctor'
  parent: Google.Cloud.Spanner.V1.PlanNode.Types.ShortRepresentation
  langs:
  - csharp
  - vb
  name: ShortRepresentation()
  nameWithType: PlanNode.Types.ShortRepresentation.ShortRepresentation()
  fullName: Google.Cloud.Spanner.V1.PlanNode.Types.ShortRepresentation.ShortRepresentation()
  type: Constructor
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/QueryPlan.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: .ctor
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/QueryPlan.cs
    startLine: 820
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  syntax:
    content: public ShortRepresentation()
    content.vb: Public Sub New
  overload: Google.Cloud.Spanner.V1.PlanNode.Types.ShortRepresentation.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Cloud.Spanner.V1.PlanNode.Types.ShortRepresentation.#ctor(Google.Cloud.Spanner.V1.PlanNode.Types.ShortRepresentation)
  commentId: M:Google.Cloud.Spanner.V1.PlanNode.Types.ShortRepresentation.#ctor(Google.Cloud.Spanner.V1.PlanNode.Types.ShortRepresentation)
  id: '#ctor(Google.Cloud.Spanner.V1.PlanNode.Types.ShortRepresentation)'
  parent: Google.Cloud.Spanner.V1.PlanNode.Types.ShortRepresentation
  langs:
  - csharp
  - vb
  name: ShortRepresentation(PlanNode.Types.ShortRepresentation)
  nameWithType: PlanNode.Types.ShortRepresentation.ShortRepresentation(PlanNode.Types.ShortRepresentation)
  fullName: Google.Cloud.Spanner.V1.PlanNode.Types.ShortRepresentation.ShortRepresentation(Google.Cloud.Spanner.V1.PlanNode.Types.ShortRepresentation)
  type: Constructor
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/QueryPlan.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: .ctor
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/QueryPlan.cs
    startLine: 827
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  syntax:
    content: public ShortRepresentation(PlanNode.Types.ShortRepresentation other)
    parameters:
    - id: other
      type: Google.Cloud.Spanner.V1.PlanNode.Types.ShortRepresentation
    content.vb: Public Sub New(other As PlanNode.Types.ShortRepresentation)
  overload: Google.Cloud.Spanner.V1.PlanNode.Types.ShortRepresentation.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Cloud.Spanner.V1.PlanNode.Types.ShortRepresentation.Description
  commentId: P:Google.Cloud.Spanner.V1.PlanNode.Types.ShortRepresentation.Description
  id: Description
  parent: Google.Cloud.Spanner.V1.PlanNode.Types.ShortRepresentation
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: PlanNode.Types.ShortRepresentation.Description
  fullName: Google.Cloud.Spanner.V1.PlanNode.Types.ShortRepresentation.Description
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/QueryPlan.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: Description
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/QueryPlan.cs
    startLine: 845
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nA string representation of the expression subtree rooted at this node.\n"
  example: []
  syntax:
    content: public string Description { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Description As String
  overload: Google.Cloud.Spanner.V1.PlanNode.Types.ShortRepresentation.Description*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Cloud.Spanner.V1.PlanNode.Types.ShortRepresentation.Subqueries
  commentId: P:Google.Cloud.Spanner.V1.PlanNode.Types.ShortRepresentation.Subqueries
  id: Subqueries
  parent: Google.Cloud.Spanner.V1.PlanNode.Types.ShortRepresentation
  langs:
  - csharp
  - vb
  name: Subqueries
  nameWithType: PlanNode.Types.ShortRepresentation.Subqueries
  fullName: Google.Cloud.Spanner.V1.PlanNode.Types.ShortRepresentation.Subqueries
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/QueryPlan.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: Subqueries
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/QueryPlan.cs
    startLine: 865
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nA mapping of (subquery variable name) -> (subquery node id) for cases\nwhere the `description` string of this node references a `SCALAR`\nsubquery contained in the expression subtree rooted at this node. The\nreferenced `SCALAR` subquery may not necessarily be a direct child of\nthis node.\n"
  example: []
  syntax:
    content: public MapField<string, int> Subqueries { get; }
    parameters: []
    return:
      type: Google.Protobuf.Collections.MapField{System.String,System.Int32}
    content.vb: Public ReadOnly Property Subqueries As MapField(Of String, Integer)
  overload: Google.Cloud.Spanner.V1.PlanNode.Types.ShortRepresentation.Subqueries*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Google.Cloud.Spanner.V1
  commentId: N:Google.Cloud.Spanner.V1
  name: Google.Cloud.Spanner.V1
  nameWithType: Google.Cloud.Spanner.V1
  fullName: Google.Cloud.Spanner.V1
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Google.Protobuf.IMessage{Google.Cloud.Spanner.V1.PlanNode.Types.ShortRepresentation}
  commentId: T:Google.Protobuf.IMessage{Google.Cloud.Spanner.V1.PlanNode.Types.ShortRepresentation}
  parent: Google.Protobuf
  definition: Google.Protobuf.IMessage`1
  name: IMessage<PlanNode.Types.ShortRepresentation>
  nameWithType: IMessage<PlanNode.Types.ShortRepresentation>
  fullName: Google.Protobuf.IMessage<Google.Cloud.Spanner.V1.PlanNode.Types.ShortRepresentation>
  nameWithType.vb: IMessage(Of PlanNode.Types.ShortRepresentation)
  fullName.vb: Google.Protobuf.IMessage(Of Google.Cloud.Spanner.V1.PlanNode.Types.ShortRepresentation)
  name.vb: IMessage(Of PlanNode.Types.ShortRepresentation)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Spanner.V1.PlanNode.Types.ShortRepresentation
    name: PlanNode.Types.ShortRepresentation
    nameWithType: PlanNode.Types.ShortRepresentation
    fullName: Google.Cloud.Spanner.V1.PlanNode.Types.ShortRepresentation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Spanner.V1.PlanNode.Types.ShortRepresentation
    name: PlanNode.Types.ShortRepresentation
    nameWithType: PlanNode.Types.ShortRepresentation
    fullName: Google.Cloud.Spanner.V1.PlanNode.Types.ShortRepresentation
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable{Google.Cloud.Spanner.V1.PlanNode.Types.ShortRepresentation}
  commentId: T:System.IEquatable{Google.Cloud.Spanner.V1.PlanNode.Types.ShortRepresentation}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<PlanNode.Types.ShortRepresentation>
  nameWithType: IEquatable<PlanNode.Types.ShortRepresentation>
  fullName: System.IEquatable<Google.Cloud.Spanner.V1.PlanNode.Types.ShortRepresentation>
  nameWithType.vb: IEquatable(Of PlanNode.Types.ShortRepresentation)
  fullName.vb: System.IEquatable(Of Google.Cloud.Spanner.V1.PlanNode.Types.ShortRepresentation)
  name.vb: IEquatable(Of PlanNode.Types.ShortRepresentation)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Spanner.V1.PlanNode.Types.ShortRepresentation
    name: PlanNode.Types.ShortRepresentation
    nameWithType: PlanNode.Types.ShortRepresentation
    fullName: Google.Cloud.Spanner.V1.PlanNode.Types.ShortRepresentation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Spanner.V1.PlanNode.Types.ShortRepresentation
    name: PlanNode.Types.ShortRepresentation
    nameWithType: PlanNode.Types.ShortRepresentation
    fullName: Google.Cloud.Spanner.V1.PlanNode.Types.ShortRepresentation
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IDeepCloneable{Google.Cloud.Spanner.V1.PlanNode.Types.ShortRepresentation}
  commentId: T:Google.Protobuf.IDeepCloneable{Google.Cloud.Spanner.V1.PlanNode.Types.ShortRepresentation}
  parent: Google.Protobuf
  definition: Google.Protobuf.IDeepCloneable`1
  name: IDeepCloneable<PlanNode.Types.ShortRepresentation>
  nameWithType: IDeepCloneable<PlanNode.Types.ShortRepresentation>
  fullName: Google.Protobuf.IDeepCloneable<Google.Cloud.Spanner.V1.PlanNode.Types.ShortRepresentation>
  nameWithType.vb: IDeepCloneable(Of PlanNode.Types.ShortRepresentation)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of Google.Cloud.Spanner.V1.PlanNode.Types.ShortRepresentation)
  name.vb: IDeepCloneable(Of PlanNode.Types.ShortRepresentation)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Spanner.V1.PlanNode.Types.ShortRepresentation
    name: PlanNode.Types.ShortRepresentation
    nameWithType: PlanNode.Types.ShortRepresentation
    fullName: Google.Cloud.Spanner.V1.PlanNode.Types.ShortRepresentation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Spanner.V1.PlanNode.Types.ShortRepresentation
    name: PlanNode.Types.ShortRepresentation
    nameWithType: PlanNode.Types.ShortRepresentation
    fullName: Google.Cloud.Spanner.V1.PlanNode.Types.ShortRepresentation
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IBufferMessage
  commentId: T:Google.Protobuf.IBufferMessage
  parent: Google.Protobuf
  isExternal: true
  name: IBufferMessage
  nameWithType: IBufferMessage
  fullName: Google.Protobuf.IBufferMessage
- uid: Google.Protobuf.IMessage
  commentId: T:Google.Protobuf.IMessage
  parent: Google.Protobuf
  isExternal: true
  name: IMessage
  nameWithType: IMessage
  fullName: Google.Protobuf.IMessage
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Protobuf.IMessage`1
  commentId: T:Google.Protobuf.IMessage`1
  isExternal: true
  name: IMessage<T>
  nameWithType: IMessage<T>
  fullName: Google.Protobuf.IMessage<T>
  nameWithType.vb: IMessage(Of T)
  fullName.vb: Google.Protobuf.IMessage(Of T)
  name.vb: IMessage(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf
  commentId: N:Google.Protobuf
  isExternal: true
  name: Google.Protobuf
  nameWithType: Google.Protobuf
  fullName: Google.Protobuf
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IDeepCloneable`1
  commentId: T:Google.Protobuf.IDeepCloneable`1
  isExternal: true
  name: IDeepCloneable<T>
  nameWithType: IDeepCloneable<T>
  fullName: Google.Protobuf.IDeepCloneable<T>
  nameWithType.vb: IDeepCloneable(Of T)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of T)
  name.vb: IDeepCloneable(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Cloud.Spanner.V1.PlanNode.Types.ShortRepresentation.#ctor*
  commentId: Overload:Google.Cloud.Spanner.V1.PlanNode.Types.ShortRepresentation.#ctor
  name: ShortRepresentation
  nameWithType: PlanNode.Types.ShortRepresentation.ShortRepresentation
  fullName: Google.Cloud.Spanner.V1.PlanNode.Types.ShortRepresentation.ShortRepresentation
- uid: Google.Cloud.Spanner.V1.PlanNode.Types.ShortRepresentation
  commentId: T:Google.Cloud.Spanner.V1.PlanNode.Types.ShortRepresentation
  parent: Google.Cloud.Spanner.V1
  name: PlanNode.Types.ShortRepresentation
  nameWithType: PlanNode.Types.ShortRepresentation
  fullName: Google.Cloud.Spanner.V1.PlanNode.Types.ShortRepresentation
- uid: Google.Cloud.Spanner.V1.PlanNode.Types.ShortRepresentation.Description*
  commentId: Overload:Google.Cloud.Spanner.V1.PlanNode.Types.ShortRepresentation.Description
  name: Description
  nameWithType: PlanNode.Types.ShortRepresentation.Description
  fullName: Google.Cloud.Spanner.V1.PlanNode.Types.ShortRepresentation.Description
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Google.Cloud.Spanner.V1.PlanNode.Types.ShortRepresentation.Subqueries*
  commentId: Overload:Google.Cloud.Spanner.V1.PlanNode.Types.ShortRepresentation.Subqueries
  name: Subqueries
  nameWithType: PlanNode.Types.ShortRepresentation.Subqueries
  fullName: Google.Cloud.Spanner.V1.PlanNode.Types.ShortRepresentation.Subqueries
- uid: Google.Protobuf.Collections.MapField{System.String,System.Int32}
  commentId: T:Google.Protobuf.Collections.MapField{System.String,System.Int32}
  parent: Google.Protobuf.Collections
  definition: Google.Protobuf.Collections.MapField`2
  name: MapField<String, Int32>
  nameWithType: MapField<String, Int32>
  fullName: Google.Protobuf.Collections.MapField<System.String, System.Int32>
  nameWithType.vb: MapField(Of String, Int32)
  fullName.vb: Google.Protobuf.Collections.MapField(Of System.String, System.Int32)
  name.vb: MapField(Of String, Int32)
  spec.csharp:
  - uid: Google.Protobuf.Collections.MapField`2
    name: MapField
    nameWithType: MapField
    fullName: Google.Protobuf.Collections.MapField
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.Collections.MapField`2
    name: MapField
    nameWithType: MapField
    fullName: Google.Protobuf.Collections.MapField
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.Collections.MapField`2
  commentId: T:Google.Protobuf.Collections.MapField`2
  isExternal: true
  name: MapField<TKey, TValue>
  nameWithType: MapField<TKey, TValue>
  fullName: Google.Protobuf.Collections.MapField<TKey, TValue>
  nameWithType.vb: MapField(Of TKey, TValue)
  fullName.vb: Google.Protobuf.Collections.MapField(Of TKey, TValue)
  name.vb: MapField(Of TKey, TValue)
  spec.csharp:
  - uid: Google.Protobuf.Collections.MapField`2
    name: MapField
    nameWithType: MapField
    fullName: Google.Protobuf.Collections.MapField
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.Collections.MapField`2
    name: MapField
    nameWithType: MapField
    fullName: Google.Protobuf.Collections.MapField
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.Collections
  commentId: N:Google.Protobuf.Collections
  isExternal: true
  name: Google.Protobuf.Collections
  nameWithType: Google.Protobuf.Collections
  fullName: Google.Protobuf.Collections
