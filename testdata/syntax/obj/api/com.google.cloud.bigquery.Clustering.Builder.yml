### YamlMime:ManagedReference
items:
- uid: "com.google.cloud.bigquery.Clustering.Builder"
  id: "Builder"
  parent: "com.google.cloud.bigquery"
  children:
  - "com.google.cloud.bigquery.Clustering.Builder.Builder()"
  - "com.google.cloud.bigquery.Clustering.Builder.build()"
  - "com.google.cloud.bigquery.Clustering.Builder.setFields(java.util.List<java.lang.String>)"
  langs:
  - "java"
  name: "Clustering.Builder"
  nameWithType: "Clustering.Builder"
  fullName: "com.google.cloud.bigquery.Clustering.Builder"
  type: "Class"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public abstract static class Clustering.Builder"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.google.cloud.bigquery.Clustering.Builder.Builder()"
  id: "Builder()"
  parent: "com.google.cloud.bigquery.Clustering.Builder"
  langs:
  - "java"
  name: "Builder()"
  nameWithType: "Clustering.Builder.Builder()"
  fullName: "com.google.cloud.bigquery.Clustering.Builder.Builder()"
  overload: "com.google.cloud.bigquery.Clustering.Builder.Builder*"
  type: "Constructor"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public Builder()"
- uid: "com.google.cloud.bigquery.Clustering.Builder.build()"
  id: "build()"
  parent: "com.google.cloud.bigquery.Clustering.Builder"
  langs:
  - "java"
  name: "build()"
  nameWithType: "Clustering.Builder.build()"
  fullName: "com.google.cloud.bigquery.Clustering.Builder.build()"
  overload: "com.google.cloud.bigquery.Clustering.Builder.build*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public abstract Clustering build()"
    return:
      type: "com.google.cloud.bigquery.Clustering"
- uid: "com.google.cloud.bigquery.Clustering.Builder.setFields(java.util.List<java.lang.String>)"
  id: "setFields(java.util.List<java.lang.String>)"
  parent: "com.google.cloud.bigquery.Clustering.Builder"
  langs:
  - "java"
  name: "setFields(List<String> fields)"
  nameWithType: "Clustering.Builder.setFields(List<String> fields)"
  fullName: "com.google.cloud.bigquery.Clustering.Builder.setFields(List<String> fields)"
  overload: "com.google.cloud.bigquery.Clustering.Builder.setFields*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public Clustering.Builder setFields(List<String> fields)"
    parameters:
    - id: "fields"
      type: "java.util.List<java.lang.String>"
    return:
      type: "com.google.cloud.bigquery.Clustering.Builder"
references:
- uid: "com.google.cloud.bigquery.Clustering.Builder.Builder*"
  name: "Builder"
  nameWithType: "Clustering.Builder.Builder"
  fullName: "com.google.cloud.bigquery.Clustering.Builder.Builder"
  package: "com.google.cloud.bigquery"
- uid: "java.util.List<java.lang.String>"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ">"
    fullName: ">"
- uid: "com.google.cloud.bigquery.Clustering.Builder.setFields*"
  name: "setFields"
  nameWithType: "Clustering.Builder.setFields"
  fullName: "com.google.cloud.bigquery.Clustering.Builder.setFields"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.Clustering"
  name: "Clustering"
  nameWithType: "Clustering"
  fullName: "com.google.cloud.bigquery.Clustering"
- uid: "com.google.cloud.bigquery.Clustering.Builder.build*"
  name: "build"
  nameWithType: "Clustering.Builder.build"
  fullName: "com.google.cloud.bigquery.Clustering.Builder.build"
  package: "com.google.cloud.bigquery"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.util.List"
  name: "List"
  nameWithType: "List"
  fullName: "java.util.List"
- uid: "java.lang.String"
  name: "String"
  nameWithType: "String"
  fullName: "java.lang.String"
