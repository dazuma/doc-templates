### YamlMime:ManagedReference
items:
- uid: "com.google.cloud.bigquery.JobId"
  id: "JobId"
  parent: "com.google.cloud.bigquery"
  children:
  - "com.google.cloud.bigquery.JobId.Builder"
  - "com.google.cloud.bigquery.JobId.getJob()"
  - "com.google.cloud.bigquery.JobId.getLocation()"
  - "com.google.cloud.bigquery.JobId.getProject()"
  - "com.google.cloud.bigquery.JobId.newBuilder()"
  - "com.google.cloud.bigquery.JobId.of()"
  - "com.google.cloud.bigquery.JobId.of(java.lang.String)"
  - "com.google.cloud.bigquery.JobId.of(java.lang.String,java.lang.String)"
  - "com.google.cloud.bigquery.JobId.toBuilder()"
  langs:
  - "java"
  name: "JobId"
  nameWithType: "JobId"
  fullName: "com.google.cloud.bigquery.JobId"
  type: "Class"
  package: "com.google.cloud.bigquery"
  summary: "Google BigQuery Job identity."
  syntax:
    content: "public abstract class JobId implements Serializable"
  inheritance:
  - "java.lang.Object"
  implements:
  - "java.io.Serializable"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.google.cloud.bigquery.JobId.JobId()"
  id: "JobId()"
  parent: "com.google.cloud.bigquery.JobId"
  langs:
  - "java"
  name: "JobId()"
  nameWithType: "JobId.JobId()"
  fullName: "com.google.cloud.bigquery.JobId.JobId()"
  overload: "com.google.cloud.bigquery.JobId.JobId*"
  type: "Constructor"
  package: "com.google.cloud.bigquery"
  syntax:
    content: " JobId()"
- uid: "com.google.cloud.bigquery.JobId.getJob()"
  id: "getJob()"
  parent: "com.google.cloud.bigquery.JobId"
  langs:
  - "java"
  name: "getJob()"
  nameWithType: "JobId.getJob()"
  fullName: "com.google.cloud.bigquery.JobId.getJob()"
  overload: "com.google.cloud.bigquery.JobId.getJob*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns the job's id.\n\nThe server returns null job id for dry-run queries."
  syntax:
    content: "public abstract String getJob()"
    return:
      type: "java.lang.String"
- uid: "com.google.cloud.bigquery.JobId.getLocation()"
  id: "getLocation()"
  parent: "com.google.cloud.bigquery.JobId"
  langs:
  - "java"
  name: "getLocation()"
  nameWithType: "JobId.getLocation()"
  fullName: "com.google.cloud.bigquery.JobId.getLocation()"
  overload: "com.google.cloud.bigquery.JobId.getLocation*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns the job's location.\n\nWhen sending requests, the location must be specified for jobs whose location not \"US\" or \"EU\"."
  syntax:
    content: "public abstract String getLocation()"
    return:
      type: "java.lang.String"
- uid: "com.google.cloud.bigquery.JobId.getProject()"
  id: "getProject()"
  parent: "com.google.cloud.bigquery.JobId"
  langs:
  - "java"
  name: "getProject()"
  nameWithType: "JobId.getProject()"
  fullName: "com.google.cloud.bigquery.JobId.getProject()"
  overload: "com.google.cloud.bigquery.JobId.getProject*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns job's project id.\n\nWhen sending requests with null project, the client will attempt to infer the project name from the environment."
  syntax:
    content: "public abstract String getProject()"
    return:
      type: "java.lang.String"
- uid: "com.google.cloud.bigquery.JobId.newBuilder()"
  id: "newBuilder()"
  parent: "com.google.cloud.bigquery.JobId"
  langs:
  - "java"
  name: "newBuilder()"
  nameWithType: "JobId.newBuilder()"
  fullName: "com.google.cloud.bigquery.JobId.newBuilder()"
  overload: "com.google.cloud.bigquery.JobId.newBuilder*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public static JobId.Builder newBuilder()"
    return:
      type: "com.google.cloud.bigquery.JobId.Builder"
- uid: "com.google.cloud.bigquery.JobId.of()"
  id: "of()"
  parent: "com.google.cloud.bigquery.JobId"
  langs:
  - "java"
  name: "of()"
  nameWithType: "JobId.of()"
  fullName: "com.google.cloud.bigquery.JobId.of()"
  overload: "com.google.cloud.bigquery.JobId.of*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Creates a job identity with autogenerated id and no project specified."
  syntax:
    content: "public static JobId of()"
    return:
      type: "com.google.cloud.bigquery.JobId"
- uid: "com.google.cloud.bigquery.JobId.of(java.lang.String)"
  id: "of(java.lang.String)"
  parent: "com.google.cloud.bigquery.JobId"
  langs:
  - "java"
  name: "of(String job)"
  nameWithType: "JobId.of(String job)"
  fullName: "com.google.cloud.bigquery.JobId.of(String job)"
  overload: "com.google.cloud.bigquery.JobId.of*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Creates a job identity given only its user-defined id."
  syntax:
    content: "public static JobId of(String job)"
    parameters:
    - id: "job"
      type: "java.lang.String"
    return:
      type: "com.google.cloud.bigquery.JobId"
- uid: "com.google.cloud.bigquery.JobId.of(java.lang.String,java.lang.String)"
  id: "of(java.lang.String,java.lang.String)"
  parent: "com.google.cloud.bigquery.JobId"
  langs:
  - "java"
  name: "of(String project, String job)"
  nameWithType: "JobId.of(String project, String job)"
  fullName: "com.google.cloud.bigquery.JobId.of(String project, String job)"
  overload: "com.google.cloud.bigquery.JobId.of*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Creates a job identity given project's and job's user-defined id."
  syntax:
    content: "public static JobId of(String project, String job)"
    parameters:
    - id: "project"
      type: "java.lang.String"
    - id: "job"
      type: "java.lang.String"
    return:
      type: "com.google.cloud.bigquery.JobId"
- uid: "com.google.cloud.bigquery.JobId.toBuilder()"
  id: "toBuilder()"
  parent: "com.google.cloud.bigquery.JobId"
  langs:
  - "java"
  name: "toBuilder()"
  nameWithType: "JobId.toBuilder()"
  fullName: "com.google.cloud.bigquery.JobId.toBuilder()"
  overload: "com.google.cloud.bigquery.JobId.toBuilder*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public abstract JobId.Builder toBuilder()"
    return:
      type: "com.google.cloud.bigquery.JobId.Builder"
references:
- uid: "com.google.cloud.bigquery.JobId.JobId*"
  name: "JobId"
  nameWithType: "JobId.JobId"
  fullName: "com.google.cloud.bigquery.JobId.JobId"
  package: "com.google.cloud.bigquery"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.google.cloud.bigquery.JobId.getProject*"
  name: "getProject"
  nameWithType: "JobId.getProject"
  fullName: "com.google.cloud.bigquery.JobId.getProject"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.JobId.getJob*"
  name: "getJob"
  nameWithType: "JobId.getJob"
  fullName: "com.google.cloud.bigquery.JobId.getJob"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.JobId.getLocation*"
  name: "getLocation"
  nameWithType: "JobId.getLocation"
  fullName: "com.google.cloud.bigquery.JobId.getLocation"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.JobId.Builder"
  name: "JobId.Builder"
  nameWithType: "JobId.Builder"
  fullName: "com.google.cloud.bigquery.JobId.Builder"
- uid: "com.google.cloud.bigquery.JobId.toBuilder*"
  name: "toBuilder"
  nameWithType: "JobId.toBuilder"
  fullName: "com.google.cloud.bigquery.JobId.toBuilder"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.JobId.newBuilder*"
  name: "newBuilder"
  nameWithType: "JobId.newBuilder"
  fullName: "com.google.cloud.bigquery.JobId.newBuilder"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.JobId.of*"
  name: "of"
  nameWithType: "JobId.of"
  fullName: "com.google.cloud.bigquery.JobId.of"
  package: "com.google.cloud.bigquery"
- uid: "java.io.Serializable"
  name: "Serializable"
  nameWithType: "Serializable"
  fullName: "java.io.Serializable"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
