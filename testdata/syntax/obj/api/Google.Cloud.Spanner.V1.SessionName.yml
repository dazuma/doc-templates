### YamlMime:ManagedReference
items:
- uid: Google.Cloud.Spanner.V1.SessionName
  commentId: T:Google.Cloud.Spanner.V1.SessionName
  id: SessionName
  parent: Google.Cloud.Spanner.V1
  children:
  - Google.Cloud.Spanner.V1.SessionName.#ctor(System.String,System.String,System.String,System.String)
  - Google.Cloud.Spanner.V1.SessionName.DatabaseId
  - Google.Cloud.Spanner.V1.SessionName.Format(System.String,System.String,System.String,System.String)
  - Google.Cloud.Spanner.V1.SessionName.FormatProjectInstanceDatabaseSession(System.String,System.String,System.String,System.String)
  - Google.Cloud.Spanner.V1.SessionName.FromProjectInstanceDatabaseSession(System.String,System.String,System.String,System.String)
  - Google.Cloud.Spanner.V1.SessionName.FromUnparsed(Google.Api.Gax.UnparsedResourceName)
  - Google.Cloud.Spanner.V1.SessionName.GetHashCode
  - Google.Cloud.Spanner.V1.SessionName.InstanceId
  - Google.Cloud.Spanner.V1.SessionName.IsKnownPattern
  - Google.Cloud.Spanner.V1.SessionName.op_Equality(Google.Cloud.Spanner.V1.SessionName,Google.Cloud.Spanner.V1.SessionName)
  - Google.Cloud.Spanner.V1.SessionName.op_Inequality(Google.Cloud.Spanner.V1.SessionName,Google.Cloud.Spanner.V1.SessionName)
  - Google.Cloud.Spanner.V1.SessionName.Parse(System.String)
  - Google.Cloud.Spanner.V1.SessionName.Parse(System.String,System.Boolean)
  - Google.Cloud.Spanner.V1.SessionName.ProjectId
  - Google.Cloud.Spanner.V1.SessionName.SessionId
  - Google.Cloud.Spanner.V1.SessionName.ToString
  - Google.Cloud.Spanner.V1.SessionName.TryParse(System.String,Google.Cloud.Spanner.V1.SessionName@)
  - Google.Cloud.Spanner.V1.SessionName.TryParse(System.String,System.Boolean,Google.Cloud.Spanner.V1.SessionName@)
  - Google.Cloud.Spanner.V1.SessionName.Type
  - Google.Cloud.Spanner.V1.SessionName.UnparsedResource
  langs:
  - csharp
  - vb
  name: SessionName
  nameWithType: SessionName
  fullName: Google.Cloud.Spanner.V1.SessionName
  type: Class
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerResourceNames.g.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: SessionName
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerResourceNames.g.cs
    startLine: 24
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: Resource name for the <code>Session</code> resource.
  example: []
  syntax:
    content: 'public sealed class SessionName : IResourceName, IEquatable<SessionName>'
    content.vb: >-
      Public NotInheritable Class SessionName
          Implements IResourceName, IEquatable(Of SessionName)
  inheritance:
  - System.Object
  implements:
  - Google.Api.Gax.IResourceName
  - System.IEquatable{Google.Cloud.Spanner.V1.SessionName}
  inheritedMembers:
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Google.Cloud.Spanner.V1.SessionName.FromUnparsed(Google.Api.Gax.UnparsedResourceName)
  commentId: M:Google.Cloud.Spanner.V1.SessionName.FromUnparsed(Google.Api.Gax.UnparsedResourceName)
  id: FromUnparsed(Google.Api.Gax.UnparsedResourceName)
  parent: Google.Cloud.Spanner.V1.SessionName
  langs:
  - csharp
  - vb
  name: FromUnparsed(UnparsedResourceName)
  nameWithType: SessionName.FromUnparsed(UnparsedResourceName)
  fullName: Google.Cloud.Spanner.V1.SessionName.FromUnparsed(Google.Api.Gax.UnparsedResourceName)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerResourceNames.g.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: FromUnparsed
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerResourceNames.g.cs
    startLine: 46
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: Creates a <xref href="Google.Cloud.Spanner.V1.SessionName" data-throw-if-not-resolved="false"></xref> containing an unparsed resource name.
  example: []
  syntax:
    content: public static SessionName FromUnparsed(UnparsedResourceName unparsedResourceName)
    parameters:
    - id: unparsedResourceName
      type: Google.Api.Gax.UnparsedResourceName
      description: The unparsed resource name. Must not be <code>null</code>.
    return:
      type: Google.Cloud.Spanner.V1.SessionName
      description: "\nA new instance of <xref href=\"Google.Cloud.Spanner.V1.SessionName\" data-throw-if-not-resolved=\"false\"></xref> containing the provided <code data-dev-comment-type=\"paramref\" class=\"paramref\">unparsedResourceName</code>.\n"
    content.vb: Public Shared Function FromUnparsed(unparsedResourceName As UnparsedResourceName) As SessionName
  overload: Google.Cloud.Spanner.V1.SessionName.FromUnparsed*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Google.Cloud.Spanner.V1.SessionName.FromProjectInstanceDatabaseSession(System.String,System.String,System.String,System.String)
  commentId: M:Google.Cloud.Spanner.V1.SessionName.FromProjectInstanceDatabaseSession(System.String,System.String,System.String,System.String)
  id: FromProjectInstanceDatabaseSession(System.String,System.String,System.String,System.String)
  parent: Google.Cloud.Spanner.V1.SessionName
  langs:
  - csharp
  - vb
  name: FromProjectInstanceDatabaseSession(String, String, String, String)
  nameWithType: SessionName.FromProjectInstanceDatabaseSession(String, String, String, String)
  fullName: Google.Cloud.Spanner.V1.SessionName.FromProjectInstanceDatabaseSession(System.String, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerResourceNames.g.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: FromProjectInstanceDatabaseSession
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerResourceNames.g.cs
    startLine: 58
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nCreates a <xref href=\"Google.Cloud.Spanner.V1.SessionName\" data-throw-if-not-resolved=\"false\"></xref> with the pattern\n<code>projects/{project}/instances/{instance}/databases/{database}/sessions/{session}</code>.\n"
  example: []
  syntax:
    content: public static SessionName FromProjectInstanceDatabaseSession(string projectId, string instanceId, string databaseId, string sessionId)
    parameters:
    - id: projectId
      type: System.String
      description: The <code>Project</code> ID. Must not be <code>null</code> or empty.
    - id: instanceId
      type: System.String
      description: The <code>Instance</code> ID. Must not be <code>null</code> or empty.
    - id: databaseId
      type: System.String
      description: The <code>Database</code> ID. Must not be <code>null</code> or empty.
    - id: sessionId
      type: System.String
      description: The <code>Session</code> ID. Must not be <code>null</code> or empty.
    return:
      type: Google.Cloud.Spanner.V1.SessionName
      description: A new instance of <xref href="Google.Cloud.Spanner.V1.SessionName" data-throw-if-not-resolved="false"></xref> constructed from the provided ids.
    content.vb: Public Shared Function FromProjectInstanceDatabaseSession(projectId As String, instanceId As String, databaseId As String, sessionId As String) As SessionName
  overload: Google.Cloud.Spanner.V1.SessionName.FromProjectInstanceDatabaseSession*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Google.Cloud.Spanner.V1.SessionName.Format(System.String,System.String,System.String,System.String)
  commentId: M:Google.Cloud.Spanner.V1.SessionName.Format(System.String,System.String,System.String,System.String)
  id: Format(System.String,System.String,System.String,System.String)
  parent: Google.Cloud.Spanner.V1.SessionName
  langs:
  - csharp
  - vb
  name: Format(String, String, String, String)
  nameWithType: SessionName.Format(String, String, String, String)
  fullName: Google.Cloud.Spanner.V1.SessionName.Format(System.String, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerResourceNames.g.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: Format
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerResourceNames.g.cs
    startLine: 73
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nFormats the IDs into the string representation of this <xref href=\"Google.Cloud.Spanner.V1.SessionName\" data-throw-if-not-resolved=\"false\"></xref> with pattern\n<code>projects/{project}/instances/{instance}/databases/{database}/sessions/{session}</code>.\n"
  example: []
  syntax:
    content: public static string Format(string projectId, string instanceId, string databaseId, string sessionId)
    parameters:
    - id: projectId
      type: System.String
      description: The <code>Project</code> ID. Must not be <code>null</code> or empty.
    - id: instanceId
      type: System.String
      description: The <code>Instance</code> ID. Must not be <code>null</code> or empty.
    - id: databaseId
      type: System.String
      description: The <code>Database</code> ID. Must not be <code>null</code> or empty.
    - id: sessionId
      type: System.String
      description: The <code>Session</code> ID. Must not be <code>null</code> or empty.
    return:
      type: System.String
      description: "\nThe string representation of this <xref href=\"Google.Cloud.Spanner.V1.SessionName\" data-throw-if-not-resolved=\"false\"></xref> with pattern\n<code>projects/{project}/instances/{instance}/databases/{database}/sessions/{session}</code>.\n"
    content.vb: Public Shared Function Format(projectId As String, instanceId As String, databaseId As String, sessionId As String) As String
  overload: Google.Cloud.Spanner.V1.SessionName.Format*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Google.Cloud.Spanner.V1.SessionName.FormatProjectInstanceDatabaseSession(System.String,System.String,System.String,System.String)
  commentId: M:Google.Cloud.Spanner.V1.SessionName.FormatProjectInstanceDatabaseSession(System.String,System.String,System.String,System.String)
  id: FormatProjectInstanceDatabaseSession(System.String,System.String,System.String,System.String)
  parent: Google.Cloud.Spanner.V1.SessionName
  langs:
  - csharp
  - vb
  name: FormatProjectInstanceDatabaseSession(String, String, String, String)
  nameWithType: SessionName.FormatProjectInstanceDatabaseSession(String, String, String, String)
  fullName: Google.Cloud.Spanner.V1.SessionName.FormatProjectInstanceDatabaseSession(System.String, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerResourceNames.g.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: FormatProjectInstanceDatabaseSession
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerResourceNames.g.cs
    startLine: 88
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nFormats the IDs into the string representation of this <xref href=\"Google.Cloud.Spanner.V1.SessionName\" data-throw-if-not-resolved=\"false\"></xref> with pattern\n<code>projects/{project}/instances/{instance}/databases/{database}/sessions/{session}</code>.\n"
  example: []
  syntax:
    content: public static string FormatProjectInstanceDatabaseSession(string projectId, string instanceId, string databaseId, string sessionId)
    parameters:
    - id: projectId
      type: System.String
      description: The <code>Project</code> ID. Must not be <code>null</code> or empty.
    - id: instanceId
      type: System.String
      description: The <code>Instance</code> ID. Must not be <code>null</code> or empty.
    - id: databaseId
      type: System.String
      description: The <code>Database</code> ID. Must not be <code>null</code> or empty.
    - id: sessionId
      type: System.String
      description: The <code>Session</code> ID. Must not be <code>null</code> or empty.
    return:
      type: System.String
      description: "\nThe string representation of this <xref href=\"Google.Cloud.Spanner.V1.SessionName\" data-throw-if-not-resolved=\"false\"></xref> with pattern\n<code>projects/{project}/instances/{instance}/databases/{database}/sessions/{session}</code>.\n"
    content.vb: Public Shared Function FormatProjectInstanceDatabaseSession(projectId As String, instanceId As String, databaseId As String, sessionId As String) As String
  overload: Google.Cloud.Spanner.V1.SessionName.FormatProjectInstanceDatabaseSession*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Google.Cloud.Spanner.V1.SessionName.Parse(System.String)
  commentId: M:Google.Cloud.Spanner.V1.SessionName.Parse(System.String)
  id: Parse(System.String)
  parent: Google.Cloud.Spanner.V1.SessionName
  langs:
  - csharp
  - vb
  name: Parse(String)
  nameWithType: SessionName.Parse(String)
  fullName: Google.Cloud.Spanner.V1.SessionName.Parse(System.String)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerResourceNames.g.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: Parse
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerResourceNames.g.cs
    startLine: 104
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: Parses the given resource name string into a new <xref href="Google.Cloud.Spanner.V1.SessionName" data-throw-if-not-resolved="false"></xref> instance.
  remarks: "\nTo parse successfully, the resource name must be formatted as one of the following:\n<ul><li>\n<code>projects/{project}/instances/{instance}/databases/{database}/sessions/{session}</code>\n</li></ul>\n"
  example: []
  syntax:
    content: public static SessionName Parse(string sessionName)
    parameters:
    - id: sessionName
      type: System.String
      description: The resource name in string form. Must not be <code>null</code>.
    return:
      type: Google.Cloud.Spanner.V1.SessionName
      description: The parsed <xref href="Google.Cloud.Spanner.V1.SessionName" data-throw-if-not-resolved="false"></xref> if successful.
    content.vb: Public Shared Function Parse(sessionName As String) As SessionName
  overload: Google.Cloud.Spanner.V1.SessionName.Parse*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Google.Cloud.Spanner.V1.SessionName.Parse(System.String,System.Boolean)
  commentId: M:Google.Cloud.Spanner.V1.SessionName.Parse(System.String,System.Boolean)
  id: Parse(System.String,System.Boolean)
  parent: Google.Cloud.Spanner.V1.SessionName
  langs:
  - csharp
  - vb
  name: Parse(String, Boolean)
  nameWithType: SessionName.Parse(String, Boolean)
  fullName: Google.Cloud.Spanner.V1.SessionName.Parse(System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerResourceNames.g.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: Parse
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerResourceNames.g.cs
    startLine: 128
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nParses the given resource name string into a new <xref href=\"Google.Cloud.Spanner.V1.SessionName\" data-throw-if-not-resolved=\"false\"></xref> instance; optionally allowing an\nunparseable resource name.\n"
  remarks: "\nTo parse successfully, the resource name must be formatted as one of the following:\n<ul><li>\n<code>projects/{project}/instances/{instance}/databases/{database}/sessions/{session}</code>\n</li></ul>\nOr may be in any format if <code data-dev-comment-type=\"paramref\" class=\"paramref\">allowUnparsed</code> is <code>true</code>.\n"
  example: []
  syntax:
    content: public static SessionName Parse(string sessionName, bool allowUnparsed)
    parameters:
    - id: sessionName
      type: System.String
      description: The resource name in string form. Must not be <code>null</code>.
    - id: allowUnparsed
      type: System.Boolean
      description: "\nIf <code>true</code> will successfully store an unparseable resource name into the <xref href=\"Google.Cloud.Spanner.V1.SessionName.UnparsedResource\" data-throw-if-not-resolved=\"false\"></xref>\nproperty; otherwise will throw an <xref href=\"System.ArgumentException\" data-throw-if-not-resolved=\"false\"></xref> if an unparseable resource name is\nspecified.\n"
    return:
      type: Google.Cloud.Spanner.V1.SessionName
      description: The parsed <xref href="Google.Cloud.Spanner.V1.SessionName" data-throw-if-not-resolved="false"></xref> if successful.
    content.vb: Public Shared Function Parse(sessionName As String, allowUnparsed As Boolean) As SessionName
  overload: Google.Cloud.Spanner.V1.SessionName.Parse*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Google.Cloud.Spanner.V1.SessionName.TryParse(System.String,Google.Cloud.Spanner.V1.SessionName@)
  commentId: M:Google.Cloud.Spanner.V1.SessionName.TryParse(System.String,Google.Cloud.Spanner.V1.SessionName@)
  id: TryParse(System.String,Google.Cloud.Spanner.V1.SessionName@)
  parent: Google.Cloud.Spanner.V1.SessionName
  langs:
  - csharp
  - vb
  name: TryParse(String, out SessionName)
  nameWithType: SessionName.TryParse(String, out SessionName)
  fullName: Google.Cloud.Spanner.V1.SessionName.TryParse(System.String, out Google.Cloud.Spanner.V1.SessionName)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerResourceNames.g.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: TryParse
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerResourceNames.g.cs
    startLine: 149
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nTries to parse the given resource name string into a new <xref href=\"Google.Cloud.Spanner.V1.SessionName\" data-throw-if-not-resolved=\"false\"></xref> instance.\n"
  remarks: "\nTo parse successfully, the resource name must be formatted as one of the following:\n<ul><li>\n<code>projects/{project}/instances/{instance}/databases/{database}/sessions/{session}</code>\n</li></ul>\n"
  example: []
  syntax:
    content: public static bool TryParse(string sessionName, out SessionName result)
    parameters:
    - id: sessionName
      type: System.String
      description: The resource name in string form. Must not be <code>null</code>.
    - id: result
      type: Google.Cloud.Spanner.V1.SessionName
      description: "\nWhen this method returns, the parsed <xref href=\"Google.Cloud.Spanner.V1.SessionName\" data-throw-if-not-resolved=\"false\"></xref>, or <code>null</code> if parsing failed.\n"
    return:
      type: System.Boolean
      description: <code>true</code> if the name was parsed successfully; <code>false</code> otherwise.
    content.vb: Public Shared Function TryParse(sessionName As String, ByRef result As SessionName) As Boolean
  overload: Google.Cloud.Spanner.V1.SessionName.TryParse*
  nameWithType.vb: SessionName.TryParse(String, ByRef SessionName)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Google.Cloud.Spanner.V1.SessionName.TryParse(System.String, ByRef Google.Cloud.Spanner.V1.SessionName)
  name.vb: TryParse(String, ByRef SessionName)
- uid: Google.Cloud.Spanner.V1.SessionName.TryParse(System.String,System.Boolean,Google.Cloud.Spanner.V1.SessionName@)
  commentId: M:Google.Cloud.Spanner.V1.SessionName.TryParse(System.String,System.Boolean,Google.Cloud.Spanner.V1.SessionName@)
  id: TryParse(System.String,System.Boolean,Google.Cloud.Spanner.V1.SessionName@)
  parent: Google.Cloud.Spanner.V1.SessionName
  langs:
  - csharp
  - vb
  name: TryParse(String, Boolean, out SessionName)
  nameWithType: SessionName.TryParse(String, Boolean, out SessionName)
  fullName: Google.Cloud.Spanner.V1.SessionName.TryParse(System.String, System.Boolean, out Google.Cloud.Spanner.V1.SessionName)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerResourceNames.g.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: TryParse
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerResourceNames.g.cs
    startLine: 176
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nTries to parse the given resource name string into a new <xref href=\"Google.Cloud.Spanner.V1.SessionName\" data-throw-if-not-resolved=\"false\"></xref> instance; optionally\nallowing an unparseable resource name.\n"
  remarks: "\nTo parse successfully, the resource name must be formatted as one of the following:\n<ul><li>\n<code>projects/{project}/instances/{instance}/databases/{database}/sessions/{session}</code>\n</li></ul>\nOr may be in any format if <code data-dev-comment-type=\"paramref\" class=\"paramref\">allowUnparsed</code> is <code>true</code>.\n"
  example: []
  syntax:
    content: public static bool TryParse(string sessionName, bool allowUnparsed, out SessionName result)
    parameters:
    - id: sessionName
      type: System.String
      description: The resource name in string form. Must not be <code>null</code>.
    - id: allowUnparsed
      type: System.Boolean
      description: "\nIf <code>true</code> will successfully store an unparseable resource name into the <xref href=\"Google.Cloud.Spanner.V1.SessionName.UnparsedResource\" data-throw-if-not-resolved=\"false\"></xref>\nproperty; otherwise will throw an <xref href=\"System.ArgumentException\" data-throw-if-not-resolved=\"false\"></xref> if an unparseable resource name is\nspecified.\n"
    - id: result
      type: Google.Cloud.Spanner.V1.SessionName
      description: "\nWhen this method returns, the parsed <xref href=\"Google.Cloud.Spanner.V1.SessionName\" data-throw-if-not-resolved=\"false\"></xref>, or <code>null</code> if parsing failed.\n"
    return:
      type: System.Boolean
      description: <code>true</code> if the name was parsed successfully; <code>false</code> otherwise.
    content.vb: Public Shared Function TryParse(sessionName As String, allowUnparsed As Boolean, ByRef result As SessionName) As Boolean
  overload: Google.Cloud.Spanner.V1.SessionName.TryParse*
  nameWithType.vb: SessionName.TryParse(String, Boolean, ByRef SessionName)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Google.Cloud.Spanner.V1.SessionName.TryParse(System.String, System.Boolean, ByRef Google.Cloud.Spanner.V1.SessionName)
  name.vb: TryParse(String, Boolean, ByRef SessionName)
- uid: Google.Cloud.Spanner.V1.SessionName.#ctor(System.String,System.String,System.String,System.String)
  commentId: M:Google.Cloud.Spanner.V1.SessionName.#ctor(System.String,System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String,System.String)'
  parent: Google.Cloud.Spanner.V1.SessionName
  langs:
  - csharp
  - vb
  name: SessionName(String, String, String, String)
  nameWithType: SessionName.SessionName(String, String, String, String)
  fullName: Google.Cloud.Spanner.V1.SessionName.SessionName(System.String, System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerResourceNames.g.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: .ctor
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerResourceNames.g.cs
    startLine: 215
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nConstructs a new instance of a <xref href=\"Google.Cloud.Spanner.V1.SessionName\" data-throw-if-not-resolved=\"false\"></xref> class from the component parts of pattern\n<code>projects/{project}/instances/{instance}/databases/{database}/sessions/{session}</code>\n"
  example: []
  syntax:
    content: public SessionName(string projectId, string instanceId, string databaseId, string sessionId)
    parameters:
    - id: projectId
      type: System.String
      description: The <code>Project</code> ID. Must not be <code>null</code> or empty.
    - id: instanceId
      type: System.String
      description: The <code>Instance</code> ID. Must not be <code>null</code> or empty.
    - id: databaseId
      type: System.String
      description: The <code>Database</code> ID. Must not be <code>null</code> or empty.
    - id: sessionId
      type: System.String
      description: The <code>Session</code> ID. Must not be <code>null</code> or empty.
    content.vb: Public Sub New(projectId As String, instanceId As String, databaseId As String, sessionId As String)
  overload: Google.Cloud.Spanner.V1.SessionName.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Cloud.Spanner.V1.SessionName.Type
  commentId: P:Google.Cloud.Spanner.V1.SessionName.Type
  id: Type
  parent: Google.Cloud.Spanner.V1.SessionName
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: SessionName.Type
  fullName: Google.Cloud.Spanner.V1.SessionName.Type
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerResourceNames.g.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: Type
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerResourceNames.g.cs
    startLine: 220
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: The <xref href="Google.Cloud.Spanner.V1.SessionName.ResourceNameType" data-throw-if-not-resolved="false"></xref> of the contained resource name.
  example: []
  syntax:
    content: public SessionName.ResourceNameType Type { get; }
    parameters: []
    return:
      type: Google.Cloud.Spanner.V1.SessionName.ResourceNameType
    content.vb: Public ReadOnly Property Type As SessionName.ResourceNameType
  overload: Google.Cloud.Spanner.V1.SessionName.Type*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Cloud.Spanner.V1.SessionName.UnparsedResource
  commentId: P:Google.Cloud.Spanner.V1.SessionName.UnparsedResource
  id: UnparsedResource
  parent: Google.Cloud.Spanner.V1.SessionName
  langs:
  - csharp
  - vb
  name: UnparsedResource
  nameWithType: SessionName.UnparsedResource
  fullName: Google.Cloud.Spanner.V1.SessionName.UnparsedResource
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerResourceNames.g.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: UnparsedResource
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerResourceNames.g.cs
    startLine: 226
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nThe contained <xref href=\"Google.Api.Gax.UnparsedResourceName\" data-throw-if-not-resolved=\"false\"></xref>. Only non-<code>null</code> if this instance contains an\nunparsed resource name.\n"
  example: []
  syntax:
    content: public UnparsedResourceName UnparsedResource { get; }
    parameters: []
    return:
      type: Google.Api.Gax.UnparsedResourceName
    content.vb: Public ReadOnly Property UnparsedResource As UnparsedResourceName
  overload: Google.Cloud.Spanner.V1.SessionName.UnparsedResource*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Cloud.Spanner.V1.SessionName.DatabaseId
  commentId: P:Google.Cloud.Spanner.V1.SessionName.DatabaseId
  id: DatabaseId
  parent: Google.Cloud.Spanner.V1.SessionName
  langs:
  - csharp
  - vb
  name: DatabaseId
  nameWithType: SessionName.DatabaseId
  fullName: Google.Cloud.Spanner.V1.SessionName.DatabaseId
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerResourceNames.g.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: DatabaseId
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerResourceNames.g.cs
    startLine: 231
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nThe <code>Database</code> ID. Will not be <code>null</code>, unless this instance contains an unparsed resource name.\n"
  example: []
  syntax:
    content: public string DatabaseId { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property DatabaseId As String
  overload: Google.Cloud.Spanner.V1.SessionName.DatabaseId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Cloud.Spanner.V1.SessionName.InstanceId
  commentId: P:Google.Cloud.Spanner.V1.SessionName.InstanceId
  id: InstanceId
  parent: Google.Cloud.Spanner.V1.SessionName
  langs:
  - csharp
  - vb
  name: InstanceId
  nameWithType: SessionName.InstanceId
  fullName: Google.Cloud.Spanner.V1.SessionName.InstanceId
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerResourceNames.g.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: InstanceId
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerResourceNames.g.cs
    startLine: 236
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nThe <code>Instance</code> ID. Will not be <code>null</code>, unless this instance contains an unparsed resource name.\n"
  example: []
  syntax:
    content: public string InstanceId { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property InstanceId As String
  overload: Google.Cloud.Spanner.V1.SessionName.InstanceId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Cloud.Spanner.V1.SessionName.ProjectId
  commentId: P:Google.Cloud.Spanner.V1.SessionName.ProjectId
  id: ProjectId
  parent: Google.Cloud.Spanner.V1.SessionName
  langs:
  - csharp
  - vb
  name: ProjectId
  nameWithType: SessionName.ProjectId
  fullName: Google.Cloud.Spanner.V1.SessionName.ProjectId
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerResourceNames.g.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: ProjectId
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerResourceNames.g.cs
    startLine: 241
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nThe <code>Project</code> ID. Will not be <code>null</code>, unless this instance contains an unparsed resource name.\n"
  example: []
  syntax:
    content: public string ProjectId { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property ProjectId As String
  overload: Google.Cloud.Spanner.V1.SessionName.ProjectId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Cloud.Spanner.V1.SessionName.SessionId
  commentId: P:Google.Cloud.Spanner.V1.SessionName.SessionId
  id: SessionId
  parent: Google.Cloud.Spanner.V1.SessionName
  langs:
  - csharp
  - vb
  name: SessionId
  nameWithType: SessionName.SessionId
  fullName: Google.Cloud.Spanner.V1.SessionName.SessionId
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerResourceNames.g.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: SessionId
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerResourceNames.g.cs
    startLine: 246
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nThe <code>Session</code> ID. Will not be <code>null</code>, unless this instance contains an unparsed resource name.\n"
  example: []
  syntax:
    content: public string SessionId { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property SessionId As String
  overload: Google.Cloud.Spanner.V1.SessionName.SessionId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Cloud.Spanner.V1.SessionName.IsKnownPattern
  commentId: P:Google.Cloud.Spanner.V1.SessionName.IsKnownPattern
  id: IsKnownPattern
  parent: Google.Cloud.Spanner.V1.SessionName
  langs:
  - csharp
  - vb
  name: IsKnownPattern
  nameWithType: SessionName.IsKnownPattern
  fullName: Google.Cloud.Spanner.V1.SessionName.IsKnownPattern
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerResourceNames.g.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: IsKnownPattern
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerResourceNames.g.cs
    startLine: 249
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: Whether this instance contains a resource name with a known pattern.
  example: []
  syntax:
    content: public bool IsKnownPattern { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsKnownPattern As Boolean
  overload: Google.Cloud.Spanner.V1.SessionName.IsKnownPattern*
  implements:
  - Google.Api.Gax.IResourceName.IsKnownPattern
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Cloud.Spanner.V1.SessionName.ToString
  commentId: M:Google.Cloud.Spanner.V1.SessionName.ToString
  id: ToString
  parent: Google.Cloud.Spanner.V1.SessionName
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: SessionName.ToString()
  fullName: Google.Cloud.Spanner.V1.SessionName.ToString()
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerResourceNames.g.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: ToString
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerResourceNames.g.cs
    startLine: 253
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: The string representation of the resource name.
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: The string representation of the resource name.
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: Google.Cloud.Spanner.V1.SessionName.ToString*
  implements:
  - Google.Api.Gax.IResourceName.ToString
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Google.Cloud.Spanner.V1.SessionName.GetHashCode
  commentId: M:Google.Cloud.Spanner.V1.SessionName.GetHashCode
  id: GetHashCode
  parent: Google.Cloud.Spanner.V1.SessionName
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: SessionName.GetHashCode()
  fullName: Google.Cloud.Spanner.V1.SessionName.GetHashCode()
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerResourceNames.g.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: GetHashCode
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerResourceNames.g.cs
    startLine: 264
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: Returns a hash code for this resource name.
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: Google.Cloud.Spanner.V1.SessionName.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Google.Cloud.Spanner.V1.SessionName.op_Equality(Google.Cloud.Spanner.V1.SessionName,Google.Cloud.Spanner.V1.SessionName)
  commentId: M:Google.Cloud.Spanner.V1.SessionName.op_Equality(Google.Cloud.Spanner.V1.SessionName,Google.Cloud.Spanner.V1.SessionName)
  id: op_Equality(Google.Cloud.Spanner.V1.SessionName,Google.Cloud.Spanner.V1.SessionName)
  parent: Google.Cloud.Spanner.V1.SessionName
  langs:
  - csharp
  - vb
  name: Equality(SessionName, SessionName)
  nameWithType: SessionName.Equality(SessionName, SessionName)
  fullName: Google.Cloud.Spanner.V1.SessionName.Equality(Google.Cloud.Spanner.V1.SessionName, Google.Cloud.Spanner.V1.SessionName)
  type: Operator
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerResourceNames.g.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: op_Equality
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerResourceNames.g.cs
    startLine: 273
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  example: []
  syntax:
    content: public static bool operator ==(SessionName a, SessionName b)
    parameters:
    - id: a
      type: Google.Cloud.Spanner.V1.SessionName
    - id: b
      type: Google.Cloud.Spanner.V1.SessionName
    return:
      type: System.Boolean
    content.vb: Public Shared Operator =(a As SessionName, b As SessionName) As Boolean
  overload: Google.Cloud.Spanner.V1.SessionName.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Google.Cloud.Spanner.V1.SessionName.op_Inequality(Google.Cloud.Spanner.V1.SessionName,Google.Cloud.Spanner.V1.SessionName)
  commentId: M:Google.Cloud.Spanner.V1.SessionName.op_Inequality(Google.Cloud.Spanner.V1.SessionName,Google.Cloud.Spanner.V1.SessionName)
  id: op_Inequality(Google.Cloud.Spanner.V1.SessionName,Google.Cloud.Spanner.V1.SessionName)
  parent: Google.Cloud.Spanner.V1.SessionName
  langs:
  - csharp
  - vb
  name: Inequality(SessionName, SessionName)
  nameWithType: SessionName.Inequality(SessionName, SessionName)
  fullName: Google.Cloud.Spanner.V1.SessionName.Inequality(Google.Cloud.Spanner.V1.SessionName, Google.Cloud.Spanner.V1.SessionName)
  type: Operator
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerResourceNames.g.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: op_Inequality
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerResourceNames.g.cs
    startLine: 276
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  example: []
  syntax:
    content: public static bool operator !=(SessionName a, SessionName b)
    parameters:
    - id: a
      type: Google.Cloud.Spanner.V1.SessionName
    - id: b
      type: Google.Cloud.Spanner.V1.SessionName
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <>(a As SessionName, b As SessionName) As Boolean
  overload: Google.Cloud.Spanner.V1.SessionName.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Google.Cloud.Spanner.V1
  commentId: N:Google.Cloud.Spanner.V1
  name: Google.Cloud.Spanner.V1
  nameWithType: Google.Cloud.Spanner.V1
  fullName: Google.Cloud.Spanner.V1
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Google.Api.Gax.IResourceName
  commentId: T:Google.Api.Gax.IResourceName
  parent: Google.Api.Gax
  isExternal: true
  name: IResourceName
  nameWithType: IResourceName
  fullName: Google.Api.Gax.IResourceName
- uid: System.IEquatable{Google.Cloud.Spanner.V1.SessionName}
  commentId: T:System.IEquatable{Google.Cloud.Spanner.V1.SessionName}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<SessionName>
  nameWithType: IEquatable<SessionName>
  fullName: System.IEquatable<Google.Cloud.Spanner.V1.SessionName>
  nameWithType.vb: IEquatable(Of SessionName)
  fullName.vb: System.IEquatable(Of Google.Cloud.Spanner.V1.SessionName)
  name.vb: IEquatable(Of SessionName)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Spanner.V1.SessionName
    name: SessionName
    nameWithType: SessionName
    fullName: Google.Cloud.Spanner.V1.SessionName
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Spanner.V1.SessionName
    name: SessionName
    nameWithType: SessionName
    fullName: Google.Cloud.Spanner.V1.SessionName
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Api.Gax
  commentId: N:Google.Api.Gax
  isExternal: true
  name: Google.Api.Gax
  nameWithType: Google.Api.Gax
  fullName: Google.Api.Gax
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Cloud.Spanner.V1.SessionName
  commentId: T:Google.Cloud.Spanner.V1.SessionName
  parent: Google.Cloud.Spanner.V1
  name: SessionName
  nameWithType: SessionName
  fullName: Google.Cloud.Spanner.V1.SessionName
- uid: Google.Cloud.Spanner.V1.SessionName.FromUnparsed*
  commentId: Overload:Google.Cloud.Spanner.V1.SessionName.FromUnparsed
  name: FromUnparsed
  nameWithType: SessionName.FromUnparsed
  fullName: Google.Cloud.Spanner.V1.SessionName.FromUnparsed
- uid: Google.Api.Gax.UnparsedResourceName
  commentId: T:Google.Api.Gax.UnparsedResourceName
  parent: Google.Api.Gax
  isExternal: true
  name: UnparsedResourceName
  nameWithType: UnparsedResourceName
  fullName: Google.Api.Gax.UnparsedResourceName
- uid: Google.Cloud.Spanner.V1.SessionName.FromProjectInstanceDatabaseSession*
  commentId: Overload:Google.Cloud.Spanner.V1.SessionName.FromProjectInstanceDatabaseSession
  name: FromProjectInstanceDatabaseSession
  nameWithType: SessionName.FromProjectInstanceDatabaseSession
  fullName: Google.Cloud.Spanner.V1.SessionName.FromProjectInstanceDatabaseSession
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Google.Cloud.Spanner.V1.SessionName.Format*
  commentId: Overload:Google.Cloud.Spanner.V1.SessionName.Format
  name: Format
  nameWithType: SessionName.Format
  fullName: Google.Cloud.Spanner.V1.SessionName.Format
- uid: Google.Cloud.Spanner.V1.SessionName.FormatProjectInstanceDatabaseSession*
  commentId: Overload:Google.Cloud.Spanner.V1.SessionName.FormatProjectInstanceDatabaseSession
  name: FormatProjectInstanceDatabaseSession
  nameWithType: SessionName.FormatProjectInstanceDatabaseSession
  fullName: Google.Cloud.Spanner.V1.SessionName.FormatProjectInstanceDatabaseSession
- uid: Google.Cloud.Spanner.V1.SessionName.Parse*
  commentId: Overload:Google.Cloud.Spanner.V1.SessionName.Parse
  name: Parse
  nameWithType: SessionName.Parse
  fullName: Google.Cloud.Spanner.V1.SessionName.Parse
- uid: Google.Cloud.Spanner.V1.SessionName.UnparsedResource
  commentId: P:Google.Cloud.Spanner.V1.SessionName.UnparsedResource
  isExternal: true
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Google.Cloud.Spanner.V1.SessionName.TryParse*
  commentId: Overload:Google.Cloud.Spanner.V1.SessionName.TryParse
  name: TryParse
  nameWithType: SessionName.TryParse
  fullName: Google.Cloud.Spanner.V1.SessionName.TryParse
- uid: Google.Cloud.Spanner.V1.SessionName.#ctor*
  commentId: Overload:Google.Cloud.Spanner.V1.SessionName.#ctor
  name: SessionName
  nameWithType: SessionName.SessionName
  fullName: Google.Cloud.Spanner.V1.SessionName.SessionName
- uid: Google.Cloud.Spanner.V1.SessionName.ResourceNameType
  commentId: T:Google.Cloud.Spanner.V1.SessionName.ResourceNameType
  parent: Google.Cloud.Spanner.V1
  name: SessionName.ResourceNameType
  nameWithType: SessionName.ResourceNameType
  fullName: Google.Cloud.Spanner.V1.SessionName.ResourceNameType
- uid: Google.Cloud.Spanner.V1.SessionName.Type*
  commentId: Overload:Google.Cloud.Spanner.V1.SessionName.Type
  name: Type
  nameWithType: SessionName.Type
  fullName: Google.Cloud.Spanner.V1.SessionName.Type
- uid: Google.Cloud.Spanner.V1.SessionName.UnparsedResource*
  commentId: Overload:Google.Cloud.Spanner.V1.SessionName.UnparsedResource
  name: UnparsedResource
  nameWithType: SessionName.UnparsedResource
  fullName: Google.Cloud.Spanner.V1.SessionName.UnparsedResource
- uid: Google.Cloud.Spanner.V1.SessionName.DatabaseId*
  commentId: Overload:Google.Cloud.Spanner.V1.SessionName.DatabaseId
  name: DatabaseId
  nameWithType: SessionName.DatabaseId
  fullName: Google.Cloud.Spanner.V1.SessionName.DatabaseId
- uid: Google.Cloud.Spanner.V1.SessionName.InstanceId*
  commentId: Overload:Google.Cloud.Spanner.V1.SessionName.InstanceId
  name: InstanceId
  nameWithType: SessionName.InstanceId
  fullName: Google.Cloud.Spanner.V1.SessionName.InstanceId
- uid: Google.Cloud.Spanner.V1.SessionName.ProjectId*
  commentId: Overload:Google.Cloud.Spanner.V1.SessionName.ProjectId
  name: ProjectId
  nameWithType: SessionName.ProjectId
  fullName: Google.Cloud.Spanner.V1.SessionName.ProjectId
- uid: Google.Cloud.Spanner.V1.SessionName.SessionId*
  commentId: Overload:Google.Cloud.Spanner.V1.SessionName.SessionId
  name: SessionId
  nameWithType: SessionName.SessionId
  fullName: Google.Cloud.Spanner.V1.SessionName.SessionId
- uid: Google.Cloud.Spanner.V1.SessionName.IsKnownPattern*
  commentId: Overload:Google.Cloud.Spanner.V1.SessionName.IsKnownPattern
  name: IsKnownPattern
  nameWithType: SessionName.IsKnownPattern
  fullName: Google.Cloud.Spanner.V1.SessionName.IsKnownPattern
- uid: Google.Api.Gax.IResourceName.IsKnownPattern
  commentId: P:Google.Api.Gax.IResourceName.IsKnownPattern
  parent: Google.Api.Gax.IResourceName
  isExternal: true
  name: IsKnownPattern
  nameWithType: IResourceName.IsKnownPattern
  fullName: Google.Api.Gax.IResourceName.IsKnownPattern
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Cloud.Spanner.V1.SessionName.ToString*
  commentId: Overload:Google.Cloud.Spanner.V1.SessionName.ToString
  name: ToString
  nameWithType: SessionName.ToString
  fullName: Google.Cloud.Spanner.V1.SessionName.ToString
- uid: Google.Api.Gax.IResourceName.ToString
  commentId: M:Google.Api.Gax.IResourceName.ToString
  parent: Google.Api.Gax.IResourceName
  isExternal: true
  name: ToString()
  nameWithType: IResourceName.ToString()
  fullName: Google.Api.Gax.IResourceName.ToString()
  spec.csharp:
  - uid: Google.Api.Gax.IResourceName.ToString
    name: ToString
    nameWithType: IResourceName.ToString
    fullName: Google.Api.Gax.IResourceName.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Api.Gax.IResourceName.ToString
    name: ToString
    nameWithType: IResourceName.ToString
    fullName: Google.Api.Gax.IResourceName.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Cloud.Spanner.V1.SessionName.GetHashCode*
  commentId: Overload:Google.Cloud.Spanner.V1.SessionName.GetHashCode
  name: GetHashCode
  nameWithType: SessionName.GetHashCode
  fullName: Google.Cloud.Spanner.V1.SessionName.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Google.Cloud.Spanner.V1.SessionName.op_Equality*
  commentId: Overload:Google.Cloud.Spanner.V1.SessionName.op_Equality
  name: Equality
  nameWithType: SessionName.Equality
  fullName: Google.Cloud.Spanner.V1.SessionName.Equality
- uid: Google.Cloud.Spanner.V1.SessionName.op_Inequality*
  commentId: Overload:Google.Cloud.Spanner.V1.SessionName.op_Inequality
  name: Inequality
  nameWithType: SessionName.Inequality
  fullName: Google.Cloud.Spanner.V1.SessionName.Inequality
