### YamlMime:ManagedReference
items:
- uid: "com.google.cloud.bigquery.JobInfo.Builder"
  id: "Builder"
  parent: "com.google.cloud.bigquery"
  children:
  - "com.google.cloud.bigquery.JobInfo.Builder.Builder()"
  - "com.google.cloud.bigquery.JobInfo.Builder.build()"
  - "com.google.cloud.bigquery.JobInfo.Builder.setConfiguration(com.google.cloud.bigquery.JobConfiguration)"
  - "com.google.cloud.bigquery.JobInfo.Builder.setJobId(com.google.cloud.bigquery.JobId)"
  langs:
  - "java"
  name: "JobInfo.Builder"
  nameWithType: "JobInfo.Builder"
  fullName: "com.google.cloud.bigquery.JobInfo.Builder"
  type: "Class"
  package: "com.google.cloud.bigquery"
  summary: "A builder for `JobInfo` objects."
  syntax:
    content: "public abstract static class JobInfo.Builder"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.google.cloud.bigquery.JobInfo.Builder.Builder()"
  id: "Builder()"
  parent: "com.google.cloud.bigquery.JobInfo.Builder"
  langs:
  - "java"
  name: "Builder()"
  nameWithType: "JobInfo.Builder.Builder()"
  fullName: "com.google.cloud.bigquery.JobInfo.Builder.Builder()"
  overload: "com.google.cloud.bigquery.JobInfo.Builder.Builder*"
  type: "Constructor"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public Builder()"
- uid: "com.google.cloud.bigquery.JobInfo.Builder.build()"
  id: "build()"
  parent: "com.google.cloud.bigquery.JobInfo.Builder"
  langs:
  - "java"
  name: "build()"
  nameWithType: "JobInfo.Builder.build()"
  fullName: "com.google.cloud.bigquery.JobInfo.Builder.build()"
  overload: "com.google.cloud.bigquery.JobInfo.Builder.build*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Creates a `JobInfo` object."
  syntax:
    content: "public abstract JobInfo build()"
    return:
      type: "com.google.cloud.bigquery.JobInfo"
- uid: "com.google.cloud.bigquery.JobInfo.Builder.setConfiguration(com.google.cloud.bigquery.JobConfiguration)"
  id: "setConfiguration(com.google.cloud.bigquery.JobConfiguration)"
  parent: "com.google.cloud.bigquery.JobInfo.Builder"
  langs:
  - "java"
  name: "setConfiguration(JobConfiguration configuration)"
  nameWithType: "JobInfo.Builder.setConfiguration(JobConfiguration configuration)"
  fullName: "com.google.cloud.bigquery.JobInfo.Builder.setConfiguration(JobConfiguration configuration)"
  overload: "com.google.cloud.bigquery.JobInfo.Builder.setConfiguration*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Sets a configuration for the `JobInfo` object. Use <xref uid=\"com.google.cloud.bigquery.CopyJobConfiguration\" data-throw-if-not-resolved=\"false\">CopyJobConfiguration</xref> for a job that copies an existing table. Use <xref uid=\"com.google.cloud.bigquery.ExtractJobConfiguration\" data-throw-if-not-resolved=\"false\">ExtractJobConfiguration</xref> for a job that exports a table to Google Cloud Storage. Use <xref uid=\"com.google.cloud.bigquery.LoadJobConfiguration\" data-throw-if-not-resolved=\"false\">LoadJobConfiguration</xref> for a job that loads data from Google Cloud Storage into a table. Use <xref uid=\"com.google.cloud.bigquery.QueryJobConfiguration\" data-throw-if-not-resolved=\"false\">QueryJobConfiguration</xref> for a job that runs a query."
  syntax:
    content: "public abstract JobInfo.Builder setConfiguration(JobConfiguration configuration)"
    parameters:
    - id: "configuration"
      type: "com.google.cloud.bigquery.JobConfiguration"
    return:
      type: "com.google.cloud.bigquery.JobInfo.Builder"
- uid: "com.google.cloud.bigquery.JobInfo.Builder.setJobId(com.google.cloud.bigquery.JobId)"
  id: "setJobId(com.google.cloud.bigquery.JobId)"
  parent: "com.google.cloud.bigquery.JobInfo.Builder"
  langs:
  - "java"
  name: "setJobId(JobId jobId)"
  nameWithType: "JobInfo.Builder.setJobId(JobId jobId)"
  fullName: "com.google.cloud.bigquery.JobInfo.Builder.setJobId(JobId jobId)"
  overload: "com.google.cloud.bigquery.JobInfo.Builder.setJobId*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Sets the job identity."
  syntax:
    content: "public abstract JobInfo.Builder setJobId(JobId jobId)"
    parameters:
    - id: "jobId"
      type: "com.google.cloud.bigquery.JobId"
    return:
      type: "com.google.cloud.bigquery.JobInfo.Builder"
references:
- uid: "com.google.cloud.bigquery.JobInfo.Builder.Builder*"
  name: "Builder"
  nameWithType: "JobInfo.Builder.Builder"
  fullName: "com.google.cloud.bigquery.JobInfo.Builder.Builder"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.JobId"
  name: "JobId"
  nameWithType: "JobId"
  fullName: "com.google.cloud.bigquery.JobId"
- uid: "com.google.cloud.bigquery.JobInfo.Builder.setJobId*"
  name: "setJobId"
  nameWithType: "JobInfo.Builder.setJobId"
  fullName: "com.google.cloud.bigquery.JobInfo.Builder.setJobId"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.JobConfiguration"
  name: "JobConfiguration"
  nameWithType: "JobConfiguration"
  fullName: "com.google.cloud.bigquery.JobConfiguration"
- uid: "com.google.cloud.bigquery.JobInfo.Builder.setConfiguration*"
  name: "setConfiguration"
  nameWithType: "JobInfo.Builder.setConfiguration"
  fullName: "com.google.cloud.bigquery.JobInfo.Builder.setConfiguration"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.JobInfo"
  name: "JobInfo"
  nameWithType: "JobInfo"
  fullName: "com.google.cloud.bigquery.JobInfo"
- uid: "com.google.cloud.bigquery.JobInfo.Builder.build*"
  name: "build"
  nameWithType: "JobInfo.Builder.build"
  fullName: "com.google.cloud.bigquery.JobInfo.Builder.build"
  package: "com.google.cloud.bigquery"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
