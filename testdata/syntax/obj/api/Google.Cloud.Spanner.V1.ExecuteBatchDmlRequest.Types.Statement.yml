### YamlMime:ManagedReference
items:
- uid: Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest.Types.Statement
  commentId: T:Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest.Types.Statement
  id: ExecuteBatchDmlRequest.Types.Statement
  parent: Google.Cloud.Spanner.V1
  children:
  - Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest.Types.Statement.#ctor
  - Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest.Types.Statement.#ctor(Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest.Types.Statement)
  - Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest.Types.Statement.Params
  - Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest.Types.Statement.ParamTypes
  - Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest.Types.Statement.Sql
  langs:
  - csharp
  - vb
  name: ExecuteBatchDmlRequest.Types.Statement
  nameWithType: ExecuteBatchDmlRequest.Types.Statement
  fullName: Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest.Types.Statement
  type: Class
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Spanner.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: Statement
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Spanner.cs
    startLine: 3209
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nA single DML statement.\n"
  example: []
  syntax:
    content: 'public sealed class Statement : IMessage<ExecuteBatchDmlRequest.Types.Statement>, IEquatable<ExecuteBatchDmlRequest.Types.Statement>, IDeepCloneable<ExecuteBatchDmlRequest.Types.Statement>, IBufferMessage, IMessage'
    content.vb: >-
      Public NotInheritable Class Statement
          Implements IMessage(Of ExecuteBatchDmlRequest.Types.Statement), IEquatable(Of ExecuteBatchDmlRequest.Types.Statement), IDeepCloneable(Of ExecuteBatchDmlRequest.Types.Statement), IBufferMessage, IMessage
  inheritance:
  - System.Object
  implements:
  - Google.Protobuf.IMessage{Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest.Types.Statement}
  - System.IEquatable{Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest.Types.Statement}
  - Google.Protobuf.IDeepCloneable{Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest.Types.Statement}
  - Google.Protobuf.IBufferMessage
  - Google.Protobuf.IMessage
  inheritedMembers:
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest.Types.Statement.#ctor
  commentId: M:Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest.Types.Statement.#ctor
  id: '#ctor'
  parent: Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest.Types.Statement
  langs:
  - csharp
  - vb
  name: Statement()
  nameWithType: ExecuteBatchDmlRequest.Types.Statement.Statement()
  fullName: Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest.Types.Statement.Statement()
  type: Constructor
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Spanner.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: .ctor
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Spanner.cs
    startLine: 3229
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  syntax:
    content: public Statement()
    content.vb: Public Sub New
  overload: Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest.Types.Statement.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest.Types.Statement.#ctor(Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest.Types.Statement)
  commentId: M:Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest.Types.Statement.#ctor(Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest.Types.Statement)
  id: '#ctor(Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest.Types.Statement)'
  parent: Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest.Types.Statement
  langs:
  - csharp
  - vb
  name: Statement(ExecuteBatchDmlRequest.Types.Statement)
  nameWithType: ExecuteBatchDmlRequest.Types.Statement.Statement(ExecuteBatchDmlRequest.Types.Statement)
  fullName: Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest.Types.Statement.Statement(Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest.Types.Statement)
  type: Constructor
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Spanner.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: .ctor
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Spanner.cs
    startLine: 3236
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  syntax:
    content: public Statement(ExecuteBatchDmlRequest.Types.Statement other)
    parameters:
    - id: other
      type: Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest.Types.Statement
    content.vb: Public Sub New(other As ExecuteBatchDmlRequest.Types.Statement)
  overload: Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest.Types.Statement.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest.Types.Statement.Sql
  commentId: P:Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest.Types.Statement.Sql
  id: Sql
  parent: Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest.Types.Statement
  langs:
  - csharp
  - vb
  name: Sql
  nameWithType: ExecuteBatchDmlRequest.Types.Statement.Sql
  fullName: Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest.Types.Statement.Sql
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Spanner.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: Sql
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Spanner.cs
    startLine: 3255
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nRequired. The DML string.\n"
  example: []
  syntax:
    content: public string Sql { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Sql As String
  overload: Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest.Types.Statement.Sql*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest.Types.Statement.Params
  commentId: P:Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest.Types.Statement.Params
  id: Params
  parent: Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest.Types.Statement
  langs:
  - csharp
  - vb
  name: Params
  nameWithType: ExecuteBatchDmlRequest.Types.Statement.Params
  fullName: Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest.Types.Statement.Params
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Spanner.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: Params
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Spanner.cs
    startLine: 3280
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nParameter names and values that bind to placeholders in the DML string.\n\nA parameter placeholder consists of the `@` character followed by the\nparameter name (for example, `@firstName`). Parameter names can contain\nletters, numbers, and underscores.\n\nParameters can appear anywhere that a literal value is expected.  The\nsame parameter name can be used more than once, for example:\n\n`&quot;WHERE id > @msg_id AND id &lt; @msg_id + 100&quot;`\n\nIt is an error to execute a SQL statement with unbound parameters.\n"
  example: []
  syntax:
    content: public Struct Params { get; set; }
    parameters: []
    return:
      type: Google.Protobuf.WellKnownTypes.Struct
    content.vb: Public Property Params As Struct
  overload: Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest.Types.Statement.Params*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest.Types.Statement.ParamTypes
  commentId: P:Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest.Types.Statement.ParamTypes
  id: ParamTypes
  parent: Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest.Types.Statement
  langs:
  - csharp
  - vb
  name: ParamTypes
  nameWithType: ExecuteBatchDmlRequest.Types.Statement.ParamTypes
  fullName: Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest.Types.Statement.ParamTypes
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Spanner.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: ParamTypes
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Spanner.cs
    startLine: 3303
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nIt is not always possible for Cloud Spanner to infer the right SQL type\nfrom a JSON value.  For example, values of type `BYTES` and values\nof type `STRING` both appear in [params][google.spanner.v1.ExecuteBatchDmlRequest.Statement.params] as JSON strings.\n\nIn these cases, `param_types` can be used to specify the exact\nSQL type for some or all of the SQL statement parameters. See the\ndefinition of [Type][google.spanner.v1.Type] for more information\nabout SQL types.\n"
  example: []
  syntax:
    content: public MapField<string, Type> ParamTypes { get; }
    parameters: []
    return:
      type: Google.Protobuf.Collections.MapField{System.String,Google.Cloud.Spanner.V1.Type}
    content.vb: Public ReadOnly Property ParamTypes As MapField(Of String, Type)
  overload: Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest.Types.Statement.ParamTypes*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Google.Cloud.Spanner.V1
  commentId: N:Google.Cloud.Spanner.V1
  name: Google.Cloud.Spanner.V1
  nameWithType: Google.Cloud.Spanner.V1
  fullName: Google.Cloud.Spanner.V1
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Google.Protobuf.IMessage{Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest.Types.Statement}
  commentId: T:Google.Protobuf.IMessage{Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest.Types.Statement}
  parent: Google.Protobuf
  definition: Google.Protobuf.IMessage`1
  name: IMessage<ExecuteBatchDmlRequest.Types.Statement>
  nameWithType: IMessage<ExecuteBatchDmlRequest.Types.Statement>
  fullName: Google.Protobuf.IMessage<Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest.Types.Statement>
  nameWithType.vb: IMessage(Of ExecuteBatchDmlRequest.Types.Statement)
  fullName.vb: Google.Protobuf.IMessage(Of Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest.Types.Statement)
  name.vb: IMessage(Of ExecuteBatchDmlRequest.Types.Statement)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest.Types.Statement
    name: ExecuteBatchDmlRequest.Types.Statement
    nameWithType: ExecuteBatchDmlRequest.Types.Statement
    fullName: Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest.Types.Statement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest.Types.Statement
    name: ExecuteBatchDmlRequest.Types.Statement
    nameWithType: ExecuteBatchDmlRequest.Types.Statement
    fullName: Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest.Types.Statement
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable{Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest.Types.Statement}
  commentId: T:System.IEquatable{Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest.Types.Statement}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<ExecuteBatchDmlRequest.Types.Statement>
  nameWithType: IEquatable<ExecuteBatchDmlRequest.Types.Statement>
  fullName: System.IEquatable<Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest.Types.Statement>
  nameWithType.vb: IEquatable(Of ExecuteBatchDmlRequest.Types.Statement)
  fullName.vb: System.IEquatable(Of Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest.Types.Statement)
  name.vb: IEquatable(Of ExecuteBatchDmlRequest.Types.Statement)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest.Types.Statement
    name: ExecuteBatchDmlRequest.Types.Statement
    nameWithType: ExecuteBatchDmlRequest.Types.Statement
    fullName: Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest.Types.Statement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest.Types.Statement
    name: ExecuteBatchDmlRequest.Types.Statement
    nameWithType: ExecuteBatchDmlRequest.Types.Statement
    fullName: Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest.Types.Statement
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IDeepCloneable{Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest.Types.Statement}
  commentId: T:Google.Protobuf.IDeepCloneable{Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest.Types.Statement}
  parent: Google.Protobuf
  definition: Google.Protobuf.IDeepCloneable`1
  name: IDeepCloneable<ExecuteBatchDmlRequest.Types.Statement>
  nameWithType: IDeepCloneable<ExecuteBatchDmlRequest.Types.Statement>
  fullName: Google.Protobuf.IDeepCloneable<Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest.Types.Statement>
  nameWithType.vb: IDeepCloneable(Of ExecuteBatchDmlRequest.Types.Statement)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest.Types.Statement)
  name.vb: IDeepCloneable(Of ExecuteBatchDmlRequest.Types.Statement)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest.Types.Statement
    name: ExecuteBatchDmlRequest.Types.Statement
    nameWithType: ExecuteBatchDmlRequest.Types.Statement
    fullName: Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest.Types.Statement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest.Types.Statement
    name: ExecuteBatchDmlRequest.Types.Statement
    nameWithType: ExecuteBatchDmlRequest.Types.Statement
    fullName: Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest.Types.Statement
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IBufferMessage
  commentId: T:Google.Protobuf.IBufferMessage
  parent: Google.Protobuf
  isExternal: true
  name: IBufferMessage
  nameWithType: IBufferMessage
  fullName: Google.Protobuf.IBufferMessage
- uid: Google.Protobuf.IMessage
  commentId: T:Google.Protobuf.IMessage
  parent: Google.Protobuf
  isExternal: true
  name: IMessage
  nameWithType: IMessage
  fullName: Google.Protobuf.IMessage
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Protobuf.IMessage`1
  commentId: T:Google.Protobuf.IMessage`1
  isExternal: true
  name: IMessage<T>
  nameWithType: IMessage<T>
  fullName: Google.Protobuf.IMessage<T>
  nameWithType.vb: IMessage(Of T)
  fullName.vb: Google.Protobuf.IMessage(Of T)
  name.vb: IMessage(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf
  commentId: N:Google.Protobuf
  isExternal: true
  name: Google.Protobuf
  nameWithType: Google.Protobuf
  fullName: Google.Protobuf
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IDeepCloneable`1
  commentId: T:Google.Protobuf.IDeepCloneable`1
  isExternal: true
  name: IDeepCloneable<T>
  nameWithType: IDeepCloneable<T>
  fullName: Google.Protobuf.IDeepCloneable<T>
  nameWithType.vb: IDeepCloneable(Of T)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of T)
  name.vb: IDeepCloneable(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest.Types.Statement.#ctor*
  commentId: Overload:Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest.Types.Statement.#ctor
  name: Statement
  nameWithType: ExecuteBatchDmlRequest.Types.Statement.Statement
  fullName: Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest.Types.Statement.Statement
- uid: Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest.Types.Statement
  commentId: T:Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest.Types.Statement
  parent: Google.Cloud.Spanner.V1
  name: ExecuteBatchDmlRequest.Types.Statement
  nameWithType: ExecuteBatchDmlRequest.Types.Statement
  fullName: Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest.Types.Statement
- uid: Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest.Types.Statement.Sql*
  commentId: Overload:Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest.Types.Statement.Sql
  name: Sql
  nameWithType: ExecuteBatchDmlRequest.Types.Statement.Sql
  fullName: Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest.Types.Statement.Sql
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest.Types.Statement.Params*
  commentId: Overload:Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest.Types.Statement.Params
  name: Params
  nameWithType: ExecuteBatchDmlRequest.Types.Statement.Params
  fullName: Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest.Types.Statement.Params
- uid: Google.Protobuf.WellKnownTypes.Struct
  commentId: T:Google.Protobuf.WellKnownTypes.Struct
  parent: Google.Protobuf.WellKnownTypes
  isExternal: true
  name: Struct
  nameWithType: Struct
  fullName: Google.Protobuf.WellKnownTypes.Struct
- uid: Google.Protobuf.WellKnownTypes
  commentId: N:Google.Protobuf.WellKnownTypes
  isExternal: true
  name: Google.Protobuf.WellKnownTypes
  nameWithType: Google.Protobuf.WellKnownTypes
  fullName: Google.Protobuf.WellKnownTypes
- uid: Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest.Types.Statement.ParamTypes*
  commentId: Overload:Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest.Types.Statement.ParamTypes
  name: ParamTypes
  nameWithType: ExecuteBatchDmlRequest.Types.Statement.ParamTypes
  fullName: Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest.Types.Statement.ParamTypes
- uid: Google.Protobuf.Collections.MapField{System.String,Google.Cloud.Spanner.V1.Type}
  commentId: T:Google.Protobuf.Collections.MapField{System.String,Google.Cloud.Spanner.V1.Type}
  parent: Google.Protobuf.Collections
  definition: Google.Protobuf.Collections.MapField`2
  name: MapField<String, Type>
  nameWithType: MapField<String, Type>
  fullName: Google.Protobuf.Collections.MapField<System.String, Google.Cloud.Spanner.V1.Type>
  nameWithType.vb: MapField(Of String, Type)
  fullName.vb: Google.Protobuf.Collections.MapField(Of System.String, Google.Cloud.Spanner.V1.Type)
  name.vb: MapField(Of String, Type)
  spec.csharp:
  - uid: Google.Protobuf.Collections.MapField`2
    name: MapField
    nameWithType: MapField
    fullName: Google.Protobuf.Collections.MapField
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Google.Cloud.Spanner.V1.Type
    name: Type
    nameWithType: Type
    fullName: Google.Cloud.Spanner.V1.Type
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.Collections.MapField`2
    name: MapField
    nameWithType: MapField
    fullName: Google.Protobuf.Collections.MapField
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Google.Cloud.Spanner.V1.Type
    name: Type
    nameWithType: Type
    fullName: Google.Cloud.Spanner.V1.Type
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.Collections.MapField`2
  commentId: T:Google.Protobuf.Collections.MapField`2
  isExternal: true
  name: MapField<TKey, TValue>
  nameWithType: MapField<TKey, TValue>
  fullName: Google.Protobuf.Collections.MapField<TKey, TValue>
  nameWithType.vb: MapField(Of TKey, TValue)
  fullName.vb: Google.Protobuf.Collections.MapField(Of TKey, TValue)
  name.vb: MapField(Of TKey, TValue)
  spec.csharp:
  - uid: Google.Protobuf.Collections.MapField`2
    name: MapField
    nameWithType: MapField
    fullName: Google.Protobuf.Collections.MapField
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.Collections.MapField`2
    name: MapField
    nameWithType: MapField
    fullName: Google.Protobuf.Collections.MapField
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.Collections
  commentId: N:Google.Protobuf.Collections
  isExternal: true
  name: Google.Protobuf.Collections
  nameWithType: Google.Protobuf.Collections
  fullName: Google.Protobuf.Collections
