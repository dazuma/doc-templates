### YamlMime:ManagedReference
items:
- uid: "com.google.cloud.bigquery.QueryJobConfiguration.Builder"
  id: "Builder"
  parent: "com.google.cloud.bigquery"
  children:
  - "com.google.cloud.bigquery.QueryJobConfiguration.Builder.addNamedParameter(java.lang.String,com.google.cloud.bigquery.QueryParameterValue)"
  - "com.google.cloud.bigquery.QueryJobConfiguration.Builder.addPositionalParameter(com.google.cloud.bigquery.QueryParameterValue)"
  - "com.google.cloud.bigquery.QueryJobConfiguration.Builder.addTableDefinition(java.lang.String,com.google.cloud.bigquery.ExternalTableDefinition)"
  - "com.google.cloud.bigquery.QueryJobConfiguration.Builder.build()"
  - "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setAllowLargeResults(java.lang.Boolean)"
  - "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setClustering(com.google.cloud.bigquery.Clustering)"
  - "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setConnectionProperties(java.util.List<com.google.cloud.bigquery.ConnectionProperty>)"
  - "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setCreateDisposition(com.google.cloud.bigquery.JobInfo.CreateDisposition)"
  - "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setDefaultDataset(com.google.cloud.bigquery.DatasetId)"
  - "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setDefaultDataset(java.lang.String)"
  - "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setDestinationEncryptionConfiguration(com.google.cloud.bigquery.EncryptionConfiguration)"
  - "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setDestinationTable(com.google.cloud.bigquery.TableId)"
  - "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setDryRun(java.lang.Boolean)"
  - "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setFlattenResults(java.lang.Boolean)"
  - "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setJobTimeoutMs(java.lang.Long)"
  - "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setLabels(java.util.Map<java.lang.String,java.lang.String>)"
  - "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setMaxResults(java.lang.Long)"
  - "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setMaximumBillingTier(java.lang.Integer)"
  - "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setMaximumBytesBilled(java.lang.Long)"
  - "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setNamedParameters(java.util.Map<java.lang.String,com.google.cloud.bigquery.QueryParameterValue>)"
  - "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setPositionalParameters(java.lang.Iterable<com.google.cloud.bigquery.QueryParameterValue>)"
  - "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setPriority(com.google.cloud.bigquery.QueryJobConfiguration.Priority)"
  - "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setQuery(java.lang.String)"
  - "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setRangePartitioning(com.google.cloud.bigquery.RangePartitioning)"
  - "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setSchemaUpdateOptions(java.util.List<com.google.cloud.bigquery.JobInfo.SchemaUpdateOption>)"
  - "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setTableDefinitions(java.util.Map<java.lang.String,com.google.cloud.bigquery.ExternalTableDefinition>)"
  - "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setTimePartitioning(com.google.cloud.bigquery.TimePartitioning)"
  - "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setUseLegacySql(java.lang.Boolean)"
  - "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setUseQueryCache(java.lang.Boolean)"
  - "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setUserDefinedFunctions(java.util.List<com.google.cloud.bigquery.UserDefinedFunction>)"
  - "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setWriteDisposition(com.google.cloud.bigquery.JobInfo.WriteDisposition)"
  langs:
  - "java"
  name: "QueryJobConfiguration.Builder"
  nameWithType: "QueryJobConfiguration.Builder"
  fullName: "com.google.cloud.bigquery.QueryJobConfiguration.Builder"
  type: "Class"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public static final class QueryJobConfiguration.Builder extends JobConfiguration.Builder<QueryJobConfiguration,QueryJobConfiguration.Builder>"
  inheritance:
  - "java.lang.Object"
  - "com.google.cloud.bigquery.JobConfiguration.Builder"
  inheritedMembers:
  - "com.google.cloud.bigquery.JobConfiguration.Builder.build()"
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.Builder()"
  id: "Builder()"
  parent: "com.google.cloud.bigquery.QueryJobConfiguration.Builder"
  langs:
  - "java"
  name: "Builder()"
  nameWithType: "QueryJobConfiguration.Builder.Builder()"
  fullName: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.Builder()"
  overload: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.Builder*"
  type: "Constructor"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "private Builder()"
- uid: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.Builder(com.google.api.services.bigquery.model.JobConfiguration)"
  id: "Builder(com.google.api.services.bigquery.model.JobConfiguration)"
  parent: "com.google.cloud.bigquery.QueryJobConfiguration.Builder"
  langs:
  - "java"
  name: "Builder(JobConfiguration configurationPb)"
  nameWithType: "QueryJobConfiguration.Builder.Builder(JobConfiguration configurationPb)"
  fullName: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.Builder(JobConfiguration configurationPb)"
  overload: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.Builder*"
  type: "Constructor"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "private Builder(JobConfiguration configurationPb)"
    parameters:
    - id: "configurationPb"
      type: "com.google.api.services.bigquery.model.JobConfiguration"
- uid: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.Builder(com.google.cloud.bigquery.QueryJobConfiguration)"
  id: "Builder(com.google.cloud.bigquery.QueryJobConfiguration)"
  parent: "com.google.cloud.bigquery.QueryJobConfiguration.Builder"
  langs:
  - "java"
  name: "Builder(QueryJobConfiguration jobConfiguration)"
  nameWithType: "QueryJobConfiguration.Builder.Builder(QueryJobConfiguration jobConfiguration)"
  fullName: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.Builder(QueryJobConfiguration jobConfiguration)"
  overload: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.Builder*"
  type: "Constructor"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "private Builder(QueryJobConfiguration jobConfiguration)"
    parameters:
    - id: "jobConfiguration"
      type: "com.google.cloud.bigquery.QueryJobConfiguration"
- uid: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.addNamedParameter(java.lang.String,com.google.cloud.bigquery.QueryParameterValue)"
  id: "addNamedParameter(java.lang.String,com.google.cloud.bigquery.QueryParameterValue)"
  parent: "com.google.cloud.bigquery.QueryJobConfiguration.Builder"
  langs:
  - "java"
  name: "addNamedParameter(String name, QueryParameterValue value)"
  nameWithType: "QueryJobConfiguration.Builder.addNamedParameter(String name, QueryParameterValue value)"
  fullName: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.addNamedParameter(String name, QueryParameterValue value)"
  overload: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.addNamedParameter*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Adds a named query parameter to the set of query parameters. See <xref uid=\"com.google.cloud.bigquery.QueryJobConfiguration.Builder.setNamedParameters(java.util.Map&lt;java.lang.String,com.google.cloud.bigquery.QueryParameterValue&gt;)\" data-throw-if-not-resolved=\"false\">#setNamedParameters(Map)</xref> for more details on the input requirements.\n\nA named parameter cannot be added after positional parameters have been added."
  syntax:
    content: "public QueryJobConfiguration.Builder addNamedParameter(String name, QueryParameterValue value)"
    parameters:
    - id: "name"
      type: "java.lang.String"
    - id: "value"
      type: "com.google.cloud.bigquery.QueryParameterValue"
    return:
      type: "com.google.cloud.bigquery.QueryJobConfiguration.Builder"
- uid: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.addPositionalParameter(com.google.cloud.bigquery.QueryParameterValue)"
  id: "addPositionalParameter(com.google.cloud.bigquery.QueryParameterValue)"
  parent: "com.google.cloud.bigquery.QueryJobConfiguration.Builder"
  langs:
  - "java"
  name: "addPositionalParameter(QueryParameterValue value)"
  nameWithType: "QueryJobConfiguration.Builder.addPositionalParameter(QueryParameterValue value)"
  fullName: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.addPositionalParameter(QueryParameterValue value)"
  overload: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.addPositionalParameter*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Adds a positional query parameter to the list of query parameters. See <xref uid=\"com.google.cloud.bigquery.QueryJobConfiguration.Builder.setPositionalParameters(java.lang.Iterable&lt;com.google.cloud.bigquery.QueryParameterValue&gt;)\" data-throw-if-not-resolved=\"false\">#setPositionalParameters(Iterable)</xref> for more details on the input requirements.\n\nA positional parameter cannot be added after named parameters have been added."
  syntax:
    content: "public QueryJobConfiguration.Builder addPositionalParameter(QueryParameterValue value)"
    parameters:
    - id: "value"
      type: "com.google.cloud.bigquery.QueryParameterValue"
    return:
      type: "com.google.cloud.bigquery.QueryJobConfiguration.Builder"
- uid: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.addTableDefinition(java.lang.String,com.google.cloud.bigquery.ExternalTableDefinition)"
  id: "addTableDefinition(java.lang.String,com.google.cloud.bigquery.ExternalTableDefinition)"
  parent: "com.google.cloud.bigquery.QueryJobConfiguration.Builder"
  langs:
  - "java"
  name: "addTableDefinition(String tableName, ExternalTableDefinition tableDefinition)"
  nameWithType: "QueryJobConfiguration.Builder.addTableDefinition(String tableName, ExternalTableDefinition tableDefinition)"
  fullName: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.addTableDefinition(String tableName, ExternalTableDefinition tableDefinition)"
  overload: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.addTableDefinition*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Adds a new external table definition. If a definition already exists for `tableName` it is updated."
  syntax:
    content: "public QueryJobConfiguration.Builder addTableDefinition(String tableName, ExternalTableDefinition tableDefinition)"
    parameters:
    - id: "tableName"
      type: "java.lang.String"
      description: "name of the table"
    - id: "tableDefinition"
      type: "com.google.cloud.bigquery.ExternalTableDefinition"
      description: "external data configuration for the table used by this query"
    return:
      type: "com.google.cloud.bigquery.QueryJobConfiguration.Builder"
- uid: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.build()"
  id: "build()"
  parent: "com.google.cloud.bigquery.QueryJobConfiguration.Builder"
  langs:
  - "java"
  name: "build()"
  nameWithType: "QueryJobConfiguration.Builder.build()"
  fullName: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.build()"
  overload: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.build*"
  overridden: "com.google.cloud.bigquery.JobConfiguration.Builder.build()"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Creates an object."
  syntax:
    content: "public QueryJobConfiguration build()"
    return:
      type: "com.google.cloud.bigquery.QueryJobConfiguration"
- uid: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setAllowLargeResults(java.lang.Boolean)"
  id: "setAllowLargeResults(java.lang.Boolean)"
  parent: "com.google.cloud.bigquery.QueryJobConfiguration.Builder"
  langs:
  - "java"
  name: "setAllowLargeResults(Boolean allowLargeResults)"
  nameWithType: "QueryJobConfiguration.Builder.setAllowLargeResults(Boolean allowLargeResults)"
  fullName: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setAllowLargeResults(Boolean allowLargeResults)"
  overload: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setAllowLargeResults*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Sets whether the job is enabled to create arbitrarily large results. If `true` the query is allowed to create large results at a slight cost in performance. If `true` <xref uid=\"\" data-throw-if-not-resolved=\"false\">Builder#setDestinationTable(TableId)</xref> must be provided."
  syntax:
    content: "public QueryJobConfiguration.Builder setAllowLargeResults(Boolean allowLargeResults)"
    parameters:
    - id: "allowLargeResults"
      type: "java.lang.Boolean"
    return:
      type: "com.google.cloud.bigquery.QueryJobConfiguration.Builder"
- uid: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setClustering(com.google.cloud.bigquery.Clustering)"
  id: "setClustering(com.google.cloud.bigquery.Clustering)"
  parent: "com.google.cloud.bigquery.QueryJobConfiguration.Builder"
  langs:
  - "java"
  name: "setClustering(Clustering clustering)"
  nameWithType: "QueryJobConfiguration.Builder.setClustering(Clustering clustering)"
  fullName: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setClustering(Clustering clustering)"
  overload: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setClustering*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Sets the clustering specification for the destination table."
  syntax:
    content: "public QueryJobConfiguration.Builder setClustering(Clustering clustering)"
    parameters:
    - id: "clustering"
      type: "com.google.cloud.bigquery.Clustering"
    return:
      type: "com.google.cloud.bigquery.QueryJobConfiguration.Builder"
- uid: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setConnectionProperties(java.util.List<com.google.cloud.bigquery.ConnectionProperty>)"
  id: "setConnectionProperties(java.util.List<com.google.cloud.bigquery.ConnectionProperty>)"
  parent: "com.google.cloud.bigquery.QueryJobConfiguration.Builder"
  langs:
  - "java"
  name: "setConnectionProperties(List<ConnectionProperty> connectionProperties)"
  nameWithType: "QueryJobConfiguration.Builder.setConnectionProperties(List<ConnectionProperty> connectionProperties)"
  fullName: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setConnectionProperties(List<ConnectionProperty> connectionProperties)"
  overload: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setConnectionProperties*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "A connection-level property to customize query behavior. Under JDBC, these correspond directly to connection properties passed to the DriverManager. Under ODBC, these correspond to properties in the connection string. Currently, the only supported connection property is \"time\\_zone\", whose value represents the default timezone used to run the query. Additional properties are allowed, but ignored. Specifying multiple connection properties with the same key is an error."
  syntax:
    content: "public QueryJobConfiguration.Builder setConnectionProperties(List<ConnectionProperty> connectionProperties)"
    parameters:
    - id: "connectionProperties"
      type: "java.util.List<com.google.cloud.bigquery.ConnectionProperty>"
      description: "connectionProperties or <code>null</code> for none"
    return:
      type: "com.google.cloud.bigquery.QueryJobConfiguration.Builder"
- uid: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setCreateDisposition(com.google.cloud.bigquery.JobInfo.CreateDisposition)"
  id: "setCreateDisposition(com.google.cloud.bigquery.JobInfo.CreateDisposition)"
  parent: "com.google.cloud.bigquery.QueryJobConfiguration.Builder"
  langs:
  - "java"
  name: "setCreateDisposition(JobInfo.CreateDisposition createDisposition)"
  nameWithType: "QueryJobConfiguration.Builder.setCreateDisposition(JobInfo.CreateDisposition createDisposition)"
  fullName: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setCreateDisposition(JobInfo.CreateDisposition createDisposition)"
  overload: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setCreateDisposition*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Sets whether the job is allowed to create tables."
  syntax:
    content: "public QueryJobConfiguration.Builder setCreateDisposition(JobInfo.CreateDisposition createDisposition)"
    parameters:
    - id: "createDisposition"
      type: "com.google.cloud.bigquery.JobInfo.CreateDisposition"
    return:
      type: "com.google.cloud.bigquery.QueryJobConfiguration.Builder"
- uid: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setDefaultDataset(com.google.cloud.bigquery.DatasetId)"
  id: "setDefaultDataset(com.google.cloud.bigquery.DatasetId)"
  parent: "com.google.cloud.bigquery.QueryJobConfiguration.Builder"
  langs:
  - "java"
  name: "setDefaultDataset(DatasetId defaultDataset)"
  nameWithType: "QueryJobConfiguration.Builder.setDefaultDataset(DatasetId defaultDataset)"
  fullName: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setDefaultDataset(DatasetId defaultDataset)"
  overload: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setDefaultDataset*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Sets the default dataset. This dataset is used for all unqualified table names used in the query."
  syntax:
    content: "public QueryJobConfiguration.Builder setDefaultDataset(DatasetId defaultDataset)"
    parameters:
    - id: "defaultDataset"
      type: "com.google.cloud.bigquery.DatasetId"
    return:
      type: "com.google.cloud.bigquery.QueryJobConfiguration.Builder"
- uid: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setDefaultDataset(java.lang.String)"
  id: "setDefaultDataset(java.lang.String)"
  parent: "com.google.cloud.bigquery.QueryJobConfiguration.Builder"
  langs:
  - "java"
  name: "setDefaultDataset(String defaultDataset)"
  nameWithType: "QueryJobConfiguration.Builder.setDefaultDataset(String defaultDataset)"
  fullName: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setDefaultDataset(String defaultDataset)"
  overload: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setDefaultDataset*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Sets the default dataset. This dataset is used for all unqualified table names used in the query."
  syntax:
    content: "public QueryJobConfiguration.Builder setDefaultDataset(String defaultDataset)"
    parameters:
    - id: "defaultDataset"
      type: "java.lang.String"
    return:
      type: "com.google.cloud.bigquery.QueryJobConfiguration.Builder"
- uid: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setDestinationEncryptionConfiguration(com.google.cloud.bigquery.EncryptionConfiguration)"
  id: "setDestinationEncryptionConfiguration(com.google.cloud.bigquery.EncryptionConfiguration)"
  parent: "com.google.cloud.bigquery.QueryJobConfiguration.Builder"
  langs:
  - "java"
  name: "setDestinationEncryptionConfiguration(EncryptionConfiguration encryptionConfiguration)"
  nameWithType: "QueryJobConfiguration.Builder.setDestinationEncryptionConfiguration(EncryptionConfiguration encryptionConfiguration)"
  fullName: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setDestinationEncryptionConfiguration(EncryptionConfiguration encryptionConfiguration)"
  overload: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setDestinationEncryptionConfiguration*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public QueryJobConfiguration.Builder setDestinationEncryptionConfiguration(EncryptionConfiguration encryptionConfiguration)"
    parameters:
    - id: "encryptionConfiguration"
      type: "com.google.cloud.bigquery.EncryptionConfiguration"
    return:
      type: "com.google.cloud.bigquery.QueryJobConfiguration.Builder"
- uid: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setDestinationTable(com.google.cloud.bigquery.TableId)"
  id: "setDestinationTable(com.google.cloud.bigquery.TableId)"
  parent: "com.google.cloud.bigquery.QueryJobConfiguration.Builder"
  langs:
  - "java"
  name: "setDestinationTable(TableId destinationTable)"
  nameWithType: "QueryJobConfiguration.Builder.setDestinationTable(TableId destinationTable)"
  fullName: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setDestinationTable(TableId destinationTable)"
  overload: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setDestinationTable*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Sets the table where to put query results. If not provided a new table is created. This value is required if <xref uid=\"\" data-throw-if-not-resolved=\"false\">Builder#setAllowLargeResults(Boolean)</xref> is set to `true`."
  syntax:
    content: "public QueryJobConfiguration.Builder setDestinationTable(TableId destinationTable)"
    parameters:
    - id: "destinationTable"
      type: "com.google.cloud.bigquery.TableId"
    return:
      type: "com.google.cloud.bigquery.QueryJobConfiguration.Builder"
- uid: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setDryRun(java.lang.Boolean)"
  id: "setDryRun(java.lang.Boolean)"
  parent: "com.google.cloud.bigquery.QueryJobConfiguration.Builder"
  langs:
  - "java"
  name: "setDryRun(Boolean dryRun)"
  nameWithType: "QueryJobConfiguration.Builder.setDryRun(Boolean dryRun)"
  fullName: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setDryRun(Boolean dryRun)"
  overload: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setDryRun*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Sets whether the job has to be dry run or not. If set, the job is not executed. A valid query will return a mostly empty response with some processing statistics, while an invalid query will return the same error it would if it wasn't a dry run."
  syntax:
    content: "public QueryJobConfiguration.Builder setDryRun(Boolean dryRun)"
    parameters:
    - id: "dryRun"
      type: "java.lang.Boolean"
    return:
      type: "com.google.cloud.bigquery.QueryJobConfiguration.Builder"
- uid: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setFlattenResults(java.lang.Boolean)"
  id: "setFlattenResults(java.lang.Boolean)"
  parent: "com.google.cloud.bigquery.QueryJobConfiguration.Builder"
  langs:
  - "java"
  name: "setFlattenResults(Boolean flattenResults)"
  nameWithType: "QueryJobConfiguration.Builder.setFlattenResults(Boolean flattenResults)"
  fullName: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setFlattenResults(Boolean flattenResults)"
  overload: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setFlattenResults*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Sets whether nested and repeated fields should be flattened. If set to `false` <xref uid=\"\" data-throw-if-not-resolved=\"false\">Builder#setAllowLargeResults(Boolean)</xref> must be `true`. By default results are flattened."
  syntax:
    content: "public QueryJobConfiguration.Builder setFlattenResults(Boolean flattenResults)"
    parameters:
    - id: "flattenResults"
      type: "java.lang.Boolean"
    return:
      type: "com.google.cloud.bigquery.QueryJobConfiguration.Builder"
- uid: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setJobTimeoutMs(java.lang.Long)"
  id: "setJobTimeoutMs(java.lang.Long)"
  parent: "com.google.cloud.bigquery.QueryJobConfiguration.Builder"
  langs:
  - "java"
  name: "setJobTimeoutMs(Long jobTimeoutMs)"
  nameWithType: "QueryJobConfiguration.Builder.setJobTimeoutMs(Long jobTimeoutMs)"
  fullName: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setJobTimeoutMs(Long jobTimeoutMs)"
  overload: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setJobTimeoutMs*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "\\[Optional\\] Job timeout in milliseconds. If this time limit is exceeded, BigQuery may attempt to terminate the job."
  syntax:
    content: "public QueryJobConfiguration.Builder setJobTimeoutMs(Long jobTimeoutMs)"
    parameters:
    - id: "jobTimeoutMs"
      type: "java.lang.Long"
      description: "jobTimeoutMs or <code>null</code> for none"
    return:
      type: "com.google.cloud.bigquery.QueryJobConfiguration.Builder"
- uid: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setLabels(java.util.Map<java.lang.String,java.lang.String>)"
  id: "setLabels(java.util.Map<java.lang.String,java.lang.String>)"
  parent: "com.google.cloud.bigquery.QueryJobConfiguration.Builder"
  langs:
  - "java"
  name: "setLabels(Map<String,String> labels)"
  nameWithType: "QueryJobConfiguration.Builder.setLabels(Map<String,String> labels)"
  fullName: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setLabels(Map<String,String> labels)"
  overload: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setLabels*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "The labels associated with this job. You can use these to organize and group your jobs. Label keys and values can be no longer than 63 characters, can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. Label values are optional. Label keys must start with a letter and each label in the list must have a different key."
  syntax:
    content: "public QueryJobConfiguration.Builder setLabels(Map<String,String> labels)"
    parameters:
    - id: "labels"
      type: "java.util.Map<java.lang.String,java.lang.String>"
      description: "labels or <code>null</code> for none"
    return:
      type: "com.google.cloud.bigquery.QueryJobConfiguration.Builder"
- uid: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setMaxResults(java.lang.Long)"
  id: "setMaxResults(java.lang.Long)"
  parent: "com.google.cloud.bigquery.QueryJobConfiguration.Builder"
  langs:
  - "java"
  name: "setMaxResults(Long maxResults)"
  nameWithType: "QueryJobConfiguration.Builder.setMaxResults(Long maxResults)"
  fullName: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setMaxResults(Long maxResults)"
  overload: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setMaxResults*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "This is only supported in the fast query path \\[Optional\\] The maximum number of rows of data to return per page of results. Setting this flag to a small value such as 1000 and then paging through results might improve reliability when the query result set is large. In addition to this limit, responses are also limited to 10 MB. By default, there is no maximum row count, and only the byte limit applies."
  syntax:
    content: "public QueryJobConfiguration.Builder setMaxResults(Long maxResults)"
    parameters:
    - id: "maxResults"
      type: "java.lang.Long"
      description: "maxResults or <code>null</code> for none"
    return:
      type: "com.google.cloud.bigquery.QueryJobConfiguration.Builder"
- uid: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setMaximumBillingTier(java.lang.Integer)"
  id: "setMaximumBillingTier(java.lang.Integer)"
  parent: "com.google.cloud.bigquery.QueryJobConfiguration.Builder"
  langs:
  - "java"
  name: "setMaximumBillingTier(Integer maximumBillingTier)"
  nameWithType: "QueryJobConfiguration.Builder.setMaximumBillingTier(Integer maximumBillingTier)"
  fullName: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setMaximumBillingTier(Integer maximumBillingTier)"
  overload: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setMaximumBillingTier*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Limits the billing tier for this job. Queries that have resource usage beyond this tier will fail (without incurring a charge). If unspecified, this will be set to your project default."
  syntax:
    content: "public QueryJobConfiguration.Builder setMaximumBillingTier(Integer maximumBillingTier)"
    parameters:
    - id: "maximumBillingTier"
      type: "java.lang.Integer"
      description: "maximum billing tier for this job"
    return:
      type: "com.google.cloud.bigquery.QueryJobConfiguration.Builder"
- uid: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setMaximumBytesBilled(java.lang.Long)"
  id: "setMaximumBytesBilled(java.lang.Long)"
  parent: "com.google.cloud.bigquery.QueryJobConfiguration.Builder"
  langs:
  - "java"
  name: "setMaximumBytesBilled(Long maximumBytesBilled)"
  nameWithType: "QueryJobConfiguration.Builder.setMaximumBytesBilled(Long maximumBytesBilled)"
  fullName: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setMaximumBytesBilled(Long maximumBytesBilled)"
  overload: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setMaximumBytesBilled*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Limits the bytes billed for this job. Queries that will have bytes billed beyond this limit will fail (without incurring a charge). If unspecified, this will be set to your project default."
  syntax:
    content: "public QueryJobConfiguration.Builder setMaximumBytesBilled(Long maximumBytesBilled)"
    parameters:
    - id: "maximumBytesBilled"
      type: "java.lang.Long"
      description: "maximum bytes billed for this job"
    return:
      type: "com.google.cloud.bigquery.QueryJobConfiguration.Builder"
- uid: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setNamedParameters(java.util.Map<java.lang.String,com.google.cloud.bigquery.QueryParameterValue>)"
  id: "setNamedParameters(java.util.Map<java.lang.String,com.google.cloud.bigquery.QueryParameterValue>)"
  parent: "com.google.cloud.bigquery.QueryJobConfiguration.Builder"
  langs:
  - "java"
  name: "setNamedParameters(Map<String,QueryParameterValue> values)"
  nameWithType: "QueryJobConfiguration.Builder.setNamedParameters(Map<String,QueryParameterValue> values)"
  fullName: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setNamedParameters(Map<String,QueryParameterValue> values)"
  overload: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setNamedParameters*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Sets the query parameters to a set of named query parameters to use in the query.\n\nThe set of query parameters must either be all positional or all named parameters. Named parameters are denoted using an @ prefix, e.g. @myParam for a parameter named \"myParam\".\n\nAdditionally, useLegacySql must be set to false; query parameters cannot be used with legacy SQL.\n\nThe values parameter can be set to null to clear out the named parameters so that positional parameters can be used instead."
  syntax:
    content: "public QueryJobConfiguration.Builder setNamedParameters(Map<String,QueryParameterValue> values)"
    parameters:
    - id: "values"
      type: "java.util.Map<java.lang.String,com.google.cloud.bigquery.QueryParameterValue>"
    return:
      type: "com.google.cloud.bigquery.QueryJobConfiguration.Builder"
- uid: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setPositionalParameters(java.lang.Iterable<com.google.cloud.bigquery.QueryParameterValue>)"
  id: "setPositionalParameters(java.lang.Iterable<com.google.cloud.bigquery.QueryParameterValue>)"
  parent: "com.google.cloud.bigquery.QueryJobConfiguration.Builder"
  langs:
  - "java"
  name: "setPositionalParameters(Iterable<QueryParameterValue> values)"
  nameWithType: "QueryJobConfiguration.Builder.setPositionalParameters(Iterable<QueryParameterValue> values)"
  fullName: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setPositionalParameters(Iterable<QueryParameterValue> values)"
  overload: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setPositionalParameters*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Sets the query parameters to a list of positional query parameters to use in the query.\n\nThe set of query parameters must either be all positional or all named parameters. Positional parameters are denoted in the query with a question mark (?).\n\nAdditionally, useLegacySql must be set to false; query parameters cannot be used with legacy SQL.\n\nThe values parameter can be set to null to clear out the positional parameters so that named parameters can be used instead."
  syntax:
    content: "public QueryJobConfiguration.Builder setPositionalParameters(Iterable<QueryParameterValue> values)"
    parameters:
    - id: "values"
      type: "java.lang.Iterable<com.google.cloud.bigquery.QueryParameterValue>"
    return:
      type: "com.google.cloud.bigquery.QueryJobConfiguration.Builder"
- uid: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setPriority(com.google.cloud.bigquery.QueryJobConfiguration.Priority)"
  id: "setPriority(com.google.cloud.bigquery.QueryJobConfiguration.Priority)"
  parent: "com.google.cloud.bigquery.QueryJobConfiguration.Builder"
  langs:
  - "java"
  name: "setPriority(QueryJobConfiguration.Priority priority)"
  nameWithType: "QueryJobConfiguration.Builder.setPriority(QueryJobConfiguration.Priority priority)"
  fullName: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setPriority(QueryJobConfiguration.Priority priority)"
  overload: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setPriority*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Sets a priority for the query. If not specified the priority is assumed to be <xref uid=\"\" data-throw-if-not-resolved=\"false\">Priority#INTERACTIVE</xref>."
  syntax:
    content: "public QueryJobConfiguration.Builder setPriority(QueryJobConfiguration.Priority priority)"
    parameters:
    - id: "priority"
      type: "com.google.cloud.bigquery.QueryJobConfiguration.Priority"
    return:
      type: "com.google.cloud.bigquery.QueryJobConfiguration.Builder"
- uid: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setQuery(java.lang.String)"
  id: "setQuery(java.lang.String)"
  parent: "com.google.cloud.bigquery.QueryJobConfiguration.Builder"
  langs:
  - "java"
  name: "setQuery(String query)"
  nameWithType: "QueryJobConfiguration.Builder.setQuery(String query)"
  fullName: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setQuery(String query)"
  overload: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setQuery*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Sets the BigQuery SQL query to execute."
  syntax:
    content: "public QueryJobConfiguration.Builder setQuery(String query)"
    parameters:
    - id: "query"
      type: "java.lang.String"
    return:
      type: "com.google.cloud.bigquery.QueryJobConfiguration.Builder"
- uid: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setRangePartitioning(com.google.cloud.bigquery.RangePartitioning)"
  id: "setRangePartitioning(com.google.cloud.bigquery.RangePartitioning)"
  parent: "com.google.cloud.bigquery.QueryJobConfiguration.Builder"
  langs:
  - "java"
  name: "setRangePartitioning(RangePartitioning rangePartitioning)"
  nameWithType: "QueryJobConfiguration.Builder.setRangePartitioning(RangePartitioning rangePartitioning)"
  fullName: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setRangePartitioning(RangePartitioning rangePartitioning)"
  overload: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setRangePartitioning*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Range partitioning specification for this table. Only one of timePartitioning and rangePartitioning should be specified."
  syntax:
    content: "public QueryJobConfiguration.Builder setRangePartitioning(RangePartitioning rangePartitioning)"
    parameters:
    - id: "rangePartitioning"
      type: "com.google.cloud.bigquery.RangePartitioning"
      description: "rangePartitioning or <code>null</code> for none"
    return:
      type: "com.google.cloud.bigquery.QueryJobConfiguration.Builder"
- uid: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setSchemaUpdateOptions(java.util.List<com.google.cloud.bigquery.JobInfo.SchemaUpdateOption>)"
  id: "setSchemaUpdateOptions(java.util.List<com.google.cloud.bigquery.JobInfo.SchemaUpdateOption>)"
  parent: "com.google.cloud.bigquery.QueryJobConfiguration.Builder"
  langs:
  - "java"
  name: "setSchemaUpdateOptions(List<JobInfo.SchemaUpdateOption> schemaUpdateOptions)"
  nameWithType: "QueryJobConfiguration.Builder.setSchemaUpdateOptions(List<JobInfo.SchemaUpdateOption> schemaUpdateOptions)"
  fullName: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setSchemaUpdateOptions(List<JobInfo.SchemaUpdateOption> schemaUpdateOptions)"
  overload: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setSchemaUpdateOptions*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "\\[Experimental\\] Sets options allowing the schema of the destination table to be updated as a side effect of the query job. Schema update options are supported in two cases: when writeDisposition is WRITE\\_APPEND; when writeDisposition is WRITE\\_TRUNCATE and the destination table is a partition of a table, specified by partition decorators. For normal tables, WRITE\\_TRUNCATE will always overwrite the schema."
  syntax:
    content: "public QueryJobConfiguration.Builder setSchemaUpdateOptions(List<JobInfo.SchemaUpdateOption> schemaUpdateOptions)"
    parameters:
    - id: "schemaUpdateOptions"
      type: "java.util.List<com.google.cloud.bigquery.JobInfo.SchemaUpdateOption>"
    return:
      type: "com.google.cloud.bigquery.QueryJobConfiguration.Builder"
- uid: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setTableDefinitions(java.util.Map<java.lang.String,com.google.cloud.bigquery.ExternalTableDefinition>)"
  id: "setTableDefinitions(java.util.Map<java.lang.String,com.google.cloud.bigquery.ExternalTableDefinition>)"
  parent: "com.google.cloud.bigquery.QueryJobConfiguration.Builder"
  langs:
  - "java"
  name: "setTableDefinitions(Map<String,ExternalTableDefinition> tableDefinitions)"
  nameWithType: "QueryJobConfiguration.Builder.setTableDefinitions(Map<String,ExternalTableDefinition> tableDefinitions)"
  fullName: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setTableDefinitions(Map<String,ExternalTableDefinition> tableDefinitions)"
  overload: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setTableDefinitions*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Sets the external tables definitions. If querying external data sources outside of BigQuery, this value describes the data format, location and other properties of the data sources. By defining these properties, the data sources can be queried as if they were standard BigQuery tables."
  syntax:
    content: "public QueryJobConfiguration.Builder setTableDefinitions(Map<String,ExternalTableDefinition> tableDefinitions)"
    parameters:
    - id: "tableDefinitions"
      type: "java.util.Map<java.lang.String,com.google.cloud.bigquery.ExternalTableDefinition>"
    return:
      type: "com.google.cloud.bigquery.QueryJobConfiguration.Builder"
- uid: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setTimePartitioning(com.google.cloud.bigquery.TimePartitioning)"
  id: "setTimePartitioning(com.google.cloud.bigquery.TimePartitioning)"
  parent: "com.google.cloud.bigquery.QueryJobConfiguration.Builder"
  langs:
  - "java"
  name: "setTimePartitioning(TimePartitioning timePartitioning)"
  nameWithType: "QueryJobConfiguration.Builder.setTimePartitioning(TimePartitioning timePartitioning)"
  fullName: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setTimePartitioning(TimePartitioning timePartitioning)"
  overload: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setTimePartitioning*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Sets the time partitioning specification for the destination table."
  syntax:
    content: "public QueryJobConfiguration.Builder setTimePartitioning(TimePartitioning timePartitioning)"
    parameters:
    - id: "timePartitioning"
      type: "com.google.cloud.bigquery.TimePartitioning"
    return:
      type: "com.google.cloud.bigquery.QueryJobConfiguration.Builder"
- uid: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setUseLegacySql(java.lang.Boolean)"
  id: "setUseLegacySql(java.lang.Boolean)"
  parent: "com.google.cloud.bigquery.QueryJobConfiguration.Builder"
  langs:
  - "java"
  name: "setUseLegacySql(Boolean useLegacySql)"
  nameWithType: "QueryJobConfiguration.Builder.setUseLegacySql(Boolean useLegacySql)"
  fullName: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setUseLegacySql(Boolean useLegacySql)"
  overload: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setUseLegacySql*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Sets whether to use BigQuery's legacy SQL dialect for this query. By default this property is set to `false`. If set to `false`, the query will use BigQuery's [Standard SQL][]. When set to `false`, the values of <xref uid=\"com.google.cloud.bigquery.QueryJobConfiguration.Builder.setAllowLargeResults(java.lang.Boolean)\" data-throw-if-not-resolved=\"false\">#setAllowLargeResults(Boolean)</xref> and <xref uid=\"com.google.cloud.bigquery.QueryJobConfiguration.Builder.setFlattenResults(java.lang.Boolean)\" data-throw-if-not-resolved=\"false\">#setFlattenResults(Boolean)</xref> are ignored; query will be run as if <xref uid=\"com.google.cloud.bigquery.QueryJobConfiguration.Builder.setAllowLargeResults(java.lang.Boolean)\" data-throw-if-not-resolved=\"false\">#setAllowLargeResults(Boolean)</xref> is `true` and <xref uid=\"com.google.cloud.bigquery.QueryJobConfiguration.Builder.setFlattenResults(java.lang.Boolean)\" data-throw-if-not-resolved=\"false\">#setFlattenResults(Boolean)</xref> is `false`.\n\nIf set to `null` or `true`, legacy SQL dialect is used. This property is experimental and might be subject to change.\n\n\n[Standard SQL]: https://cloud.google.com/bigquery/sql-reference/"
  syntax:
    content: "public QueryJobConfiguration.Builder setUseLegacySql(Boolean useLegacySql)"
    parameters:
    - id: "useLegacySql"
      type: "java.lang.Boolean"
    return:
      type: "com.google.cloud.bigquery.QueryJobConfiguration.Builder"
- uid: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setUseQueryCache(java.lang.Boolean)"
  id: "setUseQueryCache(java.lang.Boolean)"
  parent: "com.google.cloud.bigquery.QueryJobConfiguration.Builder"
  langs:
  - "java"
  name: "setUseQueryCache(Boolean useQueryCache)"
  nameWithType: "QueryJobConfiguration.Builder.setUseQueryCache(Boolean useQueryCache)"
  fullName: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setUseQueryCache(Boolean useQueryCache)"
  overload: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setUseQueryCache*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Sets whether to look for the result in the query cache. The query cache is a best-effort cache that will be flushed whenever tables in the query are modified. Moreover, the query cache is only available when <xref uid=\"\" data-throw-if-not-resolved=\"false\">Builder#setDestinationTable(TableId)</xref> is not set."
  syntax:
    content: "public QueryJobConfiguration.Builder setUseQueryCache(Boolean useQueryCache)"
    parameters:
    - id: "useQueryCache"
      type: "java.lang.Boolean"
    return:
      type: "com.google.cloud.bigquery.QueryJobConfiguration.Builder"
- uid: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setUserDefinedFunctions(java.util.List<com.google.cloud.bigquery.UserDefinedFunction>)"
  id: "setUserDefinedFunctions(java.util.List<com.google.cloud.bigquery.UserDefinedFunction>)"
  parent: "com.google.cloud.bigquery.QueryJobConfiguration.Builder"
  langs:
  - "java"
  name: "setUserDefinedFunctions(List<UserDefinedFunction> userDefinedFunctions)"
  nameWithType: "QueryJobConfiguration.Builder.setUserDefinedFunctions(List<UserDefinedFunction> userDefinedFunctions)"
  fullName: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setUserDefinedFunctions(List<UserDefinedFunction> userDefinedFunctions)"
  overload: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setUserDefinedFunctions*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Sets user defined function resources that can be used by this query. Function resources can either be defined inline (<xref uid=\"com.google.cloud.bigquery.UserDefinedFunction.inline(java.lang.String)\" data-throw-if-not-resolved=\"false\">UserDefinedFunction#inline(String)</xref>) or loaded from a Google Cloud Storage URI (<xref uid=\"com.google.cloud.bigquery.UserDefinedFunction.fromUri(java.lang.String)\" data-throw-if-not-resolved=\"false\">UserDefinedFunction#fromUri(String)</xref>."
  syntax:
    content: "public QueryJobConfiguration.Builder setUserDefinedFunctions(List<UserDefinedFunction> userDefinedFunctions)"
    parameters:
    - id: "userDefinedFunctions"
      type: "java.util.List<com.google.cloud.bigquery.UserDefinedFunction>"
    return:
      type: "com.google.cloud.bigquery.QueryJobConfiguration.Builder"
- uid: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setWriteDisposition(com.google.cloud.bigquery.JobInfo.WriteDisposition)"
  id: "setWriteDisposition(com.google.cloud.bigquery.JobInfo.WriteDisposition)"
  parent: "com.google.cloud.bigquery.QueryJobConfiguration.Builder"
  langs:
  - "java"
  name: "setWriteDisposition(JobInfo.WriteDisposition writeDisposition)"
  nameWithType: "QueryJobConfiguration.Builder.setWriteDisposition(JobInfo.WriteDisposition writeDisposition)"
  fullName: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setWriteDisposition(JobInfo.WriteDisposition writeDisposition)"
  overload: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setWriteDisposition*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Sets the action that should occur if the destination table already exists."
  syntax:
    content: "public QueryJobConfiguration.Builder setWriteDisposition(JobInfo.WriteDisposition writeDisposition)"
    parameters:
    - id: "writeDisposition"
      type: "com.google.cloud.bigquery.JobInfo.WriteDisposition"
    return:
      type: "com.google.cloud.bigquery.QueryJobConfiguration.Builder"
references:
- uid: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.Builder*"
  name: "Builder"
  nameWithType: "QueryJobConfiguration.Builder.Builder"
  fullName: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.Builder"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.QueryJobConfiguration"
  name: "QueryJobConfiguration"
  nameWithType: "QueryJobConfiguration"
  fullName: "com.google.cloud.bigquery.QueryJobConfiguration"
- uid: "com.google.api.services.bigquery.model.JobConfiguration"
  spec.java:
  - uid: "com.google.api.services.bigquery.model.JobConfiguration"
    name: "JobConfiguration"
    fullName: "com.google.api.services.bigquery.model.JobConfiguration"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setQuery*"
  name: "setQuery"
  nameWithType: "QueryJobConfiguration.Builder.setQuery"
  fullName: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setQuery"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.QueryParameterValue"
  name: "QueryParameterValue"
  nameWithType: "QueryParameterValue"
  fullName: "com.google.cloud.bigquery.QueryParameterValue"
- uid: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.addPositionalParameter*"
  name: "addPositionalParameter"
  nameWithType: "QueryJobConfiguration.Builder.addPositionalParameter"
  fullName: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.addPositionalParameter"
  package: "com.google.cloud.bigquery"
- uid: "java.lang.Iterable<com.google.cloud.bigquery.QueryParameterValue>"
  spec.java:
  - uid: "java.lang.Iterable"
    name: "Iterable"
    fullName: "java.lang.Iterable"
  - name: "<"
    fullName: "<"
  - uid: "com.google.cloud.bigquery.QueryParameterValue"
    name: "QueryParameterValue"
    fullName: "com.google.cloud.bigquery.QueryParameterValue"
  - name: ">"
    fullName: ">"
- uid: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setPositionalParameters*"
  name: "setPositionalParameters"
  nameWithType: "QueryJobConfiguration.Builder.setPositionalParameters"
  fullName: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setPositionalParameters"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.addNamedParameter*"
  name: "addNamedParameter"
  nameWithType: "QueryJobConfiguration.Builder.addNamedParameter"
  fullName: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.addNamedParameter"
  package: "com.google.cloud.bigquery"
- uid: "java.util.Map<java.lang.String,com.google.cloud.bigquery.QueryParameterValue>"
  spec.java:
  - uid: "java.util.Map"
    name: "Map"
    fullName: "java.util.Map"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ","
    fullName: ","
  - uid: "com.google.cloud.bigquery.QueryParameterValue"
    name: "QueryParameterValue"
    fullName: "com.google.cloud.bigquery.QueryParameterValue"
  - name: ">"
    fullName: ">"
- uid: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setNamedParameters*"
  name: "setNamedParameters"
  nameWithType: "QueryJobConfiguration.Builder.setNamedParameters"
  fullName: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setNamedParameters"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.TableId"
  name: "TableId"
  nameWithType: "TableId"
  fullName: "com.google.cloud.bigquery.TableId"
- uid: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setDestinationTable*"
  name: "setDestinationTable"
  nameWithType: "QueryJobConfiguration.Builder.setDestinationTable"
  fullName: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setDestinationTable"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.EncryptionConfiguration"
  name: "EncryptionConfiguration"
  nameWithType: "EncryptionConfiguration"
  fullName: "com.google.cloud.bigquery.EncryptionConfiguration"
- uid: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setDestinationEncryptionConfiguration*"
  name: "setDestinationEncryptionConfiguration"
  nameWithType: "QueryJobConfiguration.Builder.setDestinationEncryptionConfiguration"
  fullName: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setDestinationEncryptionConfiguration"
  package: "com.google.cloud.bigquery"
- uid: "java.util.Map<java.lang.String,com.google.cloud.bigquery.ExternalTableDefinition>"
  spec.java:
  - uid: "java.util.Map"
    name: "Map"
    fullName: "java.util.Map"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ","
    fullName: ","
  - uid: "com.google.cloud.bigquery.ExternalTableDefinition"
    name: "ExternalTableDefinition"
    fullName: "com.google.cloud.bigquery.ExternalTableDefinition"
  - name: ">"
    fullName: ">"
- uid: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setTableDefinitions*"
  name: "setTableDefinitions"
  nameWithType: "QueryJobConfiguration.Builder.setTableDefinitions"
  fullName: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setTableDefinitions"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.ExternalTableDefinition"
  name: "ExternalTableDefinition"
  nameWithType: "ExternalTableDefinition"
  fullName: "com.google.cloud.bigquery.ExternalTableDefinition"
- uid: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.addTableDefinition*"
  name: "addTableDefinition"
  nameWithType: "QueryJobConfiguration.Builder.addTableDefinition"
  fullName: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.addTableDefinition"
  package: "com.google.cloud.bigquery"
- uid: "java.util.List<com.google.cloud.bigquery.UserDefinedFunction>"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "com.google.cloud.bigquery.UserDefinedFunction"
    name: "UserDefinedFunction"
    fullName: "com.google.cloud.bigquery.UserDefinedFunction"
  - name: ">"
    fullName: ">"
- uid: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setUserDefinedFunctions*"
  name: "setUserDefinedFunctions"
  nameWithType: "QueryJobConfiguration.Builder.setUserDefinedFunctions"
  fullName: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setUserDefinedFunctions"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.JobInfo.CreateDisposition"
  name: "JobInfo.CreateDisposition"
  nameWithType: "JobInfo.CreateDisposition"
  fullName: "com.google.cloud.bigquery.JobInfo.CreateDisposition"
- uid: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setCreateDisposition*"
  name: "setCreateDisposition"
  nameWithType: "QueryJobConfiguration.Builder.setCreateDisposition"
  fullName: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setCreateDisposition"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.JobInfo.WriteDisposition"
  name: "JobInfo.WriteDisposition"
  nameWithType: "JobInfo.WriteDisposition"
  fullName: "com.google.cloud.bigquery.JobInfo.WriteDisposition"
- uid: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setWriteDisposition*"
  name: "setWriteDisposition"
  nameWithType: "QueryJobConfiguration.Builder.setWriteDisposition"
  fullName: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setWriteDisposition"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.DatasetId"
  name: "DatasetId"
  nameWithType: "DatasetId"
  fullName: "com.google.cloud.bigquery.DatasetId"
- uid: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setDefaultDataset*"
  name: "setDefaultDataset"
  nameWithType: "QueryJobConfiguration.Builder.setDefaultDataset"
  fullName: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setDefaultDataset"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.QueryJobConfiguration.Priority"
  name: "QueryJobConfiguration.Priority"
  nameWithType: "QueryJobConfiguration.Priority"
  fullName: "com.google.cloud.bigquery.QueryJobConfiguration.Priority"
- uid: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setPriority*"
  name: "setPriority"
  nameWithType: "QueryJobConfiguration.Builder.setPriority"
  fullName: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setPriority"
  package: "com.google.cloud.bigquery"
- uid: "java.lang.Boolean"
  spec.java:
  - uid: "java.lang.Boolean"
    name: "Boolean"
    fullName: "java.lang.Boolean"
- uid: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setAllowLargeResults*"
  name: "setAllowLargeResults"
  nameWithType: "QueryJobConfiguration.Builder.setAllowLargeResults"
  fullName: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setAllowLargeResults"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setUseQueryCache*"
  name: "setUseQueryCache"
  nameWithType: "QueryJobConfiguration.Builder.setUseQueryCache"
  fullName: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setUseQueryCache"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setFlattenResults*"
  name: "setFlattenResults"
  nameWithType: "QueryJobConfiguration.Builder.setFlattenResults"
  fullName: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setFlattenResults"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setDryRun*"
  name: "setDryRun"
  nameWithType: "QueryJobConfiguration.Builder.setDryRun"
  fullName: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setDryRun"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setUseLegacySql*"
  name: "setUseLegacySql"
  nameWithType: "QueryJobConfiguration.Builder.setUseLegacySql"
  fullName: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setUseLegacySql"
  package: "com.google.cloud.bigquery"
- uid: "java.lang.Integer"
  spec.java:
  - uid: "java.lang.Integer"
    name: "Integer"
    fullName: "java.lang.Integer"
- uid: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setMaximumBillingTier*"
  name: "setMaximumBillingTier"
  nameWithType: "QueryJobConfiguration.Builder.setMaximumBillingTier"
  fullName: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setMaximumBillingTier"
  package: "com.google.cloud.bigquery"
- uid: "java.lang.Long"
  spec.java:
  - uid: "java.lang.Long"
    name: "Long"
    fullName: "java.lang.Long"
- uid: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setMaximumBytesBilled*"
  name: "setMaximumBytesBilled"
  nameWithType: "QueryJobConfiguration.Builder.setMaximumBytesBilled"
  fullName: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setMaximumBytesBilled"
  package: "com.google.cloud.bigquery"
- uid: "java.util.List<com.google.cloud.bigquery.JobInfo.SchemaUpdateOption>"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "com.google.cloud.bigquery.JobInfo.SchemaUpdateOption"
    name: "SchemaUpdateOption"
    fullName: "com.google.cloud.bigquery.JobInfo.SchemaUpdateOption"
  - name: ">"
    fullName: ">"
- uid: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setSchemaUpdateOptions*"
  name: "setSchemaUpdateOptions"
  nameWithType: "QueryJobConfiguration.Builder.setSchemaUpdateOptions"
  fullName: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setSchemaUpdateOptions"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.TimePartitioning"
  name: "TimePartitioning"
  nameWithType: "TimePartitioning"
  fullName: "com.google.cloud.bigquery.TimePartitioning"
- uid: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setTimePartitioning*"
  name: "setTimePartitioning"
  nameWithType: "QueryJobConfiguration.Builder.setTimePartitioning"
  fullName: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setTimePartitioning"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.Clustering"
  name: "Clustering"
  nameWithType: "Clustering"
  fullName: "com.google.cloud.bigquery.Clustering"
- uid: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setClustering*"
  name: "setClustering"
  nameWithType: "QueryJobConfiguration.Builder.setClustering"
  fullName: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setClustering"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setJobTimeoutMs*"
  name: "setJobTimeoutMs"
  nameWithType: "QueryJobConfiguration.Builder.setJobTimeoutMs"
  fullName: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setJobTimeoutMs"
  package: "com.google.cloud.bigquery"
- uid: "java.util.Map<java.lang.String,java.lang.String>"
  spec.java:
  - uid: "java.util.Map"
    name: "Map"
    fullName: "java.util.Map"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ","
    fullName: ","
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ">"
    fullName: ">"
- uid: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setLabels*"
  name: "setLabels"
  nameWithType: "QueryJobConfiguration.Builder.setLabels"
  fullName: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setLabels"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.RangePartitioning"
  name: "RangePartitioning"
  nameWithType: "RangePartitioning"
  fullName: "com.google.cloud.bigquery.RangePartitioning"
- uid: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setRangePartitioning*"
  name: "setRangePartitioning"
  nameWithType: "QueryJobConfiguration.Builder.setRangePartitioning"
  fullName: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setRangePartitioning"
  package: "com.google.cloud.bigquery"
- uid: "java.util.List<com.google.cloud.bigquery.ConnectionProperty>"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "com.google.cloud.bigquery.ConnectionProperty"
    name: "ConnectionProperty"
    fullName: "com.google.cloud.bigquery.ConnectionProperty"
  - name: ">"
    fullName: ">"
- uid: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setConnectionProperties*"
  name: "setConnectionProperties"
  nameWithType: "QueryJobConfiguration.Builder.setConnectionProperties"
  fullName: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setConnectionProperties"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setMaxResults*"
  name: "setMaxResults"
  nameWithType: "QueryJobConfiguration.Builder.setMaxResults"
  fullName: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.setMaxResults"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.build*"
  name: "build"
  nameWithType: "QueryJobConfiguration.Builder.build"
  fullName: "com.google.cloud.bigquery.QueryJobConfiguration.Builder.build"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.JobConfiguration.Builder<com.google.cloud.bigquery.QueryJobConfiguration,com.google.cloud.bigquery.QueryJobConfiguration.Builder>"
  name: "JobConfiguration.Builder<QueryJobConfiguration,QueryJobConfiguration.Builder>"
  nameWithType: "JobConfiguration.Builder<QueryJobConfiguration,QueryJobConfiguration.Builder>"
  fullName: "com.google.cloud.bigquery.JobConfiguration.Builder<com.google.cloud.bigquery.QueryJobConfiguration,com.google.cloud.bigquery.QueryJobConfiguration.Builder>"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "com.google.cloud.bigquery.JobConfiguration.Builder.build()"
  name: "JobConfiguration.Builder.build()"
  nameWithType: "JobConfiguration.Builder.build()"
  fullName: "com.google.cloud.bigquery.JobConfiguration.Builder.build()"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.lang.Iterable"
  name: "Iterable"
  nameWithType: "Iterable"
  fullName: "java.lang.Iterable"
- uid: "java.lang.String,com.google.cloud.bigquery.QueryParameterValue"
  name: "String,QueryParameterValue"
  nameWithType: "String,QueryParameterValue"
  fullName: "java.lang.String,com.google.cloud.bigquery.QueryParameterValue"
- uid: "java.util.Map"
  name: "Map"
  nameWithType: "Map"
  fullName: "java.util.Map"
- uid: "java.lang.String,com.google.cloud.bigquery.ExternalTableDefinition"
  name: "String,ExternalTableDefinition"
  nameWithType: "String,ExternalTableDefinition"
  fullName: "java.lang.String,com.google.cloud.bigquery.ExternalTableDefinition"
- uid: "java.util.List"
  name: "List"
  nameWithType: "List"
  fullName: "java.util.List"
- uid: "com.google.cloud.bigquery.UserDefinedFunction"
  name: "UserDefinedFunction"
  nameWithType: "UserDefinedFunction"
  fullName: "com.google.cloud.bigquery.UserDefinedFunction"
- uid: "com.google.cloud.bigquery.JobInfo.SchemaUpdateOption"
  name: "JobInfo.SchemaUpdateOption"
  nameWithType: "JobInfo.SchemaUpdateOption"
  fullName: "com.google.cloud.bigquery.JobInfo.SchemaUpdateOption"
- uid: "java.lang.String,java.lang.String"
  name: "String,String"
  nameWithType: "String,String"
  fullName: "java.lang.String,java.lang.String"
- uid: "com.google.cloud.bigquery.ConnectionProperty"
  name: "ConnectionProperty"
  nameWithType: "ConnectionProperty"
  fullName: "com.google.cloud.bigquery.ConnectionProperty"
- uid: "com.google.cloud.bigquery.JobConfiguration.Builder"
  name: "JobConfiguration.Builder"
  nameWithType: "JobConfiguration.Builder"
  fullName: "com.google.cloud.bigquery.JobConfiguration.Builder"
- uid: "com.google.cloud.bigquery.QueryJobConfiguration,com.google.cloud.bigquery.QueryJobConfiguration.Builder"
  name: "QueryJobConfiguration,QueryJobConfiguration.Builder"
  nameWithType: "QueryJobConfiguration,QueryJobConfiguration.Builder"
  fullName: "com.google.cloud.bigquery.QueryJobConfiguration,com.google.cloud.bigquery.QueryJobConfiguration.Builder"
