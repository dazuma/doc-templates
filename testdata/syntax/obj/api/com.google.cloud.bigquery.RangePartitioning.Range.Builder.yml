### YamlMime:ManagedReference
items:
- uid: "com.google.cloud.bigquery.RangePartitioning.Range.Builder"
  id: "Builder"
  parent: "com.google.cloud.bigquery"
  children:
  - "com.google.cloud.bigquery.RangePartitioning.Range.Builder.build()"
  - "com.google.cloud.bigquery.RangePartitioning.Range.Builder.setEnd(java.lang.Long)"
  - "com.google.cloud.bigquery.RangePartitioning.Range.Builder.setInterval(java.lang.Long)"
  - "com.google.cloud.bigquery.RangePartitioning.Range.Builder.setStart(java.lang.Long)"
  langs:
  - "java"
  name: "RangePartitioning.Range.Builder"
  nameWithType: "RangePartitioning.Range.Builder"
  fullName: "com.google.cloud.bigquery.RangePartitioning.Range.Builder"
  type: "Class"
  package: "com.google.cloud.bigquery"
  summary: "A builder for `Range` objects."
  syntax:
    content: "public static final class RangePartitioning.Range.Builder"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.google.cloud.bigquery.RangePartitioning.Range.Builder.Builder()"
  id: "Builder()"
  parent: "com.google.cloud.bigquery.RangePartitioning.Range.Builder"
  langs:
  - "java"
  name: "Builder()"
  nameWithType: "RangePartitioning.Range.Builder.Builder()"
  fullName: "com.google.cloud.bigquery.RangePartitioning.Range.Builder.Builder()"
  overload: "com.google.cloud.bigquery.RangePartitioning.Range.Builder.Builder*"
  type: "Constructor"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "private Builder()"
- uid: "com.google.cloud.bigquery.RangePartitioning.Range.Builder.build()"
  id: "build()"
  parent: "com.google.cloud.bigquery.RangePartitioning.Range.Builder"
  langs:
  - "java"
  name: "build()"
  nameWithType: "RangePartitioning.Range.Builder.build()"
  fullName: "com.google.cloud.bigquery.RangePartitioning.Range.Builder.build()"
  overload: "com.google.cloud.bigquery.RangePartitioning.Range.Builder.build*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Creates a `Range` object."
  syntax:
    content: "public RangePartitioning.Range build()"
    return:
      type: "com.google.cloud.bigquery.RangePartitioning.Range"
- uid: "com.google.cloud.bigquery.RangePartitioning.Range.Builder.setEnd(java.lang.Long)"
  id: "setEnd(java.lang.Long)"
  parent: "com.google.cloud.bigquery.RangePartitioning.Range.Builder"
  langs:
  - "java"
  name: "setEnd(Long end)"
  nameWithType: "RangePartitioning.Range.Builder.setEnd(Long end)"
  fullName: "com.google.cloud.bigquery.RangePartitioning.Range.Builder.setEnd(Long end)"
  overload: "com.google.cloud.bigquery.RangePartitioning.Range.Builder.setEnd*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "\\[Required\\] The end of range partitioning, exclusive. The value may be `null`."
  syntax:
    content: "public RangePartitioning.Range.Builder setEnd(Long end)"
    parameters:
    - id: "end"
      type: "java.lang.Long"
    return:
      type: "com.google.cloud.bigquery.RangePartitioning.Range.Builder"
- uid: "com.google.cloud.bigquery.RangePartitioning.Range.Builder.setInterval(java.lang.Long)"
  id: "setInterval(java.lang.Long)"
  parent: "com.google.cloud.bigquery.RangePartitioning.Range.Builder"
  langs:
  - "java"
  name: "setInterval(Long interval)"
  nameWithType: "RangePartitioning.Range.Builder.setInterval(Long interval)"
  fullName: "com.google.cloud.bigquery.RangePartitioning.Range.Builder.setInterval(Long interval)"
  overload: "com.google.cloud.bigquery.RangePartitioning.Range.Builder.setInterval*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "\\[Required\\] The width of each interval. The value may be `null`."
  syntax:
    content: "public RangePartitioning.Range.Builder setInterval(Long interval)"
    parameters:
    - id: "interval"
      type: "java.lang.Long"
    return:
      type: "com.google.cloud.bigquery.RangePartitioning.Range.Builder"
- uid: "com.google.cloud.bigquery.RangePartitioning.Range.Builder.setStart(java.lang.Long)"
  id: "setStart(java.lang.Long)"
  parent: "com.google.cloud.bigquery.RangePartitioning.Range.Builder"
  langs:
  - "java"
  name: "setStart(Long start)"
  nameWithType: "RangePartitioning.Range.Builder.setStart(Long start)"
  fullName: "com.google.cloud.bigquery.RangePartitioning.Range.Builder.setStart(Long start)"
  overload: "com.google.cloud.bigquery.RangePartitioning.Range.Builder.setStart*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "\\[Required\\] The start of range partitioning, inclusive. The value may be `null`."
  syntax:
    content: "public RangePartitioning.Range.Builder setStart(Long start)"
    parameters:
    - id: "start"
      type: "java.lang.Long"
    return:
      type: "com.google.cloud.bigquery.RangePartitioning.Range.Builder"
references:
- uid: "com.google.cloud.bigquery.RangePartitioning.Range.Builder.Builder*"
  name: "Builder"
  nameWithType: "RangePartitioning.Range.Builder.Builder"
  fullName: "com.google.cloud.bigquery.RangePartitioning.Range.Builder.Builder"
  package: "com.google.cloud.bigquery"
- uid: "java.lang.Long"
  spec.java:
  - uid: "java.lang.Long"
    name: "Long"
    fullName: "java.lang.Long"
- uid: "com.google.cloud.bigquery.RangePartitioning.Range.Builder.setEnd*"
  name: "setEnd"
  nameWithType: "RangePartitioning.Range.Builder.setEnd"
  fullName: "com.google.cloud.bigquery.RangePartitioning.Range.Builder.setEnd"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.RangePartitioning.Range.Builder.setInterval*"
  name: "setInterval"
  nameWithType: "RangePartitioning.Range.Builder.setInterval"
  fullName: "com.google.cloud.bigquery.RangePartitioning.Range.Builder.setInterval"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.RangePartitioning.Range.Builder.setStart*"
  name: "setStart"
  nameWithType: "RangePartitioning.Range.Builder.setStart"
  fullName: "com.google.cloud.bigquery.RangePartitioning.Range.Builder.setStart"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.RangePartitioning.Range"
  name: "RangePartitioning.Range"
  nameWithType: "RangePartitioning.Range"
  fullName: "com.google.cloud.bigquery.RangePartitioning.Range"
- uid: "com.google.cloud.bigquery.RangePartitioning.Range.Builder.build*"
  name: "build"
  nameWithType: "RangePartitioning.Range.Builder.build"
  fullName: "com.google.cloud.bigquery.RangePartitioning.Range.Builder.build"
  package: "com.google.cloud.bigquery"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
