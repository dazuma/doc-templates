### YamlMime:ManagedReference
items:
- uid: "com.google.cloud.bigquery.StandardTableDefinition.Builder"
  id: "Builder"
  parent: "com.google.cloud.bigquery"
  children:
  - "com.google.cloud.bigquery.StandardTableDefinition.Builder.Builder()"
  - "com.google.cloud.bigquery.StandardTableDefinition.Builder.build()"
  - "com.google.cloud.bigquery.StandardTableDefinition.Builder.setClustering(com.google.cloud.bigquery.Clustering)"
  - "com.google.cloud.bigquery.StandardTableDefinition.Builder.setLocation(java.lang.String)"
  - "com.google.cloud.bigquery.StandardTableDefinition.Builder.setNumBytes(java.lang.Long)"
  - "com.google.cloud.bigquery.StandardTableDefinition.Builder.setNumLongTermBytes(java.lang.Long)"
  - "com.google.cloud.bigquery.StandardTableDefinition.Builder.setNumRows(java.lang.Long)"
  - "com.google.cloud.bigquery.StandardTableDefinition.Builder.setRangePartitioning(com.google.cloud.bigquery.RangePartitioning)"
  - "com.google.cloud.bigquery.StandardTableDefinition.Builder.setSchema(com.google.cloud.bigquery.Schema)"
  - "com.google.cloud.bigquery.StandardTableDefinition.Builder.setStreamingBuffer(com.google.cloud.bigquery.StandardTableDefinition.StreamingBuffer)"
  - "com.google.cloud.bigquery.StandardTableDefinition.Builder.setTimePartitioning(com.google.cloud.bigquery.TimePartitioning)"
  - "com.google.cloud.bigquery.StandardTableDefinition.Builder.setType(com.google.cloud.bigquery.TableDefinition.Type)"
  langs:
  - "java"
  name: "StandardTableDefinition.Builder"
  nameWithType: "StandardTableDefinition.Builder"
  fullName: "com.google.cloud.bigquery.StandardTableDefinition.Builder"
  type: "Class"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public abstract static class StandardTableDefinition.Builder extends TableDefinition.Builder<StandardTableDefinition,StandardTableDefinition.Builder>"
  inheritance:
  - "java.lang.Object"
  - "com.google.cloud.bigquery.TableDefinition.Builder"
  inheritedMembers:
  - "com.google.cloud.bigquery.TableDefinition.Builder.build()"
  - "com.google.cloud.bigquery.TableDefinition.Builder.setSchema(com.google.cloud.bigquery.Schema)"
  - "com.google.cloud.bigquery.TableDefinition.Builder.setType(com.google.cloud.bigquery.TableDefinition.Type)"
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.google.cloud.bigquery.StandardTableDefinition.Builder.Builder()"
  id: "Builder()"
  parent: "com.google.cloud.bigquery.StandardTableDefinition.Builder"
  langs:
  - "java"
  name: "Builder()"
  nameWithType: "StandardTableDefinition.Builder.Builder()"
  fullName: "com.google.cloud.bigquery.StandardTableDefinition.Builder.Builder()"
  overload: "com.google.cloud.bigquery.StandardTableDefinition.Builder.Builder*"
  type: "Constructor"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public Builder()"
- uid: "com.google.cloud.bigquery.StandardTableDefinition.Builder.build()"
  id: "build()"
  parent: "com.google.cloud.bigquery.StandardTableDefinition.Builder"
  langs:
  - "java"
  name: "build()"
  nameWithType: "StandardTableDefinition.Builder.build()"
  fullName: "com.google.cloud.bigquery.StandardTableDefinition.Builder.build()"
  overload: "com.google.cloud.bigquery.StandardTableDefinition.Builder.build*"
  overridden: "com.google.cloud.bigquery.TableDefinition.Builder.build()"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Creates a `StandardTableDefinition` object."
  syntax:
    content: "public abstract StandardTableDefinition build()"
    return:
      type: "com.google.cloud.bigquery.StandardTableDefinition"
- uid: "com.google.cloud.bigquery.StandardTableDefinition.Builder.setClustering(com.google.cloud.bigquery.Clustering)"
  id: "setClustering(com.google.cloud.bigquery.Clustering)"
  parent: "com.google.cloud.bigquery.StandardTableDefinition.Builder"
  langs:
  - "java"
  name: "setClustering(Clustering clustering)"
  nameWithType: "StandardTableDefinition.Builder.setClustering(Clustering clustering)"
  fullName: "com.google.cloud.bigquery.StandardTableDefinition.Builder.setClustering(Clustering clustering)"
  overload: "com.google.cloud.bigquery.StandardTableDefinition.Builder.setClustering*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Set the clustering configuration for the table. If not set, the table is not clustered. BigQuery supports clustering for both partitioned and non-partitioned tables."
  syntax:
    content: "public abstract StandardTableDefinition.Builder setClustering(Clustering clustering)"
    parameters:
    - id: "clustering"
      type: "com.google.cloud.bigquery.Clustering"
    return:
      type: "com.google.cloud.bigquery.StandardTableDefinition.Builder"
- uid: "com.google.cloud.bigquery.StandardTableDefinition.Builder.setLocation(java.lang.String)"
  id: "setLocation(java.lang.String)"
  parent: "com.google.cloud.bigquery.StandardTableDefinition.Builder"
  langs:
  - "java"
  name: "setLocation(String location)"
  nameWithType: "StandardTableDefinition.Builder.setLocation(String location)"
  fullName: "com.google.cloud.bigquery.StandardTableDefinition.Builder.setLocation(String location)"
  overload: "com.google.cloud.bigquery.StandardTableDefinition.Builder.setLocation*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public abstract StandardTableDefinition.Builder setLocation(String location)"
    parameters:
    - id: "location"
      type: "java.lang.String"
    return:
      type: "com.google.cloud.bigquery.StandardTableDefinition.Builder"
- uid: "com.google.cloud.bigquery.StandardTableDefinition.Builder.setNumBytes(java.lang.Long)"
  id: "setNumBytes(java.lang.Long)"
  parent: "com.google.cloud.bigquery.StandardTableDefinition.Builder"
  langs:
  - "java"
  name: "setNumBytes(Long numBytes)"
  nameWithType: "StandardTableDefinition.Builder.setNumBytes(Long numBytes)"
  fullName: "com.google.cloud.bigquery.StandardTableDefinition.Builder.setNumBytes(Long numBytes)"
  overload: "com.google.cloud.bigquery.StandardTableDefinition.Builder.setNumBytes*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public abstract StandardTableDefinition.Builder setNumBytes(Long numBytes)"
    parameters:
    - id: "numBytes"
      type: "java.lang.Long"
    return:
      type: "com.google.cloud.bigquery.StandardTableDefinition.Builder"
- uid: "com.google.cloud.bigquery.StandardTableDefinition.Builder.setNumLongTermBytes(java.lang.Long)"
  id: "setNumLongTermBytes(java.lang.Long)"
  parent: "com.google.cloud.bigquery.StandardTableDefinition.Builder"
  langs:
  - "java"
  name: "setNumLongTermBytes(Long numLongTermBytes)"
  nameWithType: "StandardTableDefinition.Builder.setNumLongTermBytes(Long numLongTermBytes)"
  fullName: "com.google.cloud.bigquery.StandardTableDefinition.Builder.setNumLongTermBytes(Long numLongTermBytes)"
  overload: "com.google.cloud.bigquery.StandardTableDefinition.Builder.setNumLongTermBytes*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public abstract StandardTableDefinition.Builder setNumLongTermBytes(Long numLongTermBytes)"
    parameters:
    - id: "numLongTermBytes"
      type: "java.lang.Long"
    return:
      type: "com.google.cloud.bigquery.StandardTableDefinition.Builder"
- uid: "com.google.cloud.bigquery.StandardTableDefinition.Builder.setNumRows(java.lang.Long)"
  id: "setNumRows(java.lang.Long)"
  parent: "com.google.cloud.bigquery.StandardTableDefinition.Builder"
  langs:
  - "java"
  name: "setNumRows(Long numRows)"
  nameWithType: "StandardTableDefinition.Builder.setNumRows(Long numRows)"
  fullName: "com.google.cloud.bigquery.StandardTableDefinition.Builder.setNumRows(Long numRows)"
  overload: "com.google.cloud.bigquery.StandardTableDefinition.Builder.setNumRows*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public abstract StandardTableDefinition.Builder setNumRows(Long numRows)"
    parameters:
    - id: "numRows"
      type: "java.lang.Long"
    return:
      type: "com.google.cloud.bigquery.StandardTableDefinition.Builder"
- uid: "com.google.cloud.bigquery.StandardTableDefinition.Builder.setRangePartitioning(com.google.cloud.bigquery.RangePartitioning)"
  id: "setRangePartitioning(com.google.cloud.bigquery.RangePartitioning)"
  parent: "com.google.cloud.bigquery.StandardTableDefinition.Builder"
  langs:
  - "java"
  name: "setRangePartitioning(RangePartitioning rangePartitioning)"
  nameWithType: "StandardTableDefinition.Builder.setRangePartitioning(RangePartitioning rangePartitioning)"
  fullName: "com.google.cloud.bigquery.StandardTableDefinition.Builder.setRangePartitioning(RangePartitioning rangePartitioning)"
  overload: "com.google.cloud.bigquery.StandardTableDefinition.Builder.setRangePartitioning*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Sets the range partitioning configuration for the table. Only one of timePartitioning and rangePartitioning should be specified."
  syntax:
    content: "public abstract StandardTableDefinition.Builder setRangePartitioning(RangePartitioning rangePartitioning)"
    parameters:
    - id: "rangePartitioning"
      type: "com.google.cloud.bigquery.RangePartitioning"
    return:
      type: "com.google.cloud.bigquery.StandardTableDefinition.Builder"
- uid: "com.google.cloud.bigquery.StandardTableDefinition.Builder.setSchema(com.google.cloud.bigquery.Schema)"
  id: "setSchema(com.google.cloud.bigquery.Schema)"
  parent: "com.google.cloud.bigquery.StandardTableDefinition.Builder"
  langs:
  - "java"
  name: "setSchema(Schema schema)"
  nameWithType: "StandardTableDefinition.Builder.setSchema(Schema schema)"
  fullName: "com.google.cloud.bigquery.StandardTableDefinition.Builder.setSchema(Schema schema)"
  overload: "com.google.cloud.bigquery.StandardTableDefinition.Builder.setSchema*"
  overridden: "com.google.cloud.bigquery.TableDefinition.Builder.setSchema(com.google.cloud.bigquery.Schema)"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Sets the table schema."
  syntax:
    content: "public abstract StandardTableDefinition.Builder setSchema(Schema schema)"
    parameters:
    - id: "schema"
      type: "com.google.cloud.bigquery.Schema"
    return:
      type: "com.google.cloud.bigquery.StandardTableDefinition.Builder"
- uid: "com.google.cloud.bigquery.StandardTableDefinition.Builder.setStreamingBuffer(com.google.cloud.bigquery.StandardTableDefinition.StreamingBuffer)"
  id: "setStreamingBuffer(com.google.cloud.bigquery.StandardTableDefinition.StreamingBuffer)"
  parent: "com.google.cloud.bigquery.StandardTableDefinition.Builder"
  langs:
  - "java"
  name: "setStreamingBuffer(StandardTableDefinition.StreamingBuffer streamingBuffer)"
  nameWithType: "StandardTableDefinition.Builder.setStreamingBuffer(StandardTableDefinition.StreamingBuffer streamingBuffer)"
  fullName: "com.google.cloud.bigquery.StandardTableDefinition.Builder.setStreamingBuffer(StandardTableDefinition.StreamingBuffer streamingBuffer)"
  overload: "com.google.cloud.bigquery.StandardTableDefinition.Builder.setStreamingBuffer*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public abstract StandardTableDefinition.Builder setStreamingBuffer(StandardTableDefinition.StreamingBuffer streamingBuffer)"
    parameters:
    - id: "streamingBuffer"
      type: "com.google.cloud.bigquery.StandardTableDefinition.StreamingBuffer"
    return:
      type: "com.google.cloud.bigquery.StandardTableDefinition.Builder"
- uid: "com.google.cloud.bigquery.StandardTableDefinition.Builder.setTimePartitioning(com.google.cloud.bigquery.TimePartitioning)"
  id: "setTimePartitioning(com.google.cloud.bigquery.TimePartitioning)"
  parent: "com.google.cloud.bigquery.StandardTableDefinition.Builder"
  langs:
  - "java"
  name: "setTimePartitioning(TimePartitioning timePartitioning)"
  nameWithType: "StandardTableDefinition.Builder.setTimePartitioning(TimePartitioning timePartitioning)"
  fullName: "com.google.cloud.bigquery.StandardTableDefinition.Builder.setTimePartitioning(TimePartitioning timePartitioning)"
  overload: "com.google.cloud.bigquery.StandardTableDefinition.Builder.setTimePartitioning*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Sets the time partitioning configuration for the table. If not set, the table is not time-partitioned."
  syntax:
    content: "public abstract StandardTableDefinition.Builder setTimePartitioning(TimePartitioning timePartitioning)"
    parameters:
    - id: "timePartitioning"
      type: "com.google.cloud.bigquery.TimePartitioning"
    return:
      type: "com.google.cloud.bigquery.StandardTableDefinition.Builder"
- uid: "com.google.cloud.bigquery.StandardTableDefinition.Builder.setType(com.google.cloud.bigquery.TableDefinition.Type)"
  id: "setType(com.google.cloud.bigquery.TableDefinition.Type)"
  parent: "com.google.cloud.bigquery.StandardTableDefinition.Builder"
  langs:
  - "java"
  name: "setType(TableDefinition.Type type)"
  nameWithType: "StandardTableDefinition.Builder.setType(TableDefinition.Type type)"
  fullName: "com.google.cloud.bigquery.StandardTableDefinition.Builder.setType(TableDefinition.Type type)"
  overload: "com.google.cloud.bigquery.StandardTableDefinition.Builder.setType*"
  overridden: "com.google.cloud.bigquery.TableDefinition.Builder.setType(com.google.cloud.bigquery.TableDefinition.Type)"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public abstract StandardTableDefinition.Builder setType(TableDefinition.Type type)"
    parameters:
    - id: "type"
      type: "com.google.cloud.bigquery.TableDefinition.Type"
    return:
      type: "com.google.cloud.bigquery.StandardTableDefinition.Builder"
references:
- uid: "com.google.cloud.bigquery.StandardTableDefinition.Builder.Builder*"
  name: "Builder"
  nameWithType: "StandardTableDefinition.Builder.Builder"
  fullName: "com.google.cloud.bigquery.StandardTableDefinition.Builder.Builder"
  package: "com.google.cloud.bigquery"
- uid: "java.lang.Long"
  spec.java:
  - uid: "java.lang.Long"
    name: "Long"
    fullName: "java.lang.Long"
- uid: "com.google.cloud.bigquery.StandardTableDefinition.Builder.setNumBytes*"
  name: "setNumBytes"
  nameWithType: "StandardTableDefinition.Builder.setNumBytes"
  fullName: "com.google.cloud.bigquery.StandardTableDefinition.Builder.setNumBytes"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.StandardTableDefinition.Builder.setNumLongTermBytes*"
  name: "setNumLongTermBytes"
  nameWithType: "StandardTableDefinition.Builder.setNumLongTermBytes"
  fullName: "com.google.cloud.bigquery.StandardTableDefinition.Builder.setNumLongTermBytes"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.StandardTableDefinition.Builder.setNumRows*"
  name: "setNumRows"
  nameWithType: "StandardTableDefinition.Builder.setNumRows"
  fullName: "com.google.cloud.bigquery.StandardTableDefinition.Builder.setNumRows"
  package: "com.google.cloud.bigquery"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.google.cloud.bigquery.StandardTableDefinition.Builder.setLocation*"
  name: "setLocation"
  nameWithType: "StandardTableDefinition.Builder.setLocation"
  fullName: "com.google.cloud.bigquery.StandardTableDefinition.Builder.setLocation"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.StandardTableDefinition.StreamingBuffer"
  name: "StandardTableDefinition.StreamingBuffer"
  nameWithType: "StandardTableDefinition.StreamingBuffer"
  fullName: "com.google.cloud.bigquery.StandardTableDefinition.StreamingBuffer"
- uid: "com.google.cloud.bigquery.StandardTableDefinition.Builder.setStreamingBuffer*"
  name: "setStreamingBuffer"
  nameWithType: "StandardTableDefinition.Builder.setStreamingBuffer"
  fullName: "com.google.cloud.bigquery.StandardTableDefinition.Builder.setStreamingBuffer"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.TableDefinition.Type"
  name: "TableDefinition.Type"
  nameWithType: "TableDefinition.Type"
  fullName: "com.google.cloud.bigquery.TableDefinition.Type"
- uid: "com.google.cloud.bigquery.StandardTableDefinition.Builder.setType*"
  name: "setType"
  nameWithType: "StandardTableDefinition.Builder.setType"
  fullName: "com.google.cloud.bigquery.StandardTableDefinition.Builder.setType"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.Schema"
  name: "Schema"
  nameWithType: "Schema"
  fullName: "com.google.cloud.bigquery.Schema"
- uid: "com.google.cloud.bigquery.StandardTableDefinition.Builder.setSchema*"
  name: "setSchema"
  nameWithType: "StandardTableDefinition.Builder.setSchema"
  fullName: "com.google.cloud.bigquery.StandardTableDefinition.Builder.setSchema"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.TimePartitioning"
  name: "TimePartitioning"
  nameWithType: "TimePartitioning"
  fullName: "com.google.cloud.bigquery.TimePartitioning"
- uid: "com.google.cloud.bigquery.StandardTableDefinition.Builder.setTimePartitioning*"
  name: "setTimePartitioning"
  nameWithType: "StandardTableDefinition.Builder.setTimePartitioning"
  fullName: "com.google.cloud.bigquery.StandardTableDefinition.Builder.setTimePartitioning"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.RangePartitioning"
  name: "RangePartitioning"
  nameWithType: "RangePartitioning"
  fullName: "com.google.cloud.bigquery.RangePartitioning"
- uid: "com.google.cloud.bigquery.StandardTableDefinition.Builder.setRangePartitioning*"
  name: "setRangePartitioning"
  nameWithType: "StandardTableDefinition.Builder.setRangePartitioning"
  fullName: "com.google.cloud.bigquery.StandardTableDefinition.Builder.setRangePartitioning"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.Clustering"
  name: "Clustering"
  nameWithType: "Clustering"
  fullName: "com.google.cloud.bigquery.Clustering"
- uid: "com.google.cloud.bigquery.StandardTableDefinition.Builder.setClustering*"
  name: "setClustering"
  nameWithType: "StandardTableDefinition.Builder.setClustering"
  fullName: "com.google.cloud.bigquery.StandardTableDefinition.Builder.setClustering"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.StandardTableDefinition"
  name: "StandardTableDefinition"
  nameWithType: "StandardTableDefinition"
  fullName: "com.google.cloud.bigquery.StandardTableDefinition"
- uid: "com.google.cloud.bigquery.StandardTableDefinition.Builder.build*"
  name: "build"
  nameWithType: "StandardTableDefinition.Builder.build"
  fullName: "com.google.cloud.bigquery.StandardTableDefinition.Builder.build"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.TableDefinition.Builder<com.google.cloud.bigquery.StandardTableDefinition,com.google.cloud.bigquery.StandardTableDefinition.Builder>"
  name: "TableDefinition.Builder<StandardTableDefinition,StandardTableDefinition.Builder>"
  nameWithType: "TableDefinition.Builder<StandardTableDefinition,StandardTableDefinition.Builder>"
  fullName: "com.google.cloud.bigquery.TableDefinition.Builder<com.google.cloud.bigquery.StandardTableDefinition,com.google.cloud.bigquery.StandardTableDefinition.Builder>"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "com.google.cloud.bigquery.TableDefinition.Builder.build()"
  name: "TableDefinition.Builder.build()"
  nameWithType: "TableDefinition.Builder.build()"
  fullName: "com.google.cloud.bigquery.TableDefinition.Builder.build()"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "com.google.cloud.bigquery.TableDefinition.Builder.setSchema(com.google.cloud.bigquery.Schema)"
  name: "TableDefinition.Builder.setSchema(Schema)"
  nameWithType: "TableDefinition.Builder.setSchema(Schema)"
  fullName: "com.google.cloud.bigquery.TableDefinition.Builder.setSchema(com.google.cloud.bigquery.Schema)"
- uid: "com.google.cloud.bigquery.TableDefinition.Builder.setType(com.google.cloud.bigquery.TableDefinition.Type)"
  name: "TableDefinition.Builder.setType(TableDefinition.Type)"
  nameWithType: "TableDefinition.Builder.setType(TableDefinition.Type)"
  fullName: "com.google.cloud.bigquery.TableDefinition.Builder.setType(com.google.cloud.bigquery.TableDefinition.Type)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "com.google.cloud.bigquery.TableDefinition.Builder"
  name: "TableDefinition.Builder"
  nameWithType: "TableDefinition.Builder"
  fullName: "com.google.cloud.bigquery.TableDefinition.Builder"
- uid: "com.google.cloud.bigquery.StandardTableDefinition,com.google.cloud.bigquery.StandardTableDefinition.Builder"
  name: "StandardTableDefinition,StandardTableDefinition.Builder"
  nameWithType: "StandardTableDefinition,StandardTableDefinition.Builder"
  fullName: "com.google.cloud.bigquery.StandardTableDefinition,com.google.cloud.bigquery.StandardTableDefinition.Builder"
