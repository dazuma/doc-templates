### YamlMime:ManagedReference
items:
- uid: "com.google.cloud.bigquery.BigtableColumnFamily.Builder"
  id: "Builder"
  parent: "com.google.cloud.bigquery"
  children:
  - "com.google.cloud.bigquery.BigtableColumnFamily.Builder.Builder()"
  - "com.google.cloud.bigquery.BigtableColumnFamily.Builder.build()"
  - "com.google.cloud.bigquery.BigtableColumnFamily.Builder.setColumns(java.util.List<com.google.cloud.bigquery.BigtableColumn>)"
  - "com.google.cloud.bigquery.BigtableColumnFamily.Builder.setEncoding(java.lang.String)"
  - "com.google.cloud.bigquery.BigtableColumnFamily.Builder.setFamilyID(java.lang.String)"
  - "com.google.cloud.bigquery.BigtableColumnFamily.Builder.setOnlyReadLatest(java.lang.Boolean)"
  - "com.google.cloud.bigquery.BigtableColumnFamily.Builder.setType(java.lang.String)"
  langs:
  - "java"
  name: "BigtableColumnFamily.Builder"
  nameWithType: "BigtableColumnFamily.Builder"
  fullName: "com.google.cloud.bigquery.BigtableColumnFamily.Builder"
  type: "Class"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public abstract static class BigtableColumnFamily.Builder"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.google.cloud.bigquery.BigtableColumnFamily.Builder.Builder()"
  id: "Builder()"
  parent: "com.google.cloud.bigquery.BigtableColumnFamily.Builder"
  langs:
  - "java"
  name: "Builder()"
  nameWithType: "BigtableColumnFamily.Builder.Builder()"
  fullName: "com.google.cloud.bigquery.BigtableColumnFamily.Builder.Builder()"
  overload: "com.google.cloud.bigquery.BigtableColumnFamily.Builder.Builder*"
  type: "Constructor"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public Builder()"
- uid: "com.google.cloud.bigquery.BigtableColumnFamily.Builder.build()"
  id: "build()"
  parent: "com.google.cloud.bigquery.BigtableColumnFamily.Builder"
  langs:
  - "java"
  name: "build()"
  nameWithType: "BigtableColumnFamily.Builder.build()"
  fullName: "com.google.cloud.bigquery.BigtableColumnFamily.Builder.build()"
  overload: "com.google.cloud.bigquery.BigtableColumnFamily.Builder.build*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public abstract BigtableColumnFamily build()"
    return:
      type: "com.google.cloud.bigquery.BigtableColumnFamily"
- uid: "com.google.cloud.bigquery.BigtableColumnFamily.Builder.setColumns(java.util.List<com.google.cloud.bigquery.BigtableColumn>)"
  id: "setColumns(java.util.List<com.google.cloud.bigquery.BigtableColumn>)"
  parent: "com.google.cloud.bigquery.BigtableColumnFamily.Builder"
  langs:
  - "java"
  name: "setColumns(List<BigtableColumn> columns)"
  nameWithType: "BigtableColumnFamily.Builder.setColumns(List<BigtableColumn> columns)"
  fullName: "com.google.cloud.bigquery.BigtableColumnFamily.Builder.setColumns(List<BigtableColumn> columns)"
  overload: "com.google.cloud.bigquery.BigtableColumnFamily.Builder.setColumns*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Lists of columns that should be exposed as individual fields as opposed to a list of (column name, value) pairs. All columns whose qualifier matches a qualifier in this list can be accessed as .. Other columns can be accessed as a list through .Column field."
  syntax:
    content: "public abstract BigtableColumnFamily.Builder setColumns(List<BigtableColumn> columns)"
    parameters:
    - id: "columns"
      type: "java.util.List<com.google.cloud.bigquery.BigtableColumn>"
    return:
      type: "com.google.cloud.bigquery.BigtableColumnFamily.Builder"
- uid: "com.google.cloud.bigquery.BigtableColumnFamily.Builder.setEncoding(java.lang.String)"
  id: "setEncoding(java.lang.String)"
  parent: "com.google.cloud.bigquery.BigtableColumnFamily.Builder"
  langs:
  - "java"
  name: "setEncoding(String encoding)"
  nameWithType: "BigtableColumnFamily.Builder.setEncoding(String encoding)"
  fullName: "com.google.cloud.bigquery.BigtableColumnFamily.Builder.setEncoding(String encoding)"
  overload: "com.google.cloud.bigquery.BigtableColumnFamily.Builder.setEncoding*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "The encoding of the values when the type is not STRING.\n\nAcceptable encoding values are: TEXT - indicates values are alphanumeric text strings. BINARY - indicates values are encoded using HBase Bytes.toBytes family of functions.\n\nThis can be overridden for a specific column by listing that column in 'columns' and specifying an encoding for it."
  syntax:
    content: "public abstract BigtableColumnFamily.Builder setEncoding(String encoding)"
    parameters:
    - id: "encoding"
      type: "java.lang.String"
    return:
      type: "com.google.cloud.bigquery.BigtableColumnFamily.Builder"
- uid: "com.google.cloud.bigquery.BigtableColumnFamily.Builder.setFamilyID(java.lang.String)"
  id: "setFamilyID(java.lang.String)"
  parent: "com.google.cloud.bigquery.BigtableColumnFamily.Builder"
  langs:
  - "java"
  name: "setFamilyID(String familyID)"
  nameWithType: "BigtableColumnFamily.Builder.setFamilyID(String familyID)"
  fullName: "com.google.cloud.bigquery.BigtableColumnFamily.Builder.setFamilyID(String familyID)"
  overload: "com.google.cloud.bigquery.BigtableColumnFamily.Builder.setFamilyID*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Identifier of the column family."
  syntax:
    content: "public abstract BigtableColumnFamily.Builder setFamilyID(String familyID)"
    parameters:
    - id: "familyID"
      type: "java.lang.String"
    return:
      type: "com.google.cloud.bigquery.BigtableColumnFamily.Builder"
- uid: "com.google.cloud.bigquery.BigtableColumnFamily.Builder.setOnlyReadLatest(java.lang.Boolean)"
  id: "setOnlyReadLatest(java.lang.Boolean)"
  parent: "com.google.cloud.bigquery.BigtableColumnFamily.Builder"
  langs:
  - "java"
  name: "setOnlyReadLatest(Boolean onlyReadLatest)"
  nameWithType: "BigtableColumnFamily.Builder.setOnlyReadLatest(Boolean onlyReadLatest)"
  fullName: "com.google.cloud.bigquery.BigtableColumnFamily.Builder.setOnlyReadLatest(Boolean onlyReadLatest)"
  overload: "com.google.cloud.bigquery.BigtableColumnFamily.Builder.setOnlyReadLatest*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "If true, only the latest version of values are exposed for all columns in this column family. This can be overridden for a specific column by listing that column in 'columns' and specifying a different setting for that column."
  syntax:
    content: "public abstract BigtableColumnFamily.Builder setOnlyReadLatest(Boolean onlyReadLatest)"
    parameters:
    - id: "onlyReadLatest"
      type: "java.lang.Boolean"
    return:
      type: "com.google.cloud.bigquery.BigtableColumnFamily.Builder"
- uid: "com.google.cloud.bigquery.BigtableColumnFamily.Builder.setType(java.lang.String)"
  id: "setType(java.lang.String)"
  parent: "com.google.cloud.bigquery.BigtableColumnFamily.Builder"
  langs:
  - "java"
  name: "setType(String type)"
  nameWithType: "BigtableColumnFamily.Builder.setType(String type)"
  fullName: "com.google.cloud.bigquery.BigtableColumnFamily.Builder.setType(String type)"
  overload: "com.google.cloud.bigquery.BigtableColumnFamily.Builder.setType*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "The type to convert the value in cells of this column family. The values are expected to be encoded using HBase Bytes.toBytes function when using the BINARY encoding value.\n\nFollowing BigQuery types are allowed (case-sensitive): BYTES STRING INTEGER FLOAT BOOLEAN.\n\nThe default type is BYTES. This can be overridden for a specific column by listing that column in 'columns' and specifying a type for it."
  syntax:
    content: "public abstract BigtableColumnFamily.Builder setType(String type)"
    parameters:
    - id: "type"
      type: "java.lang.String"
    return:
      type: "com.google.cloud.bigquery.BigtableColumnFamily.Builder"
references:
- uid: "com.google.cloud.bigquery.BigtableColumnFamily.Builder.Builder*"
  name: "Builder"
  nameWithType: "BigtableColumnFamily.Builder.Builder"
  fullName: "com.google.cloud.bigquery.BigtableColumnFamily.Builder.Builder"
  package: "com.google.cloud.bigquery"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.google.cloud.bigquery.BigtableColumnFamily.Builder.setFamilyID*"
  name: "setFamilyID"
  nameWithType: "BigtableColumnFamily.Builder.setFamilyID"
  fullName: "com.google.cloud.bigquery.BigtableColumnFamily.Builder.setFamilyID"
  package: "com.google.cloud.bigquery"
- uid: "java.util.List<com.google.cloud.bigquery.BigtableColumn>"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "com.google.cloud.bigquery.BigtableColumn"
    name: "BigtableColumn"
    fullName: "com.google.cloud.bigquery.BigtableColumn"
  - name: ">"
    fullName: ">"
- uid: "com.google.cloud.bigquery.BigtableColumnFamily.Builder.setColumns*"
  name: "setColumns"
  nameWithType: "BigtableColumnFamily.Builder.setColumns"
  fullName: "com.google.cloud.bigquery.BigtableColumnFamily.Builder.setColumns"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.BigtableColumnFamily.Builder.setEncoding*"
  name: "setEncoding"
  nameWithType: "BigtableColumnFamily.Builder.setEncoding"
  fullName: "com.google.cloud.bigquery.BigtableColumnFamily.Builder.setEncoding"
  package: "com.google.cloud.bigquery"
- uid: "java.lang.Boolean"
  spec.java:
  - uid: "java.lang.Boolean"
    name: "Boolean"
    fullName: "java.lang.Boolean"
- uid: "com.google.cloud.bigquery.BigtableColumnFamily.Builder.setOnlyReadLatest*"
  name: "setOnlyReadLatest"
  nameWithType: "BigtableColumnFamily.Builder.setOnlyReadLatest"
  fullName: "com.google.cloud.bigquery.BigtableColumnFamily.Builder.setOnlyReadLatest"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.BigtableColumnFamily.Builder.setType*"
  name: "setType"
  nameWithType: "BigtableColumnFamily.Builder.setType"
  fullName: "com.google.cloud.bigquery.BigtableColumnFamily.Builder.setType"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.BigtableColumnFamily"
  name: "BigtableColumnFamily"
  nameWithType: "BigtableColumnFamily"
  fullName: "com.google.cloud.bigquery.BigtableColumnFamily"
- uid: "com.google.cloud.bigquery.BigtableColumnFamily.Builder.build*"
  name: "build"
  nameWithType: "BigtableColumnFamily.Builder.build"
  fullName: "com.google.cloud.bigquery.BigtableColumnFamily.Builder.build"
  package: "com.google.cloud.bigquery"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.util.List"
  name: "List"
  nameWithType: "List"
  fullName: "java.util.List"
- uid: "com.google.cloud.bigquery.BigtableColumn"
  name: "BigtableColumn"
  nameWithType: "BigtableColumn"
  fullName: "com.google.cloud.bigquery.BigtableColumn"
