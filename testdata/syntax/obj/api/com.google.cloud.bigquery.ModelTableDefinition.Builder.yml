### YamlMime:ManagedReference
items:
- uid: "com.google.cloud.bigquery.ModelTableDefinition.Builder"
  id: "Builder"
  parent: "com.google.cloud.bigquery"
  children:
  - "com.google.cloud.bigquery.ModelTableDefinition.Builder.Builder()"
  - "com.google.cloud.bigquery.ModelTableDefinition.Builder.build()"
  - "com.google.cloud.bigquery.ModelTableDefinition.Builder.setLocation(java.lang.String)"
  - "com.google.cloud.bigquery.ModelTableDefinition.Builder.setNumBytes(java.lang.Long)"
  - "com.google.cloud.bigquery.ModelTableDefinition.Builder.setType(com.google.cloud.bigquery.TableDefinition.Type)"
  langs:
  - "java"
  name: "ModelTableDefinition.Builder"
  nameWithType: "ModelTableDefinition.Builder"
  fullName: "com.google.cloud.bigquery.ModelTableDefinition.Builder"
  type: "Class"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public abstract static class ModelTableDefinition.Builder extends TableDefinition.Builder<ModelTableDefinition,ModelTableDefinition.Builder>"
  inheritance:
  - "java.lang.Object"
  - "com.google.cloud.bigquery.TableDefinition.Builder"
  inheritedMembers:
  - "com.google.cloud.bigquery.TableDefinition.Builder.build()"
  - "com.google.cloud.bigquery.TableDefinition.Builder.setSchema(com.google.cloud.bigquery.Schema)"
  - "com.google.cloud.bigquery.TableDefinition.Builder.setType(com.google.cloud.bigquery.TableDefinition.Type)"
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.google.cloud.bigquery.ModelTableDefinition.Builder.Builder()"
  id: "Builder()"
  parent: "com.google.cloud.bigquery.ModelTableDefinition.Builder"
  langs:
  - "java"
  name: "Builder()"
  nameWithType: "ModelTableDefinition.Builder.Builder()"
  fullName: "com.google.cloud.bigquery.ModelTableDefinition.Builder.Builder()"
  overload: "com.google.cloud.bigquery.ModelTableDefinition.Builder.Builder*"
  type: "Constructor"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public Builder()"
- uid: "com.google.cloud.bigquery.ModelTableDefinition.Builder.build()"
  id: "build()"
  parent: "com.google.cloud.bigquery.ModelTableDefinition.Builder"
  langs:
  - "java"
  name: "build()"
  nameWithType: "ModelTableDefinition.Builder.build()"
  fullName: "com.google.cloud.bigquery.ModelTableDefinition.Builder.build()"
  overload: "com.google.cloud.bigquery.ModelTableDefinition.Builder.build*"
  overridden: "com.google.cloud.bigquery.TableDefinition.Builder.build()"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Creates a `ModelTableDefinition` object."
  syntax:
    content: "public abstract ModelTableDefinition build()"
    return:
      type: "com.google.cloud.bigquery.ModelTableDefinition"
- uid: "com.google.cloud.bigquery.ModelTableDefinition.Builder.setLocation(java.lang.String)"
  id: "setLocation(java.lang.String)"
  parent: "com.google.cloud.bigquery.ModelTableDefinition.Builder"
  langs:
  - "java"
  name: "setLocation(String location)"
  nameWithType: "ModelTableDefinition.Builder.setLocation(String location)"
  fullName: "com.google.cloud.bigquery.ModelTableDefinition.Builder.setLocation(String location)"
  overload: "com.google.cloud.bigquery.ModelTableDefinition.Builder.setLocation*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public abstract ModelTableDefinition.Builder setLocation(String location)"
    parameters:
    - id: "location"
      type: "java.lang.String"
    return:
      type: "com.google.cloud.bigquery.ModelTableDefinition.Builder"
- uid: "com.google.cloud.bigquery.ModelTableDefinition.Builder.setNumBytes(java.lang.Long)"
  id: "setNumBytes(java.lang.Long)"
  parent: "com.google.cloud.bigquery.ModelTableDefinition.Builder"
  langs:
  - "java"
  name: "setNumBytes(Long numBytes)"
  nameWithType: "ModelTableDefinition.Builder.setNumBytes(Long numBytes)"
  fullName: "com.google.cloud.bigquery.ModelTableDefinition.Builder.setNumBytes(Long numBytes)"
  overload: "com.google.cloud.bigquery.ModelTableDefinition.Builder.setNumBytes*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public abstract ModelTableDefinition.Builder setNumBytes(Long numBytes)"
    parameters:
    - id: "numBytes"
      type: "java.lang.Long"
    return:
      type: "com.google.cloud.bigquery.ModelTableDefinition.Builder"
- uid: "com.google.cloud.bigquery.ModelTableDefinition.Builder.setType(com.google.cloud.bigquery.TableDefinition.Type)"
  id: "setType(com.google.cloud.bigquery.TableDefinition.Type)"
  parent: "com.google.cloud.bigquery.ModelTableDefinition.Builder"
  langs:
  - "java"
  name: "setType(TableDefinition.Type type)"
  nameWithType: "ModelTableDefinition.Builder.setType(TableDefinition.Type type)"
  fullName: "com.google.cloud.bigquery.ModelTableDefinition.Builder.setType(TableDefinition.Type type)"
  overload: "com.google.cloud.bigquery.ModelTableDefinition.Builder.setType*"
  overridden: "com.google.cloud.bigquery.TableDefinition.Builder.setType(com.google.cloud.bigquery.TableDefinition.Type)"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public abstract ModelTableDefinition.Builder setType(TableDefinition.Type type)"
    parameters:
    - id: "type"
      type: "com.google.cloud.bigquery.TableDefinition.Type"
    return:
      type: "com.google.cloud.bigquery.ModelTableDefinition.Builder"
references:
- uid: "com.google.cloud.bigquery.ModelTableDefinition.Builder.Builder*"
  name: "Builder"
  nameWithType: "ModelTableDefinition.Builder.Builder"
  fullName: "com.google.cloud.bigquery.ModelTableDefinition.Builder.Builder"
  package: "com.google.cloud.bigquery"
- uid: "java.lang.Long"
  spec.java:
  - uid: "java.lang.Long"
    name: "Long"
    fullName: "java.lang.Long"
- uid: "com.google.cloud.bigquery.ModelTableDefinition.Builder.setNumBytes*"
  name: "setNumBytes"
  nameWithType: "ModelTableDefinition.Builder.setNumBytes"
  fullName: "com.google.cloud.bigquery.ModelTableDefinition.Builder.setNumBytes"
  package: "com.google.cloud.bigquery"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.google.cloud.bigquery.ModelTableDefinition.Builder.setLocation*"
  name: "setLocation"
  nameWithType: "ModelTableDefinition.Builder.setLocation"
  fullName: "com.google.cloud.bigquery.ModelTableDefinition.Builder.setLocation"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.TableDefinition.Type"
  name: "TableDefinition.Type"
  nameWithType: "TableDefinition.Type"
  fullName: "com.google.cloud.bigquery.TableDefinition.Type"
- uid: "com.google.cloud.bigquery.ModelTableDefinition.Builder.setType*"
  name: "setType"
  nameWithType: "ModelTableDefinition.Builder.setType"
  fullName: "com.google.cloud.bigquery.ModelTableDefinition.Builder.setType"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.ModelTableDefinition"
  name: "ModelTableDefinition"
  nameWithType: "ModelTableDefinition"
  fullName: "com.google.cloud.bigquery.ModelTableDefinition"
- uid: "com.google.cloud.bigquery.ModelTableDefinition.Builder.build*"
  name: "build"
  nameWithType: "ModelTableDefinition.Builder.build"
  fullName: "com.google.cloud.bigquery.ModelTableDefinition.Builder.build"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.TableDefinition.Builder<com.google.cloud.bigquery.ModelTableDefinition,com.google.cloud.bigquery.ModelTableDefinition.Builder>"
  name: "TableDefinition.Builder<ModelTableDefinition,ModelTableDefinition.Builder>"
  nameWithType: "TableDefinition.Builder<ModelTableDefinition,ModelTableDefinition.Builder>"
  fullName: "com.google.cloud.bigquery.TableDefinition.Builder<com.google.cloud.bigquery.ModelTableDefinition,com.google.cloud.bigquery.ModelTableDefinition.Builder>"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "com.google.cloud.bigquery.TableDefinition.Builder.build()"
  name: "TableDefinition.Builder.build()"
  nameWithType: "TableDefinition.Builder.build()"
  fullName: "com.google.cloud.bigquery.TableDefinition.Builder.build()"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "com.google.cloud.bigquery.TableDefinition.Builder.setSchema(com.google.cloud.bigquery.Schema)"
  name: "TableDefinition.Builder.setSchema(Schema)"
  nameWithType: "TableDefinition.Builder.setSchema(Schema)"
  fullName: "com.google.cloud.bigquery.TableDefinition.Builder.setSchema(com.google.cloud.bigquery.Schema)"
- uid: "com.google.cloud.bigquery.TableDefinition.Builder.setType(com.google.cloud.bigquery.TableDefinition.Type)"
  name: "TableDefinition.Builder.setType(TableDefinition.Type)"
  nameWithType: "TableDefinition.Builder.setType(TableDefinition.Type)"
  fullName: "com.google.cloud.bigquery.TableDefinition.Builder.setType(com.google.cloud.bigquery.TableDefinition.Type)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "com.google.cloud.bigquery.TableDefinition.Builder"
  name: "TableDefinition.Builder"
  nameWithType: "TableDefinition.Builder"
  fullName: "com.google.cloud.bigquery.TableDefinition.Builder"
- uid: "com.google.cloud.bigquery.ModelTableDefinition,com.google.cloud.bigquery.ModelTableDefinition.Builder"
  name: "ModelTableDefinition,ModelTableDefinition.Builder"
  nameWithType: "ModelTableDefinition,ModelTableDefinition.Builder"
  fullName: "com.google.cloud.bigquery.ModelTableDefinition,com.google.cloud.bigquery.ModelTableDefinition.Builder"
