### YamlMime:ManagedReference
items:
- uid: "com.google.cloud.bigquery.FormatOptions"
  id: "FormatOptions"
  parent: "com.google.cloud.bigquery"
  children:
  - "com.google.cloud.bigquery.FormatOptions.avro()"
  - "com.google.cloud.bigquery.FormatOptions.bigtable()"
  - "com.google.cloud.bigquery.FormatOptions.csv()"
  - "com.google.cloud.bigquery.FormatOptions.datastoreBackup()"
  - "com.google.cloud.bigquery.FormatOptions.equals(java.lang.Object)"
  - "com.google.cloud.bigquery.FormatOptions.getType()"
  - "com.google.cloud.bigquery.FormatOptions.googleSheets()"
  - "com.google.cloud.bigquery.FormatOptions.hashCode()"
  - "com.google.cloud.bigquery.FormatOptions.json()"
  - "com.google.cloud.bigquery.FormatOptions.of(java.lang.String)"
  - "com.google.cloud.bigquery.FormatOptions.orc()"
  - "com.google.cloud.bigquery.FormatOptions.parquet()"
  - "com.google.cloud.bigquery.FormatOptions.toString()"
  langs:
  - "java"
  name: "FormatOptions"
  nameWithType: "FormatOptions"
  fullName: "com.google.cloud.bigquery.FormatOptions"
  type: "Class"
  package: "com.google.cloud.bigquery"
  summary: "Base class for Google BigQuery format options. These class define the format of external data used by BigQuery, for either federated tables or load jobs.\n\nLoad jobs support the following formats: AVRO, CSV, DATASTORE\\_BACKUP, GOOGLE\\_SHEETS, JSON, ORC, PARQUET\n\nFederated tables can be defined against following formats: AVRO, BIGTABLE, CSV, DATASTORE\\_BACKUP, GOOGLE\\_SHEETS, JSON"
  syntax:
    content: "public class FormatOptions implements Serializable"
  inheritance:
  - "java.lang.Object"
  implements:
  - "java.io.Serializable"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.google.cloud.bigquery.FormatOptions.FormatOptions(java.lang.String)"
  id: "FormatOptions(java.lang.String)"
  parent: "com.google.cloud.bigquery.FormatOptions"
  langs:
  - "java"
  name: "FormatOptions(String type)"
  nameWithType: "FormatOptions.FormatOptions(String type)"
  fullName: "com.google.cloud.bigquery.FormatOptions.FormatOptions(String type)"
  overload: "com.google.cloud.bigquery.FormatOptions.FormatOptions*"
  type: "Constructor"
  package: "com.google.cloud.bigquery"
  syntax:
    content: " FormatOptions(String type)"
    parameters:
    - id: "type"
      type: "java.lang.String"
- uid: "com.google.cloud.bigquery.FormatOptions.avro()"
  id: "avro()"
  parent: "com.google.cloud.bigquery.FormatOptions"
  langs:
  - "java"
  name: "avro()"
  nameWithType: "FormatOptions.avro()"
  fullName: "com.google.cloud.bigquery.FormatOptions.avro()"
  overload: "com.google.cloud.bigquery.FormatOptions.avro*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Default options for AVRO format."
  syntax:
    content: "public static FormatOptions avro()"
    return:
      type: "com.google.cloud.bigquery.FormatOptions"
- uid: "com.google.cloud.bigquery.FormatOptions.bigtable()"
  id: "bigtable()"
  parent: "com.google.cloud.bigquery.FormatOptions"
  langs:
  - "java"
  name: "bigtable()"
  nameWithType: "FormatOptions.bigtable()"
  fullName: "com.google.cloud.bigquery.FormatOptions.bigtable()"
  overload: "com.google.cloud.bigquery.FormatOptions.bigtable*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Default options for BIGTABLE format."
  syntax:
    content: "public static FormatOptions bigtable()"
    return:
      type: "com.google.cloud.bigquery.FormatOptions"
- uid: "com.google.cloud.bigquery.FormatOptions.csv()"
  id: "csv()"
  parent: "com.google.cloud.bigquery.FormatOptions"
  langs:
  - "java"
  name: "csv()"
  nameWithType: "FormatOptions.csv()"
  fullName: "com.google.cloud.bigquery.FormatOptions.csv()"
  overload: "com.google.cloud.bigquery.FormatOptions.csv*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Default options for CSV format."
  syntax:
    content: "public static CsvOptions csv()"
    return:
      type: "com.google.cloud.bigquery.CsvOptions"
- uid: "com.google.cloud.bigquery.FormatOptions.datastoreBackup()"
  id: "datastoreBackup()"
  parent: "com.google.cloud.bigquery.FormatOptions"
  langs:
  - "java"
  name: "datastoreBackup()"
  nameWithType: "FormatOptions.datastoreBackup()"
  fullName: "com.google.cloud.bigquery.FormatOptions.datastoreBackup()"
  overload: "com.google.cloud.bigquery.FormatOptions.datastoreBackup*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Default options for DATASTORE\\_BACKUP format."
  syntax:
    content: "public static FormatOptions datastoreBackup()"
    return:
      type: "com.google.cloud.bigquery.FormatOptions"
- uid: "com.google.cloud.bigquery.FormatOptions.equals(java.lang.Object)"
  id: "equals(java.lang.Object)"
  parent: "com.google.cloud.bigquery.FormatOptions"
  langs:
  - "java"
  name: "equals(Object obj)"
  nameWithType: "FormatOptions.equals(Object obj)"
  fullName: "com.google.cloud.bigquery.FormatOptions.equals(Object obj)"
  overload: "com.google.cloud.bigquery.FormatOptions.equals*"
  overridden: "java.lang.Object.equals(java.lang.Object)"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public boolean equals(Object obj)"
    parameters:
    - id: "obj"
      type: "java.lang.Object"
    return:
      type: "boolean"
- uid: "com.google.cloud.bigquery.FormatOptions.getType()"
  id: "getType()"
  parent: "com.google.cloud.bigquery.FormatOptions"
  langs:
  - "java"
  name: "getType()"
  nameWithType: "FormatOptions.getType()"
  fullName: "com.google.cloud.bigquery.FormatOptions.getType()"
  overload: "com.google.cloud.bigquery.FormatOptions.getType*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns the external data format, as a string."
  syntax:
    content: "public String getType()"
    return:
      type: "java.lang.String"
- uid: "com.google.cloud.bigquery.FormatOptions.googleSheets()"
  id: "googleSheets()"
  parent: "com.google.cloud.bigquery.FormatOptions"
  langs:
  - "java"
  name: "googleSheets()"
  nameWithType: "FormatOptions.googleSheets()"
  fullName: "com.google.cloud.bigquery.FormatOptions.googleSheets()"
  overload: "com.google.cloud.bigquery.FormatOptions.googleSheets*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Default options for GOOGLE\\_SHEETS format."
  syntax:
    content: "public static FormatOptions googleSheets()"
    return:
      type: "com.google.cloud.bigquery.FormatOptions"
- uid: "com.google.cloud.bigquery.FormatOptions.hashCode()"
  id: "hashCode()"
  parent: "com.google.cloud.bigquery.FormatOptions"
  langs:
  - "java"
  name: "hashCode()"
  nameWithType: "FormatOptions.hashCode()"
  fullName: "com.google.cloud.bigquery.FormatOptions.hashCode()"
  overload: "com.google.cloud.bigquery.FormatOptions.hashCode*"
  overridden: "java.lang.Object.hashCode()"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public int hashCode()"
    return:
      type: "int"
- uid: "com.google.cloud.bigquery.FormatOptions.json()"
  id: "json()"
  parent: "com.google.cloud.bigquery.FormatOptions"
  langs:
  - "java"
  name: "json()"
  nameWithType: "FormatOptions.json()"
  fullName: "com.google.cloud.bigquery.FormatOptions.json()"
  overload: "com.google.cloud.bigquery.FormatOptions.json*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Default options for NEWLINE\\_DELIMITED\\_JSON format."
  syntax:
    content: "public static FormatOptions json()"
    return:
      type: "com.google.cloud.bigquery.FormatOptions"
- uid: "com.google.cloud.bigquery.FormatOptions.of(java.lang.String)"
  id: "of(java.lang.String)"
  parent: "com.google.cloud.bigquery.FormatOptions"
  langs:
  - "java"
  name: "of(String format)"
  nameWithType: "FormatOptions.of(String format)"
  fullName: "com.google.cloud.bigquery.FormatOptions.of(String format)"
  overload: "com.google.cloud.bigquery.FormatOptions.of*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Default options for the provided format."
  syntax:
    content: "public static FormatOptions of(String format)"
    parameters:
    - id: "format"
      type: "java.lang.String"
    return:
      type: "com.google.cloud.bigquery.FormatOptions"
- uid: "com.google.cloud.bigquery.FormatOptions.orc()"
  id: "orc()"
  parent: "com.google.cloud.bigquery.FormatOptions"
  langs:
  - "java"
  name: "orc()"
  nameWithType: "FormatOptions.orc()"
  fullName: "com.google.cloud.bigquery.FormatOptions.orc()"
  overload: "com.google.cloud.bigquery.FormatOptions.orc*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Default options for the ORC format."
  syntax:
    content: "public static FormatOptions orc()"
    return:
      type: "com.google.cloud.bigquery.FormatOptions"
- uid: "com.google.cloud.bigquery.FormatOptions.parquet()"
  id: "parquet()"
  parent: "com.google.cloud.bigquery.FormatOptions"
  langs:
  - "java"
  name: "parquet()"
  nameWithType: "FormatOptions.parquet()"
  fullName: "com.google.cloud.bigquery.FormatOptions.parquet()"
  overload: "com.google.cloud.bigquery.FormatOptions.parquet*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Default options for PARQUET format."
  syntax:
    content: "public static FormatOptions parquet()"
    return:
      type: "com.google.cloud.bigquery.FormatOptions"
- uid: "com.google.cloud.bigquery.FormatOptions.toString()"
  id: "toString()"
  parent: "com.google.cloud.bigquery.FormatOptions"
  langs:
  - "java"
  name: "toString()"
  nameWithType: "FormatOptions.toString()"
  fullName: "com.google.cloud.bigquery.FormatOptions.toString()"
  overload: "com.google.cloud.bigquery.FormatOptions.toString*"
  overridden: "java.lang.Object.toString()"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public String toString()"
    return:
      type: "java.lang.String"
references:
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.google.cloud.bigquery.FormatOptions.FormatOptions*"
  name: "FormatOptions"
  nameWithType: "FormatOptions.FormatOptions"
  fullName: "com.google.cloud.bigquery.FormatOptions.FormatOptions"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.FormatOptions.getType*"
  name: "getType"
  nameWithType: "FormatOptions.getType"
  fullName: "com.google.cloud.bigquery.FormatOptions.getType"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.FormatOptions.toString*"
  name: "toString"
  nameWithType: "FormatOptions.toString"
  fullName: "com.google.cloud.bigquery.FormatOptions.toString"
  package: "com.google.cloud.bigquery"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "com.google.cloud.bigquery.FormatOptions.hashCode*"
  name: "hashCode"
  nameWithType: "FormatOptions.hashCode"
  fullName: "com.google.cloud.bigquery.FormatOptions.hashCode"
  package: "com.google.cloud.bigquery"
- uid: "java.lang.Object"
  spec.java:
  - uid: "java.lang.Object"
    name: "Object"
    fullName: "java.lang.Object"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "com.google.cloud.bigquery.FormatOptions.equals*"
  name: "equals"
  nameWithType: "FormatOptions.equals"
  fullName: "com.google.cloud.bigquery.FormatOptions.equals"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.CsvOptions"
  name: "CsvOptions"
  nameWithType: "CsvOptions"
  fullName: "com.google.cloud.bigquery.CsvOptions"
- uid: "com.google.cloud.bigquery.FormatOptions.csv*"
  name: "csv"
  nameWithType: "FormatOptions.csv"
  fullName: "com.google.cloud.bigquery.FormatOptions.csv"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.FormatOptions.json*"
  name: "json"
  nameWithType: "FormatOptions.json"
  fullName: "com.google.cloud.bigquery.FormatOptions.json"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.FormatOptions.datastoreBackup*"
  name: "datastoreBackup"
  nameWithType: "FormatOptions.datastoreBackup"
  fullName: "com.google.cloud.bigquery.FormatOptions.datastoreBackup"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.FormatOptions.avro*"
  name: "avro"
  nameWithType: "FormatOptions.avro"
  fullName: "com.google.cloud.bigquery.FormatOptions.avro"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.FormatOptions.bigtable*"
  name: "bigtable"
  nameWithType: "FormatOptions.bigtable"
  fullName: "com.google.cloud.bigquery.FormatOptions.bigtable"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.FormatOptions.googleSheets*"
  name: "googleSheets"
  nameWithType: "FormatOptions.googleSheets"
  fullName: "com.google.cloud.bigquery.FormatOptions.googleSheets"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.FormatOptions.parquet*"
  name: "parquet"
  nameWithType: "FormatOptions.parquet"
  fullName: "com.google.cloud.bigquery.FormatOptions.parquet"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.FormatOptions.orc*"
  name: "orc"
  nameWithType: "FormatOptions.orc"
  fullName: "com.google.cloud.bigquery.FormatOptions.orc"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.FormatOptions.of*"
  name: "of"
  nameWithType: "FormatOptions.of"
  fullName: "com.google.cloud.bigquery.FormatOptions.of"
  package: "com.google.cloud.bigquery"
- uid: "java.io.Serializable"
  name: "Serializable"
  nameWithType: "Serializable"
  fullName: "java.io.Serializable"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
