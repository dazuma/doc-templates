### YamlMime:ManagedReference
items:
- uid: "com.google.cloud.bigquery.BigtableColumnFamily"
  id: "BigtableColumnFamily"
  parent: "com.google.cloud.bigquery"
  children:
  - "com.google.cloud.bigquery.BigtableColumnFamily.BigtableColumnFamily()"
  - "com.google.cloud.bigquery.BigtableColumnFamily.Builder"
  - "com.google.cloud.bigquery.BigtableColumnFamily.getColumns()"
  - "com.google.cloud.bigquery.BigtableColumnFamily.getEncoding()"
  - "com.google.cloud.bigquery.BigtableColumnFamily.getFamilyID()"
  - "com.google.cloud.bigquery.BigtableColumnFamily.getOnlyReadLatest()"
  - "com.google.cloud.bigquery.BigtableColumnFamily.getType()"
  - "com.google.cloud.bigquery.BigtableColumnFamily.newBuilder()"
  langs:
  - "java"
  name: "BigtableColumnFamily"
  nameWithType: "BigtableColumnFamily"
  fullName: "com.google.cloud.bigquery.BigtableColumnFamily"
  type: "Class"
  package: "com.google.cloud.bigquery"
  summary: "List of column families to expose in the table schema along with their types. This list restricts the column families that can be referenced in queries and specifies their value types.\n\nYou can use this list to do type conversions - see the 'type' field for more details. If you leave this list empty, all column families are present in the table schema and their values are read as BYTES. During a query only the column families referenced in that query are read from Bigtable."
  syntax:
    content: "public abstract class BigtableColumnFamily implements Serializable"
  inheritance:
  - "java.lang.Object"
  implements:
  - "java.io.Serializable"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.google.cloud.bigquery.BigtableColumnFamily.BigtableColumnFamily()"
  id: "BigtableColumnFamily()"
  parent: "com.google.cloud.bigquery.BigtableColumnFamily"
  langs:
  - "java"
  name: "BigtableColumnFamily()"
  nameWithType: "BigtableColumnFamily.BigtableColumnFamily()"
  fullName: "com.google.cloud.bigquery.BigtableColumnFamily.BigtableColumnFamily()"
  overload: "com.google.cloud.bigquery.BigtableColumnFamily.BigtableColumnFamily*"
  type: "Constructor"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public BigtableColumnFamily()"
- uid: "com.google.cloud.bigquery.BigtableColumnFamily.getColumns()"
  id: "getColumns()"
  parent: "com.google.cloud.bigquery.BigtableColumnFamily"
  langs:
  - "java"
  name: "getColumns()"
  nameWithType: "BigtableColumnFamily.getColumns()"
  fullName: "com.google.cloud.bigquery.BigtableColumnFamily.getColumns()"
  overload: "com.google.cloud.bigquery.BigtableColumnFamily.getColumns*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public abstract List<BigtableColumn> getColumns()"
    return:
      type: "java.util.List<com.google.cloud.bigquery.BigtableColumn>"
- uid: "com.google.cloud.bigquery.BigtableColumnFamily.getEncoding()"
  id: "getEncoding()"
  parent: "com.google.cloud.bigquery.BigtableColumnFamily"
  langs:
  - "java"
  name: "getEncoding()"
  nameWithType: "BigtableColumnFamily.getEncoding()"
  fullName: "com.google.cloud.bigquery.BigtableColumnFamily.getEncoding()"
  overload: "com.google.cloud.bigquery.BigtableColumnFamily.getEncoding*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public abstract String getEncoding()"
    return:
      type: "java.lang.String"
- uid: "com.google.cloud.bigquery.BigtableColumnFamily.getFamilyID()"
  id: "getFamilyID()"
  parent: "com.google.cloud.bigquery.BigtableColumnFamily"
  langs:
  - "java"
  name: "getFamilyID()"
  nameWithType: "BigtableColumnFamily.getFamilyID()"
  fullName: "com.google.cloud.bigquery.BigtableColumnFamily.getFamilyID()"
  overload: "com.google.cloud.bigquery.BigtableColumnFamily.getFamilyID*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public abstract String getFamilyID()"
    return:
      type: "java.lang.String"
- uid: "com.google.cloud.bigquery.BigtableColumnFamily.getOnlyReadLatest()"
  id: "getOnlyReadLatest()"
  parent: "com.google.cloud.bigquery.BigtableColumnFamily"
  langs:
  - "java"
  name: "getOnlyReadLatest()"
  nameWithType: "BigtableColumnFamily.getOnlyReadLatest()"
  fullName: "com.google.cloud.bigquery.BigtableColumnFamily.getOnlyReadLatest()"
  overload: "com.google.cloud.bigquery.BigtableColumnFamily.getOnlyReadLatest*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public abstract Boolean getOnlyReadLatest()"
    return:
      type: "java.lang.Boolean"
- uid: "com.google.cloud.bigquery.BigtableColumnFamily.getType()"
  id: "getType()"
  parent: "com.google.cloud.bigquery.BigtableColumnFamily"
  langs:
  - "java"
  name: "getType()"
  nameWithType: "BigtableColumnFamily.getType()"
  fullName: "com.google.cloud.bigquery.BigtableColumnFamily.getType()"
  overload: "com.google.cloud.bigquery.BigtableColumnFamily.getType*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public abstract String getType()"
    return:
      type: "java.lang.String"
- uid: "com.google.cloud.bigquery.BigtableColumnFamily.newBuilder()"
  id: "newBuilder()"
  parent: "com.google.cloud.bigquery.BigtableColumnFamily"
  langs:
  - "java"
  name: "newBuilder()"
  nameWithType: "BigtableColumnFamily.newBuilder()"
  fullName: "com.google.cloud.bigquery.BigtableColumnFamily.newBuilder()"
  overload: "com.google.cloud.bigquery.BigtableColumnFamily.newBuilder*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns a builder for a <xref uid=\"com.google.cloud.bigquery.BigtableColumnFamily\" data-throw-if-not-resolved=\"false\">BigtableColumnFamily</xref> object."
  syntax:
    content: "public static BigtableColumnFamily.Builder newBuilder()"
    return:
      type: "com.google.cloud.bigquery.BigtableColumnFamily.Builder"
references:
- uid: "com.google.cloud.bigquery.BigtableColumnFamily.BigtableColumnFamily*"
  name: "BigtableColumnFamily"
  nameWithType: "BigtableColumnFamily.BigtableColumnFamily"
  fullName: "com.google.cloud.bigquery.BigtableColumnFamily.BigtableColumnFamily"
  package: "com.google.cloud.bigquery"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.google.cloud.bigquery.BigtableColumnFamily.getFamilyID*"
  name: "getFamilyID"
  nameWithType: "BigtableColumnFamily.getFamilyID"
  fullName: "com.google.cloud.bigquery.BigtableColumnFamily.getFamilyID"
  package: "com.google.cloud.bigquery"
- uid: "java.util.List<com.google.cloud.bigquery.BigtableColumn>"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "com.google.cloud.bigquery.BigtableColumn"
    name: "BigtableColumn"
    fullName: "com.google.cloud.bigquery.BigtableColumn"
  - name: ">"
    fullName: ">"
- uid: "com.google.cloud.bigquery.BigtableColumnFamily.getColumns*"
  name: "getColumns"
  nameWithType: "BigtableColumnFamily.getColumns"
  fullName: "com.google.cloud.bigquery.BigtableColumnFamily.getColumns"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.BigtableColumnFamily.getEncoding*"
  name: "getEncoding"
  nameWithType: "BigtableColumnFamily.getEncoding"
  fullName: "com.google.cloud.bigquery.BigtableColumnFamily.getEncoding"
  package: "com.google.cloud.bigquery"
- uid: "java.lang.Boolean"
  spec.java:
  - uid: "java.lang.Boolean"
    name: "Boolean"
    fullName: "java.lang.Boolean"
- uid: "com.google.cloud.bigquery.BigtableColumnFamily.getOnlyReadLatest*"
  name: "getOnlyReadLatest"
  nameWithType: "BigtableColumnFamily.getOnlyReadLatest"
  fullName: "com.google.cloud.bigquery.BigtableColumnFamily.getOnlyReadLatest"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.BigtableColumnFamily.getType*"
  name: "getType"
  nameWithType: "BigtableColumnFamily.getType"
  fullName: "com.google.cloud.bigquery.BigtableColumnFamily.getType"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.BigtableColumnFamily.Builder"
  name: "BigtableColumnFamily.Builder"
  nameWithType: "BigtableColumnFamily.Builder"
  fullName: "com.google.cloud.bigquery.BigtableColumnFamily.Builder"
- uid: "com.google.cloud.bigquery.BigtableColumnFamily.newBuilder*"
  name: "newBuilder"
  nameWithType: "BigtableColumnFamily.newBuilder"
  fullName: "com.google.cloud.bigquery.BigtableColumnFamily.newBuilder"
  package: "com.google.cloud.bigquery"
- uid: "java.io.Serializable"
  name: "Serializable"
  nameWithType: "Serializable"
  fullName: "java.io.Serializable"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.util.List"
  name: "List"
  nameWithType: "List"
  fullName: "java.util.List"
- uid: "com.google.cloud.bigquery.BigtableColumn"
  name: "BigtableColumn"
  nameWithType: "BigtableColumn"
  fullName: "com.google.cloud.bigquery.BigtableColumn"
