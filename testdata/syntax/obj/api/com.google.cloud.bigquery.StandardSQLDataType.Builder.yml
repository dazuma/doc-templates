### YamlMime:ManagedReference
items:
- uid: "com.google.cloud.bigquery.StandardSQLDataType.Builder"
  id: "Builder"
  parent: "com.google.cloud.bigquery"
  children:
  - "com.google.cloud.bigquery.StandardSQLDataType.Builder.Builder()"
  - "com.google.cloud.bigquery.StandardSQLDataType.Builder.build()"
  - "com.google.cloud.bigquery.StandardSQLDataType.Builder.setArrayElementType(com.google.cloud.bigquery.StandardSQLDataType)"
  - "com.google.cloud.bigquery.StandardSQLDataType.Builder.setStructType(com.google.cloud.bigquery.StandardSQLStructType)"
  - "com.google.cloud.bigquery.StandardSQLDataType.Builder.setTypeKind(java.lang.String)"
  langs:
  - "java"
  name: "StandardSQLDataType.Builder"
  nameWithType: "StandardSQLDataType.Builder"
  fullName: "com.google.cloud.bigquery.StandardSQLDataType.Builder"
  type: "Class"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public abstract static class StandardSQLDataType.Builder"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.google.cloud.bigquery.StandardSQLDataType.Builder.Builder()"
  id: "Builder()"
  parent: "com.google.cloud.bigquery.StandardSQLDataType.Builder"
  langs:
  - "java"
  name: "Builder()"
  nameWithType: "StandardSQLDataType.Builder.Builder()"
  fullName: "com.google.cloud.bigquery.StandardSQLDataType.Builder.Builder()"
  overload: "com.google.cloud.bigquery.StandardSQLDataType.Builder.Builder*"
  type: "Constructor"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public Builder()"
- uid: "com.google.cloud.bigquery.StandardSQLDataType.Builder.build()"
  id: "build()"
  parent: "com.google.cloud.bigquery.StandardSQLDataType.Builder"
  langs:
  - "java"
  name: "build()"
  nameWithType: "StandardSQLDataType.Builder.build()"
  fullName: "com.google.cloud.bigquery.StandardSQLDataType.Builder.build()"
  overload: "com.google.cloud.bigquery.StandardSQLDataType.Builder.build*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Creates a `StandardSQLDataType` object."
  syntax:
    content: "public abstract StandardSQLDataType build()"
    return:
      type: "com.google.cloud.bigquery.StandardSQLDataType"
- uid: "com.google.cloud.bigquery.StandardSQLDataType.Builder.setArrayElementType(com.google.cloud.bigquery.StandardSQLDataType)"
  id: "setArrayElementType(com.google.cloud.bigquery.StandardSQLDataType)"
  parent: "com.google.cloud.bigquery.StandardSQLDataType.Builder"
  langs:
  - "java"
  name: "setArrayElementType(StandardSQLDataType arrayElementType)"
  nameWithType: "StandardSQLDataType.Builder.setArrayElementType(StandardSQLDataType arrayElementType)"
  fullName: "com.google.cloud.bigquery.StandardSQLDataType.Builder.setArrayElementType(StandardSQLDataType arrayElementType)"
  overload: "com.google.cloud.bigquery.StandardSQLDataType.Builder.setArrayElementType*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Sets the type of an array's elements, when the TypeKind is ARRAY."
  syntax:
    content: "public abstract StandardSQLDataType.Builder setArrayElementType(StandardSQLDataType arrayElementType)"
    parameters:
    - id: "arrayElementType"
      type: "com.google.cloud.bigquery.StandardSQLDataType"
    return:
      type: "com.google.cloud.bigquery.StandardSQLDataType.Builder"
- uid: "com.google.cloud.bigquery.StandardSQLDataType.Builder.setStructType(com.google.cloud.bigquery.StandardSQLStructType)"
  id: "setStructType(com.google.cloud.bigquery.StandardSQLStructType)"
  parent: "com.google.cloud.bigquery.StandardSQLDataType.Builder"
  langs:
  - "java"
  name: "setStructType(StandardSQLStructType structType)"
  nameWithType: "StandardSQLDataType.Builder.setStructType(StandardSQLStructType structType)"
  fullName: "com.google.cloud.bigquery.StandardSQLDataType.Builder.setStructType(StandardSQLStructType structType)"
  overload: "com.google.cloud.bigquery.StandardSQLDataType.Builder.setStructType*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Sets the struct type definition (list of fields) when the TypeKind is STRUCT."
  syntax:
    content: "public abstract StandardSQLDataType.Builder setStructType(StandardSQLStructType structType)"
    parameters:
    - id: "structType"
      type: "com.google.cloud.bigquery.StandardSQLStructType"
    return:
      type: "com.google.cloud.bigquery.StandardSQLDataType.Builder"
- uid: "com.google.cloud.bigquery.StandardSQLDataType.Builder.setTypeKind(java.lang.String)"
  id: "setTypeKind(java.lang.String)"
  parent: "com.google.cloud.bigquery.StandardSQLDataType.Builder"
  langs:
  - "java"
  name: "setTypeKind(String typeKind)"
  nameWithType: "StandardSQLDataType.Builder.setTypeKind(String typeKind)"
  fullName: "com.google.cloud.bigquery.StandardSQLDataType.Builder.setTypeKind(String typeKind)"
  overload: "com.google.cloud.bigquery.StandardSQLDataType.Builder.setTypeKind*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Sets the top-level type of this data type. Can be any standard SQL data type. For more information, see https://cloud.google.com/bigquery/docs/reference/standard-sql/data-types"
  syntax:
    content: "public abstract StandardSQLDataType.Builder setTypeKind(String typeKind)"
    parameters:
    - id: "typeKind"
      type: "java.lang.String"
    return:
      type: "com.google.cloud.bigquery.StandardSQLDataType.Builder"
references:
- uid: "com.google.cloud.bigquery.StandardSQLDataType.Builder.Builder*"
  name: "Builder"
  nameWithType: "StandardSQLDataType.Builder.Builder"
  fullName: "com.google.cloud.bigquery.StandardSQLDataType.Builder.Builder"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.StandardSQLDataType"
  name: "StandardSQLDataType"
  nameWithType: "StandardSQLDataType"
  fullName: "com.google.cloud.bigquery.StandardSQLDataType"
- uid: "com.google.cloud.bigquery.StandardSQLDataType.Builder.setArrayElementType*"
  name: "setArrayElementType"
  nameWithType: "StandardSQLDataType.Builder.setArrayElementType"
  fullName: "com.google.cloud.bigquery.StandardSQLDataType.Builder.setArrayElementType"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.StandardSQLStructType"
  name: "StandardSQLStructType"
  nameWithType: "StandardSQLStructType"
  fullName: "com.google.cloud.bigquery.StandardSQLStructType"
- uid: "com.google.cloud.bigquery.StandardSQLDataType.Builder.setStructType*"
  name: "setStructType"
  nameWithType: "StandardSQLDataType.Builder.setStructType"
  fullName: "com.google.cloud.bigquery.StandardSQLDataType.Builder.setStructType"
  package: "com.google.cloud.bigquery"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.google.cloud.bigquery.StandardSQLDataType.Builder.setTypeKind*"
  name: "setTypeKind"
  nameWithType: "StandardSQLDataType.Builder.setTypeKind"
  fullName: "com.google.cloud.bigquery.StandardSQLDataType.Builder.setTypeKind"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.StandardSQLDataType.Builder.build*"
  name: "build"
  nameWithType: "StandardSQLDataType.Builder.build"
  fullName: "com.google.cloud.bigquery.StandardSQLDataType.Builder.build"
  package: "com.google.cloud.bigquery"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
