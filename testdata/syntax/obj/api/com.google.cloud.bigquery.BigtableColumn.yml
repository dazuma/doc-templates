### YamlMime:ManagedReference
items:
- uid: "com.google.cloud.bigquery.BigtableColumn"
  id: "BigtableColumn"
  parent: "com.google.cloud.bigquery"
  children:
  - "com.google.cloud.bigquery.BigtableColumn.BigtableColumn()"
  - "com.google.cloud.bigquery.BigtableColumn.Builder"
  - "com.google.cloud.bigquery.BigtableColumn.getEncoding()"
  - "com.google.cloud.bigquery.BigtableColumn.getFieldName()"
  - "com.google.cloud.bigquery.BigtableColumn.getOnlyReadLatest()"
  - "com.google.cloud.bigquery.BigtableColumn.getQualifierEncoded()"
  - "com.google.cloud.bigquery.BigtableColumn.getType()"
  - "com.google.cloud.bigquery.BigtableColumn.newBuilder()"
  langs:
  - "java"
  name: "BigtableColumn"
  nameWithType: "BigtableColumn"
  fullName: "com.google.cloud.bigquery.BigtableColumn"
  type: "Class"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public abstract class BigtableColumn implements Serializable"
  inheritance:
  - "java.lang.Object"
  implements:
  - "java.io.Serializable"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.google.cloud.bigquery.BigtableColumn.BigtableColumn()"
  id: "BigtableColumn()"
  parent: "com.google.cloud.bigquery.BigtableColumn"
  langs:
  - "java"
  name: "BigtableColumn()"
  nameWithType: "BigtableColumn.BigtableColumn()"
  fullName: "com.google.cloud.bigquery.BigtableColumn.BigtableColumn()"
  overload: "com.google.cloud.bigquery.BigtableColumn.BigtableColumn*"
  type: "Constructor"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public BigtableColumn()"
- uid: "com.google.cloud.bigquery.BigtableColumn.getEncoding()"
  id: "getEncoding()"
  parent: "com.google.cloud.bigquery.BigtableColumn"
  langs:
  - "java"
  name: "getEncoding()"
  nameWithType: "BigtableColumn.getEncoding()"
  fullName: "com.google.cloud.bigquery.BigtableColumn.getEncoding()"
  overload: "com.google.cloud.bigquery.BigtableColumn.getEncoding*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public abstract String getEncoding()"
    return:
      type: "java.lang.String"
- uid: "com.google.cloud.bigquery.BigtableColumn.getFieldName()"
  id: "getFieldName()"
  parent: "com.google.cloud.bigquery.BigtableColumn"
  langs:
  - "java"
  name: "getFieldName()"
  nameWithType: "BigtableColumn.getFieldName()"
  fullName: "com.google.cloud.bigquery.BigtableColumn.getFieldName()"
  overload: "com.google.cloud.bigquery.BigtableColumn.getFieldName*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public abstract String getFieldName()"
    return:
      type: "java.lang.String"
- uid: "com.google.cloud.bigquery.BigtableColumn.getOnlyReadLatest()"
  id: "getOnlyReadLatest()"
  parent: "com.google.cloud.bigquery.BigtableColumn"
  langs:
  - "java"
  name: "getOnlyReadLatest()"
  nameWithType: "BigtableColumn.getOnlyReadLatest()"
  fullName: "com.google.cloud.bigquery.BigtableColumn.getOnlyReadLatest()"
  overload: "com.google.cloud.bigquery.BigtableColumn.getOnlyReadLatest*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public abstract Boolean getOnlyReadLatest()"
    return:
      type: "java.lang.Boolean"
- uid: "com.google.cloud.bigquery.BigtableColumn.getQualifierEncoded()"
  id: "getQualifierEncoded()"
  parent: "com.google.cloud.bigquery.BigtableColumn"
  langs:
  - "java"
  name: "getQualifierEncoded()"
  nameWithType: "BigtableColumn.getQualifierEncoded()"
  fullName: "com.google.cloud.bigquery.BigtableColumn.getQualifierEncoded()"
  overload: "com.google.cloud.bigquery.BigtableColumn.getQualifierEncoded*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public abstract String getQualifierEncoded()"
    return:
      type: "java.lang.String"
- uid: "com.google.cloud.bigquery.BigtableColumn.getType()"
  id: "getType()"
  parent: "com.google.cloud.bigquery.BigtableColumn"
  langs:
  - "java"
  name: "getType()"
  nameWithType: "BigtableColumn.getType()"
  fullName: "com.google.cloud.bigquery.BigtableColumn.getType()"
  overload: "com.google.cloud.bigquery.BigtableColumn.getType*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public abstract String getType()"
    return:
      type: "java.lang.String"
- uid: "com.google.cloud.bigquery.BigtableColumn.newBuilder()"
  id: "newBuilder()"
  parent: "com.google.cloud.bigquery.BigtableColumn"
  langs:
  - "java"
  name: "newBuilder()"
  nameWithType: "BigtableColumn.newBuilder()"
  fullName: "com.google.cloud.bigquery.BigtableColumn.newBuilder()"
  overload: "com.google.cloud.bigquery.BigtableColumn.newBuilder*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns a builder for a <xref uid=\"com.google.cloud.bigquery.BigtableColumn\" data-throw-if-not-resolved=\"false\">BigtableColumn</xref> object."
  syntax:
    content: "public static BigtableColumn.Builder newBuilder()"
    return:
      type: "com.google.cloud.bigquery.BigtableColumn.Builder"
references:
- uid: "com.google.cloud.bigquery.BigtableColumn.BigtableColumn*"
  name: "BigtableColumn"
  nameWithType: "BigtableColumn.BigtableColumn"
  fullName: "com.google.cloud.bigquery.BigtableColumn.BigtableColumn"
  package: "com.google.cloud.bigquery"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.google.cloud.bigquery.BigtableColumn.getQualifierEncoded*"
  name: "getQualifierEncoded"
  nameWithType: "BigtableColumn.getQualifierEncoded"
  fullName: "com.google.cloud.bigquery.BigtableColumn.getQualifierEncoded"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.BigtableColumn.getFieldName*"
  name: "getFieldName"
  nameWithType: "BigtableColumn.getFieldName"
  fullName: "com.google.cloud.bigquery.BigtableColumn.getFieldName"
  package: "com.google.cloud.bigquery"
- uid: "java.lang.Boolean"
  spec.java:
  - uid: "java.lang.Boolean"
    name: "Boolean"
    fullName: "java.lang.Boolean"
- uid: "com.google.cloud.bigquery.BigtableColumn.getOnlyReadLatest*"
  name: "getOnlyReadLatest"
  nameWithType: "BigtableColumn.getOnlyReadLatest"
  fullName: "com.google.cloud.bigquery.BigtableColumn.getOnlyReadLatest"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.BigtableColumn.getEncoding*"
  name: "getEncoding"
  nameWithType: "BigtableColumn.getEncoding"
  fullName: "com.google.cloud.bigquery.BigtableColumn.getEncoding"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.BigtableColumn.getType*"
  name: "getType"
  nameWithType: "BigtableColumn.getType"
  fullName: "com.google.cloud.bigquery.BigtableColumn.getType"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.BigtableColumn.Builder"
  name: "BigtableColumn.Builder"
  nameWithType: "BigtableColumn.Builder"
  fullName: "com.google.cloud.bigquery.BigtableColumn.Builder"
- uid: "com.google.cloud.bigquery.BigtableColumn.newBuilder*"
  name: "newBuilder"
  nameWithType: "BigtableColumn.newBuilder"
  fullName: "com.google.cloud.bigquery.BigtableColumn.newBuilder"
  package: "com.google.cloud.bigquery"
- uid: "java.io.Serializable"
  name: "Serializable"
  nameWithType: "Serializable"
  fullName: "java.io.Serializable"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
