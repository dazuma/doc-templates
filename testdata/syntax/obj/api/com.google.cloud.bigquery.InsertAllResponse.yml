### YamlMime:ManagedReference
items:
- uid: "com.google.cloud.bigquery.InsertAllResponse"
  id: "InsertAllResponse"
  parent: "com.google.cloud.bigquery"
  children:
  - "com.google.cloud.bigquery.InsertAllResponse.equals(java.lang.Object)"
  - "com.google.cloud.bigquery.InsertAllResponse.getErrorsFor(long)"
  - "com.google.cloud.bigquery.InsertAllResponse.getInsertErrors()"
  - "com.google.cloud.bigquery.InsertAllResponse.hasErrors()"
  - "com.google.cloud.bigquery.InsertAllResponse.hashCode()"
  - "com.google.cloud.bigquery.InsertAllResponse.toString()"
  langs:
  - "java"
  name: "InsertAllResponse"
  nameWithType: "InsertAllResponse"
  fullName: "com.google.cloud.bigquery.InsertAllResponse"
  type: "Class"
  package: "com.google.cloud.bigquery"
  summary: "Google Cloud BigQuery insert all response. Objects of this class possibly contain errors for an <xref uid=\"com.google.cloud.bigquery.InsertAllRequest\" data-throw-if-not-resolved=\"false\">InsertAllRequest</xref>. If a row failed to be inserted, the non-empty list of errors associated to that row's index can be obtained with <xref uid=\"com.google.cloud.bigquery.InsertAllResponse.getErrorsFor(long)\" data-throw-if-not-resolved=\"false\">InsertAllResponse#getErrorsFor(long)</xref>. <xref uid=\"com.google.cloud.bigquery.InsertAllResponse.getInsertErrors()\" data-throw-if-not-resolved=\"false\">InsertAllResponse#getInsertErrors()</xref> can be used to return all errors caused by a <xref uid=\"com.google.cloud.bigquery.InsertAllRequest\" data-throw-if-not-resolved=\"false\">InsertAllRequest</xref> as a map."
  syntax:
    content: "public class InsertAllResponse implements Serializable"
  inheritance:
  - "java.lang.Object"
  implements:
  - "java.io.Serializable"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.google.cloud.bigquery.InsertAllResponse.InsertAllResponse(java.util.Map<java.lang.Long,java.util.List<com.google.cloud.bigquery.BigQueryError>>)"
  id: "InsertAllResponse(java.util.Map<java.lang.Long,java.util.List<com.google.cloud.bigquery.BigQueryError>>)"
  parent: "com.google.cloud.bigquery.InsertAllResponse"
  langs:
  - "java"
  name: "InsertAllResponse(Map<Long,List<BigQueryError>> insertErrors)"
  nameWithType: "InsertAllResponse.InsertAllResponse(Map<Long,List<BigQueryError>> insertErrors)"
  fullName: "com.google.cloud.bigquery.InsertAllResponse.InsertAllResponse(Map<Long,List<BigQueryError>> insertErrors)"
  overload: "com.google.cloud.bigquery.InsertAllResponse.InsertAllResponse*"
  type: "Constructor"
  package: "com.google.cloud.bigquery"
  syntax:
    content: " InsertAllResponse(Map<Long,List<BigQueryError>> insertErrors)"
    parameters:
    - id: "insertErrors"
      type: "java.util.Map<java.lang.Long,java.util.List<com.google.cloud.bigquery.BigQueryError>>"
- uid: "com.google.cloud.bigquery.InsertAllResponse.equals(java.lang.Object)"
  id: "equals(java.lang.Object)"
  parent: "com.google.cloud.bigquery.InsertAllResponse"
  langs:
  - "java"
  name: "equals(Object obj)"
  nameWithType: "InsertAllResponse.equals(Object obj)"
  fullName: "com.google.cloud.bigquery.InsertAllResponse.equals(Object obj)"
  overload: "com.google.cloud.bigquery.InsertAllResponse.equals*"
  overridden: "java.lang.Object.equals(java.lang.Object)"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public final boolean equals(Object obj)"
    parameters:
    - id: "obj"
      type: "java.lang.Object"
    return:
      type: "boolean"
- uid: "com.google.cloud.bigquery.InsertAllResponse.getErrorsFor(long)"
  id: "getErrorsFor(long)"
  parent: "com.google.cloud.bigquery.InsertAllResponse"
  langs:
  - "java"
  name: "getErrorsFor(long index)"
  nameWithType: "InsertAllResponse.getErrorsFor(long index)"
  fullName: "com.google.cloud.bigquery.InsertAllResponse.getErrorsFor(long index)"
  overload: "com.google.cloud.bigquery.InsertAllResponse.getErrorsFor*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns errors for the provided row index. If no error exists returns `null`."
  syntax:
    content: "public List<BigQueryError> getErrorsFor(long index)"
    parameters:
    - id: "index"
      type: "long"
    return:
      type: "java.util.List<com.google.cloud.bigquery.BigQueryError>"
- uid: "com.google.cloud.bigquery.InsertAllResponse.getInsertErrors()"
  id: "getInsertErrors()"
  parent: "com.google.cloud.bigquery.InsertAllResponse"
  langs:
  - "java"
  name: "getInsertErrors()"
  nameWithType: "InsertAllResponse.getInsertErrors()"
  fullName: "com.google.cloud.bigquery.InsertAllResponse.getInsertErrors()"
  overload: "com.google.cloud.bigquery.InsertAllResponse.getInsertErrors*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns all insertion errors as a map whose keys are indexes of rows that failed to insert. Each failed row index is associated with a non-empty list of <xref uid=\"com.google.cloud.bigquery.BigQueryError\" data-throw-if-not-resolved=\"false\">BigQueryError</xref>."
  syntax:
    content: "public Map<Long,List<BigQueryError>> getInsertErrors()"
    return:
      type: "java.util.Map<java.lang.Long,java.util.List<com.google.cloud.bigquery.BigQueryError>>"
- uid: "com.google.cloud.bigquery.InsertAllResponse.hasErrors()"
  id: "hasErrors()"
  parent: "com.google.cloud.bigquery.InsertAllResponse"
  langs:
  - "java"
  name: "hasErrors()"
  nameWithType: "InsertAllResponse.hasErrors()"
  fullName: "com.google.cloud.bigquery.InsertAllResponse.hasErrors()"
  overload: "com.google.cloud.bigquery.InsertAllResponse.hasErrors*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns `true` if no row insertion failed, `false` otherwise. If `false` <xref uid=\"com.google.cloud.bigquery.InsertAllResponse.getInsertErrors()\" data-throw-if-not-resolved=\"false\">#getInsertErrors()</xref> returns an empty map."
  syntax:
    content: "public boolean hasErrors()"
    return:
      type: "boolean"
- uid: "com.google.cloud.bigquery.InsertAllResponse.hashCode()"
  id: "hashCode()"
  parent: "com.google.cloud.bigquery.InsertAllResponse"
  langs:
  - "java"
  name: "hashCode()"
  nameWithType: "InsertAllResponse.hashCode()"
  fullName: "com.google.cloud.bigquery.InsertAllResponse.hashCode()"
  overload: "com.google.cloud.bigquery.InsertAllResponse.hashCode*"
  overridden: "java.lang.Object.hashCode()"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public final int hashCode()"
    return:
      type: "int"
- uid: "com.google.cloud.bigquery.InsertAllResponse.toString()"
  id: "toString()"
  parent: "com.google.cloud.bigquery.InsertAllResponse"
  langs:
  - "java"
  name: "toString()"
  nameWithType: "InsertAllResponse.toString()"
  fullName: "com.google.cloud.bigquery.InsertAllResponse.toString()"
  overload: "com.google.cloud.bigquery.InsertAllResponse.toString*"
  overridden: "java.lang.Object.toString()"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public String toString()"
    return:
      type: "java.lang.String"
references:
- uid: "java.util.Map<java.lang.Long,java.util.List<com.google.cloud.bigquery.BigQueryError>>"
  spec.java:
  - uid: "java.util.Map"
    name: "Map"
    fullName: "java.util.Map"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.Long"
    name: "Long"
    fullName: "java.lang.Long"
  - name: ","
    fullName: ","
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "com.google.cloud.bigquery.BigQueryError"
    name: "BigQueryError"
    fullName: "com.google.cloud.bigquery.BigQueryError"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.google.cloud.bigquery.InsertAllResponse.InsertAllResponse*"
  name: "InsertAllResponse"
  nameWithType: "InsertAllResponse.InsertAllResponse"
  fullName: "com.google.cloud.bigquery.InsertAllResponse.InsertAllResponse"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.InsertAllResponse.getInsertErrors*"
  name: "getInsertErrors"
  nameWithType: "InsertAllResponse.getInsertErrors"
  fullName: "com.google.cloud.bigquery.InsertAllResponse.getInsertErrors"
  package: "com.google.cloud.bigquery"
- uid: "long"
  spec.java:
  - uid: "long"
    name: "long"
    fullName: "long"
- uid: "java.util.List<com.google.cloud.bigquery.BigQueryError>"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "com.google.cloud.bigquery.BigQueryError"
    name: "BigQueryError"
    fullName: "com.google.cloud.bigquery.BigQueryError"
  - name: ">"
    fullName: ">"
- uid: "com.google.cloud.bigquery.InsertAllResponse.getErrorsFor*"
  name: "getErrorsFor"
  nameWithType: "InsertAllResponse.getErrorsFor"
  fullName: "com.google.cloud.bigquery.InsertAllResponse.getErrorsFor"
  package: "com.google.cloud.bigquery"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "com.google.cloud.bigquery.InsertAllResponse.hasErrors*"
  name: "hasErrors"
  nameWithType: "InsertAllResponse.hasErrors"
  fullName: "com.google.cloud.bigquery.InsertAllResponse.hasErrors"
  package: "com.google.cloud.bigquery"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "com.google.cloud.bigquery.InsertAllResponse.hashCode*"
  name: "hashCode"
  nameWithType: "InsertAllResponse.hashCode"
  fullName: "com.google.cloud.bigquery.InsertAllResponse.hashCode"
  package: "com.google.cloud.bigquery"
- uid: "java.lang.Object"
  spec.java:
  - uid: "java.lang.Object"
    name: "Object"
    fullName: "java.lang.Object"
- uid: "com.google.cloud.bigquery.InsertAllResponse.equals*"
  name: "equals"
  nameWithType: "InsertAllResponse.equals"
  fullName: "com.google.cloud.bigquery.InsertAllResponse.equals"
  package: "com.google.cloud.bigquery"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.google.cloud.bigquery.InsertAllResponse.toString*"
  name: "toString"
  nameWithType: "InsertAllResponse.toString"
  fullName: "com.google.cloud.bigquery.InsertAllResponse.toString"
  package: "com.google.cloud.bigquery"
- uid: "java.io.Serializable"
  name: "Serializable"
  nameWithType: "Serializable"
  fullName: "java.io.Serializable"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.lang.Long,java.util.List"
  name: "Long,List"
  nameWithType: "Long,List"
  fullName: "java.lang.Long,java.util.List"
- uid: "com.google.cloud.bigquery.BigQueryError"
  name: "BigQueryError"
  nameWithType: "BigQueryError"
  fullName: "com.google.cloud.bigquery.BigQueryError"
- uid: "java.util.Map"
  name: "Map"
  nameWithType: "Map"
  fullName: "java.util.Map"
- uid: "java.util.List"
  name: "List"
  nameWithType: "List"
  fullName: "java.util.List"
