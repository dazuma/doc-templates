### YamlMime:ManagedReference
items:
- uid: "com.google.cloud.bigquery.spi.v2.BigQueryRpc"
  id: "BigQueryRpc"
  parent: "com.google.cloud.bigquery.spi.v2"
  children:
  - "com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option"
  - "com.google.cloud.bigquery.spi.v2.BigQueryRpc.cancel(java.lang.String,java.lang.String,java.lang.String)"
  - "com.google.cloud.bigquery.spi.v2.BigQueryRpc.create(com.google.api.services.bigquery.model.Dataset,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  - "com.google.cloud.bigquery.spi.v2.BigQueryRpc.create(com.google.api.services.bigquery.model.Job,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  - "com.google.cloud.bigquery.spi.v2.BigQueryRpc.create(com.google.api.services.bigquery.model.Routine,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  - "com.google.cloud.bigquery.spi.v2.BigQueryRpc.create(com.google.api.services.bigquery.model.Table,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  - "com.google.cloud.bigquery.spi.v2.BigQueryRpc.deleteDataset(java.lang.String,java.lang.String,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  - "com.google.cloud.bigquery.spi.v2.BigQueryRpc.deleteModel(java.lang.String,java.lang.String,java.lang.String)"
  - "com.google.cloud.bigquery.spi.v2.BigQueryRpc.deleteRoutine(java.lang.String,java.lang.String,java.lang.String)"
  - "com.google.cloud.bigquery.spi.v2.BigQueryRpc.deleteTable(java.lang.String,java.lang.String,java.lang.String)"
  - "com.google.cloud.bigquery.spi.v2.BigQueryRpc.getDataset(java.lang.String,java.lang.String,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  - "com.google.cloud.bigquery.spi.v2.BigQueryRpc.getIamPolicy(java.lang.String,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  - "com.google.cloud.bigquery.spi.v2.BigQueryRpc.getJob(java.lang.String,java.lang.String,java.lang.String,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  - "com.google.cloud.bigquery.spi.v2.BigQueryRpc.getModel(java.lang.String,java.lang.String,java.lang.String,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  - "com.google.cloud.bigquery.spi.v2.BigQueryRpc.getQueryResults(java.lang.String,java.lang.String,java.lang.String,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  - "com.google.cloud.bigquery.spi.v2.BigQueryRpc.getRoutine(java.lang.String,java.lang.String,java.lang.String,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  - "com.google.cloud.bigquery.spi.v2.BigQueryRpc.getTable(java.lang.String,java.lang.String,java.lang.String,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  - "com.google.cloud.bigquery.spi.v2.BigQueryRpc.insertAll(java.lang.String,java.lang.String,java.lang.String,com.google.api.services.bigquery.model.TableDataInsertAllRequest)"
  - "com.google.cloud.bigquery.spi.v2.BigQueryRpc.listDatasets(java.lang.String,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  - "com.google.cloud.bigquery.spi.v2.BigQueryRpc.listJobs(java.lang.String,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  - "com.google.cloud.bigquery.spi.v2.BigQueryRpc.listModels(java.lang.String,java.lang.String,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  - "com.google.cloud.bigquery.spi.v2.BigQueryRpc.listRoutines(java.lang.String,java.lang.String,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  - "com.google.cloud.bigquery.spi.v2.BigQueryRpc.listTableData(java.lang.String,java.lang.String,java.lang.String,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  - "com.google.cloud.bigquery.spi.v2.BigQueryRpc.listTables(java.lang.String,java.lang.String,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  - "com.google.cloud.bigquery.spi.v2.BigQueryRpc.open(com.google.api.services.bigquery.model.Job)"
  - "com.google.cloud.bigquery.spi.v2.BigQueryRpc.patch(com.google.api.services.bigquery.model.Dataset,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  - "com.google.cloud.bigquery.spi.v2.BigQueryRpc.patch(com.google.api.services.bigquery.model.Model,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  - "com.google.cloud.bigquery.spi.v2.BigQueryRpc.patch(com.google.api.services.bigquery.model.Table,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  - "com.google.cloud.bigquery.spi.v2.BigQueryRpc.queryRpc(java.lang.String,com.google.api.services.bigquery.model.QueryRequest)"
  - "com.google.cloud.bigquery.spi.v2.BigQueryRpc.setIamPolicy(java.lang.String,com.google.api.services.bigquery.model.Policy,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  - "com.google.cloud.bigquery.spi.v2.BigQueryRpc.testIamPermissions(java.lang.String,java.util.List<java.lang.String>,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  - "com.google.cloud.bigquery.spi.v2.BigQueryRpc.update(com.google.api.services.bigquery.model.Routine,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  - "com.google.cloud.bigquery.spi.v2.BigQueryRpc.write(java.lang.String,byte[],int,long,int,boolean)"
  langs:
  - "java"
  name: "BigQueryRpc"
  nameWithType: "BigQueryRpc"
  fullName: "com.google.cloud.bigquery.spi.v2.BigQueryRpc"
  type: "Interface"
  package: "com.google.cloud.bigquery.spi.v2"
  syntax:
    content: "public interface BigQueryRpc extends ServiceRpc"
  implements:
  - "com.google.cloud.ServiceRpc"
- uid: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.cancel(java.lang.String,java.lang.String,java.lang.String)"
  id: "cancel(java.lang.String,java.lang.String,java.lang.String)"
  parent: "com.google.cloud.bigquery.spi.v2.BigQueryRpc"
  langs:
  - "java"
  name: "cancel(String projectId, String jobId, String location)"
  nameWithType: "BigQueryRpc.cancel(String projectId, String jobId, String location)"
  fullName: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.cancel(String projectId, String jobId, String location)"
  overload: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.cancel*"
  type: "Method"
  package: "com.google.cloud.bigquery.spi.v2"
  summary: "Sends a job cancel request. This call will return immediately, and the client will need to poll for the job status to see if the cancel completed successfully."
  syntax:
    content: "public abstract boolean cancel(String projectId, String jobId, String location)"
    parameters:
    - id: "projectId"
      type: "java.lang.String"
    - id: "jobId"
      type: "java.lang.String"
    - id: "location"
      type: "java.lang.String"
    return:
      type: "boolean"
      description: "<code>true</code> if cancel was requested successfully, <code>false</code> if the job was not\n     found"
- uid: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.create(com.google.api.services.bigquery.model.Dataset,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  id: "create(com.google.api.services.bigquery.model.Dataset,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  parent: "com.google.cloud.bigquery.spi.v2.BigQueryRpc"
  langs:
  - "java"
  name: "create(Dataset dataset, Map<BigQueryRpc.Option,?> options)"
  nameWithType: "BigQueryRpc.create(Dataset dataset, Map<BigQueryRpc.Option,?> options)"
  fullName: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.create(Dataset dataset, Map<BigQueryRpc.Option,?> options)"
  overload: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.create*"
  type: "Method"
  package: "com.google.cloud.bigquery.spi.v2"
  summary: "Creates a new dataset."
  syntax:
    content: "public abstract Dataset create(Dataset dataset, Map<BigQueryRpc.Option,?> options)"
    parameters:
    - id: "dataset"
      type: "com.google.api.services.bigquery.model.Dataset"
    - id: "options"
      type: "java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>"
    return:
      type: "com.google.api.services.bigquery.model.Dataset"
- uid: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.create(com.google.api.services.bigquery.model.Job,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  id: "create(com.google.api.services.bigquery.model.Job,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  parent: "com.google.cloud.bigquery.spi.v2.BigQueryRpc"
  langs:
  - "java"
  name: "create(Job job, Map<BigQueryRpc.Option,?> options)"
  nameWithType: "BigQueryRpc.create(Job job, Map<BigQueryRpc.Option,?> options)"
  fullName: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.create(Job job, Map<BigQueryRpc.Option,?> options)"
  overload: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.create*"
  type: "Method"
  package: "com.google.cloud.bigquery.spi.v2"
  summary: "Creates a new job."
  syntax:
    content: "public abstract Job create(Job job, Map<BigQueryRpc.Option,?> options)"
    parameters:
    - id: "job"
      type: "com.google.api.services.bigquery.model.Job"
    - id: "options"
      type: "java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>"
    return:
      type: "com.google.api.services.bigquery.model.Job"
- uid: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.create(com.google.api.services.bigquery.model.Routine,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  id: "create(com.google.api.services.bigquery.model.Routine,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  parent: "com.google.cloud.bigquery.spi.v2.BigQueryRpc"
  langs:
  - "java"
  name: "create(Routine routine, Map<BigQueryRpc.Option,?> options)"
  nameWithType: "BigQueryRpc.create(Routine routine, Map<BigQueryRpc.Option,?> options)"
  fullName: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.create(Routine routine, Map<BigQueryRpc.Option,?> options)"
  overload: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.create*"
  type: "Method"
  package: "com.google.cloud.bigquery.spi.v2"
  summary: "Creates the requested routine."
  syntax:
    content: "public abstract Routine create(Routine routine, Map<BigQueryRpc.Option,?> options)"
    parameters:
    - id: "routine"
      type: "com.google.api.services.bigquery.model.Routine"
    - id: "options"
      type: "java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>"
    return:
      type: "com.google.api.services.bigquery.model.Routine"
- uid: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.create(com.google.api.services.bigquery.model.Table,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  id: "create(com.google.api.services.bigquery.model.Table,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  parent: "com.google.cloud.bigquery.spi.v2.BigQueryRpc"
  langs:
  - "java"
  name: "create(Table table, Map<BigQueryRpc.Option,?> options)"
  nameWithType: "BigQueryRpc.create(Table table, Map<BigQueryRpc.Option,?> options)"
  fullName: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.create(Table table, Map<BigQueryRpc.Option,?> options)"
  overload: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.create*"
  type: "Method"
  package: "com.google.cloud.bigquery.spi.v2"
  summary: "Creates a new table."
  syntax:
    content: "public abstract Table create(Table table, Map<BigQueryRpc.Option,?> options)"
    parameters:
    - id: "table"
      type: "com.google.api.services.bigquery.model.Table"
    - id: "options"
      type: "java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>"
    return:
      type: "com.google.api.services.bigquery.model.Table"
- uid: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.deleteDataset(java.lang.String,java.lang.String,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  id: "deleteDataset(java.lang.String,java.lang.String,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  parent: "com.google.cloud.bigquery.spi.v2.BigQueryRpc"
  langs:
  - "java"
  name: "deleteDataset(String projectId, String datasetId, Map<BigQueryRpc.Option,?> options)"
  nameWithType: "BigQueryRpc.deleteDataset(String projectId, String datasetId, Map<BigQueryRpc.Option,?> options)"
  fullName: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.deleteDataset(String projectId, String datasetId, Map<BigQueryRpc.Option,?> options)"
  overload: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.deleteDataset*"
  type: "Method"
  package: "com.google.cloud.bigquery.spi.v2"
  summary: "Delete the requested dataset."
  syntax:
    content: "public abstract boolean deleteDataset(String projectId, String datasetId, Map<BigQueryRpc.Option,?> options)"
    parameters:
    - id: "projectId"
      type: "java.lang.String"
    - id: "datasetId"
      type: "java.lang.String"
    - id: "options"
      type: "java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>"
    return:
      type: "boolean"
      description: "<code>true</code> if dataset was deleted, <code>false</code> if it was not found"
- uid: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.deleteModel(java.lang.String,java.lang.String,java.lang.String)"
  id: "deleteModel(java.lang.String,java.lang.String,java.lang.String)"
  parent: "com.google.cloud.bigquery.spi.v2.BigQueryRpc"
  langs:
  - "java"
  name: "deleteModel(String projectId, String datasetId, String modelId)"
  nameWithType: "BigQueryRpc.deleteModel(String projectId, String datasetId, String modelId)"
  fullName: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.deleteModel(String projectId, String datasetId, String modelId)"
  overload: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.deleteModel*"
  type: "Method"
  package: "com.google.cloud.bigquery.spi.v2"
  summary: "Delete the requested model."
  syntax:
    content: "public abstract boolean deleteModel(String projectId, String datasetId, String modelId)"
    parameters:
    - id: "projectId"
      type: "java.lang.String"
    - id: "datasetId"
      type: "java.lang.String"
    - id: "modelId"
      type: "java.lang.String"
    return:
      type: "boolean"
      description: "<code>true</code> if model was deleted, <code>false</code> if it was not found"
- uid: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.deleteRoutine(java.lang.String,java.lang.String,java.lang.String)"
  id: "deleteRoutine(java.lang.String,java.lang.String,java.lang.String)"
  parent: "com.google.cloud.bigquery.spi.v2.BigQueryRpc"
  langs:
  - "java"
  name: "deleteRoutine(String projectId, String datasetId, String routineId)"
  nameWithType: "BigQueryRpc.deleteRoutine(String projectId, String datasetId, String routineId)"
  fullName: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.deleteRoutine(String projectId, String datasetId, String routineId)"
  overload: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.deleteRoutine*"
  type: "Method"
  package: "com.google.cloud.bigquery.spi.v2"
  summary: "Deletes the requested routine."
  syntax:
    content: "public abstract boolean deleteRoutine(String projectId, String datasetId, String routineId)"
    parameters:
    - id: "projectId"
      type: "java.lang.String"
    - id: "datasetId"
      type: "java.lang.String"
    - id: "routineId"
      type: "java.lang.String"
    return:
      type: "boolean"
      description: "<code>true</code> if routine was deleted, <code>false</code> if it was not found"
- uid: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.deleteTable(java.lang.String,java.lang.String,java.lang.String)"
  id: "deleteTable(java.lang.String,java.lang.String,java.lang.String)"
  parent: "com.google.cloud.bigquery.spi.v2.BigQueryRpc"
  langs:
  - "java"
  name: "deleteTable(String projectId, String datasetId, String tableId)"
  nameWithType: "BigQueryRpc.deleteTable(String projectId, String datasetId, String tableId)"
  fullName: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.deleteTable(String projectId, String datasetId, String tableId)"
  overload: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.deleteTable*"
  type: "Method"
  package: "com.google.cloud.bigquery.spi.v2"
  summary: "Delete the requested table."
  syntax:
    content: "public abstract boolean deleteTable(String projectId, String datasetId, String tableId)"
    parameters:
    - id: "projectId"
      type: "java.lang.String"
    - id: "datasetId"
      type: "java.lang.String"
    - id: "tableId"
      type: "java.lang.String"
    return:
      type: "boolean"
      description: "<code>true</code> if table was deleted, <code>false</code> if it was not found"
- uid: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.getDataset(java.lang.String,java.lang.String,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  id: "getDataset(java.lang.String,java.lang.String,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  parent: "com.google.cloud.bigquery.spi.v2.BigQueryRpc"
  langs:
  - "java"
  name: "getDataset(String projectId, String datasetId, Map<BigQueryRpc.Option,?> options)"
  nameWithType: "BigQueryRpc.getDataset(String projectId, String datasetId, Map<BigQueryRpc.Option,?> options)"
  fullName: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.getDataset(String projectId, String datasetId, Map<BigQueryRpc.Option,?> options)"
  overload: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.getDataset*"
  type: "Method"
  package: "com.google.cloud.bigquery.spi.v2"
  summary: "Returns the requested dataset or `null` if not found."
  syntax:
    content: "public abstract Dataset getDataset(String projectId, String datasetId, Map<BigQueryRpc.Option,?> options)"
    parameters:
    - id: "projectId"
      type: "java.lang.String"
    - id: "datasetId"
      type: "java.lang.String"
    - id: "options"
      type: "java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>"
    return:
      type: "com.google.api.services.bigquery.model.Dataset"
- uid: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.getIamPolicy(java.lang.String,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  id: "getIamPolicy(java.lang.String,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  parent: "com.google.cloud.bigquery.spi.v2.BigQueryRpc"
  langs:
  - "java"
  name: "getIamPolicy(String resourceId, Map<BigQueryRpc.Option,?> options)"
  nameWithType: "BigQueryRpc.getIamPolicy(String resourceId, Map<BigQueryRpc.Option,?> options)"
  fullName: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.getIamPolicy(String resourceId, Map<BigQueryRpc.Option,?> options)"
  overload: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.getIamPolicy*"
  type: "Method"
  package: "com.google.cloud.bigquery.spi.v2"
  summary: "Returns the IAM Policy for the specified resource, using Policy V1."
  syntax:
    content: "public abstract Policy getIamPolicy(String resourceId, Map<BigQueryRpc.Option,?> options)"
    parameters:
    - id: "resourceId"
      type: "java.lang.String"
    - id: "options"
      type: "java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>"
    return:
      type: "com.google.api.services.bigquery.model.Policy"
- uid: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.getJob(java.lang.String,java.lang.String,java.lang.String,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  id: "getJob(java.lang.String,java.lang.String,java.lang.String,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  parent: "com.google.cloud.bigquery.spi.v2.BigQueryRpc"
  langs:
  - "java"
  name: "getJob(String projectId, String jobId, String location, Map<BigQueryRpc.Option,?> options)"
  nameWithType: "BigQueryRpc.getJob(String projectId, String jobId, String location, Map<BigQueryRpc.Option,?> options)"
  fullName: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.getJob(String projectId, String jobId, String location, Map<BigQueryRpc.Option,?> options)"
  overload: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.getJob*"
  type: "Method"
  package: "com.google.cloud.bigquery.spi.v2"
  summary: "Returns the requested job or `null` if not found."
  syntax:
    content: "public abstract Job getJob(String projectId, String jobId, String location, Map<BigQueryRpc.Option,?> options)"
    parameters:
    - id: "projectId"
      type: "java.lang.String"
    - id: "jobId"
      type: "java.lang.String"
    - id: "location"
      type: "java.lang.String"
    - id: "options"
      type: "java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>"
    return:
      type: "com.google.api.services.bigquery.model.Job"
- uid: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.getModel(java.lang.String,java.lang.String,java.lang.String,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  id: "getModel(java.lang.String,java.lang.String,java.lang.String,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  parent: "com.google.cloud.bigquery.spi.v2.BigQueryRpc"
  langs:
  - "java"
  name: "getModel(String projectId, String datasetId, String modelId, Map<BigQueryRpc.Option,?> options)"
  nameWithType: "BigQueryRpc.getModel(String projectId, String datasetId, String modelId, Map<BigQueryRpc.Option,?> options)"
  fullName: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.getModel(String projectId, String datasetId, String modelId, Map<BigQueryRpc.Option,?> options)"
  overload: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.getModel*"
  type: "Method"
  package: "com.google.cloud.bigquery.spi.v2"
  summary: "Returns the requested model or `null` if not found."
  syntax:
    content: "public abstract Model getModel(String projectId, String datasetId, String modelId, Map<BigQueryRpc.Option,?> options)"
    parameters:
    - id: "projectId"
      type: "java.lang.String"
    - id: "datasetId"
      type: "java.lang.String"
    - id: "modelId"
      type: "java.lang.String"
    - id: "options"
      type: "java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>"
    return:
      type: "com.google.api.services.bigquery.model.Model"
- uid: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.getQueryResults(java.lang.String,java.lang.String,java.lang.String,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  id: "getQueryResults(java.lang.String,java.lang.String,java.lang.String,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  parent: "com.google.cloud.bigquery.spi.v2.BigQueryRpc"
  langs:
  - "java"
  name: "getQueryResults(String projectId, String jobId, String location, Map<BigQueryRpc.Option,?> options)"
  nameWithType: "BigQueryRpc.getQueryResults(String projectId, String jobId, String location, Map<BigQueryRpc.Option,?> options)"
  fullName: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.getQueryResults(String projectId, String jobId, String location, Map<BigQueryRpc.Option,?> options)"
  overload: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.getQueryResults*"
  type: "Method"
  package: "com.google.cloud.bigquery.spi.v2"
  summary: "Returns results of the query associated with the provided job."
  syntax:
    content: "public abstract GetQueryResultsResponse getQueryResults(String projectId, String jobId, String location, Map<BigQueryRpc.Option,?> options)"
    parameters:
    - id: "projectId"
      type: "java.lang.String"
    - id: "jobId"
      type: "java.lang.String"
    - id: "location"
      type: "java.lang.String"
    - id: "options"
      type: "java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>"
    return:
      type: "com.google.api.services.bigquery.model.GetQueryResultsResponse"
- uid: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.getRoutine(java.lang.String,java.lang.String,java.lang.String,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  id: "getRoutine(java.lang.String,java.lang.String,java.lang.String,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  parent: "com.google.cloud.bigquery.spi.v2.BigQueryRpc"
  langs:
  - "java"
  name: "getRoutine(String projectId, String datasetId, String routineId, Map<BigQueryRpc.Option,?> options)"
  nameWithType: "BigQueryRpc.getRoutine(String projectId, String datasetId, String routineId, Map<BigQueryRpc.Option,?> options)"
  fullName: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.getRoutine(String projectId, String datasetId, String routineId, Map<BigQueryRpc.Option,?> options)"
  overload: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.getRoutine*"
  type: "Method"
  package: "com.google.cloud.bigquery.spi.v2"
  summary: "Returns the requested routine or `null` if not found."
  syntax:
    content: "public abstract Routine getRoutine(String projectId, String datasetId, String routineId, Map<BigQueryRpc.Option,?> options)"
    parameters:
    - id: "projectId"
      type: "java.lang.String"
    - id: "datasetId"
      type: "java.lang.String"
    - id: "routineId"
      type: "java.lang.String"
    - id: "options"
      type: "java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>"
    return:
      type: "com.google.api.services.bigquery.model.Routine"
- uid: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.getTable(java.lang.String,java.lang.String,java.lang.String,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  id: "getTable(java.lang.String,java.lang.String,java.lang.String,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  parent: "com.google.cloud.bigquery.spi.v2.BigQueryRpc"
  langs:
  - "java"
  name: "getTable(String projectId, String datasetId, String tableId, Map<BigQueryRpc.Option,?> options)"
  nameWithType: "BigQueryRpc.getTable(String projectId, String datasetId, String tableId, Map<BigQueryRpc.Option,?> options)"
  fullName: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.getTable(String projectId, String datasetId, String tableId, Map<BigQueryRpc.Option,?> options)"
  overload: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.getTable*"
  type: "Method"
  package: "com.google.cloud.bigquery.spi.v2"
  summary: "Returns the requested table or `null` if not found."
  syntax:
    content: "public abstract Table getTable(String projectId, String datasetId, String tableId, Map<BigQueryRpc.Option,?> options)"
    parameters:
    - id: "projectId"
      type: "java.lang.String"
    - id: "datasetId"
      type: "java.lang.String"
    - id: "tableId"
      type: "java.lang.String"
    - id: "options"
      type: "java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>"
    return:
      type: "com.google.api.services.bigquery.model.Table"
- uid: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.insertAll(java.lang.String,java.lang.String,java.lang.String,com.google.api.services.bigquery.model.TableDataInsertAllRequest)"
  id: "insertAll(java.lang.String,java.lang.String,java.lang.String,com.google.api.services.bigquery.model.TableDataInsertAllRequest)"
  parent: "com.google.cloud.bigquery.spi.v2.BigQueryRpc"
  langs:
  - "java"
  name: "insertAll(String projectId, String datasetId, String tableId, TableDataInsertAllRequest request)"
  nameWithType: "BigQueryRpc.insertAll(String projectId, String datasetId, String tableId, TableDataInsertAllRequest request)"
  fullName: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.insertAll(String projectId, String datasetId, String tableId, TableDataInsertAllRequest request)"
  overload: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.insertAll*"
  type: "Method"
  package: "com.google.cloud.bigquery.spi.v2"
  summary: "Sends an insert all request."
  syntax:
    content: "public abstract TableDataInsertAllResponse insertAll(String projectId, String datasetId, String tableId, TableDataInsertAllRequest request)"
    parameters:
    - id: "projectId"
      type: "java.lang.String"
    - id: "datasetId"
      type: "java.lang.String"
    - id: "tableId"
      type: "java.lang.String"
    - id: "request"
      type: "com.google.api.services.bigquery.model.TableDataInsertAllRequest"
    return:
      type: "com.google.api.services.bigquery.model.TableDataInsertAllResponse"
- uid: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.listDatasets(java.lang.String,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  id: "listDatasets(java.lang.String,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  parent: "com.google.cloud.bigquery.spi.v2.BigQueryRpc"
  langs:
  - "java"
  name: "listDatasets(String projectId, Map<BigQueryRpc.Option,?> options)"
  nameWithType: "BigQueryRpc.listDatasets(String projectId, Map<BigQueryRpc.Option,?> options)"
  fullName: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.listDatasets(String projectId, Map<BigQueryRpc.Option,?> options)"
  overload: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.listDatasets*"
  type: "Method"
  package: "com.google.cloud.bigquery.spi.v2"
  summary: "Lists the provided project's datasets, keyed by page token. Partial information is returned on a dataset (datasetReference, friendlyName and id). To get full information use <xref uid=\"com.google.cloud.bigquery.spi.v2.BigQueryRpc.getDataset(java.lang.String,java.lang.String,java.util.Map&lt;com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?&gt;)\" data-throw-if-not-resolved=\"false\">#getDataset(String, String, Map)</xref>."
  syntax:
    content: "public abstract Tuple<String,Iterable<Dataset>> listDatasets(String projectId, Map<BigQueryRpc.Option,?> options)"
    parameters:
    - id: "projectId"
      type: "java.lang.String"
    - id: "options"
      type: "java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>"
    return:
      type: "com.google.cloud.Tuple<java.lang.String,java.lang.Iterable<com.google.api.services.bigquery.model.Dataset>>"
- uid: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.listJobs(java.lang.String,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  id: "listJobs(java.lang.String,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  parent: "com.google.cloud.bigquery.spi.v2.BigQueryRpc"
  langs:
  - "java"
  name: "listJobs(String projectId, Map<BigQueryRpc.Option,?> options)"
  nameWithType: "BigQueryRpc.listJobs(String projectId, Map<BigQueryRpc.Option,?> options)"
  fullName: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.listJobs(String projectId, Map<BigQueryRpc.Option,?> options)"
  overload: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.listJobs*"
  type: "Method"
  package: "com.google.cloud.bigquery.spi.v2"
  summary: "Lists the project's jobs."
  syntax:
    content: "public abstract Tuple<String,Iterable<Job>> listJobs(String projectId, Map<BigQueryRpc.Option,?> options)"
    parameters:
    - id: "projectId"
      type: "java.lang.String"
    - id: "options"
      type: "java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>"
    return:
      type: "com.google.cloud.Tuple<java.lang.String,java.lang.Iterable<com.google.api.services.bigquery.model.Job>>"
- uid: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.listModels(java.lang.String,java.lang.String,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  id: "listModels(java.lang.String,java.lang.String,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  parent: "com.google.cloud.bigquery.spi.v2.BigQueryRpc"
  langs:
  - "java"
  name: "listModels(String projectId, String dataset, Map<BigQueryRpc.Option,?> options)"
  nameWithType: "BigQueryRpc.listModels(String projectId, String dataset, Map<BigQueryRpc.Option,?> options)"
  fullName: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.listModels(String projectId, String dataset, Map<BigQueryRpc.Option,?> options)"
  overload: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.listModels*"
  type: "Method"
  package: "com.google.cloud.bigquery.spi.v2"
  summary: "Lists the dataset's models, keyed by page token."
  syntax:
    content: "public abstract Tuple<String,Iterable<Model>> listModels(String projectId, String dataset, Map<BigQueryRpc.Option,?> options)"
    parameters:
    - id: "projectId"
      type: "java.lang.String"
    - id: "dataset"
      type: "java.lang.String"
    - id: "options"
      type: "java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>"
    return:
      type: "com.google.cloud.Tuple<java.lang.String,java.lang.Iterable<com.google.api.services.bigquery.model.Model>>"
- uid: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.listRoutines(java.lang.String,java.lang.String,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  id: "listRoutines(java.lang.String,java.lang.String,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  parent: "com.google.cloud.bigquery.spi.v2.BigQueryRpc"
  langs:
  - "java"
  name: "listRoutines(String projectId, String datasetId, Map<BigQueryRpc.Option,?> options)"
  nameWithType: "BigQueryRpc.listRoutines(String projectId, String datasetId, Map<BigQueryRpc.Option,?> options)"
  fullName: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.listRoutines(String projectId, String datasetId, Map<BigQueryRpc.Option,?> options)"
  overload: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.listRoutines*"
  type: "Method"
  package: "com.google.cloud.bigquery.spi.v2"
  syntax:
    content: "public abstract Tuple<String,Iterable<Routine>> listRoutines(String projectId, String datasetId, Map<BigQueryRpc.Option,?> options)"
    parameters:
    - id: "projectId"
      type: "java.lang.String"
    - id: "datasetId"
      type: "java.lang.String"
    - id: "options"
      type: "java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>"
    return:
      type: "com.google.cloud.Tuple<java.lang.String,java.lang.Iterable<com.google.api.services.bigquery.model.Routine>>"
- uid: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.listTableData(java.lang.String,java.lang.String,java.lang.String,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  id: "listTableData(java.lang.String,java.lang.String,java.lang.String,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  parent: "com.google.cloud.bigquery.spi.v2.BigQueryRpc"
  langs:
  - "java"
  name: "listTableData(String projectId, String datasetId, String tableId, Map<BigQueryRpc.Option,?> options)"
  nameWithType: "BigQueryRpc.listTableData(String projectId, String datasetId, String tableId, Map<BigQueryRpc.Option,?> options)"
  fullName: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.listTableData(String projectId, String datasetId, String tableId, Map<BigQueryRpc.Option,?> options)"
  overload: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.listTableData*"
  type: "Method"
  package: "com.google.cloud.bigquery.spi.v2"
  summary: "Lists the table's rows."
  syntax:
    content: "public abstract TableDataList listTableData(String projectId, String datasetId, String tableId, Map<BigQueryRpc.Option,?> options)"
    parameters:
    - id: "projectId"
      type: "java.lang.String"
    - id: "datasetId"
      type: "java.lang.String"
    - id: "tableId"
      type: "java.lang.String"
    - id: "options"
      type: "java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>"
    return:
      type: "com.google.api.services.bigquery.model.TableDataList"
- uid: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.listTables(java.lang.String,java.lang.String,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  id: "listTables(java.lang.String,java.lang.String,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  parent: "com.google.cloud.bigquery.spi.v2.BigQueryRpc"
  langs:
  - "java"
  name: "listTables(String projectId, String dataset, Map<BigQueryRpc.Option,?> options)"
  nameWithType: "BigQueryRpc.listTables(String projectId, String dataset, Map<BigQueryRpc.Option,?> options)"
  fullName: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.listTables(String projectId, String dataset, Map<BigQueryRpc.Option,?> options)"
  overload: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.listTables*"
  type: "Method"
  package: "com.google.cloud.bigquery.spi.v2"
  summary: "Lists the dataset's tables, keyed by page token. Partial information is returned on a table (tableReference, friendlyName, id and type). To get full information use <xref uid=\"com.google.cloud.bigquery.spi.v2.BigQueryRpc.getTable(java.lang.String,java.lang.String,java.lang.String,java.util.Map&lt;com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?&gt;)\" data-throw-if-not-resolved=\"false\">#getTable(String, String, String, Map)</xref>."
  syntax:
    content: "public abstract Tuple<String,Iterable<Table>> listTables(String projectId, String dataset, Map<BigQueryRpc.Option,?> options)"
    parameters:
    - id: "projectId"
      type: "java.lang.String"
    - id: "dataset"
      type: "java.lang.String"
    - id: "options"
      type: "java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>"
    return:
      type: "com.google.cloud.Tuple<java.lang.String,java.lang.Iterable<com.google.api.services.bigquery.model.Table>>"
- uid: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.open(com.google.api.services.bigquery.model.Job)"
  id: "open(com.google.api.services.bigquery.model.Job)"
  parent: "com.google.cloud.bigquery.spi.v2.BigQueryRpc"
  langs:
  - "java"
  name: "open(Job job)"
  nameWithType: "BigQueryRpc.open(Job job)"
  fullName: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.open(Job job)"
  overload: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.open*"
  type: "Method"
  package: "com.google.cloud.bigquery.spi.v2"
  summary: "Opens a resumable upload session to load data into a BigQuery table and returns an upload URI."
  syntax:
    content: "public abstract String open(Job job)"
    parameters:
    - id: "job"
      type: "com.google.api.services.bigquery.model.Job"
      description: "load job"
    return:
      type: "java.lang.String"
- uid: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.patch(com.google.api.services.bigquery.model.Dataset,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  id: "patch(com.google.api.services.bigquery.model.Dataset,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  parent: "com.google.cloud.bigquery.spi.v2.BigQueryRpc"
  langs:
  - "java"
  name: "patch(Dataset dataset, Map<BigQueryRpc.Option,?> options)"
  nameWithType: "BigQueryRpc.patch(Dataset dataset, Map<BigQueryRpc.Option,?> options)"
  fullName: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.patch(Dataset dataset, Map<BigQueryRpc.Option,?> options)"
  overload: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.patch*"
  type: "Method"
  package: "com.google.cloud.bigquery.spi.v2"
  summary: "Updates dataset information."
  syntax:
    content: "public abstract Dataset patch(Dataset dataset, Map<BigQueryRpc.Option,?> options)"
    parameters:
    - id: "dataset"
      type: "com.google.api.services.bigquery.model.Dataset"
    - id: "options"
      type: "java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>"
    return:
      type: "com.google.api.services.bigquery.model.Dataset"
- uid: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.patch(com.google.api.services.bigquery.model.Model,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  id: "patch(com.google.api.services.bigquery.model.Model,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  parent: "com.google.cloud.bigquery.spi.v2.BigQueryRpc"
  langs:
  - "java"
  name: "patch(Model model, Map<BigQueryRpc.Option,?> options)"
  nameWithType: "BigQueryRpc.patch(Model model, Map<BigQueryRpc.Option,?> options)"
  fullName: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.patch(Model model, Map<BigQueryRpc.Option,?> options)"
  overload: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.patch*"
  type: "Method"
  package: "com.google.cloud.bigquery.spi.v2"
  summary: "Updates model information."
  syntax:
    content: "public abstract Model patch(Model model, Map<BigQueryRpc.Option,?> options)"
    parameters:
    - id: "model"
      type: "com.google.api.services.bigquery.model.Model"
    - id: "options"
      type: "java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>"
    return:
      type: "com.google.api.services.bigquery.model.Model"
- uid: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.patch(com.google.api.services.bigquery.model.Table,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  id: "patch(com.google.api.services.bigquery.model.Table,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  parent: "com.google.cloud.bigquery.spi.v2.BigQueryRpc"
  langs:
  - "java"
  name: "patch(Table table, Map<BigQueryRpc.Option,?> options)"
  nameWithType: "BigQueryRpc.patch(Table table, Map<BigQueryRpc.Option,?> options)"
  fullName: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.patch(Table table, Map<BigQueryRpc.Option,?> options)"
  overload: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.patch*"
  type: "Method"
  package: "com.google.cloud.bigquery.spi.v2"
  summary: "Updates table information."
  syntax:
    content: "public abstract Table patch(Table table, Map<BigQueryRpc.Option,?> options)"
    parameters:
    - id: "table"
      type: "com.google.api.services.bigquery.model.Table"
    - id: "options"
      type: "java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>"
    return:
      type: "com.google.api.services.bigquery.model.Table"
- uid: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.queryRpc(java.lang.String,com.google.api.services.bigquery.model.QueryRequest)"
  id: "queryRpc(java.lang.String,com.google.api.services.bigquery.model.QueryRequest)"
  parent: "com.google.cloud.bigquery.spi.v2.BigQueryRpc"
  langs:
  - "java"
  name: "queryRpc(String projectId, QueryRequest content)"
  nameWithType: "BigQueryRpc.queryRpc(String projectId, QueryRequest content)"
  fullName: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.queryRpc(String projectId, QueryRequest content)"
  overload: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.queryRpc*"
  type: "Method"
  package: "com.google.cloud.bigquery.spi.v2"
  summary: "Runs a BigQuery SQL query synchronously and returns query results if the query completes within a specified timeout.\n\nCreate a request for the method \"jobs.query\".\n\nThis request holds the parameters needed by the bigquery server. After setting any optional parameters, call the <xref uid=\"\" data-throw-if-not-resolved=\"false\">Query#execute()</xref> method to invoke the remote operation."
  syntax:
    content: "public abstract QueryResponse queryRpc(String projectId, QueryRequest content)"
    parameters:
    - id: "projectId"
      type: "java.lang.String"
      description: "Project ID of the project billed for the query"
    - id: "content"
      type: "com.google.api.services.bigquery.model.QueryRequest"
      description: "the <xref uid=\"com.google.api.services.bigquery.model.QueryRequest\" data-throw-if-not-resolved=\"false\">com.google.api.services.bigquery.model.QueryRequest</xref>"
    return:
      type: "com.google.api.services.bigquery.model.QueryResponse"
      description: "the request"
- uid: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.setIamPolicy(java.lang.String,com.google.api.services.bigquery.model.Policy,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  id: "setIamPolicy(java.lang.String,com.google.api.services.bigquery.model.Policy,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  parent: "com.google.cloud.bigquery.spi.v2.BigQueryRpc"
  langs:
  - "java"
  name: "setIamPolicy(String resourceId, Policy policy, Map<BigQueryRpc.Option,?> options)"
  nameWithType: "BigQueryRpc.setIamPolicy(String resourceId, Policy policy, Map<BigQueryRpc.Option,?> options)"
  fullName: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.setIamPolicy(String resourceId, Policy policy, Map<BigQueryRpc.Option,?> options)"
  overload: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.setIamPolicy*"
  type: "Method"
  package: "com.google.cloud.bigquery.spi.v2"
  summary: "Updates the IAM policy for the specified resource."
  syntax:
    content: "public abstract Policy setIamPolicy(String resourceId, Policy policy, Map<BigQueryRpc.Option,?> options)"
    parameters:
    - id: "resourceId"
      type: "java.lang.String"
    - id: "policy"
      type: "com.google.api.services.bigquery.model.Policy"
    - id: "options"
      type: "java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>"
    return:
      type: "com.google.api.services.bigquery.model.Policy"
- uid: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.testIamPermissions(java.lang.String,java.util.List<java.lang.String>,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  id: "testIamPermissions(java.lang.String,java.util.List<java.lang.String>,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  parent: "com.google.cloud.bigquery.spi.v2.BigQueryRpc"
  langs:
  - "java"
  name: "testIamPermissions(String resourceId, List<String> permissions, Map<BigQueryRpc.Option,?> options)"
  nameWithType: "BigQueryRpc.testIamPermissions(String resourceId, List<String> permissions, Map<BigQueryRpc.Option,?> options)"
  fullName: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.testIamPermissions(String resourceId, List<String> permissions, Map<BigQueryRpc.Option,?> options)"
  overload: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.testIamPermissions*"
  type: "Method"
  package: "com.google.cloud.bigquery.spi.v2"
  summary: "Tests whether the caller holds the provided permissions for the specified resource. Returns the subset of permissions the caller actually holds."
  syntax:
    content: "public abstract TestIamPermissionsResponse testIamPermissions(String resourceId, List<String> permissions, Map<BigQueryRpc.Option,?> options)"
    parameters:
    - id: "resourceId"
      type: "java.lang.String"
    - id: "permissions"
      type: "java.util.List<java.lang.String>"
    - id: "options"
      type: "java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>"
    return:
      type: "com.google.api.services.bigquery.model.TestIamPermissionsResponse"
- uid: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.update(com.google.api.services.bigquery.model.Routine,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  id: "update(com.google.api.services.bigquery.model.Routine,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  parent: "com.google.cloud.bigquery.spi.v2.BigQueryRpc"
  langs:
  - "java"
  name: "update(Routine routine, Map<BigQueryRpc.Option,?> options)"
  nameWithType: "BigQueryRpc.update(Routine routine, Map<BigQueryRpc.Option,?> options)"
  fullName: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.update(Routine routine, Map<BigQueryRpc.Option,?> options)"
  overload: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.update*"
  type: "Method"
  package: "com.google.cloud.bigquery.spi.v2"
  summary: "Updates the requested routine."
  syntax:
    content: "public abstract Routine update(Routine routine, Map<BigQueryRpc.Option,?> options)"
    parameters:
    - id: "routine"
      type: "com.google.api.services.bigquery.model.Routine"
    - id: "options"
      type: "java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>"
    return:
      type: "com.google.api.services.bigquery.model.Routine"
- uid: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.write(java.lang.String,byte[],int,long,int,boolean)"
  id: "write(java.lang.String,byte[],int,long,int,boolean)"
  parent: "com.google.cloud.bigquery.spi.v2.BigQueryRpc"
  langs:
  - "java"
  name: "write(String uploadId, byte[] toWrite, int toWriteOffset, long destOffset, int length, boolean last)"
  nameWithType: "BigQueryRpc.write(String uploadId, byte[] toWrite, int toWriteOffset, long destOffset, int length, boolean last)"
  fullName: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.write(String uploadId, byte[] toWrite, int toWriteOffset, long destOffset, int length, boolean last)"
  overload: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.write*"
  type: "Method"
  package: "com.google.cloud.bigquery.spi.v2"
  summary: "Uploads the provided data to the resumable upload session at the specified position. This method returns the job created to insert the rows, only when `last` is `true`."
  syntax:
    content: "public abstract Job write(String uploadId, byte[] toWrite, int toWriteOffset, long destOffset, int length, boolean last)"
    parameters:
    - id: "uploadId"
      type: "java.lang.String"
      description: "the resumable upload session URI"
    - id: "toWrite"
      type: "byte[]"
      description: "a byte array of data to upload"
    - id: "toWriteOffset"
      type: "int"
      description: "offset in the <code>toWrite</code> param to start writing from"
    - id: "destOffset"
      type: "long"
      description: "offset in the destination where to upload data to"
    - id: "length"
      type: "int"
      description: "the number of bytes to upload"
    - id: "last"
      type: "boolean"
      description: "<code>true</code> indicates that the last chunk is being uploaded"
    return:
      type: "com.google.api.services.bigquery.model.Job"
      description: "returns the job created to insert the rows, only when <code>last</code> is <code>true</code>.\n     Returns <code>null</code> otherwise"
references:
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>"
  spec.java:
  - uid: "java.util.Map"
    name: "Map"
    fullName: "java.util.Map"
  - name: "<"
    fullName: "<"
  - uid: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option"
    name: "Option"
    fullName: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option"
  - name: ","
    fullName: ","
  - uid: "?"
    name: "?"
    fullName: "?"
  - name: ">"
    fullName: ">"
- uid: "com.google.api.services.bigquery.model.Dataset"
  spec.java:
  - uid: "com.google.api.services.bigquery.model.Dataset"
    name: "Dataset"
    fullName: "com.google.api.services.bigquery.model.Dataset"
- uid: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.getDataset*"
  name: "getDataset"
  nameWithType: "BigQueryRpc.getDataset"
  fullName: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.getDataset"
  package: "com.google.cloud.bigquery.spi.v2"
- uid: "com.google.cloud.Tuple<java.lang.String,java.lang.Iterable<com.google.api.services.bigquery.model.Dataset>>"
  spec.java:
  - uid: "com.google.cloud.Tuple"
    name: "Tuple"
    fullName: "com.google.cloud.Tuple"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ","
    fullName: ","
  - uid: "java.lang.Iterable"
    name: "Iterable"
    fullName: "java.lang.Iterable"
  - name: "<"
    fullName: "<"
  - uid: "com.google.api.services.bigquery.model.Dataset"
    name: "Dataset"
    fullName: "com.google.api.services.bigquery.model.Dataset"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.listDatasets*"
  name: "listDatasets"
  nameWithType: "BigQueryRpc.listDatasets"
  fullName: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.listDatasets"
  package: "com.google.cloud.bigquery.spi.v2"
- uid: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.create*"
  name: "create"
  nameWithType: "BigQueryRpc.create"
  fullName: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.create"
  package: "com.google.cloud.bigquery.spi.v2"
- uid: "com.google.api.services.bigquery.model.Table"
  spec.java:
  - uid: "com.google.api.services.bigquery.model.Table"
    name: "Table"
    fullName: "com.google.api.services.bigquery.model.Table"
- uid: "com.google.api.services.bigquery.model.Job"
  spec.java:
  - uid: "com.google.api.services.bigquery.model.Job"
    name: "Job"
    fullName: "com.google.api.services.bigquery.model.Job"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.deleteDataset*"
  name: "deleteDataset"
  nameWithType: "BigQueryRpc.deleteDataset"
  fullName: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.deleteDataset"
  package: "com.google.cloud.bigquery.spi.v2"
- uid: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.patch*"
  name: "patch"
  nameWithType: "BigQueryRpc.patch"
  fullName: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.patch"
  package: "com.google.cloud.bigquery.spi.v2"
- uid: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.getTable*"
  name: "getTable"
  nameWithType: "BigQueryRpc.getTable"
  fullName: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.getTable"
  package: "com.google.cloud.bigquery.spi.v2"
- uid: "com.google.cloud.Tuple<java.lang.String,java.lang.Iterable<com.google.api.services.bigquery.model.Table>>"
  spec.java:
  - uid: "com.google.cloud.Tuple"
    name: "Tuple"
    fullName: "com.google.cloud.Tuple"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ","
    fullName: ","
  - uid: "java.lang.Iterable"
    name: "Iterable"
    fullName: "java.lang.Iterable"
  - name: "<"
    fullName: "<"
  - uid: "com.google.api.services.bigquery.model.Table"
    name: "Table"
    fullName: "com.google.api.services.bigquery.model.Table"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.listTables*"
  name: "listTables"
  nameWithType: "BigQueryRpc.listTables"
  fullName: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.listTables"
  package: "com.google.cloud.bigquery.spi.v2"
- uid: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.deleteTable*"
  name: "deleteTable"
  nameWithType: "BigQueryRpc.deleteTable"
  fullName: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.deleteTable"
  package: "com.google.cloud.bigquery.spi.v2"
- uid: "com.google.api.services.bigquery.model.Model"
  spec.java:
  - uid: "com.google.api.services.bigquery.model.Model"
    name: "Model"
    fullName: "com.google.api.services.bigquery.model.Model"
- uid: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.getModel*"
  name: "getModel"
  nameWithType: "BigQueryRpc.getModel"
  fullName: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.getModel"
  package: "com.google.cloud.bigquery.spi.v2"
- uid: "com.google.cloud.Tuple<java.lang.String,java.lang.Iterable<com.google.api.services.bigquery.model.Model>>"
  spec.java:
  - uid: "com.google.cloud.Tuple"
    name: "Tuple"
    fullName: "com.google.cloud.Tuple"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ","
    fullName: ","
  - uid: "java.lang.Iterable"
    name: "Iterable"
    fullName: "java.lang.Iterable"
  - name: "<"
    fullName: "<"
  - uid: "com.google.api.services.bigquery.model.Model"
    name: "Model"
    fullName: "com.google.api.services.bigquery.model.Model"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.listModels*"
  name: "listModels"
  nameWithType: "BigQueryRpc.listModels"
  fullName: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.listModels"
  package: "com.google.cloud.bigquery.spi.v2"
- uid: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.deleteModel*"
  name: "deleteModel"
  nameWithType: "BigQueryRpc.deleteModel"
  fullName: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.deleteModel"
  package: "com.google.cloud.bigquery.spi.v2"
- uid: "com.google.api.services.bigquery.model.Routine"
  spec.java:
  - uid: "com.google.api.services.bigquery.model.Routine"
    name: "Routine"
    fullName: "com.google.api.services.bigquery.model.Routine"
- uid: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.update*"
  name: "update"
  nameWithType: "BigQueryRpc.update"
  fullName: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.update"
  package: "com.google.cloud.bigquery.spi.v2"
- uid: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.getRoutine*"
  name: "getRoutine"
  nameWithType: "BigQueryRpc.getRoutine"
  fullName: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.getRoutine"
  package: "com.google.cloud.bigquery.spi.v2"
- uid: "com.google.cloud.Tuple<java.lang.String,java.lang.Iterable<com.google.api.services.bigquery.model.Routine>>"
  spec.java:
  - uid: "com.google.cloud.Tuple"
    name: "Tuple"
    fullName: "com.google.cloud.Tuple"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ","
    fullName: ","
  - uid: "java.lang.Iterable"
    name: "Iterable"
    fullName: "java.lang.Iterable"
  - name: "<"
    fullName: "<"
  - uid: "com.google.api.services.bigquery.model.Routine"
    name: "Routine"
    fullName: "com.google.api.services.bigquery.model.Routine"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.listRoutines*"
  name: "listRoutines"
  nameWithType: "BigQueryRpc.listRoutines"
  fullName: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.listRoutines"
  package: "com.google.cloud.bigquery.spi.v2"
- uid: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.deleteRoutine*"
  name: "deleteRoutine"
  nameWithType: "BigQueryRpc.deleteRoutine"
  fullName: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.deleteRoutine"
  package: "com.google.cloud.bigquery.spi.v2"
- uid: "com.google.api.services.bigquery.model.TableDataInsertAllRequest"
  spec.java:
  - uid: "com.google.api.services.bigquery.model.TableDataInsertAllRequest"
    name: "TableDataInsertAllRequest"
    fullName: "com.google.api.services.bigquery.model.TableDataInsertAllRequest"
- uid: "com.google.api.services.bigquery.model.TableDataInsertAllResponse"
  spec.java:
  - uid: "com.google.api.services.bigquery.model.TableDataInsertAllResponse"
    name: "TableDataInsertAllResponse"
    fullName: "com.google.api.services.bigquery.model.TableDataInsertAllResponse"
- uid: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.insertAll*"
  name: "insertAll"
  nameWithType: "BigQueryRpc.insertAll"
  fullName: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.insertAll"
  package: "com.google.cloud.bigquery.spi.v2"
- uid: "com.google.api.services.bigquery.model.TableDataList"
  spec.java:
  - uid: "com.google.api.services.bigquery.model.TableDataList"
    name: "TableDataList"
    fullName: "com.google.api.services.bigquery.model.TableDataList"
- uid: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.listTableData*"
  name: "listTableData"
  nameWithType: "BigQueryRpc.listTableData"
  fullName: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.listTableData"
  package: "com.google.cloud.bigquery.spi.v2"
- uid: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.getJob*"
  name: "getJob"
  nameWithType: "BigQueryRpc.getJob"
  fullName: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.getJob"
  package: "com.google.cloud.bigquery.spi.v2"
- uid: "com.google.cloud.Tuple<java.lang.String,java.lang.Iterable<com.google.api.services.bigquery.model.Job>>"
  spec.java:
  - uid: "com.google.cloud.Tuple"
    name: "Tuple"
    fullName: "com.google.cloud.Tuple"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ","
    fullName: ","
  - uid: "java.lang.Iterable"
    name: "Iterable"
    fullName: "java.lang.Iterable"
  - name: "<"
    fullName: "<"
  - uid: "com.google.api.services.bigquery.model.Job"
    name: "Job"
    fullName: "com.google.api.services.bigquery.model.Job"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.listJobs*"
  name: "listJobs"
  nameWithType: "BigQueryRpc.listJobs"
  fullName: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.listJobs"
  package: "com.google.cloud.bigquery.spi.v2"
- uid: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.cancel*"
  name: "cancel"
  nameWithType: "BigQueryRpc.cancel"
  fullName: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.cancel"
  package: "com.google.cloud.bigquery.spi.v2"
- uid: "com.google.api.services.bigquery.model.GetQueryResultsResponse"
  spec.java:
  - uid: "com.google.api.services.bigquery.model.GetQueryResultsResponse"
    name: "GetQueryResultsResponse"
    fullName: "com.google.api.services.bigquery.model.GetQueryResultsResponse"
- uid: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.getQueryResults*"
  name: "getQueryResults"
  nameWithType: "BigQueryRpc.getQueryResults"
  fullName: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.getQueryResults"
  package: "com.google.cloud.bigquery.spi.v2"
- uid: "com.google.api.services.bigquery.model.QueryRequest"
  spec.java:
  - uid: "com.google.api.services.bigquery.model.QueryRequest"
    name: "QueryRequest"
    fullName: "com.google.api.services.bigquery.model.QueryRequest"
- uid: "com.google.api.services.bigquery.model.QueryResponse"
  spec.java:
  - uid: "com.google.api.services.bigquery.model.QueryResponse"
    name: "QueryResponse"
    fullName: "com.google.api.services.bigquery.model.QueryResponse"
- uid: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.queryRpc*"
  name: "queryRpc"
  nameWithType: "BigQueryRpc.queryRpc"
  fullName: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.queryRpc"
  package: "com.google.cloud.bigquery.spi.v2"
- uid: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.open*"
  name: "open"
  nameWithType: "BigQueryRpc.open"
  fullName: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.open"
  package: "com.google.cloud.bigquery.spi.v2"
- uid: "byte[]"
  spec.java:
  - uid: "byte"
    name: "byte"
    fullName: "byte"
  - name: "[]"
    fullName: "[]"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "long"
  spec.java:
  - uid: "long"
    name: "long"
    fullName: "long"
- uid: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.write*"
  name: "write"
  nameWithType: "BigQueryRpc.write"
  fullName: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.write"
  package: "com.google.cloud.bigquery.spi.v2"
- uid: "com.google.api.services.bigquery.model.Policy"
  spec.java:
  - uid: "com.google.api.services.bigquery.model.Policy"
    name: "Policy"
    fullName: "com.google.api.services.bigquery.model.Policy"
- uid: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.getIamPolicy*"
  name: "getIamPolicy"
  nameWithType: "BigQueryRpc.getIamPolicy"
  fullName: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.getIamPolicy"
  package: "com.google.cloud.bigquery.spi.v2"
- uid: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.setIamPolicy*"
  name: "setIamPolicy"
  nameWithType: "BigQueryRpc.setIamPolicy"
  fullName: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.setIamPolicy"
  package: "com.google.cloud.bigquery.spi.v2"
- uid: "java.util.List<java.lang.String>"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ">"
    fullName: ">"
- uid: "com.google.api.services.bigquery.model.TestIamPermissionsResponse"
  spec.java:
  - uid: "com.google.api.services.bigquery.model.TestIamPermissionsResponse"
    name: "TestIamPermissionsResponse"
    fullName: "com.google.api.services.bigquery.model.TestIamPermissionsResponse"
- uid: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.testIamPermissions*"
  name: "testIamPermissions"
  nameWithType: "BigQueryRpc.testIamPermissions"
  fullName: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.testIamPermissions"
  package: "com.google.cloud.bigquery.spi.v2"
- uid: "com.google.cloud.ServiceRpc"
  name: "ServiceRpc"
  nameWithType: "ServiceRpc"
  fullName: "com.google.cloud.ServiceRpc"
- uid: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option"
  name: "BigQueryRpc.Option"
  nameWithType: "BigQueryRpc.Option"
  fullName: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option"
- uid: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?"
  name: "BigQueryRpc.Option,?"
  nameWithType: "BigQueryRpc.Option,?"
  fullName: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?"
- uid: "java.util.Map"
  name: "Map"
  nameWithType: "Map"
  fullName: "java.util.Map"
- uid: "com.google.cloud.Tuple"
  name: "Tuple"
  nameWithType: "Tuple"
  fullName: "com.google.cloud.Tuple"
- uid: "java.lang.String,java.lang.Iterable"
  name: "String,Iterable"
  nameWithType: "String,Iterable"
  fullName: "java.lang.String,java.lang.Iterable"
- uid: "java.util.List"
  name: "List"
  nameWithType: "List"
  fullName: "java.util.List"
