### YamlMime:ManagedReference
items:
- uid: "com.google.cloud.bigquery.BigtableOptions"
  id: "BigtableOptions"
  parent: "com.google.cloud.bigquery"
  children:
  - "com.google.cloud.bigquery.BigtableOptions.Builder"
  - "com.google.cloud.bigquery.BigtableOptions.equals(java.lang.Object)"
  - "com.google.cloud.bigquery.BigtableOptions.getColumnFamilies()"
  - "com.google.cloud.bigquery.BigtableOptions.getIgnoreUnspecifiedColumnFamilies()"
  - "com.google.cloud.bigquery.BigtableOptions.getReadRowkeyAsString()"
  - "com.google.cloud.bigquery.BigtableOptions.hashCode()"
  - "com.google.cloud.bigquery.BigtableOptions.newBuilder()"
  - "com.google.cloud.bigquery.BigtableOptions.toBuilder()"
  - "com.google.cloud.bigquery.BigtableOptions.toString()"
  langs:
  - "java"
  name: "BigtableOptions"
  nameWithType: "BigtableOptions"
  fullName: "com.google.cloud.bigquery.BigtableOptions"
  type: "Class"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public class BigtableOptions extends FormatOptions"
  inheritance:
  - "java.lang.Object"
  - "com.google.cloud.bigquery.FormatOptions"
  inheritedMembers:
  - "com.google.cloud.bigquery.FormatOptions.avro()"
  - "com.google.cloud.bigquery.FormatOptions.bigtable()"
  - "com.google.cloud.bigquery.FormatOptions.csv()"
  - "com.google.cloud.bigquery.FormatOptions.datastoreBackup()"
  - "com.google.cloud.bigquery.FormatOptions.equals(java.lang.Object)"
  - "com.google.cloud.bigquery.FormatOptions.getType()"
  - "com.google.cloud.bigquery.FormatOptions.googleSheets()"
  - "com.google.cloud.bigquery.FormatOptions.hashCode()"
  - "com.google.cloud.bigquery.FormatOptions.json()"
  - "com.google.cloud.bigquery.FormatOptions.of(java.lang.String)"
  - "com.google.cloud.bigquery.FormatOptions.orc()"
  - "com.google.cloud.bigquery.FormatOptions.parquet()"
  - "com.google.cloud.bigquery.FormatOptions.toString()"
  - "java.lang.Object.clone()"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.google.cloud.bigquery.BigtableOptions.BigtableOptions(com.google.cloud.bigquery.BigtableOptions.Builder)"
  id: "BigtableOptions(com.google.cloud.bigquery.BigtableOptions.Builder)"
  parent: "com.google.cloud.bigquery.BigtableOptions"
  langs:
  - "java"
  name: "BigtableOptions(BigtableOptions.Builder builder)"
  nameWithType: "BigtableOptions.BigtableOptions(BigtableOptions.Builder builder)"
  fullName: "com.google.cloud.bigquery.BigtableOptions.BigtableOptions(BigtableOptions.Builder builder)"
  overload: "com.google.cloud.bigquery.BigtableOptions.BigtableOptions*"
  type: "Constructor"
  package: "com.google.cloud.bigquery"
  syntax:
    content: " BigtableOptions(BigtableOptions.Builder builder)"
    parameters:
    - id: "builder"
      type: "com.google.cloud.bigquery.BigtableOptions.Builder"
- uid: "com.google.cloud.bigquery.BigtableOptions.equals(java.lang.Object)"
  id: "equals(java.lang.Object)"
  parent: "com.google.cloud.bigquery.BigtableOptions"
  langs:
  - "java"
  name: "equals(Object obj)"
  nameWithType: "BigtableOptions.equals(Object obj)"
  fullName: "com.google.cloud.bigquery.BigtableOptions.equals(Object obj)"
  overload: "com.google.cloud.bigquery.BigtableOptions.equals*"
  overridden: "com.google.cloud.bigquery.FormatOptions.equals(java.lang.Object)"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public final boolean equals(Object obj)"
    parameters:
    - id: "obj"
      type: "java.lang.Object"
    return:
      type: "boolean"
- uid: "com.google.cloud.bigquery.BigtableOptions.getColumnFamilies()"
  id: "getColumnFamilies()"
  parent: "com.google.cloud.bigquery.BigtableOptions"
  langs:
  - "java"
  name: "getColumnFamilies()"
  nameWithType: "BigtableOptions.getColumnFamilies()"
  fullName: "com.google.cloud.bigquery.BigtableOptions.getColumnFamilies()"
  overload: "com.google.cloud.bigquery.BigtableOptions.getColumnFamilies*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public List<BigtableColumnFamily> getColumnFamilies()"
    return:
      type: "java.util.List<com.google.cloud.bigquery.BigtableColumnFamily>"
- uid: "com.google.cloud.bigquery.BigtableOptions.getIgnoreUnspecifiedColumnFamilies()"
  id: "getIgnoreUnspecifiedColumnFamilies()"
  parent: "com.google.cloud.bigquery.BigtableOptions"
  langs:
  - "java"
  name: "getIgnoreUnspecifiedColumnFamilies()"
  nameWithType: "BigtableOptions.getIgnoreUnspecifiedColumnFamilies()"
  fullName: "com.google.cloud.bigquery.BigtableOptions.getIgnoreUnspecifiedColumnFamilies()"
  overload: "com.google.cloud.bigquery.BigtableOptions.getIgnoreUnspecifiedColumnFamilies*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public Boolean getIgnoreUnspecifiedColumnFamilies()"
    return:
      type: "java.lang.Boolean"
- uid: "com.google.cloud.bigquery.BigtableOptions.getReadRowkeyAsString()"
  id: "getReadRowkeyAsString()"
  parent: "com.google.cloud.bigquery.BigtableOptions"
  langs:
  - "java"
  name: "getReadRowkeyAsString()"
  nameWithType: "BigtableOptions.getReadRowkeyAsString()"
  fullName: "com.google.cloud.bigquery.BigtableOptions.getReadRowkeyAsString()"
  overload: "com.google.cloud.bigquery.BigtableOptions.getReadRowkeyAsString*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public Boolean getReadRowkeyAsString()"
    return:
      type: "java.lang.Boolean"
- uid: "com.google.cloud.bigquery.BigtableOptions.hashCode()"
  id: "hashCode()"
  parent: "com.google.cloud.bigquery.BigtableOptions"
  langs:
  - "java"
  name: "hashCode()"
  nameWithType: "BigtableOptions.hashCode()"
  fullName: "com.google.cloud.bigquery.BigtableOptions.hashCode()"
  overload: "com.google.cloud.bigquery.BigtableOptions.hashCode*"
  overridden: "com.google.cloud.bigquery.FormatOptions.hashCode()"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public final int hashCode()"
    return:
      type: "int"
- uid: "com.google.cloud.bigquery.BigtableOptions.newBuilder()"
  id: "newBuilder()"
  parent: "com.google.cloud.bigquery.BigtableOptions"
  langs:
  - "java"
  name: "newBuilder()"
  nameWithType: "BigtableOptions.newBuilder()"
  fullName: "com.google.cloud.bigquery.BigtableOptions.newBuilder()"
  overload: "com.google.cloud.bigquery.BigtableOptions.newBuilder*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns a builder for a <xref uid=\"com.google.cloud.bigquery.BigtableOptions\" data-throw-if-not-resolved=\"false\">BigtableOptions</xref> object."
  syntax:
    content: "public static BigtableOptions.Builder newBuilder()"
    return:
      type: "com.google.cloud.bigquery.BigtableOptions.Builder"
- uid: "com.google.cloud.bigquery.BigtableOptions.toBuilder()"
  id: "toBuilder()"
  parent: "com.google.cloud.bigquery.BigtableOptions"
  langs:
  - "java"
  name: "toBuilder()"
  nameWithType: "BigtableOptions.toBuilder()"
  fullName: "com.google.cloud.bigquery.BigtableOptions.toBuilder()"
  overload: "com.google.cloud.bigquery.BigtableOptions.toBuilder*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns a builder for the <xref uid=\"com.google.cloud.bigquery.BigtableOptions\" data-throw-if-not-resolved=\"false\">BigtableOptions</xref> object."
  syntax:
    content: "public BigtableOptions.Builder toBuilder()"
    return:
      type: "com.google.cloud.bigquery.BigtableOptions.Builder"
- uid: "com.google.cloud.bigquery.BigtableOptions.toString()"
  id: "toString()"
  parent: "com.google.cloud.bigquery.BigtableOptions"
  langs:
  - "java"
  name: "toString()"
  nameWithType: "BigtableOptions.toString()"
  fullName: "com.google.cloud.bigquery.BigtableOptions.toString()"
  overload: "com.google.cloud.bigquery.BigtableOptions.toString*"
  overridden: "com.google.cloud.bigquery.FormatOptions.toString()"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public String toString()"
    return:
      type: "java.lang.String"
references:
- uid: "com.google.cloud.bigquery.BigtableOptions.Builder"
  name: "BigtableOptions.Builder"
  nameWithType: "BigtableOptions.Builder"
  fullName: "com.google.cloud.bigquery.BigtableOptions.Builder"
- uid: "com.google.cloud.bigquery.BigtableOptions.BigtableOptions*"
  name: "BigtableOptions"
  nameWithType: "BigtableOptions.BigtableOptions"
  fullName: "com.google.cloud.bigquery.BigtableOptions.BigtableOptions"
  package: "com.google.cloud.bigquery"
- uid: "java.lang.Boolean"
  spec.java:
  - uid: "java.lang.Boolean"
    name: "Boolean"
    fullName: "java.lang.Boolean"
- uid: "com.google.cloud.bigquery.BigtableOptions.getIgnoreUnspecifiedColumnFamilies*"
  name: "getIgnoreUnspecifiedColumnFamilies"
  nameWithType: "BigtableOptions.getIgnoreUnspecifiedColumnFamilies"
  fullName: "com.google.cloud.bigquery.BigtableOptions.getIgnoreUnspecifiedColumnFamilies"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.BigtableOptions.getReadRowkeyAsString*"
  name: "getReadRowkeyAsString"
  nameWithType: "BigtableOptions.getReadRowkeyAsString"
  fullName: "com.google.cloud.bigquery.BigtableOptions.getReadRowkeyAsString"
  package: "com.google.cloud.bigquery"
- uid: "java.util.List<com.google.cloud.bigquery.BigtableColumnFamily>"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "com.google.cloud.bigquery.BigtableColumnFamily"
    name: "BigtableColumnFamily"
    fullName: "com.google.cloud.bigquery.BigtableColumnFamily"
  - name: ">"
    fullName: ">"
- uid: "com.google.cloud.bigquery.BigtableOptions.getColumnFamilies*"
  name: "getColumnFamilies"
  nameWithType: "BigtableOptions.getColumnFamilies"
  fullName: "com.google.cloud.bigquery.BigtableOptions.getColumnFamilies"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.BigtableOptions.toBuilder*"
  name: "toBuilder"
  nameWithType: "BigtableOptions.toBuilder"
  fullName: "com.google.cloud.bigquery.BigtableOptions.toBuilder"
  package: "com.google.cloud.bigquery"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.google.cloud.bigquery.BigtableOptions.toString*"
  name: "toString"
  nameWithType: "BigtableOptions.toString"
  fullName: "com.google.cloud.bigquery.BigtableOptions.toString"
  package: "com.google.cloud.bigquery"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "com.google.cloud.bigquery.BigtableOptions.hashCode*"
  name: "hashCode"
  nameWithType: "BigtableOptions.hashCode"
  fullName: "com.google.cloud.bigquery.BigtableOptions.hashCode"
  package: "com.google.cloud.bigquery"
- uid: "java.lang.Object"
  spec.java:
  - uid: "java.lang.Object"
    name: "Object"
    fullName: "java.lang.Object"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "com.google.cloud.bigquery.BigtableOptions.equals*"
  name: "equals"
  nameWithType: "BigtableOptions.equals"
  fullName: "com.google.cloud.bigquery.BigtableOptions.equals"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.BigtableOptions.newBuilder*"
  name: "newBuilder"
  nameWithType: "BigtableOptions.newBuilder"
  fullName: "com.google.cloud.bigquery.BigtableOptions.newBuilder"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.FormatOptions"
  name: "FormatOptions"
  nameWithType: "FormatOptions"
  fullName: "com.google.cloud.bigquery.FormatOptions"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "com.google.cloud.bigquery.FormatOptions.datastoreBackup()"
  name: "FormatOptions.datastoreBackup()"
  nameWithType: "FormatOptions.datastoreBackup()"
  fullName: "com.google.cloud.bigquery.FormatOptions.datastoreBackup()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "com.google.cloud.bigquery.FormatOptions.toString()"
  name: "FormatOptions.toString()"
  nameWithType: "FormatOptions.toString()"
  fullName: "com.google.cloud.bigquery.FormatOptions.toString()"
- uid: "com.google.cloud.bigquery.FormatOptions.orc()"
  name: "FormatOptions.orc()"
  nameWithType: "FormatOptions.orc()"
  fullName: "com.google.cloud.bigquery.FormatOptions.orc()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "com.google.cloud.bigquery.FormatOptions.avro()"
  name: "FormatOptions.avro()"
  nameWithType: "FormatOptions.avro()"
  fullName: "com.google.cloud.bigquery.FormatOptions.avro()"
- uid: "com.google.cloud.bigquery.FormatOptions.parquet()"
  name: "FormatOptions.parquet()"
  nameWithType: "FormatOptions.parquet()"
  fullName: "com.google.cloud.bigquery.FormatOptions.parquet()"
- uid: "com.google.cloud.bigquery.FormatOptions.of(java.lang.String)"
  name: "FormatOptions.of(String)"
  nameWithType: "FormatOptions.of(String)"
  fullName: "com.google.cloud.bigquery.FormatOptions.of(java.lang.String)"
- uid: "com.google.cloud.bigquery.FormatOptions.hashCode()"
  name: "FormatOptions.hashCode()"
  nameWithType: "FormatOptions.hashCode()"
  fullName: "com.google.cloud.bigquery.FormatOptions.hashCode()"
- uid: "com.google.cloud.bigquery.FormatOptions.equals(java.lang.Object)"
  name: "FormatOptions.equals(Object)"
  nameWithType: "FormatOptions.equals(Object)"
  fullName: "com.google.cloud.bigquery.FormatOptions.equals(java.lang.Object)"
- uid: "com.google.cloud.bigquery.FormatOptions.bigtable()"
  name: "FormatOptions.bigtable()"
  nameWithType: "FormatOptions.bigtable()"
  fullName: "com.google.cloud.bigquery.FormatOptions.bigtable()"
- uid: "com.google.cloud.bigquery.FormatOptions.csv()"
  name: "FormatOptions.csv()"
  nameWithType: "FormatOptions.csv()"
  fullName: "com.google.cloud.bigquery.FormatOptions.csv()"
- uid: "com.google.cloud.bigquery.FormatOptions.getType()"
  name: "FormatOptions.getType()"
  nameWithType: "FormatOptions.getType()"
  fullName: "com.google.cloud.bigquery.FormatOptions.getType()"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "com.google.cloud.bigquery.FormatOptions.googleSheets()"
  name: "FormatOptions.googleSheets()"
  nameWithType: "FormatOptions.googleSheets()"
  fullName: "com.google.cloud.bigquery.FormatOptions.googleSheets()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "com.google.cloud.bigquery.FormatOptions.json()"
  name: "FormatOptions.json()"
  nameWithType: "FormatOptions.json()"
  fullName: "com.google.cloud.bigquery.FormatOptions.json()"
- uid: "com.google.cloud.bigquery.BigtableColumnFamily"
  name: "BigtableColumnFamily"
  nameWithType: "BigtableColumnFamily"
  fullName: "com.google.cloud.bigquery.BigtableColumnFamily"
- uid: "java.util.List"
  name: "List"
  nameWithType: "List"
  fullName: "java.util.List"
