### YamlMime:ManagedReference
items:
- uid: "com.google.cloud.bigquery.TimelineSample"
  id: "TimelineSample"
  parent: "com.google.cloud.bigquery"
  children:
  - "com.google.cloud.bigquery.TimelineSample.Builder"
  - "com.google.cloud.bigquery.TimelineSample.TimelineSample()"
  - "com.google.cloud.bigquery.TimelineSample.getActiveUnits()"
  - "com.google.cloud.bigquery.TimelineSample.getCompletedUnits()"
  - "com.google.cloud.bigquery.TimelineSample.getElapsedMs()"
  - "com.google.cloud.bigquery.TimelineSample.getPendingUnits()"
  - "com.google.cloud.bigquery.TimelineSample.getSlotMillis()"
  - "com.google.cloud.bigquery.TimelineSample.toBuilder()"
  langs:
  - "java"
  name: "TimelineSample"
  nameWithType: "TimelineSample"
  fullName: "com.google.cloud.bigquery.TimelineSample"
  type: "Class"
  package: "com.google.cloud.bigquery"
  summary: "A specific timeline sample. This instruments work progress at a given point in time, providing information about work units active/pending/completed as well as cumulative slot-milliseconds."
  syntax:
    content: "public abstract class TimelineSample"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.google.cloud.bigquery.TimelineSample.TimelineSample()"
  id: "TimelineSample()"
  parent: "com.google.cloud.bigquery.TimelineSample"
  langs:
  - "java"
  name: "TimelineSample()"
  nameWithType: "TimelineSample.TimelineSample()"
  fullName: "com.google.cloud.bigquery.TimelineSample.TimelineSample()"
  overload: "com.google.cloud.bigquery.TimelineSample.TimelineSample*"
  type: "Constructor"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public TimelineSample()"
- uid: "com.google.cloud.bigquery.TimelineSample.getActiveUnits()"
  id: "getActiveUnits()"
  parent: "com.google.cloud.bigquery.TimelineSample"
  langs:
  - "java"
  name: "getActiveUnits()"
  nameWithType: "TimelineSample.getActiveUnits()"
  fullName: "com.google.cloud.bigquery.TimelineSample.getActiveUnits()"
  overload: "com.google.cloud.bigquery.TimelineSample.getActiveUnits*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns the total number of work units currently being processed."
  syntax:
    content: "public abstract Long getActiveUnits()"
    return:
      type: "java.lang.Long"
- uid: "com.google.cloud.bigquery.TimelineSample.getCompletedUnits()"
  id: "getCompletedUnits()"
  parent: "com.google.cloud.bigquery.TimelineSample"
  langs:
  - "java"
  name: "getCompletedUnits()"
  nameWithType: "TimelineSample.getCompletedUnits()"
  fullName: "com.google.cloud.bigquery.TimelineSample.getCompletedUnits()"
  overload: "com.google.cloud.bigquery.TimelineSample.getCompletedUnits*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns the total number of work units completed by this query."
  syntax:
    content: "public abstract Long getCompletedUnits()"
    return:
      type: "java.lang.Long"
- uid: "com.google.cloud.bigquery.TimelineSample.getElapsedMs()"
  id: "getElapsedMs()"
  parent: "com.google.cloud.bigquery.TimelineSample"
  langs:
  - "java"
  name: "getElapsedMs()"
  nameWithType: "TimelineSample.getElapsedMs()"
  fullName: "com.google.cloud.bigquery.TimelineSample.getElapsedMs()"
  overload: "com.google.cloud.bigquery.TimelineSample.getElapsedMs*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns the sample time as milliseconds elapsed since the start of query execution."
  syntax:
    content: "public abstract Long getElapsedMs()"
    return:
      type: "java.lang.Long"
- uid: "com.google.cloud.bigquery.TimelineSample.getPendingUnits()"
  id: "getPendingUnits()"
  parent: "com.google.cloud.bigquery.TimelineSample"
  langs:
  - "java"
  name: "getPendingUnits()"
  nameWithType: "TimelineSample.getPendingUnits()"
  fullName: "com.google.cloud.bigquery.TimelineSample.getPendingUnits()"
  overload: "com.google.cloud.bigquery.TimelineSample.getPendingUnits*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns the number of work units remaining for the currently active stages."
  syntax:
    content: "public abstract Long getPendingUnits()"
    return:
      type: "java.lang.Long"
- uid: "com.google.cloud.bigquery.TimelineSample.getSlotMillis()"
  id: "getSlotMillis()"
  parent: "com.google.cloud.bigquery.TimelineSample"
  langs:
  - "java"
  name: "getSlotMillis()"
  nameWithType: "TimelineSample.getSlotMillis()"
  fullName: "com.google.cloud.bigquery.TimelineSample.getSlotMillis()"
  overload: "com.google.cloud.bigquery.TimelineSample.getSlotMillis*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns the cumulative slot-milliseconds consumed by the query."
  syntax:
    content: "public abstract Long getSlotMillis()"
    return:
      type: "java.lang.Long"
- uid: "com.google.cloud.bigquery.TimelineSample.toBuilder()"
  id: "toBuilder()"
  parent: "com.google.cloud.bigquery.TimelineSample"
  langs:
  - "java"
  name: "toBuilder()"
  nameWithType: "TimelineSample.toBuilder()"
  fullName: "com.google.cloud.bigquery.TimelineSample.toBuilder()"
  overload: "com.google.cloud.bigquery.TimelineSample.toBuilder*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "return a builder for the `TimelineSample` object."
  syntax:
    content: "public abstract TimelineSample.Builder toBuilder()"
    return:
      type: "com.google.cloud.bigquery.TimelineSample.Builder"
references:
- uid: "com.google.cloud.bigquery.TimelineSample.TimelineSample*"
  name: "TimelineSample"
  nameWithType: "TimelineSample.TimelineSample"
  fullName: "com.google.cloud.bigquery.TimelineSample.TimelineSample"
  package: "com.google.cloud.bigquery"
- uid: "java.lang.Long"
  spec.java:
  - uid: "java.lang.Long"
    name: "Long"
    fullName: "java.lang.Long"
- uid: "com.google.cloud.bigquery.TimelineSample.getElapsedMs*"
  name: "getElapsedMs"
  nameWithType: "TimelineSample.getElapsedMs"
  fullName: "com.google.cloud.bigquery.TimelineSample.getElapsedMs"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.TimelineSample.getActiveUnits*"
  name: "getActiveUnits"
  nameWithType: "TimelineSample.getActiveUnits"
  fullName: "com.google.cloud.bigquery.TimelineSample.getActiveUnits"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.TimelineSample.getCompletedUnits*"
  name: "getCompletedUnits"
  nameWithType: "TimelineSample.getCompletedUnits"
  fullName: "com.google.cloud.bigquery.TimelineSample.getCompletedUnits"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.TimelineSample.getPendingUnits*"
  name: "getPendingUnits"
  nameWithType: "TimelineSample.getPendingUnits"
  fullName: "com.google.cloud.bigquery.TimelineSample.getPendingUnits"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.TimelineSample.getSlotMillis*"
  name: "getSlotMillis"
  nameWithType: "TimelineSample.getSlotMillis"
  fullName: "com.google.cloud.bigquery.TimelineSample.getSlotMillis"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.TimelineSample.Builder"
  name: "TimelineSample.Builder"
  nameWithType: "TimelineSample.Builder"
  fullName: "com.google.cloud.bigquery.TimelineSample.Builder"
- uid: "com.google.cloud.bigquery.TimelineSample.toBuilder*"
  name: "toBuilder"
  nameWithType: "TimelineSample.toBuilder"
  fullName: "com.google.cloud.bigquery.TimelineSample.toBuilder"
  package: "com.google.cloud.bigquery"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
