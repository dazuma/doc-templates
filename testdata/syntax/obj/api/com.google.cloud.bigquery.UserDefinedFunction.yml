### YamlMime:ManagedReference
items:
- uid: "com.google.cloud.bigquery.UserDefinedFunction"
  id: "UserDefinedFunction"
  parent: "com.google.cloud.bigquery"
  children:
  - "com.google.cloud.bigquery.UserDefinedFunction.Type"
  - "com.google.cloud.bigquery.UserDefinedFunction.equals(java.lang.Object)"
  - "com.google.cloud.bigquery.UserDefinedFunction.fromUri(java.lang.String)"
  - "com.google.cloud.bigquery.UserDefinedFunction.getContent()"
  - "com.google.cloud.bigquery.UserDefinedFunction.getType()"
  - "com.google.cloud.bigquery.UserDefinedFunction.hashCode()"
  - "com.google.cloud.bigquery.UserDefinedFunction.inline(java.lang.String)"
  - "com.google.cloud.bigquery.UserDefinedFunction.toPb()"
  langs:
  - "java"
  name: "UserDefinedFunction"
  nameWithType: "UserDefinedFunction"
  fullName: "com.google.cloud.bigquery.UserDefinedFunction"
  type: "Class"
  package: "com.google.cloud.bigquery"
  summary: "Google BigQuery User Defined Function. BigQuery supports user-defined functions (UDFs) written in JavaScript. A UDF is similar to the \"Map\" function in a MapReduce: it takes a single row as input and produces zero or more rows as output. The output can potentially have a different schema than the input."
  syntax:
    content: "public abstract class UserDefinedFunction implements Serializable"
  inheritance:
  - "java.lang.Object"
  implements:
  - "java.io.Serializable"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.google.cloud.bigquery.UserDefinedFunction.UserDefinedFunction(com.google.cloud.bigquery.UserDefinedFunction.Type,java.lang.String)"
  id: "UserDefinedFunction(com.google.cloud.bigquery.UserDefinedFunction.Type,java.lang.String)"
  parent: "com.google.cloud.bigquery.UserDefinedFunction"
  langs:
  - "java"
  name: "UserDefinedFunction(UserDefinedFunction.Type type, String content)"
  nameWithType: "UserDefinedFunction.UserDefinedFunction(UserDefinedFunction.Type type, String content)"
  fullName: "com.google.cloud.bigquery.UserDefinedFunction.UserDefinedFunction(UserDefinedFunction.Type type, String content)"
  overload: "com.google.cloud.bigquery.UserDefinedFunction.UserDefinedFunction*"
  type: "Constructor"
  package: "com.google.cloud.bigquery"
  syntax:
    content: " UserDefinedFunction(UserDefinedFunction.Type type, String content)"
    parameters:
    - id: "type"
      type: "com.google.cloud.bigquery.UserDefinedFunction.Type"
    - id: "content"
      type: "java.lang.String"
- uid: "com.google.cloud.bigquery.UserDefinedFunction.equals(java.lang.Object)"
  id: "equals(java.lang.Object)"
  parent: "com.google.cloud.bigquery.UserDefinedFunction"
  langs:
  - "java"
  name: "equals(Object obj)"
  nameWithType: "UserDefinedFunction.equals(Object obj)"
  fullName: "com.google.cloud.bigquery.UserDefinedFunction.equals(Object obj)"
  overload: "com.google.cloud.bigquery.UserDefinedFunction.equals*"
  overridden: "java.lang.Object.equals(java.lang.Object)"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public boolean equals(Object obj)"
    parameters:
    - id: "obj"
      type: "java.lang.Object"
    return:
      type: "boolean"
- uid: "com.google.cloud.bigquery.UserDefinedFunction.fromUri(java.lang.String)"
  id: "fromUri(java.lang.String)"
  parent: "com.google.cloud.bigquery.UserDefinedFunction"
  langs:
  - "java"
  name: "fromUri(String functionDefinition)"
  nameWithType: "UserDefinedFunction.fromUri(String functionDefinition)"
  fullName: "com.google.cloud.bigquery.UserDefinedFunction.fromUri(String functionDefinition)"
  overload: "com.google.cloud.bigquery.UserDefinedFunction.fromUri*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Creates a Google Cloud BigQuery user-defined function given a Google Cloud Storage URI (e.g. gs://bucket/path)."
  syntax:
    content: "public static UserDefinedFunction fromUri(String functionDefinition)"
    parameters:
    - id: "functionDefinition"
      type: "java.lang.String"
    return:
      type: "com.google.cloud.bigquery.UserDefinedFunction"
- uid: "com.google.cloud.bigquery.UserDefinedFunction.getContent()"
  id: "getContent()"
  parent: "com.google.cloud.bigquery.UserDefinedFunction"
  langs:
  - "java"
  name: "getContent()"
  nameWithType: "UserDefinedFunction.getContent()"
  fullName: "com.google.cloud.bigquery.UserDefinedFunction.getContent()"
  overload: "com.google.cloud.bigquery.UserDefinedFunction.getContent*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "If <xref uid=\"com.google.cloud.bigquery.UserDefinedFunction.getType()\" data-throw-if-not-resolved=\"false\">#getType()</xref> is <xref uid=\"\" data-throw-if-not-resolved=\"false\">Type#INLINE</xref> this method returns a code blob. If <xref uid=\"com.google.cloud.bigquery.UserDefinedFunction.getType()\" data-throw-if-not-resolved=\"false\">#getType()</xref> is <xref uid=\"\" data-throw-if-not-resolved=\"false\">Type#FROM_URI</xref> the method returns a Google Cloud Storage URI (e.g. gs://bucket/path)."
  syntax:
    content: "public String getContent()"
    return:
      type: "java.lang.String"
- uid: "com.google.cloud.bigquery.UserDefinedFunction.getType()"
  id: "getType()"
  parent: "com.google.cloud.bigquery.UserDefinedFunction"
  langs:
  - "java"
  name: "getType()"
  nameWithType: "UserDefinedFunction.getType()"
  fullName: "com.google.cloud.bigquery.UserDefinedFunction.getType()"
  overload: "com.google.cloud.bigquery.UserDefinedFunction.getType*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns the type of user defined function."
  syntax:
    content: "public UserDefinedFunction.Type getType()"
    return:
      type: "com.google.cloud.bigquery.UserDefinedFunction.Type"
- uid: "com.google.cloud.bigquery.UserDefinedFunction.hashCode()"
  id: "hashCode()"
  parent: "com.google.cloud.bigquery.UserDefinedFunction"
  langs:
  - "java"
  name: "hashCode()"
  nameWithType: "UserDefinedFunction.hashCode()"
  fullName: "com.google.cloud.bigquery.UserDefinedFunction.hashCode()"
  overload: "com.google.cloud.bigquery.UserDefinedFunction.hashCode*"
  overridden: "java.lang.Object.hashCode()"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public int hashCode()"
    return:
      type: "int"
- uid: "com.google.cloud.bigquery.UserDefinedFunction.inline(java.lang.String)"
  id: "inline(java.lang.String)"
  parent: "com.google.cloud.bigquery.UserDefinedFunction"
  langs:
  - "java"
  name: "inline(String functionDefinition)"
  nameWithType: "UserDefinedFunction.inline(String functionDefinition)"
  fullName: "com.google.cloud.bigquery.UserDefinedFunction.inline(String functionDefinition)"
  overload: "com.google.cloud.bigquery.UserDefinedFunction.inline*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Creates a Google Cloud BigQuery user-defined function given a code blob."
  syntax:
    content: "public static UserDefinedFunction inline(String functionDefinition)"
    parameters:
    - id: "functionDefinition"
      type: "java.lang.String"
    return:
      type: "com.google.cloud.bigquery.UserDefinedFunction"
- uid: "com.google.cloud.bigquery.UserDefinedFunction.toPb()"
  id: "toPb()"
  parent: "com.google.cloud.bigquery.UserDefinedFunction"
  langs:
  - "java"
  name: "toPb()"
  nameWithType: "UserDefinedFunction.toPb()"
  fullName: "com.google.cloud.bigquery.UserDefinedFunction.toPb()"
  overload: "com.google.cloud.bigquery.UserDefinedFunction.toPb*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public abstract UserDefinedFunctionResource toPb()"
    return:
      type: "com.google.api.services.bigquery.model.UserDefinedFunctionResource"
references:
- uid: "com.google.cloud.bigquery.UserDefinedFunction.Type"
  name: "UserDefinedFunction.Type"
  nameWithType: "UserDefinedFunction.Type"
  fullName: "com.google.cloud.bigquery.UserDefinedFunction.Type"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.google.cloud.bigquery.UserDefinedFunction.UserDefinedFunction*"
  name: "UserDefinedFunction"
  nameWithType: "UserDefinedFunction.UserDefinedFunction"
  fullName: "com.google.cloud.bigquery.UserDefinedFunction.UserDefinedFunction"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.UserDefinedFunction.getType*"
  name: "getType"
  nameWithType: "UserDefinedFunction.getType"
  fullName: "com.google.cloud.bigquery.UserDefinedFunction.getType"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.UserDefinedFunction.getContent*"
  name: "getContent"
  nameWithType: "UserDefinedFunction.getContent"
  fullName: "com.google.cloud.bigquery.UserDefinedFunction.getContent"
  package: "com.google.cloud.bigquery"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "com.google.cloud.bigquery.UserDefinedFunction.hashCode*"
  name: "hashCode"
  nameWithType: "UserDefinedFunction.hashCode"
  fullName: "com.google.cloud.bigquery.UserDefinedFunction.hashCode"
  package: "com.google.cloud.bigquery"
- uid: "java.lang.Object"
  spec.java:
  - uid: "java.lang.Object"
    name: "Object"
    fullName: "java.lang.Object"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "com.google.cloud.bigquery.UserDefinedFunction.equals*"
  name: "equals"
  nameWithType: "UserDefinedFunction.equals"
  fullName: "com.google.cloud.bigquery.UserDefinedFunction.equals"
  package: "com.google.cloud.bigquery"
- uid: "com.google.api.services.bigquery.model.UserDefinedFunctionResource"
  spec.java:
  - uid: "com.google.api.services.bigquery.model.UserDefinedFunctionResource"
    name: "UserDefinedFunctionResource"
    fullName: "com.google.api.services.bigquery.model.UserDefinedFunctionResource"
- uid: "com.google.cloud.bigquery.UserDefinedFunction.toPb*"
  name: "toPb"
  nameWithType: "UserDefinedFunction.toPb"
  fullName: "com.google.cloud.bigquery.UserDefinedFunction.toPb"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.UserDefinedFunction.inline*"
  name: "inline"
  nameWithType: "UserDefinedFunction.inline"
  fullName: "com.google.cloud.bigquery.UserDefinedFunction.inline"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.UserDefinedFunction.fromUri*"
  name: "fromUri"
  nameWithType: "UserDefinedFunction.fromUri"
  fullName: "com.google.cloud.bigquery.UserDefinedFunction.fromUri"
  package: "com.google.cloud.bigquery"
- uid: "java.io.Serializable"
  name: "Serializable"
  nameWithType: "Serializable"
  fullName: "java.io.Serializable"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
