### YamlMime:ManagedReference
items:
- uid: Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse
  commentId: T:Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse
  id: ExecuteBatchDmlResponse
  parent: Google.Cloud.Spanner.V1
  children:
  - Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse.#ctor
  - Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse.#ctor(Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse)
  - Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse.ResultSets
  - Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse.Status
  langs:
  - csharp
  - vb
  name: ExecuteBatchDmlResponse
  nameWithType: ExecuteBatchDmlResponse
  fullName: Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse
  type: Class
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Spanner.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: ExecuteBatchDmlResponse
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Spanner.cs
    startLine: 3509
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nThe response for [ExecuteBatchDml][google.spanner.v1.Spanner.ExecuteBatchDml]. Contains a list\nof [ResultSet][google.spanner.v1.ResultSet] messages, one for each DML statement that has successfully\nexecuted, in the same order as the statements in the request. If a statement\nfails, the status in the response body identifies the cause of the failure.\n\nTo check for DML statements that failed, use the following approach:\n\n1. Check the status in the response message. The [google.rpc.Code][google.rpc.Code] enum\nvalue `OK` indicates that all statements were executed successfully.\n2. If the status was not `OK`, check the number of result sets in the\nresponse. If the response contains `N` [ResultSet][google.spanner.v1.ResultSet] messages, then\nstatement `N+1` in the request failed.\n\nExample 1:\n\n* Request: 5 DML statements, all executed successfully.\n* Response: 5 [ResultSet][google.spanner.v1.ResultSet] messages, with the status `OK`.\n\nExample 2:\n\n* Request: 5 DML statements. The third statement has a syntax error.\n* Response: 2 [ResultSet][google.spanner.v1.ResultSet] messages, and a syntax error (`INVALID_ARGUMENT`)\nstatus. The number of [ResultSet][google.spanner.v1.ResultSet] messages indicates that the third\nstatement failed, and the fourth and fifth statements were not executed.\n"
  example: []
  syntax:
    content: 'public sealed class ExecuteBatchDmlResponse : IMessage<ExecuteBatchDmlResponse>, IEquatable<ExecuteBatchDmlResponse>, IDeepCloneable<ExecuteBatchDmlResponse>, IBufferMessage, IMessage'
    content.vb: >-
      Public NotInheritable Class ExecuteBatchDmlResponse
          Implements IMessage(Of ExecuteBatchDmlResponse), IEquatable(Of ExecuteBatchDmlResponse), IDeepCloneable(Of ExecuteBatchDmlResponse), IBufferMessage, IMessage
  inheritance:
  - System.Object
  implements:
  - Google.Protobuf.IMessage{Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse}
  - System.IEquatable{Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse}
  - Google.Protobuf.IDeepCloneable{Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse}
  - Google.Protobuf.IBufferMessage
  - Google.Protobuf.IMessage
  inheritedMembers:
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse.#ctor
  commentId: M:Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse.#ctor
  id: '#ctor'
  parent: Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse
  langs:
  - csharp
  - vb
  name: ExecuteBatchDmlResponse()
  nameWithType: ExecuteBatchDmlResponse.ExecuteBatchDmlResponse()
  fullName: Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse.ExecuteBatchDmlResponse()
  type: Constructor
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Spanner.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: .ctor
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Spanner.cs
    startLine: 3529
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  syntax:
    content: public ExecuteBatchDmlResponse()
    content.vb: Public Sub New
  overload: Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse.#ctor(Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse)
  commentId: M:Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse.#ctor(Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse)
  id: '#ctor(Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse)'
  parent: Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse
  langs:
  - csharp
  - vb
  name: ExecuteBatchDmlResponse(ExecuteBatchDmlResponse)
  nameWithType: ExecuteBatchDmlResponse.ExecuteBatchDmlResponse(ExecuteBatchDmlResponse)
  fullName: Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse.ExecuteBatchDmlResponse(Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse)
  type: Constructor
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Spanner.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: .ctor
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Spanner.cs
    startLine: 3536
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  syntax:
    content: public ExecuteBatchDmlResponse(ExecuteBatchDmlResponse other)
    parameters:
    - id: other
      type: Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse
    content.vb: Public Sub New(other As ExecuteBatchDmlResponse)
  overload: Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse.ResultSets
  commentId: P:Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse.ResultSets
  id: ResultSets
  parent: Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse
  langs:
  - csharp
  - vb
  name: ResultSets
  nameWithType: ExecuteBatchDmlResponse.ResultSets
  fullName: Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse.ResultSets
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Spanner.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: ResultSets
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Spanner.cs
    startLine: 3562
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nOne [ResultSet][google.spanner.v1.ResultSet] for each statement in the request that ran successfully,\nin the same order as the statements in the request. Each [ResultSet][google.spanner.v1.ResultSet] does\nnot contain any rows. The [ResultSetStats][google.spanner.v1.ResultSetStats] in each [ResultSet][google.spanner.v1.ResultSet] contain\nthe number of rows modified by the statement.\n\nOnly the first [ResultSet][google.spanner.v1.ResultSet] in the response contains valid\n[ResultSetMetadata][google.spanner.v1.ResultSetMetadata].\n"
  example: []
  syntax:
    content: public RepeatedField<ResultSet> ResultSets { get; }
    parameters: []
    return:
      type: Google.Protobuf.Collections.RepeatedField{Google.Cloud.Spanner.V1.ResultSet}
    content.vb: Public ReadOnly Property ResultSets As RepeatedField(Of ResultSet)
  overload: Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse.ResultSets*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse.Status
  commentId: P:Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse.Status
  id: Status
  parent: Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse
  langs:
  - csharp
  - vb
  name: Status
  nameWithType: ExecuteBatchDmlResponse.Status
  fullName: Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse.Status
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Spanner.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: Status
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Spanner.cs
    startLine: 3574
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nIf all DML statements are executed successfully, the status is `OK`.\nOtherwise, the error status of the first failed statement.\n"
  example: []
  syntax:
    content: public Status Status { get; set; }
    parameters: []
    return:
      type: Google.Rpc.Status
    content.vb: Public Property Status As Status
  overload: Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse.Status*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Google.Cloud.Spanner.V1
  commentId: N:Google.Cloud.Spanner.V1
  name: Google.Cloud.Spanner.V1
  nameWithType: Google.Cloud.Spanner.V1
  fullName: Google.Cloud.Spanner.V1
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Google.Protobuf.IMessage{Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse}
  commentId: T:Google.Protobuf.IMessage{Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse}
  parent: Google.Protobuf
  definition: Google.Protobuf.IMessage`1
  name: IMessage<ExecuteBatchDmlResponse>
  nameWithType: IMessage<ExecuteBatchDmlResponse>
  fullName: Google.Protobuf.IMessage<Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse>
  nameWithType.vb: IMessage(Of ExecuteBatchDmlResponse)
  fullName.vb: Google.Protobuf.IMessage(Of Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse)
  name.vb: IMessage(Of ExecuteBatchDmlResponse)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse
    name: ExecuteBatchDmlResponse
    nameWithType: ExecuteBatchDmlResponse
    fullName: Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse
    name: ExecuteBatchDmlResponse
    nameWithType: ExecuteBatchDmlResponse
    fullName: Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable{Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse}
  commentId: T:System.IEquatable{Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<ExecuteBatchDmlResponse>
  nameWithType: IEquatable<ExecuteBatchDmlResponse>
  fullName: System.IEquatable<Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse>
  nameWithType.vb: IEquatable(Of ExecuteBatchDmlResponse)
  fullName.vb: System.IEquatable(Of Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse)
  name.vb: IEquatable(Of ExecuteBatchDmlResponse)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse
    name: ExecuteBatchDmlResponse
    nameWithType: ExecuteBatchDmlResponse
    fullName: Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse
    name: ExecuteBatchDmlResponse
    nameWithType: ExecuteBatchDmlResponse
    fullName: Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IDeepCloneable{Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse}
  commentId: T:Google.Protobuf.IDeepCloneable{Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse}
  parent: Google.Protobuf
  definition: Google.Protobuf.IDeepCloneable`1
  name: IDeepCloneable<ExecuteBatchDmlResponse>
  nameWithType: IDeepCloneable<ExecuteBatchDmlResponse>
  fullName: Google.Protobuf.IDeepCloneable<Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse>
  nameWithType.vb: IDeepCloneable(Of ExecuteBatchDmlResponse)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse)
  name.vb: IDeepCloneable(Of ExecuteBatchDmlResponse)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse
    name: ExecuteBatchDmlResponse
    nameWithType: ExecuteBatchDmlResponse
    fullName: Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse
    name: ExecuteBatchDmlResponse
    nameWithType: ExecuteBatchDmlResponse
    fullName: Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IBufferMessage
  commentId: T:Google.Protobuf.IBufferMessage
  parent: Google.Protobuf
  isExternal: true
  name: IBufferMessage
  nameWithType: IBufferMessage
  fullName: Google.Protobuf.IBufferMessage
- uid: Google.Protobuf.IMessage
  commentId: T:Google.Protobuf.IMessage
  parent: Google.Protobuf
  isExternal: true
  name: IMessage
  nameWithType: IMessage
  fullName: Google.Protobuf.IMessage
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Protobuf.IMessage`1
  commentId: T:Google.Protobuf.IMessage`1
  isExternal: true
  name: IMessage<T>
  nameWithType: IMessage<T>
  fullName: Google.Protobuf.IMessage<T>
  nameWithType.vb: IMessage(Of T)
  fullName.vb: Google.Protobuf.IMessage(Of T)
  name.vb: IMessage(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf
  commentId: N:Google.Protobuf
  isExternal: true
  name: Google.Protobuf
  nameWithType: Google.Protobuf
  fullName: Google.Protobuf
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IDeepCloneable`1
  commentId: T:Google.Protobuf.IDeepCloneable`1
  isExternal: true
  name: IDeepCloneable<T>
  nameWithType: IDeepCloneable<T>
  fullName: Google.Protobuf.IDeepCloneable<T>
  nameWithType.vb: IDeepCloneable(Of T)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of T)
  name.vb: IDeepCloneable(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse.#ctor*
  commentId: Overload:Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse.#ctor
  name: ExecuteBatchDmlResponse
  nameWithType: ExecuteBatchDmlResponse.ExecuteBatchDmlResponse
  fullName: Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse.ExecuteBatchDmlResponse
- uid: Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse
  commentId: T:Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse
  parent: Google.Cloud.Spanner.V1
  name: ExecuteBatchDmlResponse
  nameWithType: ExecuteBatchDmlResponse
  fullName: Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse
- uid: Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse.ResultSets*
  commentId: Overload:Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse.ResultSets
  name: ResultSets
  nameWithType: ExecuteBatchDmlResponse.ResultSets
  fullName: Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse.ResultSets
- uid: Google.Protobuf.Collections.RepeatedField{Google.Cloud.Spanner.V1.ResultSet}
  commentId: T:Google.Protobuf.Collections.RepeatedField{Google.Cloud.Spanner.V1.ResultSet}
  parent: Google.Protobuf.Collections
  definition: Google.Protobuf.Collections.RepeatedField`1
  name: RepeatedField<ResultSet>
  nameWithType: RepeatedField<ResultSet>
  fullName: Google.Protobuf.Collections.RepeatedField<Google.Cloud.Spanner.V1.ResultSet>
  nameWithType.vb: RepeatedField(Of ResultSet)
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of Google.Cloud.Spanner.V1.ResultSet)
  name.vb: RepeatedField(Of ResultSet)
  spec.csharp:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    nameWithType: RepeatedField
    fullName: Google.Protobuf.Collections.RepeatedField
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Spanner.V1.ResultSet
    name: ResultSet
    nameWithType: ResultSet
    fullName: Google.Cloud.Spanner.V1.ResultSet
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    nameWithType: RepeatedField
    fullName: Google.Protobuf.Collections.RepeatedField
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Spanner.V1.ResultSet
    name: ResultSet
    nameWithType: ResultSet
    fullName: Google.Cloud.Spanner.V1.ResultSet
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.Collections.RepeatedField`1
  commentId: T:Google.Protobuf.Collections.RepeatedField`1
  isExternal: true
  name: RepeatedField<T>
  nameWithType: RepeatedField<T>
  fullName: Google.Protobuf.Collections.RepeatedField<T>
  nameWithType.vb: RepeatedField(Of T)
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of T)
  name.vb: RepeatedField(Of T)
  spec.csharp:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    nameWithType: RepeatedField
    fullName: Google.Protobuf.Collections.RepeatedField
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    nameWithType: RepeatedField
    fullName: Google.Protobuf.Collections.RepeatedField
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.Collections
  commentId: N:Google.Protobuf.Collections
  isExternal: true
  name: Google.Protobuf.Collections
  nameWithType: Google.Protobuf.Collections
  fullName: Google.Protobuf.Collections
- uid: Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse.Status*
  commentId: Overload:Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse.Status
  name: Status
  nameWithType: ExecuteBatchDmlResponse.Status
  fullName: Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse.Status
- uid: Google.Rpc.Status
  commentId: T:Google.Rpc.Status
  parent: Google.Rpc
  isExternal: true
  name: Status
  nameWithType: Status
  fullName: Google.Rpc.Status
- uid: Google.Rpc
  commentId: N:Google.Rpc
  isExternal: true
  name: Google.Rpc
  nameWithType: Google.Rpc
  fullName: Google.Rpc
