### YamlMime:ManagedReference
items:
- uid: "com.google.cloud.bigquery.BigQuery.DatasetField"
  id: "DatasetField"
  parent: "com.google.cloud.bigquery"
  children:
  - "com.google.cloud.bigquery.BigQuery.DatasetField.ACCESS"
  - "com.google.cloud.bigquery.BigQuery.DatasetField.CREATION_TIME"
  - "com.google.cloud.bigquery.BigQuery.DatasetField.DATASET_REFERENCE"
  - "com.google.cloud.bigquery.BigQuery.DatasetField.DEFAULT_TABLE_EXPIRATION_MS"
  - "com.google.cloud.bigquery.BigQuery.DatasetField.DESCRIPTION"
  - "com.google.cloud.bigquery.BigQuery.DatasetField.ETAG"
  - "com.google.cloud.bigquery.BigQuery.DatasetField.FRIENDLY_NAME"
  - "com.google.cloud.bigquery.BigQuery.DatasetField.ID"
  - "com.google.cloud.bigquery.BigQuery.DatasetField.LABELS"
  - "com.google.cloud.bigquery.BigQuery.DatasetField.LAST_MODIFIED_TIME"
  - "com.google.cloud.bigquery.BigQuery.DatasetField.LOCATION"
  - "com.google.cloud.bigquery.BigQuery.DatasetField.SELF_LINK"
  - "com.google.cloud.bigquery.BigQuery.DatasetField.getSelector()"
  - "com.google.cloud.bigquery.BigQuery.DatasetField.valueOf(java.lang.String)"
  - "com.google.cloud.bigquery.BigQuery.DatasetField.values()"
  langs:
  - "java"
  name: "BigQuery.DatasetField"
  nameWithType: "BigQuery.DatasetField"
  fullName: "com.google.cloud.bigquery.BigQuery.DatasetField"
  type: "Enum"
  package: "com.google.cloud.bigquery"
  summary: "Fields of a BigQuery Dataset resource."
  syntax:
    content: "public enum BigQuery.DatasetField extends Enum<BigQuery.DatasetField> implements FieldSelector"
  inheritance:
  - "java.lang.Object"
  - "java.lang.Enum"
  implements:
  - "com.google.cloud.FieldSelector"
  inheritedMembers:
  - "java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)"
  - "java.lang.Enum.clone()"
  - "java.lang.Enum.compareTo(E)"
  - "java.lang.Enum.equals(java.lang.Object)"
  - "java.lang.Enum.finalize()"
  - "java.lang.Enum.getDeclaringClass()"
  - "java.lang.Enum.hashCode()"
  - "java.lang.Enum.name()"
  - "java.lang.Enum.ordinal()"
  - "java.lang.Enum.toString()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.google.cloud.bigquery.BigQuery.DatasetField.ACCESS"
  id: "ACCESS"
  parent: "com.google.cloud.bigquery.BigQuery.DatasetField"
  langs:
  - "java"
  name: "ACCESS"
  nameWithType: "BigQuery.DatasetField.ACCESS"
  fullName: "com.google.cloud.bigquery.BigQuery.DatasetField.ACCESS"
  type: "Field"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public static final BigQuery.DatasetField ACCESS"
    return:
      type: "com.google.cloud.bigquery.BigQuery.DatasetField"
- uid: "com.google.cloud.bigquery.BigQuery.DatasetField.CREATION_TIME"
  id: "CREATION_TIME"
  parent: "com.google.cloud.bigquery.BigQuery.DatasetField"
  langs:
  - "java"
  name: "CREATION_TIME"
  nameWithType: "BigQuery.DatasetField.CREATION_TIME"
  fullName: "com.google.cloud.bigquery.BigQuery.DatasetField.CREATION_TIME"
  type: "Field"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public static final BigQuery.DatasetField CREATION_TIME"
    return:
      type: "com.google.cloud.bigquery.BigQuery.DatasetField"
- uid: "com.google.cloud.bigquery.BigQuery.DatasetField.DATASET_REFERENCE"
  id: "DATASET_REFERENCE"
  parent: "com.google.cloud.bigquery.BigQuery.DatasetField"
  langs:
  - "java"
  name: "DATASET_REFERENCE"
  nameWithType: "BigQuery.DatasetField.DATASET_REFERENCE"
  fullName: "com.google.cloud.bigquery.BigQuery.DatasetField.DATASET_REFERENCE"
  type: "Field"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public static final BigQuery.DatasetField DATASET_REFERENCE"
    return:
      type: "com.google.cloud.bigquery.BigQuery.DatasetField"
- uid: "com.google.cloud.bigquery.BigQuery.DatasetField.DEFAULT_TABLE_EXPIRATION_MS"
  id: "DEFAULT_TABLE_EXPIRATION_MS"
  parent: "com.google.cloud.bigquery.BigQuery.DatasetField"
  langs:
  - "java"
  name: "DEFAULT_TABLE_EXPIRATION_MS"
  nameWithType: "BigQuery.DatasetField.DEFAULT_TABLE_EXPIRATION_MS"
  fullName: "com.google.cloud.bigquery.BigQuery.DatasetField.DEFAULT_TABLE_EXPIRATION_MS"
  type: "Field"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public static final BigQuery.DatasetField DEFAULT_TABLE_EXPIRATION_MS"
    return:
      type: "com.google.cloud.bigquery.BigQuery.DatasetField"
- uid: "com.google.cloud.bigquery.BigQuery.DatasetField.DESCRIPTION"
  id: "DESCRIPTION"
  parent: "com.google.cloud.bigquery.BigQuery.DatasetField"
  langs:
  - "java"
  name: "DESCRIPTION"
  nameWithType: "BigQuery.DatasetField.DESCRIPTION"
  fullName: "com.google.cloud.bigquery.BigQuery.DatasetField.DESCRIPTION"
  type: "Field"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public static final BigQuery.DatasetField DESCRIPTION"
    return:
      type: "com.google.cloud.bigquery.BigQuery.DatasetField"
- uid: "com.google.cloud.bigquery.BigQuery.DatasetField.DatasetField(java.lang.String)"
  id: "DatasetField(java.lang.String)"
  parent: "com.google.cloud.bigquery.BigQuery.DatasetField"
  langs:
  - "java"
  name: "DatasetField(String selector)"
  nameWithType: "BigQuery.DatasetField.DatasetField(String selector)"
  fullName: "com.google.cloud.bigquery.BigQuery.DatasetField.DatasetField(String selector)"
  overload: "com.google.cloud.bigquery.BigQuery.DatasetField.DatasetField*"
  type: "Constructor"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "private DatasetField(String selector)"
    parameters:
    - id: "selector"
      type: "java.lang.String"
- uid: "com.google.cloud.bigquery.BigQuery.DatasetField.ETAG"
  id: "ETAG"
  parent: "com.google.cloud.bigquery.BigQuery.DatasetField"
  langs:
  - "java"
  name: "ETAG"
  nameWithType: "BigQuery.DatasetField.ETAG"
  fullName: "com.google.cloud.bigquery.BigQuery.DatasetField.ETAG"
  type: "Field"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public static final BigQuery.DatasetField ETAG"
    return:
      type: "com.google.cloud.bigquery.BigQuery.DatasetField"
- uid: "com.google.cloud.bigquery.BigQuery.DatasetField.FRIENDLY_NAME"
  id: "FRIENDLY_NAME"
  parent: "com.google.cloud.bigquery.BigQuery.DatasetField"
  langs:
  - "java"
  name: "FRIENDLY_NAME"
  nameWithType: "BigQuery.DatasetField.FRIENDLY_NAME"
  fullName: "com.google.cloud.bigquery.BigQuery.DatasetField.FRIENDLY_NAME"
  type: "Field"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public static final BigQuery.DatasetField FRIENDLY_NAME"
    return:
      type: "com.google.cloud.bigquery.BigQuery.DatasetField"
- uid: "com.google.cloud.bigquery.BigQuery.DatasetField.ID"
  id: "ID"
  parent: "com.google.cloud.bigquery.BigQuery.DatasetField"
  langs:
  - "java"
  name: "ID"
  nameWithType: "BigQuery.DatasetField.ID"
  fullName: "com.google.cloud.bigquery.BigQuery.DatasetField.ID"
  type: "Field"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public static final BigQuery.DatasetField ID"
    return:
      type: "com.google.cloud.bigquery.BigQuery.DatasetField"
- uid: "com.google.cloud.bigquery.BigQuery.DatasetField.LABELS"
  id: "LABELS"
  parent: "com.google.cloud.bigquery.BigQuery.DatasetField"
  langs:
  - "java"
  name: "LABELS"
  nameWithType: "BigQuery.DatasetField.LABELS"
  fullName: "com.google.cloud.bigquery.BigQuery.DatasetField.LABELS"
  type: "Field"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public static final BigQuery.DatasetField LABELS"
    return:
      type: "com.google.cloud.bigquery.BigQuery.DatasetField"
- uid: "com.google.cloud.bigquery.BigQuery.DatasetField.LAST_MODIFIED_TIME"
  id: "LAST_MODIFIED_TIME"
  parent: "com.google.cloud.bigquery.BigQuery.DatasetField"
  langs:
  - "java"
  name: "LAST_MODIFIED_TIME"
  nameWithType: "BigQuery.DatasetField.LAST_MODIFIED_TIME"
  fullName: "com.google.cloud.bigquery.BigQuery.DatasetField.LAST_MODIFIED_TIME"
  type: "Field"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public static final BigQuery.DatasetField LAST_MODIFIED_TIME"
    return:
      type: "com.google.cloud.bigquery.BigQuery.DatasetField"
- uid: "com.google.cloud.bigquery.BigQuery.DatasetField.LOCATION"
  id: "LOCATION"
  parent: "com.google.cloud.bigquery.BigQuery.DatasetField"
  langs:
  - "java"
  name: "LOCATION"
  nameWithType: "BigQuery.DatasetField.LOCATION"
  fullName: "com.google.cloud.bigquery.BigQuery.DatasetField.LOCATION"
  type: "Field"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public static final BigQuery.DatasetField LOCATION"
    return:
      type: "com.google.cloud.bigquery.BigQuery.DatasetField"
- uid: "com.google.cloud.bigquery.BigQuery.DatasetField.SELF_LINK"
  id: "SELF_LINK"
  parent: "com.google.cloud.bigquery.BigQuery.DatasetField"
  langs:
  - "java"
  name: "SELF_LINK"
  nameWithType: "BigQuery.DatasetField.SELF_LINK"
  fullName: "com.google.cloud.bigquery.BigQuery.DatasetField.SELF_LINK"
  type: "Field"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public static final BigQuery.DatasetField SELF_LINK"
    return:
      type: "com.google.cloud.bigquery.BigQuery.DatasetField"
- uid: "com.google.cloud.bigquery.BigQuery.DatasetField.getSelector()"
  id: "getSelector()"
  parent: "com.google.cloud.bigquery.BigQuery.DatasetField"
  langs:
  - "java"
  name: "getSelector()"
  nameWithType: "BigQuery.DatasetField.getSelector()"
  fullName: "com.google.cloud.bigquery.BigQuery.DatasetField.getSelector()"
  overload: "com.google.cloud.bigquery.BigQuery.DatasetField.getSelector*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public String getSelector()"
    return:
      type: "java.lang.String"
- uid: "com.google.cloud.bigquery.BigQuery.DatasetField.valueOf(java.lang.String)"
  id: "valueOf(java.lang.String)"
  parent: "com.google.cloud.bigquery.BigQuery.DatasetField"
  langs:
  - "java"
  name: "valueOf(String name)"
  nameWithType: "BigQuery.DatasetField.valueOf(String name)"
  fullName: "com.google.cloud.bigquery.BigQuery.DatasetField.valueOf(String name)"
  overload: "com.google.cloud.bigquery.BigQuery.DatasetField.valueOf*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public static BigQuery.DatasetField valueOf(String name)"
    parameters:
    - id: "name"
      type: "java.lang.String"
    return:
      type: "com.google.cloud.bigquery.BigQuery.DatasetField"
- uid: "com.google.cloud.bigquery.BigQuery.DatasetField.values()"
  id: "values()"
  parent: "com.google.cloud.bigquery.BigQuery.DatasetField"
  langs:
  - "java"
  name: "values()"
  nameWithType: "BigQuery.DatasetField.values()"
  fullName: "com.google.cloud.bigquery.BigQuery.DatasetField.values()"
  overload: "com.google.cloud.bigquery.BigQuery.DatasetField.values*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public static BigQuery.DatasetField[] values()"
    return:
      type: "com.google.cloud.bigquery.BigQuery.DatasetField[]"
references:
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.google.cloud.bigquery.BigQuery.DatasetField.DatasetField*"
  name: "DatasetField"
  nameWithType: "BigQuery.DatasetField.DatasetField"
  fullName: "com.google.cloud.bigquery.BigQuery.DatasetField.DatasetField"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.BigQuery.DatasetField[]"
  spec.java:
  - uid: "com.google.cloud.bigquery.BigQuery.DatasetField"
    name: "DatasetField"
    fullName: "com.google.cloud.bigquery.BigQuery.DatasetField"
  - name: "[]"
    fullName: "[]"
- uid: "com.google.cloud.bigquery.BigQuery.DatasetField.values*"
  name: "values"
  nameWithType: "BigQuery.DatasetField.values"
  fullName: "com.google.cloud.bigquery.BigQuery.DatasetField.values"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.BigQuery.DatasetField.valueOf*"
  name: "valueOf"
  nameWithType: "BigQuery.DatasetField.valueOf"
  fullName: "com.google.cloud.bigquery.BigQuery.DatasetField.valueOf"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.BigQuery.DatasetField.getSelector*"
  name: "getSelector"
  nameWithType: "BigQuery.DatasetField.getSelector"
  fullName: "com.google.cloud.bigquery.BigQuery.DatasetField.getSelector"
  package: "com.google.cloud.bigquery"
- uid: "java.lang.Enum<com.google.cloud.bigquery.BigQuery.DatasetField>"
  name: "Enum<BigQuery.DatasetField>"
  nameWithType: "Enum<BigQuery.DatasetField>"
  fullName: "java.lang.Enum<com.google.cloud.bigquery.BigQuery.DatasetField>"
- uid: "com.google.cloud.FieldSelector"
  name: "FieldSelector"
  nameWithType: "FieldSelector"
  fullName: "com.google.cloud.FieldSelector"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Enum.toString()"
  name: "Enum.toString()"
  nameWithType: "Enum.toString()"
  fullName: "java.lang.Enum.toString()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Enum.clone()"
  name: "Enum.clone()"
  nameWithType: "Enum.clone()"
  fullName: "java.lang.Enum.clone()"
- uid: "java.lang.Enum.finalize()"
  name: "Enum.finalize()"
  nameWithType: "Enum.finalize()"
  fullName: "java.lang.Enum.finalize()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Enum.compareTo(E)"
  name: "Enum.compareTo(E)"
  nameWithType: "Enum.compareTo(E)"
  fullName: "java.lang.Enum.compareTo(E)"
- uid: "java.lang.Enum.name()"
  name: "Enum.name()"
  nameWithType: "Enum.name()"
  fullName: "java.lang.Enum.name()"
- uid: "java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)"
  name: "Enum.<T>valueOf(Class<T>,String)"
  nameWithType: "Enum.<T>valueOf(Class<T>,String)"
  fullName: "java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Enum.getDeclaringClass()"
  name: "Enum.getDeclaringClass()"
  nameWithType: "Enum.getDeclaringClass()"
  fullName: "java.lang.Enum.getDeclaringClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Enum.ordinal()"
  name: "Enum.ordinal()"
  nameWithType: "Enum.ordinal()"
  fullName: "java.lang.Enum.ordinal()"
- uid: "java.lang.Enum.hashCode()"
  name: "Enum.hashCode()"
  nameWithType: "Enum.hashCode()"
  fullName: "java.lang.Enum.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Enum.equals(java.lang.Object)"
  name: "Enum.equals(Object)"
  nameWithType: "Enum.equals(Object)"
  fullName: "java.lang.Enum.equals(java.lang.Object)"
- uid: "java.lang.Enum"
  name: "Enum"
  nameWithType: "Enum"
  fullName: "java.lang.Enum"
- uid: "java.lang.Enum."
  name: "Enum."
  nameWithType: "Enum."
  fullName: "java.lang.Enum."
- uid: "T>,java.lang.String)"
  name: "T>,String)"
  nameWithType: "T>,String)"
  fullName: "T>,java.lang.String)"
- uid: "T>valueOf(java.lang.Class"
  name: "T>valueOf(Class"
  nameWithType: "T>valueOf(Class"
  fullName: "T>valueOf(java.lang.Class"
