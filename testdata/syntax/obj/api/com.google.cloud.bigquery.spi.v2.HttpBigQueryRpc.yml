### YamlMime:ManagedReference
items:
- uid: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc"
  id: "HttpBigQueryRpc"
  parent: "com.google.cloud.bigquery.spi.v2"
  children:
  - "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.DEFAULT_PROJECTION"
  - "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.HttpBigQueryRpc(com.google.cloud.bigquery.BigQueryOptions)"
  - "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.cancel(java.lang.String,java.lang.String,java.lang.String)"
  - "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.create(com.google.api.services.bigquery.model.Dataset,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  - "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.create(com.google.api.services.bigquery.model.Job,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  - "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.create(com.google.api.services.bigquery.model.Routine,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  - "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.create(com.google.api.services.bigquery.model.Table,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  - "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.deleteDataset(java.lang.String,java.lang.String,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  - "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.deleteModel(java.lang.String,java.lang.String,java.lang.String)"
  - "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.deleteRoutine(java.lang.String,java.lang.String,java.lang.String)"
  - "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.deleteTable(java.lang.String,java.lang.String,java.lang.String)"
  - "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.getDataset(java.lang.String,java.lang.String,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  - "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.getIamPolicy(java.lang.String,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  - "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.getJob(java.lang.String,java.lang.String,java.lang.String,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  - "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.getModel(java.lang.String,java.lang.String,java.lang.String,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  - "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.getQueryResults(java.lang.String,java.lang.String,java.lang.String,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  - "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.getRoutine(java.lang.String,java.lang.String,java.lang.String,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  - "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.getTable(java.lang.String,java.lang.String,java.lang.String,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  - "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.insertAll(java.lang.String,java.lang.String,java.lang.String,com.google.api.services.bigquery.model.TableDataInsertAllRequest)"
  - "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.listDatasets(java.lang.String,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  - "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.listJobs(java.lang.String,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  - "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.listModels(java.lang.String,java.lang.String,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  - "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.listRoutines(java.lang.String,java.lang.String,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  - "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.listTableData(java.lang.String,java.lang.String,java.lang.String,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  - "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.listTables(java.lang.String,java.lang.String,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  - "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.open(com.google.api.services.bigquery.model.Job)"
  - "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.patch(com.google.api.services.bigquery.model.Dataset,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  - "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.patch(com.google.api.services.bigquery.model.Model,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  - "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.patch(com.google.api.services.bigquery.model.Table,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  - "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.queryRpc(java.lang.String,com.google.api.services.bigquery.model.QueryRequest)"
  - "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.setIamPolicy(java.lang.String,com.google.api.services.bigquery.model.Policy,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  - "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.testIamPermissions(java.lang.String,java.util.List<java.lang.String>,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  - "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.update(com.google.api.services.bigquery.model.Routine,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  - "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.write(java.lang.String,byte[],int,long,int,boolean)"
  langs:
  - "java"
  name: "HttpBigQueryRpc"
  nameWithType: "HttpBigQueryRpc"
  fullName: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc"
  type: "Class"
  package: "com.google.cloud.bigquery.spi.v2"
  syntax:
    content: "public class HttpBigQueryRpc implements BigQueryRpc"
  inheritance:
  - "java.lang.Object"
  implements:
  - "com.google.cloud.bigquery.spi.v2.BigQueryRpc"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.DEFAULT_PROJECTION"
  id: "DEFAULT_PROJECTION"
  parent: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc"
  langs:
  - "java"
  name: "DEFAULT_PROJECTION"
  nameWithType: "HttpBigQueryRpc.DEFAULT_PROJECTION"
  fullName: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.DEFAULT_PROJECTION"
  type: "Field"
  package: "com.google.cloud.bigquery.spi.v2"
  syntax:
    content: "public static final String DEFAULT_PROJECTION"
    return:
      type: "java.lang.String"
- uid: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.HttpBigQueryRpc(com.google.cloud.bigquery.BigQueryOptions)"
  id: "HttpBigQueryRpc(com.google.cloud.bigquery.BigQueryOptions)"
  parent: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc"
  langs:
  - "java"
  name: "HttpBigQueryRpc(BigQueryOptions options)"
  nameWithType: "HttpBigQueryRpc.HttpBigQueryRpc(BigQueryOptions options)"
  fullName: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.HttpBigQueryRpc(BigQueryOptions options)"
  overload: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.HttpBigQueryRpc*"
  type: "Constructor"
  package: "com.google.cloud.bigquery.spi.v2"
  syntax:
    content: "public HttpBigQueryRpc(BigQueryOptions options)"
    parameters:
    - id: "options"
      type: "com.google.cloud.bigquery.BigQueryOptions"
- uid: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.cancel(java.lang.String,java.lang.String,java.lang.String)"
  id: "cancel(java.lang.String,java.lang.String,java.lang.String)"
  parent: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc"
  langs:
  - "java"
  name: "cancel(String projectId, String jobId, String location)"
  nameWithType: "HttpBigQueryRpc.cancel(String projectId, String jobId, String location)"
  fullName: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.cancel(String projectId, String jobId, String location)"
  overload: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.cancel*"
  type: "Method"
  package: "com.google.cloud.bigquery.spi.v2"
  summary: "Sends a job cancel request. This call will return immediately, and the client will need to poll for the job status to see if the cancel completed successfully."
  syntax:
    content: "public boolean cancel(String projectId, String jobId, String location)"
    parameters:
    - id: "projectId"
      type: "java.lang.String"
    - id: "jobId"
      type: "java.lang.String"
    - id: "location"
      type: "java.lang.String"
    return:
      type: "boolean"
- uid: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.create(com.google.api.services.bigquery.model.Dataset,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  id: "create(com.google.api.services.bigquery.model.Dataset,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  parent: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc"
  langs:
  - "java"
  name: "create(Dataset dataset, Map<BigQueryRpc.Option,?> options)"
  nameWithType: "HttpBigQueryRpc.create(Dataset dataset, Map<BigQueryRpc.Option,?> options)"
  fullName: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.create(Dataset dataset, Map<BigQueryRpc.Option,?> options)"
  overload: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.create*"
  type: "Method"
  package: "com.google.cloud.bigquery.spi.v2"
  summary: "Creates a new dataset."
  syntax:
    content: "public Dataset create(Dataset dataset, Map<BigQueryRpc.Option,?> options)"
    parameters:
    - id: "dataset"
      type: "com.google.api.services.bigquery.model.Dataset"
    - id: "options"
      type: "java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>"
    return:
      type: "com.google.api.services.bigquery.model.Dataset"
- uid: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.create(com.google.api.services.bigquery.model.Job,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  id: "create(com.google.api.services.bigquery.model.Job,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  parent: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc"
  langs:
  - "java"
  name: "create(Job job, Map<BigQueryRpc.Option,?> options)"
  nameWithType: "HttpBigQueryRpc.create(Job job, Map<BigQueryRpc.Option,?> options)"
  fullName: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.create(Job job, Map<BigQueryRpc.Option,?> options)"
  overload: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.create*"
  type: "Method"
  package: "com.google.cloud.bigquery.spi.v2"
  summary: "Creates a new job."
  syntax:
    content: "public Job create(Job job, Map<BigQueryRpc.Option,?> options)"
    parameters:
    - id: "job"
      type: "com.google.api.services.bigquery.model.Job"
    - id: "options"
      type: "java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>"
    return:
      type: "com.google.api.services.bigquery.model.Job"
- uid: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.create(com.google.api.services.bigquery.model.Routine,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  id: "create(com.google.api.services.bigquery.model.Routine,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  parent: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc"
  langs:
  - "java"
  name: "create(Routine routine, Map<BigQueryRpc.Option,?> options)"
  nameWithType: "HttpBigQueryRpc.create(Routine routine, Map<BigQueryRpc.Option,?> options)"
  fullName: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.create(Routine routine, Map<BigQueryRpc.Option,?> options)"
  overload: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.create*"
  type: "Method"
  package: "com.google.cloud.bigquery.spi.v2"
  summary: "Creates the requested routine."
  syntax:
    content: "public Routine create(Routine routine, Map<BigQueryRpc.Option,?> options)"
    parameters:
    - id: "routine"
      type: "com.google.api.services.bigquery.model.Routine"
    - id: "options"
      type: "java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>"
    return:
      type: "com.google.api.services.bigquery.model.Routine"
- uid: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.create(com.google.api.services.bigquery.model.Table,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  id: "create(com.google.api.services.bigquery.model.Table,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  parent: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc"
  langs:
  - "java"
  name: "create(Table table, Map<BigQueryRpc.Option,?> options)"
  nameWithType: "HttpBigQueryRpc.create(Table table, Map<BigQueryRpc.Option,?> options)"
  fullName: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.create(Table table, Map<BigQueryRpc.Option,?> options)"
  overload: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.create*"
  type: "Method"
  package: "com.google.cloud.bigquery.spi.v2"
  summary: "Creates a new table."
  syntax:
    content: "public Table create(Table table, Map<BigQueryRpc.Option,?> options)"
    parameters:
    - id: "table"
      type: "com.google.api.services.bigquery.model.Table"
    - id: "options"
      type: "java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>"
    return:
      type: "com.google.api.services.bigquery.model.Table"
- uid: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.deleteDataset(java.lang.String,java.lang.String,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  id: "deleteDataset(java.lang.String,java.lang.String,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  parent: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc"
  langs:
  - "java"
  name: "deleteDataset(String projectId, String datasetId, Map<BigQueryRpc.Option,?> options)"
  nameWithType: "HttpBigQueryRpc.deleteDataset(String projectId, String datasetId, Map<BigQueryRpc.Option,?> options)"
  fullName: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.deleteDataset(String projectId, String datasetId, Map<BigQueryRpc.Option,?> options)"
  overload: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.deleteDataset*"
  type: "Method"
  package: "com.google.cloud.bigquery.spi.v2"
  summary: "Delete the requested dataset."
  syntax:
    content: "public boolean deleteDataset(String projectId, String datasetId, Map<BigQueryRpc.Option,?> options)"
    parameters:
    - id: "projectId"
      type: "java.lang.String"
    - id: "datasetId"
      type: "java.lang.String"
    - id: "options"
      type: "java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>"
    return:
      type: "boolean"
- uid: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.deleteModel(java.lang.String,java.lang.String,java.lang.String)"
  id: "deleteModel(java.lang.String,java.lang.String,java.lang.String)"
  parent: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc"
  langs:
  - "java"
  name: "deleteModel(String projectId, String datasetId, String modelId)"
  nameWithType: "HttpBigQueryRpc.deleteModel(String projectId, String datasetId, String modelId)"
  fullName: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.deleteModel(String projectId, String datasetId, String modelId)"
  overload: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.deleteModel*"
  type: "Method"
  package: "com.google.cloud.bigquery.spi.v2"
  summary: "Delete the requested model."
  syntax:
    content: "public boolean deleteModel(String projectId, String datasetId, String modelId)"
    parameters:
    - id: "projectId"
      type: "java.lang.String"
    - id: "datasetId"
      type: "java.lang.String"
    - id: "modelId"
      type: "java.lang.String"
    return:
      type: "boolean"
- uid: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.deleteRoutine(java.lang.String,java.lang.String,java.lang.String)"
  id: "deleteRoutine(java.lang.String,java.lang.String,java.lang.String)"
  parent: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc"
  langs:
  - "java"
  name: "deleteRoutine(String projectId, String datasetId, String routineId)"
  nameWithType: "HttpBigQueryRpc.deleteRoutine(String projectId, String datasetId, String routineId)"
  fullName: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.deleteRoutine(String projectId, String datasetId, String routineId)"
  overload: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.deleteRoutine*"
  type: "Method"
  package: "com.google.cloud.bigquery.spi.v2"
  summary: "Deletes the requested routine."
  syntax:
    content: "public boolean deleteRoutine(String projectId, String datasetId, String routineId)"
    parameters:
    - id: "projectId"
      type: "java.lang.String"
    - id: "datasetId"
      type: "java.lang.String"
    - id: "routineId"
      type: "java.lang.String"
    return:
      type: "boolean"
- uid: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.deleteTable(java.lang.String,java.lang.String,java.lang.String)"
  id: "deleteTable(java.lang.String,java.lang.String,java.lang.String)"
  parent: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc"
  langs:
  - "java"
  name: "deleteTable(String projectId, String datasetId, String tableId)"
  nameWithType: "HttpBigQueryRpc.deleteTable(String projectId, String datasetId, String tableId)"
  fullName: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.deleteTable(String projectId, String datasetId, String tableId)"
  overload: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.deleteTable*"
  type: "Method"
  package: "com.google.cloud.bigquery.spi.v2"
  summary: "Delete the requested table."
  syntax:
    content: "public boolean deleteTable(String projectId, String datasetId, String tableId)"
    parameters:
    - id: "projectId"
      type: "java.lang.String"
    - id: "datasetId"
      type: "java.lang.String"
    - id: "tableId"
      type: "java.lang.String"
    return:
      type: "boolean"
- uid: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.getDataset(java.lang.String,java.lang.String,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  id: "getDataset(java.lang.String,java.lang.String,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  parent: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc"
  langs:
  - "java"
  name: "getDataset(String projectId, String datasetId, Map<BigQueryRpc.Option,?> options)"
  nameWithType: "HttpBigQueryRpc.getDataset(String projectId, String datasetId, Map<BigQueryRpc.Option,?> options)"
  fullName: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.getDataset(String projectId, String datasetId, Map<BigQueryRpc.Option,?> options)"
  overload: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.getDataset*"
  type: "Method"
  package: "com.google.cloud.bigquery.spi.v2"
  summary: "Returns the requested dataset or `null` if not found."
  syntax:
    content: "public Dataset getDataset(String projectId, String datasetId, Map<BigQueryRpc.Option,?> options)"
    parameters:
    - id: "projectId"
      type: "java.lang.String"
    - id: "datasetId"
      type: "java.lang.String"
    - id: "options"
      type: "java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>"
    return:
      type: "com.google.api.services.bigquery.model.Dataset"
- uid: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.getIamPolicy(java.lang.String,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  id: "getIamPolicy(java.lang.String,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  parent: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc"
  langs:
  - "java"
  name: "getIamPolicy(String resourceId, Map<BigQueryRpc.Option,?> options)"
  nameWithType: "HttpBigQueryRpc.getIamPolicy(String resourceId, Map<BigQueryRpc.Option,?> options)"
  fullName: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.getIamPolicy(String resourceId, Map<BigQueryRpc.Option,?> options)"
  overload: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.getIamPolicy*"
  type: "Method"
  package: "com.google.cloud.bigquery.spi.v2"
  summary: "Returns the IAM Policy for the specified resource, using Policy V1."
  syntax:
    content: "public Policy getIamPolicy(String resourceId, Map<BigQueryRpc.Option,?> options)"
    parameters:
    - id: "resourceId"
      type: "java.lang.String"
    - id: "options"
      type: "java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>"
    return:
      type: "com.google.api.services.bigquery.model.Policy"
- uid: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.getJob(java.lang.String,java.lang.String,java.lang.String,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  id: "getJob(java.lang.String,java.lang.String,java.lang.String,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  parent: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc"
  langs:
  - "java"
  name: "getJob(String projectId, String jobId, String location, Map<BigQueryRpc.Option,?> options)"
  nameWithType: "HttpBigQueryRpc.getJob(String projectId, String jobId, String location, Map<BigQueryRpc.Option,?> options)"
  fullName: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.getJob(String projectId, String jobId, String location, Map<BigQueryRpc.Option,?> options)"
  overload: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.getJob*"
  type: "Method"
  package: "com.google.cloud.bigquery.spi.v2"
  summary: "Returns the requested job or `null` if not found."
  syntax:
    content: "public Job getJob(String projectId, String jobId, String location, Map<BigQueryRpc.Option,?> options)"
    parameters:
    - id: "projectId"
      type: "java.lang.String"
    - id: "jobId"
      type: "java.lang.String"
    - id: "location"
      type: "java.lang.String"
    - id: "options"
      type: "java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>"
    return:
      type: "com.google.api.services.bigquery.model.Job"
- uid: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.getModel(java.lang.String,java.lang.String,java.lang.String,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  id: "getModel(java.lang.String,java.lang.String,java.lang.String,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  parent: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc"
  langs:
  - "java"
  name: "getModel(String projectId, String datasetId, String modelId, Map<BigQueryRpc.Option,?> options)"
  nameWithType: "HttpBigQueryRpc.getModel(String projectId, String datasetId, String modelId, Map<BigQueryRpc.Option,?> options)"
  fullName: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.getModel(String projectId, String datasetId, String modelId, Map<BigQueryRpc.Option,?> options)"
  overload: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.getModel*"
  type: "Method"
  package: "com.google.cloud.bigquery.spi.v2"
  summary: "Returns the requested model or `null` if not found."
  syntax:
    content: "public Model getModel(String projectId, String datasetId, String modelId, Map<BigQueryRpc.Option,?> options)"
    parameters:
    - id: "projectId"
      type: "java.lang.String"
    - id: "datasetId"
      type: "java.lang.String"
    - id: "modelId"
      type: "java.lang.String"
    - id: "options"
      type: "java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>"
    return:
      type: "com.google.api.services.bigquery.model.Model"
- uid: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.getQueryResults(java.lang.String,java.lang.String,java.lang.String,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  id: "getQueryResults(java.lang.String,java.lang.String,java.lang.String,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  parent: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc"
  langs:
  - "java"
  name: "getQueryResults(String projectId, String jobId, String location, Map<BigQueryRpc.Option,?> options)"
  nameWithType: "HttpBigQueryRpc.getQueryResults(String projectId, String jobId, String location, Map<BigQueryRpc.Option,?> options)"
  fullName: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.getQueryResults(String projectId, String jobId, String location, Map<BigQueryRpc.Option,?> options)"
  overload: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.getQueryResults*"
  type: "Method"
  package: "com.google.cloud.bigquery.spi.v2"
  summary: "Returns results of the query associated with the provided job."
  syntax:
    content: "public GetQueryResultsResponse getQueryResults(String projectId, String jobId, String location, Map<BigQueryRpc.Option,?> options)"
    parameters:
    - id: "projectId"
      type: "java.lang.String"
    - id: "jobId"
      type: "java.lang.String"
    - id: "location"
      type: "java.lang.String"
    - id: "options"
      type: "java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>"
    return:
      type: "com.google.api.services.bigquery.model.GetQueryResultsResponse"
- uid: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.getRoutine(java.lang.String,java.lang.String,java.lang.String,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  id: "getRoutine(java.lang.String,java.lang.String,java.lang.String,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  parent: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc"
  langs:
  - "java"
  name: "getRoutine(String projectId, String datasetId, String routineId, Map<BigQueryRpc.Option,?> options)"
  nameWithType: "HttpBigQueryRpc.getRoutine(String projectId, String datasetId, String routineId, Map<BigQueryRpc.Option,?> options)"
  fullName: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.getRoutine(String projectId, String datasetId, String routineId, Map<BigQueryRpc.Option,?> options)"
  overload: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.getRoutine*"
  type: "Method"
  package: "com.google.cloud.bigquery.spi.v2"
  summary: "Returns the requested routine or `null` if not found."
  syntax:
    content: "public Routine getRoutine(String projectId, String datasetId, String routineId, Map<BigQueryRpc.Option,?> options)"
    parameters:
    - id: "projectId"
      type: "java.lang.String"
    - id: "datasetId"
      type: "java.lang.String"
    - id: "routineId"
      type: "java.lang.String"
    - id: "options"
      type: "java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>"
    return:
      type: "com.google.api.services.bigquery.model.Routine"
- uid: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.getTable(java.lang.String,java.lang.String,java.lang.String,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  id: "getTable(java.lang.String,java.lang.String,java.lang.String,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  parent: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc"
  langs:
  - "java"
  name: "getTable(String projectId, String datasetId, String tableId, Map<BigQueryRpc.Option,?> options)"
  nameWithType: "HttpBigQueryRpc.getTable(String projectId, String datasetId, String tableId, Map<BigQueryRpc.Option,?> options)"
  fullName: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.getTable(String projectId, String datasetId, String tableId, Map<BigQueryRpc.Option,?> options)"
  overload: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.getTable*"
  type: "Method"
  package: "com.google.cloud.bigquery.spi.v2"
  summary: "Returns the requested table or `null` if not found."
  syntax:
    content: "public Table getTable(String projectId, String datasetId, String tableId, Map<BigQueryRpc.Option,?> options)"
    parameters:
    - id: "projectId"
      type: "java.lang.String"
    - id: "datasetId"
      type: "java.lang.String"
    - id: "tableId"
      type: "java.lang.String"
    - id: "options"
      type: "java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>"
    return:
      type: "com.google.api.services.bigquery.model.Table"
- uid: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.insertAll(java.lang.String,java.lang.String,java.lang.String,com.google.api.services.bigquery.model.TableDataInsertAllRequest)"
  id: "insertAll(java.lang.String,java.lang.String,java.lang.String,com.google.api.services.bigquery.model.TableDataInsertAllRequest)"
  parent: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc"
  langs:
  - "java"
  name: "insertAll(String projectId, String datasetId, String tableId, TableDataInsertAllRequest request)"
  nameWithType: "HttpBigQueryRpc.insertAll(String projectId, String datasetId, String tableId, TableDataInsertAllRequest request)"
  fullName: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.insertAll(String projectId, String datasetId, String tableId, TableDataInsertAllRequest request)"
  overload: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.insertAll*"
  type: "Method"
  package: "com.google.cloud.bigquery.spi.v2"
  summary: "Sends an insert all request."
  syntax:
    content: "public TableDataInsertAllResponse insertAll(String projectId, String datasetId, String tableId, TableDataInsertAllRequest request)"
    parameters:
    - id: "projectId"
      type: "java.lang.String"
    - id: "datasetId"
      type: "java.lang.String"
    - id: "tableId"
      type: "java.lang.String"
    - id: "request"
      type: "com.google.api.services.bigquery.model.TableDataInsertAllRequest"
    return:
      type: "com.google.api.services.bigquery.model.TableDataInsertAllResponse"
- uid: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.listDatasets(java.lang.String,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  id: "listDatasets(java.lang.String,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  parent: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc"
  langs:
  - "java"
  name: "listDatasets(String projectId, Map<BigQueryRpc.Option,?> options)"
  nameWithType: "HttpBigQueryRpc.listDatasets(String projectId, Map<BigQueryRpc.Option,?> options)"
  fullName: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.listDatasets(String projectId, Map<BigQueryRpc.Option,?> options)"
  overload: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.listDatasets*"
  type: "Method"
  package: "com.google.cloud.bigquery.spi.v2"
  summary: "Lists the provided project's datasets, keyed by page token. Partial information is returned on a dataset (datasetReference, friendlyName and id). To get full information use <xref uid=\"com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.getDataset(java.lang.String,java.lang.String,java.util.Map&lt;com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?&gt;)\" data-throw-if-not-resolved=\"false\">#getDataset(String, String, Map)</xref>."
  syntax:
    content: "public Tuple<String,Iterable<Dataset>> listDatasets(String projectId, Map<BigQueryRpc.Option,?> options)"
    parameters:
    - id: "projectId"
      type: "java.lang.String"
    - id: "options"
      type: "java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>"
    return:
      type: "com.google.cloud.Tuple<java.lang.String,java.lang.Iterable<com.google.api.services.bigquery.model.Dataset>>"
- uid: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.listJobs(java.lang.String,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  id: "listJobs(java.lang.String,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  parent: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc"
  langs:
  - "java"
  name: "listJobs(String projectId, Map<BigQueryRpc.Option,?> options)"
  nameWithType: "HttpBigQueryRpc.listJobs(String projectId, Map<BigQueryRpc.Option,?> options)"
  fullName: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.listJobs(String projectId, Map<BigQueryRpc.Option,?> options)"
  overload: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.listJobs*"
  type: "Method"
  package: "com.google.cloud.bigquery.spi.v2"
  summary: "Lists the project's jobs."
  syntax:
    content: "public Tuple<String,Iterable<Job>> listJobs(String projectId, Map<BigQueryRpc.Option,?> options)"
    parameters:
    - id: "projectId"
      type: "java.lang.String"
    - id: "options"
      type: "java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>"
    return:
      type: "com.google.cloud.Tuple<java.lang.String,java.lang.Iterable<com.google.api.services.bigquery.model.Job>>"
- uid: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.listModels(java.lang.String,java.lang.String,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  id: "listModels(java.lang.String,java.lang.String,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  parent: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc"
  langs:
  - "java"
  name: "listModels(String projectId, String datasetId, Map<BigQueryRpc.Option,?> options)"
  nameWithType: "HttpBigQueryRpc.listModels(String projectId, String datasetId, Map<BigQueryRpc.Option,?> options)"
  fullName: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.listModels(String projectId, String datasetId, Map<BigQueryRpc.Option,?> options)"
  overload: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.listModels*"
  type: "Method"
  package: "com.google.cloud.bigquery.spi.v2"
  summary: "Lists the dataset's models, keyed by page token."
  syntax:
    content: "public Tuple<String,Iterable<Model>> listModels(String projectId, String datasetId, Map<BigQueryRpc.Option,?> options)"
    parameters:
    - id: "projectId"
      type: "java.lang.String"
    - id: "datasetId"
      type: "java.lang.String"
    - id: "options"
      type: "java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>"
    return:
      type: "com.google.cloud.Tuple<java.lang.String,java.lang.Iterable<com.google.api.services.bigquery.model.Model>>"
- uid: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.listRoutines(java.lang.String,java.lang.String,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  id: "listRoutines(java.lang.String,java.lang.String,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  parent: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc"
  langs:
  - "java"
  name: "listRoutines(String projectId, String datasetId, Map<BigQueryRpc.Option,?> options)"
  nameWithType: "HttpBigQueryRpc.listRoutines(String projectId, String datasetId, Map<BigQueryRpc.Option,?> options)"
  fullName: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.listRoutines(String projectId, String datasetId, Map<BigQueryRpc.Option,?> options)"
  overload: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.listRoutines*"
  type: "Method"
  package: "com.google.cloud.bigquery.spi.v2"
  syntax:
    content: "public Tuple<String,Iterable<Routine>> listRoutines(String projectId, String datasetId, Map<BigQueryRpc.Option,?> options)"
    parameters:
    - id: "projectId"
      type: "java.lang.String"
    - id: "datasetId"
      type: "java.lang.String"
    - id: "options"
      type: "java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>"
    return:
      type: "com.google.cloud.Tuple<java.lang.String,java.lang.Iterable<com.google.api.services.bigquery.model.Routine>>"
- uid: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.listTableData(java.lang.String,java.lang.String,java.lang.String,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  id: "listTableData(java.lang.String,java.lang.String,java.lang.String,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  parent: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc"
  langs:
  - "java"
  name: "listTableData(String projectId, String datasetId, String tableId, Map<BigQueryRpc.Option,?> options)"
  nameWithType: "HttpBigQueryRpc.listTableData(String projectId, String datasetId, String tableId, Map<BigQueryRpc.Option,?> options)"
  fullName: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.listTableData(String projectId, String datasetId, String tableId, Map<BigQueryRpc.Option,?> options)"
  overload: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.listTableData*"
  type: "Method"
  package: "com.google.cloud.bigquery.spi.v2"
  summary: "Lists the table's rows."
  syntax:
    content: "public TableDataList listTableData(String projectId, String datasetId, String tableId, Map<BigQueryRpc.Option,?> options)"
    parameters:
    - id: "projectId"
      type: "java.lang.String"
    - id: "datasetId"
      type: "java.lang.String"
    - id: "tableId"
      type: "java.lang.String"
    - id: "options"
      type: "java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>"
    return:
      type: "com.google.api.services.bigquery.model.TableDataList"
- uid: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.listTables(java.lang.String,java.lang.String,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  id: "listTables(java.lang.String,java.lang.String,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  parent: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc"
  langs:
  - "java"
  name: "listTables(String projectId, String datasetId, Map<BigQueryRpc.Option,?> options)"
  nameWithType: "HttpBigQueryRpc.listTables(String projectId, String datasetId, Map<BigQueryRpc.Option,?> options)"
  fullName: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.listTables(String projectId, String datasetId, Map<BigQueryRpc.Option,?> options)"
  overload: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.listTables*"
  type: "Method"
  package: "com.google.cloud.bigquery.spi.v2"
  summary: "Lists the dataset's tables, keyed by page token. Partial information is returned on a table (tableReference, friendlyName, id and type). To get full information use <xref uid=\"com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.getTable(java.lang.String,java.lang.String,java.lang.String,java.util.Map&lt;com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?&gt;)\" data-throw-if-not-resolved=\"false\">#getTable(String, String, String, Map)</xref>."
  syntax:
    content: "public Tuple<String,Iterable<Table>> listTables(String projectId, String datasetId, Map<BigQueryRpc.Option,?> options)"
    parameters:
    - id: "projectId"
      type: "java.lang.String"
    - id: "datasetId"
      type: "java.lang.String"
    - id: "options"
      type: "java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>"
    return:
      type: "com.google.cloud.Tuple<java.lang.String,java.lang.Iterable<com.google.api.services.bigquery.model.Table>>"
- uid: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.open(com.google.api.services.bigquery.model.Job)"
  id: "open(com.google.api.services.bigquery.model.Job)"
  parent: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc"
  langs:
  - "java"
  name: "open(Job loadJob)"
  nameWithType: "HttpBigQueryRpc.open(Job loadJob)"
  fullName: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.open(Job loadJob)"
  overload: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.open*"
  type: "Method"
  package: "com.google.cloud.bigquery.spi.v2"
  summary: "Opens a resumable upload session to load data into a BigQuery table and returns an upload URI."
  syntax:
    content: "public String open(Job loadJob)"
    parameters:
    - id: "loadJob"
      type: "com.google.api.services.bigquery.model.Job"
    return:
      type: "java.lang.String"
- uid: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.patch(com.google.api.services.bigquery.model.Dataset,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  id: "patch(com.google.api.services.bigquery.model.Dataset,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  parent: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc"
  langs:
  - "java"
  name: "patch(Dataset dataset, Map<BigQueryRpc.Option,?> options)"
  nameWithType: "HttpBigQueryRpc.patch(Dataset dataset, Map<BigQueryRpc.Option,?> options)"
  fullName: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.patch(Dataset dataset, Map<BigQueryRpc.Option,?> options)"
  overload: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.patch*"
  type: "Method"
  package: "com.google.cloud.bigquery.spi.v2"
  summary: "Updates dataset information."
  syntax:
    content: "public Dataset patch(Dataset dataset, Map<BigQueryRpc.Option,?> options)"
    parameters:
    - id: "dataset"
      type: "com.google.api.services.bigquery.model.Dataset"
    - id: "options"
      type: "java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>"
    return:
      type: "com.google.api.services.bigquery.model.Dataset"
- uid: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.patch(com.google.api.services.bigquery.model.Model,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  id: "patch(com.google.api.services.bigquery.model.Model,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  parent: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc"
  langs:
  - "java"
  name: "patch(Model model, Map<BigQueryRpc.Option,?> options)"
  nameWithType: "HttpBigQueryRpc.patch(Model model, Map<BigQueryRpc.Option,?> options)"
  fullName: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.patch(Model model, Map<BigQueryRpc.Option,?> options)"
  overload: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.patch*"
  type: "Method"
  package: "com.google.cloud.bigquery.spi.v2"
  summary: "Updates model information."
  syntax:
    content: "public Model patch(Model model, Map<BigQueryRpc.Option,?> options)"
    parameters:
    - id: "model"
      type: "com.google.api.services.bigquery.model.Model"
    - id: "options"
      type: "java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>"
    return:
      type: "com.google.api.services.bigquery.model.Model"
- uid: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.patch(com.google.api.services.bigquery.model.Table,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  id: "patch(com.google.api.services.bigquery.model.Table,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  parent: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc"
  langs:
  - "java"
  name: "patch(Table table, Map<BigQueryRpc.Option,?> options)"
  nameWithType: "HttpBigQueryRpc.patch(Table table, Map<BigQueryRpc.Option,?> options)"
  fullName: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.patch(Table table, Map<BigQueryRpc.Option,?> options)"
  overload: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.patch*"
  type: "Method"
  package: "com.google.cloud.bigquery.spi.v2"
  summary: "Updates table information."
  syntax:
    content: "public Table patch(Table table, Map<BigQueryRpc.Option,?> options)"
    parameters:
    - id: "table"
      type: "com.google.api.services.bigquery.model.Table"
    - id: "options"
      type: "java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>"
    return:
      type: "com.google.api.services.bigquery.model.Table"
- uid: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.queryRpc(java.lang.String,com.google.api.services.bigquery.model.QueryRequest)"
  id: "queryRpc(java.lang.String,com.google.api.services.bigquery.model.QueryRequest)"
  parent: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc"
  langs:
  - "java"
  name: "queryRpc(String projectId, QueryRequest content)"
  nameWithType: "HttpBigQueryRpc.queryRpc(String projectId, QueryRequest content)"
  fullName: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.queryRpc(String projectId, QueryRequest content)"
  overload: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.queryRpc*"
  type: "Method"
  package: "com.google.cloud.bigquery.spi.v2"
  summary: "Runs a BigQuery SQL query synchronously and returns query results if the query completes within a specified timeout.\n\nCreate a request for the method \"jobs.query\".\n\nThis request holds the parameters needed by the bigquery server. After setting any optional parameters, call the <xref uid=\"\" data-throw-if-not-resolved=\"false\">Query#execute()</xref> method to invoke the remote operation."
  syntax:
    content: "public QueryResponse queryRpc(String projectId, QueryRequest content)"
    parameters:
    - id: "projectId"
      type: "java.lang.String"
    - id: "content"
      type: "com.google.api.services.bigquery.model.QueryRequest"
    return:
      type: "com.google.api.services.bigquery.model.QueryResponse"
- uid: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.setIamPolicy(java.lang.String,com.google.api.services.bigquery.model.Policy,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  id: "setIamPolicy(java.lang.String,com.google.api.services.bigquery.model.Policy,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  parent: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc"
  langs:
  - "java"
  name: "setIamPolicy(String resourceId, Policy policy, Map<BigQueryRpc.Option,?> options)"
  nameWithType: "HttpBigQueryRpc.setIamPolicy(String resourceId, Policy policy, Map<BigQueryRpc.Option,?> options)"
  fullName: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.setIamPolicy(String resourceId, Policy policy, Map<BigQueryRpc.Option,?> options)"
  overload: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.setIamPolicy*"
  type: "Method"
  package: "com.google.cloud.bigquery.spi.v2"
  summary: "Updates the IAM policy for the specified resource."
  syntax:
    content: "public Policy setIamPolicy(String resourceId, Policy policy, Map<BigQueryRpc.Option,?> options)"
    parameters:
    - id: "resourceId"
      type: "java.lang.String"
    - id: "policy"
      type: "com.google.api.services.bigquery.model.Policy"
    - id: "options"
      type: "java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>"
    return:
      type: "com.google.api.services.bigquery.model.Policy"
- uid: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.testIamPermissions(java.lang.String,java.util.List<java.lang.String>,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  id: "testIamPermissions(java.lang.String,java.util.List<java.lang.String>,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  parent: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc"
  langs:
  - "java"
  name: "testIamPermissions(String resourceId, List<String> permissions, Map<BigQueryRpc.Option,?> options)"
  nameWithType: "HttpBigQueryRpc.testIamPermissions(String resourceId, List<String> permissions, Map<BigQueryRpc.Option,?> options)"
  fullName: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.testIamPermissions(String resourceId, List<String> permissions, Map<BigQueryRpc.Option,?> options)"
  overload: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.testIamPermissions*"
  type: "Method"
  package: "com.google.cloud.bigquery.spi.v2"
  summary: "Tests whether the caller holds the provided permissions for the specified resource. Returns the subset of permissions the caller actually holds."
  syntax:
    content: "public TestIamPermissionsResponse testIamPermissions(String resourceId, List<String> permissions, Map<BigQueryRpc.Option,?> options)"
    parameters:
    - id: "resourceId"
      type: "java.lang.String"
    - id: "permissions"
      type: "java.util.List<java.lang.String>"
    - id: "options"
      type: "java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>"
    return:
      type: "com.google.api.services.bigquery.model.TestIamPermissionsResponse"
- uid: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.update(com.google.api.services.bigquery.model.Routine,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  id: "update(com.google.api.services.bigquery.model.Routine,java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>)"
  parent: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc"
  langs:
  - "java"
  name: "update(Routine routine, Map<BigQueryRpc.Option,?> options)"
  nameWithType: "HttpBigQueryRpc.update(Routine routine, Map<BigQueryRpc.Option,?> options)"
  fullName: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.update(Routine routine, Map<BigQueryRpc.Option,?> options)"
  overload: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.update*"
  type: "Method"
  package: "com.google.cloud.bigquery.spi.v2"
  summary: "Updates the requested routine."
  syntax:
    content: "public Routine update(Routine routine, Map<BigQueryRpc.Option,?> options)"
    parameters:
    - id: "routine"
      type: "com.google.api.services.bigquery.model.Routine"
    - id: "options"
      type: "java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>"
    return:
      type: "com.google.api.services.bigquery.model.Routine"
- uid: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.write(java.lang.String,byte[],int,long,int,boolean)"
  id: "write(java.lang.String,byte[],int,long,int,boolean)"
  parent: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc"
  langs:
  - "java"
  name: "write(String uploadId, byte[] toWrite, int toWriteOffset, long destOffset, int length, boolean last)"
  nameWithType: "HttpBigQueryRpc.write(String uploadId, byte[] toWrite, int toWriteOffset, long destOffset, int length, boolean last)"
  fullName: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.write(String uploadId, byte[] toWrite, int toWriteOffset, long destOffset, int length, boolean last)"
  overload: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.write*"
  type: "Method"
  package: "com.google.cloud.bigquery.spi.v2"
  summary: "Uploads the provided data to the resumable upload session at the specified position. This method returns the job created to insert the rows, only when `last` is `true`."
  syntax:
    content: "public Job write(String uploadId, byte[] toWrite, int toWriteOffset, long destOffset, int length, boolean last)"
    parameters:
    - id: "uploadId"
      type: "java.lang.String"
    - id: "toWrite"
      type: "byte[]"
    - id: "toWriteOffset"
      type: "int"
    - id: "destOffset"
      type: "long"
    - id: "length"
      type: "int"
    - id: "last"
      type: "boolean"
    return:
      type: "com.google.api.services.bigquery.model.Job"
references:
- uid: "com.google.cloud.bigquery.BigQueryOptions"
  name: "BigQueryOptions"
  nameWithType: "BigQueryOptions"
  fullName: "com.google.cloud.bigquery.BigQueryOptions"
- uid: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.HttpBigQueryRpc*"
  name: "HttpBigQueryRpc"
  nameWithType: "HttpBigQueryRpc.HttpBigQueryRpc"
  fullName: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.HttpBigQueryRpc"
  package: "com.google.cloud.bigquery.spi.v2"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "java.util.Map<com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?>"
  spec.java:
  - uid: "java.util.Map"
    name: "Map"
    fullName: "java.util.Map"
  - name: "<"
    fullName: "<"
  - uid: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option"
    name: "Option"
    fullName: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option"
  - name: ","
    fullName: ","
  - uid: "?"
    name: "?"
    fullName: "?"
  - name: ">"
    fullName: ">"
- uid: "com.google.api.services.bigquery.model.Dataset"
  spec.java:
  - uid: "com.google.api.services.bigquery.model.Dataset"
    name: "Dataset"
    fullName: "com.google.api.services.bigquery.model.Dataset"
- uid: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.getDataset*"
  name: "getDataset"
  nameWithType: "HttpBigQueryRpc.getDataset"
  fullName: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.getDataset"
  package: "com.google.cloud.bigquery.spi.v2"
- uid: "com.google.cloud.Tuple<java.lang.String,java.lang.Iterable<com.google.api.services.bigquery.model.Dataset>>"
  spec.java:
  - uid: "com.google.cloud.Tuple"
    name: "Tuple"
    fullName: "com.google.cloud.Tuple"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ","
    fullName: ","
  - uid: "java.lang.Iterable"
    name: "Iterable"
    fullName: "java.lang.Iterable"
  - name: "<"
    fullName: "<"
  - uid: "com.google.api.services.bigquery.model.Dataset"
    name: "Dataset"
    fullName: "com.google.api.services.bigquery.model.Dataset"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.listDatasets*"
  name: "listDatasets"
  nameWithType: "HttpBigQueryRpc.listDatasets"
  fullName: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.listDatasets"
  package: "com.google.cloud.bigquery.spi.v2"
- uid: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.create*"
  name: "create"
  nameWithType: "HttpBigQueryRpc.create"
  fullName: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.create"
  package: "com.google.cloud.bigquery.spi.v2"
- uid: "com.google.api.services.bigquery.model.Table"
  spec.java:
  - uid: "com.google.api.services.bigquery.model.Table"
    name: "Table"
    fullName: "com.google.api.services.bigquery.model.Table"
- uid: "com.google.api.services.bigquery.model.Routine"
  spec.java:
  - uid: "com.google.api.services.bigquery.model.Routine"
    name: "Routine"
    fullName: "com.google.api.services.bigquery.model.Routine"
- uid: "com.google.api.services.bigquery.model.Job"
  spec.java:
  - uid: "com.google.api.services.bigquery.model.Job"
    name: "Job"
    fullName: "com.google.api.services.bigquery.model.Job"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.deleteDataset*"
  name: "deleteDataset"
  nameWithType: "HttpBigQueryRpc.deleteDataset"
  fullName: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.deleteDataset"
  package: "com.google.cloud.bigquery.spi.v2"
- uid: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.patch*"
  name: "patch"
  nameWithType: "HttpBigQueryRpc.patch"
  fullName: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.patch"
  package: "com.google.cloud.bigquery.spi.v2"
- uid: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.getTable*"
  name: "getTable"
  nameWithType: "HttpBigQueryRpc.getTable"
  fullName: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.getTable"
  package: "com.google.cloud.bigquery.spi.v2"
- uid: "com.google.cloud.Tuple<java.lang.String,java.lang.Iterable<com.google.api.services.bigquery.model.Table>>"
  spec.java:
  - uid: "com.google.cloud.Tuple"
    name: "Tuple"
    fullName: "com.google.cloud.Tuple"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ","
    fullName: ","
  - uid: "java.lang.Iterable"
    name: "Iterable"
    fullName: "java.lang.Iterable"
  - name: "<"
    fullName: "<"
  - uid: "com.google.api.services.bigquery.model.Table"
    name: "Table"
    fullName: "com.google.api.services.bigquery.model.Table"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.listTables*"
  name: "listTables"
  nameWithType: "HttpBigQueryRpc.listTables"
  fullName: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.listTables"
  package: "com.google.cloud.bigquery.spi.v2"
- uid: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.deleteTable*"
  name: "deleteTable"
  nameWithType: "HttpBigQueryRpc.deleteTable"
  fullName: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.deleteTable"
  package: "com.google.cloud.bigquery.spi.v2"
- uid: "com.google.api.services.bigquery.model.Model"
  spec.java:
  - uid: "com.google.api.services.bigquery.model.Model"
    name: "Model"
    fullName: "com.google.api.services.bigquery.model.Model"
- uid: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.getModel*"
  name: "getModel"
  nameWithType: "HttpBigQueryRpc.getModel"
  fullName: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.getModel"
  package: "com.google.cloud.bigquery.spi.v2"
- uid: "com.google.cloud.Tuple<java.lang.String,java.lang.Iterable<com.google.api.services.bigquery.model.Model>>"
  spec.java:
  - uid: "com.google.cloud.Tuple"
    name: "Tuple"
    fullName: "com.google.cloud.Tuple"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ","
    fullName: ","
  - uid: "java.lang.Iterable"
    name: "Iterable"
    fullName: "java.lang.Iterable"
  - name: "<"
    fullName: "<"
  - uid: "com.google.api.services.bigquery.model.Model"
    name: "Model"
    fullName: "com.google.api.services.bigquery.model.Model"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.listModels*"
  name: "listModels"
  nameWithType: "HttpBigQueryRpc.listModels"
  fullName: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.listModels"
  package: "com.google.cloud.bigquery.spi.v2"
- uid: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.deleteModel*"
  name: "deleteModel"
  nameWithType: "HttpBigQueryRpc.deleteModel"
  fullName: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.deleteModel"
  package: "com.google.cloud.bigquery.spi.v2"
- uid: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.update*"
  name: "update"
  nameWithType: "HttpBigQueryRpc.update"
  fullName: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.update"
  package: "com.google.cloud.bigquery.spi.v2"
- uid: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.getRoutine*"
  name: "getRoutine"
  nameWithType: "HttpBigQueryRpc.getRoutine"
  fullName: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.getRoutine"
  package: "com.google.cloud.bigquery.spi.v2"
- uid: "com.google.cloud.Tuple<java.lang.String,java.lang.Iterable<com.google.api.services.bigquery.model.Routine>>"
  spec.java:
  - uid: "com.google.cloud.Tuple"
    name: "Tuple"
    fullName: "com.google.cloud.Tuple"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ","
    fullName: ","
  - uid: "java.lang.Iterable"
    name: "Iterable"
    fullName: "java.lang.Iterable"
  - name: "<"
    fullName: "<"
  - uid: "com.google.api.services.bigquery.model.Routine"
    name: "Routine"
    fullName: "com.google.api.services.bigquery.model.Routine"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.listRoutines*"
  name: "listRoutines"
  nameWithType: "HttpBigQueryRpc.listRoutines"
  fullName: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.listRoutines"
  package: "com.google.cloud.bigquery.spi.v2"
- uid: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.deleteRoutine*"
  name: "deleteRoutine"
  nameWithType: "HttpBigQueryRpc.deleteRoutine"
  fullName: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.deleteRoutine"
  package: "com.google.cloud.bigquery.spi.v2"
- uid: "com.google.api.services.bigquery.model.TableDataInsertAllRequest"
  spec.java:
  - uid: "com.google.api.services.bigquery.model.TableDataInsertAllRequest"
    name: "TableDataInsertAllRequest"
    fullName: "com.google.api.services.bigquery.model.TableDataInsertAllRequest"
- uid: "com.google.api.services.bigquery.model.TableDataInsertAllResponse"
  spec.java:
  - uid: "com.google.api.services.bigquery.model.TableDataInsertAllResponse"
    name: "TableDataInsertAllResponse"
    fullName: "com.google.api.services.bigquery.model.TableDataInsertAllResponse"
- uid: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.insertAll*"
  name: "insertAll"
  nameWithType: "HttpBigQueryRpc.insertAll"
  fullName: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.insertAll"
  package: "com.google.cloud.bigquery.spi.v2"
- uid: "com.google.api.services.bigquery.model.TableDataList"
  spec.java:
  - uid: "com.google.api.services.bigquery.model.TableDataList"
    name: "TableDataList"
    fullName: "com.google.api.services.bigquery.model.TableDataList"
- uid: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.listTableData*"
  name: "listTableData"
  nameWithType: "HttpBigQueryRpc.listTableData"
  fullName: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.listTableData"
  package: "com.google.cloud.bigquery.spi.v2"
- uid: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.getJob*"
  name: "getJob"
  nameWithType: "HttpBigQueryRpc.getJob"
  fullName: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.getJob"
  package: "com.google.cloud.bigquery.spi.v2"
- uid: "com.google.cloud.Tuple<java.lang.String,java.lang.Iterable<com.google.api.services.bigquery.model.Job>>"
  spec.java:
  - uid: "com.google.cloud.Tuple"
    name: "Tuple"
    fullName: "com.google.cloud.Tuple"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ","
    fullName: ","
  - uid: "java.lang.Iterable"
    name: "Iterable"
    fullName: "java.lang.Iterable"
  - name: "<"
    fullName: "<"
  - uid: "com.google.api.services.bigquery.model.Job"
    name: "Job"
    fullName: "com.google.api.services.bigquery.model.Job"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.listJobs*"
  name: "listJobs"
  nameWithType: "HttpBigQueryRpc.listJobs"
  fullName: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.listJobs"
  package: "com.google.cloud.bigquery.spi.v2"
- uid: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.cancel*"
  name: "cancel"
  nameWithType: "HttpBigQueryRpc.cancel"
  fullName: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.cancel"
  package: "com.google.cloud.bigquery.spi.v2"
- uid: "com.google.api.services.bigquery.model.GetQueryResultsResponse"
  spec.java:
  - uid: "com.google.api.services.bigquery.model.GetQueryResultsResponse"
    name: "GetQueryResultsResponse"
    fullName: "com.google.api.services.bigquery.model.GetQueryResultsResponse"
- uid: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.getQueryResults*"
  name: "getQueryResults"
  nameWithType: "HttpBigQueryRpc.getQueryResults"
  fullName: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.getQueryResults"
  package: "com.google.cloud.bigquery.spi.v2"
- uid: "com.google.api.services.bigquery.model.QueryRequest"
  spec.java:
  - uid: "com.google.api.services.bigquery.model.QueryRequest"
    name: "QueryRequest"
    fullName: "com.google.api.services.bigquery.model.QueryRequest"
- uid: "com.google.api.services.bigquery.model.QueryResponse"
  spec.java:
  - uid: "com.google.api.services.bigquery.model.QueryResponse"
    name: "QueryResponse"
    fullName: "com.google.api.services.bigquery.model.QueryResponse"
- uid: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.queryRpc*"
  name: "queryRpc"
  nameWithType: "HttpBigQueryRpc.queryRpc"
  fullName: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.queryRpc"
  package: "com.google.cloud.bigquery.spi.v2"
- uid: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.open*"
  name: "open"
  nameWithType: "HttpBigQueryRpc.open"
  fullName: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.open"
  package: "com.google.cloud.bigquery.spi.v2"
- uid: "byte[]"
  spec.java:
  - uid: "byte"
    name: "byte"
    fullName: "byte"
  - name: "[]"
    fullName: "[]"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "long"
  spec.java:
  - uid: "long"
    name: "long"
    fullName: "long"
- uid: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.write*"
  name: "write"
  nameWithType: "HttpBigQueryRpc.write"
  fullName: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.write"
  package: "com.google.cloud.bigquery.spi.v2"
- uid: "com.google.api.services.bigquery.model.Policy"
  spec.java:
  - uid: "com.google.api.services.bigquery.model.Policy"
    name: "Policy"
    fullName: "com.google.api.services.bigquery.model.Policy"
- uid: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.getIamPolicy*"
  name: "getIamPolicy"
  nameWithType: "HttpBigQueryRpc.getIamPolicy"
  fullName: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.getIamPolicy"
  package: "com.google.cloud.bigquery.spi.v2"
- uid: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.setIamPolicy*"
  name: "setIamPolicy"
  nameWithType: "HttpBigQueryRpc.setIamPolicy"
  fullName: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.setIamPolicy"
  package: "com.google.cloud.bigquery.spi.v2"
- uid: "java.util.List<java.lang.String>"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ">"
    fullName: ">"
- uid: "com.google.api.services.bigquery.model.TestIamPermissionsResponse"
  spec.java:
  - uid: "com.google.api.services.bigquery.model.TestIamPermissionsResponse"
    name: "TestIamPermissionsResponse"
    fullName: "com.google.api.services.bigquery.model.TestIamPermissionsResponse"
- uid: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.testIamPermissions*"
  name: "testIamPermissions"
  nameWithType: "HttpBigQueryRpc.testIamPermissions"
  fullName: "com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.testIamPermissions"
  package: "com.google.cloud.bigquery.spi.v2"
- uid: "com.google.cloud.bigquery.spi.v2.BigQueryRpc"
  name: "BigQueryRpc"
  nameWithType: "BigQueryRpc"
  fullName: "com.google.cloud.bigquery.spi.v2.BigQueryRpc"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?"
  name: "BigQueryRpc.Option,?"
  nameWithType: "BigQueryRpc.Option,?"
  fullName: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,?"
- uid: "java.util.Map"
  name: "Map"
  nameWithType: "Map"
  fullName: "java.util.Map"
- uid: "com.google.cloud.Tuple"
  name: "Tuple"
  nameWithType: "Tuple"
  fullName: "com.google.cloud.Tuple"
- uid: "java.lang.String,java.lang.Iterable"
  name: "String,Iterable"
  nameWithType: "String,Iterable"
  fullName: "java.lang.String,java.lang.Iterable"
- uid: "java.util.List"
  name: "List"
  nameWithType: "List"
  fullName: "java.util.List"
