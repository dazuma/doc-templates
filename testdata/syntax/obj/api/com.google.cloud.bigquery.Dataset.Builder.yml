### YamlMime:ManagedReference
items:
- uid: "com.google.cloud.bigquery.Dataset.Builder"
  id: "Builder"
  parent: "com.google.cloud.bigquery"
  children:
  - "com.google.cloud.bigquery.Dataset.Builder.build()"
  - "com.google.cloud.bigquery.Dataset.Builder.setAcl(java.util.List<com.google.cloud.bigquery.Acl>)"
  - "com.google.cloud.bigquery.Dataset.Builder.setDatasetId(com.google.cloud.bigquery.DatasetId)"
  - "com.google.cloud.bigquery.Dataset.Builder.setDefaultEncryptionConfiguration(com.google.cloud.bigquery.EncryptionConfiguration)"
  - "com.google.cloud.bigquery.Dataset.Builder.setDefaultPartitionExpirationMs(java.lang.Long)"
  - "com.google.cloud.bigquery.Dataset.Builder.setDefaultTableLifetime(java.lang.Long)"
  - "com.google.cloud.bigquery.Dataset.Builder.setDescription(java.lang.String)"
  - "com.google.cloud.bigquery.Dataset.Builder.setFriendlyName(java.lang.String)"
  - "com.google.cloud.bigquery.Dataset.Builder.setLabels(java.util.Map<java.lang.String,java.lang.String>)"
  - "com.google.cloud.bigquery.Dataset.Builder.setLocation(java.lang.String)"
  langs:
  - "java"
  name: "Dataset.Builder"
  nameWithType: "Dataset.Builder"
  fullName: "com.google.cloud.bigquery.Dataset.Builder"
  type: "Class"
  package: "com.google.cloud.bigquery"
  summary: "A builder for `Dataset` objects."
  syntax:
    content: "public static final class Dataset.Builder extends DatasetInfo.Builder"
  inheritance:
  - "java.lang.Object"
  - "com.google.cloud.bigquery.DatasetInfo.Builder"
  inheritedMembers:
  - "com.google.cloud.bigquery.DatasetInfo.Builder.build()"
  - "com.google.cloud.bigquery.DatasetInfo.Builder.setAcl(java.util.List<com.google.cloud.bigquery.Acl>)"
  - "com.google.cloud.bigquery.DatasetInfo.Builder.setDatasetId(com.google.cloud.bigquery.DatasetId)"
  - "com.google.cloud.bigquery.DatasetInfo.Builder.setDefaultEncryptionConfiguration(com.google.cloud.bigquery.EncryptionConfiguration)"
  - "com.google.cloud.bigquery.DatasetInfo.Builder.setDefaultPartitionExpirationMs(java.lang.Long)"
  - "com.google.cloud.bigquery.DatasetInfo.Builder.setDefaultTableLifetime(java.lang.Long)"
  - "com.google.cloud.bigquery.DatasetInfo.Builder.setDescription(java.lang.String)"
  - "com.google.cloud.bigquery.DatasetInfo.Builder.setFriendlyName(java.lang.String)"
  - "com.google.cloud.bigquery.DatasetInfo.Builder.setLabels(java.util.Map<java.lang.String,java.lang.String>)"
  - "com.google.cloud.bigquery.DatasetInfo.Builder.setLocation(java.lang.String)"
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.google.cloud.bigquery.Dataset.Builder.Builder(com.google.cloud.bigquery.BigQuery,com.google.cloud.bigquery.DatasetId)"
  id: "Builder(com.google.cloud.bigquery.BigQuery,com.google.cloud.bigquery.DatasetId)"
  parent: "com.google.cloud.bigquery.Dataset.Builder"
  langs:
  - "java"
  name: "Builder(BigQuery bigquery, DatasetId datasetId)"
  nameWithType: "Dataset.Builder.Builder(BigQuery bigquery, DatasetId datasetId)"
  fullName: "com.google.cloud.bigquery.Dataset.Builder.Builder(BigQuery bigquery, DatasetId datasetId)"
  overload: "com.google.cloud.bigquery.Dataset.Builder.Builder*"
  type: "Constructor"
  package: "com.google.cloud.bigquery"
  syntax:
    content: " Builder(BigQuery bigquery, DatasetId datasetId)"
    parameters:
    - id: "bigquery"
      type: "com.google.cloud.bigquery.BigQuery"
    - id: "datasetId"
      type: "com.google.cloud.bigquery.DatasetId"
- uid: "com.google.cloud.bigquery.Dataset.Builder.Builder(com.google.cloud.bigquery.Dataset)"
  id: "Builder(com.google.cloud.bigquery.Dataset)"
  parent: "com.google.cloud.bigquery.Dataset.Builder"
  langs:
  - "java"
  name: "Builder(Dataset dataset)"
  nameWithType: "Dataset.Builder.Builder(Dataset dataset)"
  fullName: "com.google.cloud.bigquery.Dataset.Builder.Builder(Dataset dataset)"
  overload: "com.google.cloud.bigquery.Dataset.Builder.Builder*"
  type: "Constructor"
  package: "com.google.cloud.bigquery"
  syntax:
    content: " Builder(Dataset dataset)"
    parameters:
    - id: "dataset"
      type: "com.google.cloud.bigquery.Dataset"
- uid: "com.google.cloud.bigquery.Dataset.Builder.build()"
  id: "build()"
  parent: "com.google.cloud.bigquery.Dataset.Builder"
  langs:
  - "java"
  name: "build()"
  nameWithType: "Dataset.Builder.build()"
  fullName: "com.google.cloud.bigquery.Dataset.Builder.build()"
  overload: "com.google.cloud.bigquery.Dataset.Builder.build*"
  overridden: "com.google.cloud.bigquery.DatasetInfo.Builder.build()"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Creates a `DatasetInfo` object."
  syntax:
    content: "public Dataset build()"
    return:
      type: "com.google.cloud.bigquery.Dataset"
- uid: "com.google.cloud.bigquery.Dataset.Builder.setAcl(java.util.List<com.google.cloud.bigquery.Acl>)"
  id: "setAcl(java.util.List<com.google.cloud.bigquery.Acl>)"
  parent: "com.google.cloud.bigquery.Dataset.Builder"
  langs:
  - "java"
  name: "setAcl(List<Acl> acl)"
  nameWithType: "Dataset.Builder.setAcl(List<Acl> acl)"
  fullName: "com.google.cloud.bigquery.Dataset.Builder.setAcl(List<Acl> acl)"
  overload: "com.google.cloud.bigquery.Dataset.Builder.setAcl*"
  overridden: "com.google.cloud.bigquery.DatasetInfo.Builder.setAcl(java.util.List<com.google.cloud.bigquery.Acl>)"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Sets the dataset's access control configuration."
  syntax:
    content: "public Dataset.Builder setAcl(List<Acl> acl)"
    parameters:
    - id: "acl"
      type: "java.util.List<com.google.cloud.bigquery.Acl>"
    return:
      type: "com.google.cloud.bigquery.Dataset.Builder"
- uid: "com.google.cloud.bigquery.Dataset.Builder.setDatasetId(com.google.cloud.bigquery.DatasetId)"
  id: "setDatasetId(com.google.cloud.bigquery.DatasetId)"
  parent: "com.google.cloud.bigquery.Dataset.Builder"
  langs:
  - "java"
  name: "setDatasetId(DatasetId datasetId)"
  nameWithType: "Dataset.Builder.setDatasetId(DatasetId datasetId)"
  fullName: "com.google.cloud.bigquery.Dataset.Builder.setDatasetId(DatasetId datasetId)"
  overload: "com.google.cloud.bigquery.Dataset.Builder.setDatasetId*"
  overridden: "com.google.cloud.bigquery.DatasetInfo.Builder.setDatasetId(com.google.cloud.bigquery.DatasetId)"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Sets the dataset identity."
  syntax:
    content: "public Dataset.Builder setDatasetId(DatasetId datasetId)"
    parameters:
    - id: "datasetId"
      type: "com.google.cloud.bigquery.DatasetId"
    return:
      type: "com.google.cloud.bigquery.Dataset.Builder"
- uid: "com.google.cloud.bigquery.Dataset.Builder.setDefaultEncryptionConfiguration(com.google.cloud.bigquery.EncryptionConfiguration)"
  id: "setDefaultEncryptionConfiguration(com.google.cloud.bigquery.EncryptionConfiguration)"
  parent: "com.google.cloud.bigquery.Dataset.Builder"
  langs:
  - "java"
  name: "setDefaultEncryptionConfiguration(EncryptionConfiguration defaultEncryptionConfiguration)"
  nameWithType: "Dataset.Builder.setDefaultEncryptionConfiguration(EncryptionConfiguration defaultEncryptionConfiguration)"
  fullName: "com.google.cloud.bigquery.Dataset.Builder.setDefaultEncryptionConfiguration(EncryptionConfiguration defaultEncryptionConfiguration)"
  overload: "com.google.cloud.bigquery.Dataset.Builder.setDefaultEncryptionConfiguration*"
  overridden: "com.google.cloud.bigquery.DatasetInfo.Builder.setDefaultEncryptionConfiguration(com.google.cloud.bigquery.EncryptionConfiguration)"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "The default encryption key for all tables in the dataset. Once this property is set, all newly-created partitioned tables in the dataset will have encryption key set to this value, unless table creation request (or query) overrides the key."
  syntax:
    content: "public Dataset.Builder setDefaultEncryptionConfiguration(EncryptionConfiguration defaultEncryptionConfiguration)"
    parameters:
    - id: "defaultEncryptionConfiguration"
      type: "com.google.cloud.bigquery.EncryptionConfiguration"
    return:
      type: "com.google.cloud.bigquery.Dataset.Builder"
- uid: "com.google.cloud.bigquery.Dataset.Builder.setDefaultPartitionExpirationMs(java.lang.Long)"
  id: "setDefaultPartitionExpirationMs(java.lang.Long)"
  parent: "com.google.cloud.bigquery.Dataset.Builder"
  langs:
  - "java"
  name: "setDefaultPartitionExpirationMs(Long defaultPartitionExpirationMs)"
  nameWithType: "Dataset.Builder.setDefaultPartitionExpirationMs(Long defaultPartitionExpirationMs)"
  fullName: "com.google.cloud.bigquery.Dataset.Builder.setDefaultPartitionExpirationMs(Long defaultPartitionExpirationMs)"
  overload: "com.google.cloud.bigquery.Dataset.Builder.setDefaultPartitionExpirationMs*"
  overridden: "com.google.cloud.bigquery.DatasetInfo.Builder.setDefaultPartitionExpirationMs(java.lang.Long)"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "\\[Optional\\] The default partition expiration time for all partitioned tables in the dataset, in milliseconds. Once this property is set, all newly-created partitioned tables in the dataset will has an expirationMs property in the timePartitioning settings set to this value. Changing the value only affect new tables, not existing ones. The storage in a partition will have an expiration time of its partition time plus this value. Setting this property overrides the use of defaultTableExpirationMs for partitioned tables: only one of defaultTableExpirationMs and defaultPartitionExpirationMs will be used for any new partitioned table. If you provide an explicit timePartitioning.expirationMs when creating or updating a partitioned table, that value takes precedence over the default partition expiration time indicated by this property. The value may be `null`."
  syntax:
    content: "public Dataset.Builder setDefaultPartitionExpirationMs(Long defaultPartitionExpirationMs)"
    parameters:
    - id: "defaultPartitionExpirationMs"
      type: "java.lang.Long"
    return:
      type: "com.google.cloud.bigquery.Dataset.Builder"
- uid: "com.google.cloud.bigquery.Dataset.Builder.setDefaultTableLifetime(java.lang.Long)"
  id: "setDefaultTableLifetime(java.lang.Long)"
  parent: "com.google.cloud.bigquery.Dataset.Builder"
  langs:
  - "java"
  name: "setDefaultTableLifetime(Long defaultTableLifetime)"
  nameWithType: "Dataset.Builder.setDefaultTableLifetime(Long defaultTableLifetime)"
  fullName: "com.google.cloud.bigquery.Dataset.Builder.setDefaultTableLifetime(Long defaultTableLifetime)"
  overload: "com.google.cloud.bigquery.Dataset.Builder.setDefaultTableLifetime*"
  overridden: "com.google.cloud.bigquery.DatasetInfo.Builder.setDefaultTableLifetime(java.lang.Long)"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Sets the default lifetime of all tables in the dataset, in milliseconds. The minimum value is 3600000 milliseconds (one hour). Once this property is set, all newly-created tables in the dataset will have an expirationTime property set to the creation time plus the value in this property, and changing the value will only affect new tables, not existing ones. When the expirationTime for a given table is reached, that table will be deleted automatically. If a table's expirationTime is modified or removed before the table expires, or if you provide an explicit expirationTime when creating a table, that value takes precedence over the default expiration time indicated by this property. This property is experimental and might be subject to change or removed."
  syntax:
    content: "public Dataset.Builder setDefaultTableLifetime(Long defaultTableLifetime)"
    parameters:
    - id: "defaultTableLifetime"
      type: "java.lang.Long"
    return:
      type: "com.google.cloud.bigquery.Dataset.Builder"
- uid: "com.google.cloud.bigquery.Dataset.Builder.setDescription(java.lang.String)"
  id: "setDescription(java.lang.String)"
  parent: "com.google.cloud.bigquery.Dataset.Builder"
  langs:
  - "java"
  name: "setDescription(String description)"
  nameWithType: "Dataset.Builder.setDescription(String description)"
  fullName: "com.google.cloud.bigquery.Dataset.Builder.setDescription(String description)"
  overload: "com.google.cloud.bigquery.Dataset.Builder.setDescription*"
  overridden: "com.google.cloud.bigquery.DatasetInfo.Builder.setDescription(java.lang.String)"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Sets a user-friendly description for the dataset."
  syntax:
    content: "public Dataset.Builder setDescription(String description)"
    parameters:
    - id: "description"
      type: "java.lang.String"
    return:
      type: "com.google.cloud.bigquery.Dataset.Builder"
- uid: "com.google.cloud.bigquery.Dataset.Builder.setFriendlyName(java.lang.String)"
  id: "setFriendlyName(java.lang.String)"
  parent: "com.google.cloud.bigquery.Dataset.Builder"
  langs:
  - "java"
  name: "setFriendlyName(String friendlyName)"
  nameWithType: "Dataset.Builder.setFriendlyName(String friendlyName)"
  fullName: "com.google.cloud.bigquery.Dataset.Builder.setFriendlyName(String friendlyName)"
  overload: "com.google.cloud.bigquery.Dataset.Builder.setFriendlyName*"
  overridden: "com.google.cloud.bigquery.DatasetInfo.Builder.setFriendlyName(java.lang.String)"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Sets a user-friendly name for the dataset."
  syntax:
    content: "public Dataset.Builder setFriendlyName(String friendlyName)"
    parameters:
    - id: "friendlyName"
      type: "java.lang.String"
    return:
      type: "com.google.cloud.bigquery.Dataset.Builder"
- uid: "com.google.cloud.bigquery.Dataset.Builder.setLabels(java.util.Map<java.lang.String,java.lang.String>)"
  id: "setLabels(java.util.Map<java.lang.String,java.lang.String>)"
  parent: "com.google.cloud.bigquery.Dataset.Builder"
  langs:
  - "java"
  name: "setLabels(Map<String,String> labels)"
  nameWithType: "Dataset.Builder.setLabels(Map<String,String> labels)"
  fullName: "com.google.cloud.bigquery.Dataset.Builder.setLabels(Map<String,String> labels)"
  overload: "com.google.cloud.bigquery.Dataset.Builder.setLabels*"
  overridden: "com.google.cloud.bigquery.DatasetInfo.Builder.setLabels(java.util.Map<java.lang.String,java.lang.String>)"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public Dataset.Builder setLabels(Map<String,String> labels)"
    parameters:
    - id: "labels"
      type: "java.util.Map<java.lang.String,java.lang.String>"
    return:
      type: "com.google.cloud.bigquery.Dataset.Builder"
- uid: "com.google.cloud.bigquery.Dataset.Builder.setLocation(java.lang.String)"
  id: "setLocation(java.lang.String)"
  parent: "com.google.cloud.bigquery.Dataset.Builder"
  langs:
  - "java"
  name: "setLocation(String location)"
  nameWithType: "Dataset.Builder.setLocation(String location)"
  fullName: "com.google.cloud.bigquery.Dataset.Builder.setLocation(String location)"
  overload: "com.google.cloud.bigquery.Dataset.Builder.setLocation*"
  overridden: "com.google.cloud.bigquery.DatasetInfo.Builder.setLocation(java.lang.String)"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Sets the geographic location where the dataset should reside. This property is experimental and might be subject to change or removed."
  syntax:
    content: "public Dataset.Builder setLocation(String location)"
    parameters:
    - id: "location"
      type: "java.lang.String"
    return:
      type: "com.google.cloud.bigquery.Dataset.Builder"
references:
- uid: "com.google.cloud.bigquery.BigQuery"
  name: "BigQuery"
  nameWithType: "BigQuery"
  fullName: "com.google.cloud.bigquery.BigQuery"
- uid: "com.google.cloud.bigquery.DatasetId"
  name: "DatasetId"
  nameWithType: "DatasetId"
  fullName: "com.google.cloud.bigquery.DatasetId"
- uid: "com.google.cloud.bigquery.Dataset.Builder.Builder*"
  name: "Builder"
  nameWithType: "Dataset.Builder.Builder"
  fullName: "com.google.cloud.bigquery.Dataset.Builder.Builder"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.Dataset"
  name: "Dataset"
  nameWithType: "Dataset"
  fullName: "com.google.cloud.bigquery.Dataset"
- uid: "com.google.cloud.bigquery.Dataset.Builder.setDatasetId*"
  name: "setDatasetId"
  nameWithType: "Dataset.Builder.setDatasetId"
  fullName: "com.google.cloud.bigquery.Dataset.Builder.setDatasetId"
  package: "com.google.cloud.bigquery"
- uid: "java.util.List<com.google.cloud.bigquery.Acl>"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "com.google.cloud.bigquery.Acl"
    name: "Acl"
    fullName: "com.google.cloud.bigquery.Acl"
  - name: ">"
    fullName: ">"
- uid: "com.google.cloud.bigquery.Dataset.Builder.setAcl*"
  name: "setAcl"
  nameWithType: "Dataset.Builder.setAcl"
  fullName: "com.google.cloud.bigquery.Dataset.Builder.setAcl"
  package: "com.google.cloud.bigquery"
- uid: "java.lang.Long"
  spec.java:
  - uid: "java.lang.Long"
    name: "Long"
    fullName: "java.lang.Long"
- uid: "com.google.cloud.bigquery.Dataset.Builder.setDefaultTableLifetime*"
  name: "setDefaultTableLifetime"
  nameWithType: "Dataset.Builder.setDefaultTableLifetime"
  fullName: "com.google.cloud.bigquery.Dataset.Builder.setDefaultTableLifetime"
  package: "com.google.cloud.bigquery"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.google.cloud.bigquery.Dataset.Builder.setDescription*"
  name: "setDescription"
  nameWithType: "Dataset.Builder.setDescription"
  fullName: "com.google.cloud.bigquery.Dataset.Builder.setDescription"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.Dataset.Builder.setFriendlyName*"
  name: "setFriendlyName"
  nameWithType: "Dataset.Builder.setFriendlyName"
  fullName: "com.google.cloud.bigquery.Dataset.Builder.setFriendlyName"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.Dataset.Builder.setLocation*"
  name: "setLocation"
  nameWithType: "Dataset.Builder.setLocation"
  fullName: "com.google.cloud.bigquery.Dataset.Builder.setLocation"
  package: "com.google.cloud.bigquery"
- uid: "java.util.Map<java.lang.String,java.lang.String>"
  spec.java:
  - uid: "java.util.Map"
    name: "Map"
    fullName: "java.util.Map"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ","
    fullName: ","
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ">"
    fullName: ">"
- uid: "com.google.cloud.bigquery.Dataset.Builder.setLabels*"
  name: "setLabels"
  nameWithType: "Dataset.Builder.setLabels"
  fullName: "com.google.cloud.bigquery.Dataset.Builder.setLabels"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.EncryptionConfiguration"
  name: "EncryptionConfiguration"
  nameWithType: "EncryptionConfiguration"
  fullName: "com.google.cloud.bigquery.EncryptionConfiguration"
- uid: "com.google.cloud.bigquery.Dataset.Builder.setDefaultEncryptionConfiguration*"
  name: "setDefaultEncryptionConfiguration"
  nameWithType: "Dataset.Builder.setDefaultEncryptionConfiguration"
  fullName: "com.google.cloud.bigquery.Dataset.Builder.setDefaultEncryptionConfiguration"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.Dataset.Builder.setDefaultPartitionExpirationMs*"
  name: "setDefaultPartitionExpirationMs"
  nameWithType: "Dataset.Builder.setDefaultPartitionExpirationMs"
  fullName: "com.google.cloud.bigquery.Dataset.Builder.setDefaultPartitionExpirationMs"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.Dataset.Builder.build*"
  name: "build"
  nameWithType: "Dataset.Builder.build"
  fullName: "com.google.cloud.bigquery.Dataset.Builder.build"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.DatasetInfo.Builder"
  name: "DatasetInfo.Builder"
  nameWithType: "DatasetInfo.Builder"
  fullName: "com.google.cloud.bigquery.DatasetInfo.Builder"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "com.google.cloud.bigquery.DatasetInfo.Builder.build()"
  name: "DatasetInfo.Builder.build()"
  nameWithType: "DatasetInfo.Builder.build()"
  fullName: "com.google.cloud.bigquery.DatasetInfo.Builder.build()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "com.google.cloud.bigquery.DatasetInfo.Builder.setAcl(java.util.List<com.google.cloud.bigquery.Acl>)"
  name: "DatasetInfo.Builder.setAcl(List<Acl>)"
  nameWithType: "DatasetInfo.Builder.setAcl(List<Acl>)"
  fullName: "com.google.cloud.bigquery.DatasetInfo.Builder.setAcl(java.util.List<com.google.cloud.bigquery.Acl>)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "com.google.cloud.bigquery.DatasetInfo.Builder.setFriendlyName(java.lang.String)"
  name: "DatasetInfo.Builder.setFriendlyName(String)"
  nameWithType: "DatasetInfo.Builder.setFriendlyName(String)"
  fullName: "com.google.cloud.bigquery.DatasetInfo.Builder.setFriendlyName(java.lang.String)"
- uid: "com.google.cloud.bigquery.DatasetInfo.Builder.setDefaultPartitionExpirationMs(java.lang.Long)"
  name: "DatasetInfo.Builder.setDefaultPartitionExpirationMs(Long)"
  nameWithType: "DatasetInfo.Builder.setDefaultPartitionExpirationMs(Long)"
  fullName: "com.google.cloud.bigquery.DatasetInfo.Builder.setDefaultPartitionExpirationMs(java.lang.Long)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "com.google.cloud.bigquery.DatasetInfo.Builder.setLabels(java.util.Map<java.lang.String,java.lang.String>)"
  name: "DatasetInfo.Builder.setLabels(Map<String,String>)"
  nameWithType: "DatasetInfo.Builder.setLabels(Map<String,String>)"
  fullName: "com.google.cloud.bigquery.DatasetInfo.Builder.setLabels(java.util.Map<java.lang.String,java.lang.String>)"
- uid: "com.google.cloud.bigquery.DatasetInfo.Builder.setDatasetId(com.google.cloud.bigquery.DatasetId)"
  name: "DatasetInfo.Builder.setDatasetId(DatasetId)"
  nameWithType: "DatasetInfo.Builder.setDatasetId(DatasetId)"
  fullName: "com.google.cloud.bigquery.DatasetInfo.Builder.setDatasetId(com.google.cloud.bigquery.DatasetId)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "com.google.cloud.bigquery.DatasetInfo.Builder.setDefaultEncryptionConfiguration(com.google.cloud.bigquery.EncryptionConfiguration)"
  name: "DatasetInfo.Builder.setDefaultEncryptionConfiguration(EncryptionConfiguration)"
  nameWithType: "DatasetInfo.Builder.setDefaultEncryptionConfiguration(EncryptionConfiguration)"
  fullName: "com.google.cloud.bigquery.DatasetInfo.Builder.setDefaultEncryptionConfiguration(com.google.cloud.bigquery.EncryptionConfiguration)"
- uid: "com.google.cloud.bigquery.DatasetInfo.Builder.setDefaultTableLifetime(java.lang.Long)"
  name: "DatasetInfo.Builder.setDefaultTableLifetime(Long)"
  nameWithType: "DatasetInfo.Builder.setDefaultTableLifetime(Long)"
  fullName: "com.google.cloud.bigquery.DatasetInfo.Builder.setDefaultTableLifetime(java.lang.Long)"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "com.google.cloud.bigquery.DatasetInfo.Builder.setDescription(java.lang.String)"
  name: "DatasetInfo.Builder.setDescription(String)"
  nameWithType: "DatasetInfo.Builder.setDescription(String)"
  fullName: "com.google.cloud.bigquery.DatasetInfo.Builder.setDescription(java.lang.String)"
- uid: "com.google.cloud.bigquery.DatasetInfo.Builder.setLocation(java.lang.String)"
  name: "DatasetInfo.Builder.setLocation(String)"
  nameWithType: "DatasetInfo.Builder.setLocation(String)"
  fullName: "com.google.cloud.bigquery.DatasetInfo.Builder.setLocation(java.lang.String)"
- uid: "java.util.List"
  name: "List"
  nameWithType: "List"
  fullName: "java.util.List"
- uid: "com.google.cloud.bigquery.Acl"
  name: "Acl"
  nameWithType: "Acl"
  fullName: "com.google.cloud.bigquery.Acl"
- uid: "java.util.Map"
  name: "Map"
  nameWithType: "Map"
  fullName: "java.util.Map"
- uid: "java.lang.String,java.lang.String"
  name: "String,String"
  nameWithType: "String,String"
  fullName: "java.lang.String,java.lang.String"
- uid: "com.google.cloud.bigquery.Acl>)"
  name: "Acl>)"
  nameWithType: "Acl>)"
  fullName: "com.google.cloud.bigquery.Acl>)"
- uid: "com.google.cloud.bigquery.DatasetInfo.Builder.setAcl(java.util.List"
  name: "DatasetInfo.Builder.setAcl(List"
  nameWithType: "DatasetInfo.Builder.setAcl(List"
  fullName: "com.google.cloud.bigquery.DatasetInfo.Builder.setAcl(java.util.List"
- uid: "java.lang.String,java.lang.String>)"
  name: "String,String>)"
  nameWithType: "String,String>)"
  fullName: "java.lang.String,java.lang.String>)"
- uid: "com.google.cloud.bigquery.DatasetInfo.Builder.setLabels(java.util.Map"
  name: "DatasetInfo.Builder.setLabels(Map"
  nameWithType: "DatasetInfo.Builder.setLabels(Map"
  fullName: "com.google.cloud.bigquery.DatasetInfo.Builder.setLabels(java.util.Map"
