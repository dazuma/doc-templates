### YamlMime:ManagedReference
items:
- uid: "com.google.cloud.bigquery.JobConfiguration.Builder"
  id: "Builder"
  parent: "com.google.cloud.bigquery"
  children:
  - "com.google.cloud.bigquery.JobConfiguration.Builder.build()"
  langs:
  - "java"
  name: "JobConfiguration.Builder<T,B>"
  nameWithType: "JobConfiguration.Builder<T,B>"
  fullName: "com.google.cloud.bigquery.JobConfiguration.Builder<T,B>"
  type: "Class"
  package: "com.google.cloud.bigquery"
  summary: "Base builder for job configurations."
  syntax:
    content: "public abstract static class JobConfiguration.Builder<T,B>"
    typeParameters:
    - id: "T"
    - id: "B"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.google.cloud.bigquery.JobConfiguration.Builder.Builder(com.google.cloud.bigquery.JobConfiguration.Type)"
  id: "Builder(com.google.cloud.bigquery.JobConfiguration.Type)"
  parent: "com.google.cloud.bigquery.JobConfiguration.Builder"
  langs:
  - "java"
  name: "Builder(JobConfiguration.Type type)"
  nameWithType: "JobConfiguration.Builder<T,B>.Builder(JobConfiguration.Type type)"
  fullName: "com.google.cloud.bigquery.JobConfiguration.Builder<T,B>.Builder(JobConfiguration.Type type)"
  overload: "com.google.cloud.bigquery.JobConfiguration.Builder.Builder*"
  type: "Constructor"
  package: "com.google.cloud.bigquery"
  syntax:
    content: " Builder(JobConfiguration.Type type)"
    parameters:
    - id: "type"
      type: "com.google.cloud.bigquery.JobConfiguration.Type"
- uid: "com.google.cloud.bigquery.JobConfiguration.Builder.build()"
  id: "build()"
  parent: "com.google.cloud.bigquery.JobConfiguration.Builder"
  langs:
  - "java"
  name: "build()"
  nameWithType: "JobConfiguration.Builder<T,B>.build()"
  fullName: "com.google.cloud.bigquery.JobConfiguration.Builder<T,B>.build()"
  overload: "com.google.cloud.bigquery.JobConfiguration.Builder.build*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Creates an object."
  syntax:
    content: "public abstract T build()"
    return:
      type: "T"
references:
- uid: "com.google.cloud.bigquery.JobConfiguration.Type"
  name: "JobConfiguration.Type"
  nameWithType: "JobConfiguration.Type"
  fullName: "com.google.cloud.bigquery.JobConfiguration.Type"
- uid: "com.google.cloud.bigquery.JobConfiguration.Builder.Builder*"
  name: "Builder"
  nameWithType: "JobConfiguration.Builder<T,B>.Builder"
  fullName: "com.google.cloud.bigquery.JobConfiguration.Builder<T,B>.Builder"
  package: "com.google.cloud.bigquery"
- uid: "T"
  spec.java:
  - uid: "T"
    name: "T"
    fullName: "T"
- uid: "com.google.cloud.bigquery.JobConfiguration.Builder.build*"
  name: "build"
  nameWithType: "JobConfiguration.Builder<T,B>.build"
  fullName: "com.google.cloud.bigquery.JobConfiguration.Builder<T,B>.build"
  package: "com.google.cloud.bigquery"
- uid: "B"
  name: "B"
  nameWithType: "B"
  fullName: "B"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
