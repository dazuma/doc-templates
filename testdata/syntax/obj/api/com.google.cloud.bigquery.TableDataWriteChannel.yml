### YamlMime:ManagedReference
items:
- uid: "com.google.cloud.bigquery.TableDataWriteChannel"
  id: "TableDataWriteChannel"
  parent: "com.google.cloud.bigquery"
  children:
  - "com.google.cloud.bigquery.TableDataWriteChannel.flushBuffer(int,boolean)"
  - "com.google.cloud.bigquery.TableDataWriteChannel.getJob()"
  - "com.google.cloud.bigquery.TableDataWriteChannel.stateBuilder()"
  langs:
  - "java"
  name: "TableDataWriteChannel"
  nameWithType: "TableDataWriteChannel"
  fullName: "com.google.cloud.bigquery.TableDataWriteChannel"
  type: "Class"
  package: "com.google.cloud.bigquery"
  summary: "<xref uid=\"\" data-throw-if-not-resolved=\"false\">WriteChannel</xref> implementation to stream data into a BigQuery table. Use <xref uid=\"com.google.cloud.bigquery.TableDataWriteChannel.getJob()\" data-throw-if-not-resolved=\"false\">#getJob()</xref> to get the job used to insert streamed data. Please notice that <xref uid=\"com.google.cloud.bigquery.TableDataWriteChannel.getJob()\" data-throw-if-not-resolved=\"false\">#getJob()</xref> returns `null` until the channel is closed."
  syntax:
    content: "public class TableDataWriteChannel extends BaseWriteChannel<BigQueryOptions,WriteChannelConfiguration>"
  inheritance:
  - "java.lang.Object"
  - "com.google.cloud.BaseWriteChannel"
  inheritedMembers:
  - "com.google.cloud.BaseWriteChannel.capture()"
  - "com.google.cloud.BaseWriteChannel.close()"
  - "com.google.cloud.BaseWriteChannel.flushBuffer(int,boolean)"
  - "com.google.cloud.BaseWriteChannel.getBuffer()"
  - "com.google.cloud.BaseWriteChannel.getChunkSize()"
  - "com.google.cloud.BaseWriteChannel.getDefaultChunkSize()"
  - "com.google.cloud.BaseWriteChannel.getEntity()"
  - "com.google.cloud.BaseWriteChannel.getLimit()"
  - "com.google.cloud.BaseWriteChannel.getMinChunkSize()"
  - "com.google.cloud.BaseWriteChannel.getOptions()"
  - "com.google.cloud.BaseWriteChannel.getPosition()"
  - "com.google.cloud.BaseWriteChannel.getUploadId()"
  - "com.google.cloud.BaseWriteChannel.isOpen()"
  - "com.google.cloud.BaseWriteChannel.restore(com.google.cloud.BaseWriteChannel.BaseState)"
  - "com.google.cloud.BaseWriteChannel.setChunkSize(int)"
  - "com.google.cloud.BaseWriteChannel.stateBuilder()"
  - "com.google.cloud.BaseWriteChannel.write(java.nio.ByteBuffer)"
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.google.cloud.bigquery.TableDataWriteChannel.TableDataWriteChannel(com.google.cloud.bigquery.BigQueryOptions,com.google.cloud.bigquery.JobId,com.google.cloud.bigquery.WriteChannelConfiguration)"
  id: "TableDataWriteChannel(com.google.cloud.bigquery.BigQueryOptions,com.google.cloud.bigquery.JobId,com.google.cloud.bigquery.WriteChannelConfiguration)"
  parent: "com.google.cloud.bigquery.TableDataWriteChannel"
  langs:
  - "java"
  name: "TableDataWriteChannel(BigQueryOptions options, JobId jobId, WriteChannelConfiguration writeChannelConfiguration)"
  nameWithType: "TableDataWriteChannel.TableDataWriteChannel(BigQueryOptions options, JobId jobId, WriteChannelConfiguration writeChannelConfiguration)"
  fullName: "com.google.cloud.bigquery.TableDataWriteChannel.TableDataWriteChannel(BigQueryOptions options, JobId jobId, WriteChannelConfiguration writeChannelConfiguration)"
  overload: "com.google.cloud.bigquery.TableDataWriteChannel.TableDataWriteChannel*"
  type: "Constructor"
  package: "com.google.cloud.bigquery"
  syntax:
    content: " TableDataWriteChannel(BigQueryOptions options, JobId jobId, WriteChannelConfiguration writeChannelConfiguration)"
    parameters:
    - id: "options"
      type: "com.google.cloud.bigquery.BigQueryOptions"
    - id: "jobId"
      type: "com.google.cloud.bigquery.JobId"
    - id: "writeChannelConfiguration"
      type: "com.google.cloud.bigquery.WriteChannelConfiguration"
- uid: "com.google.cloud.bigquery.TableDataWriteChannel.TableDataWriteChannel(com.google.cloud.bigquery.BigQueryOptions,com.google.cloud.bigquery.WriteChannelConfiguration,java.lang.String)"
  id: "TableDataWriteChannel(com.google.cloud.bigquery.BigQueryOptions,com.google.cloud.bigquery.WriteChannelConfiguration,java.lang.String)"
  parent: "com.google.cloud.bigquery.TableDataWriteChannel"
  langs:
  - "java"
  name: "TableDataWriteChannel(BigQueryOptions options, WriteChannelConfiguration config, String uploadId)"
  nameWithType: "TableDataWriteChannel.TableDataWriteChannel(BigQueryOptions options, WriteChannelConfiguration config, String uploadId)"
  fullName: "com.google.cloud.bigquery.TableDataWriteChannel.TableDataWriteChannel(BigQueryOptions options, WriteChannelConfiguration config, String uploadId)"
  overload: "com.google.cloud.bigquery.TableDataWriteChannel.TableDataWriteChannel*"
  type: "Constructor"
  package: "com.google.cloud.bigquery"
  syntax:
    content: " TableDataWriteChannel(BigQueryOptions options, WriteChannelConfiguration config, String uploadId)"
    parameters:
    - id: "options"
      type: "com.google.cloud.bigquery.BigQueryOptions"
    - id: "config"
      type: "com.google.cloud.bigquery.WriteChannelConfiguration"
    - id: "uploadId"
      type: "java.lang.String"
- uid: "com.google.cloud.bigquery.TableDataWriteChannel.flushBuffer(int,boolean)"
  id: "flushBuffer(int,boolean)"
  parent: "com.google.cloud.bigquery.TableDataWriteChannel"
  langs:
  - "java"
  name: "flushBuffer(int length, boolean last)"
  nameWithType: "TableDataWriteChannel.flushBuffer(int length, boolean last)"
  fullName: "com.google.cloud.bigquery.TableDataWriteChannel.flushBuffer(int length, boolean last)"
  overload: "com.google.cloud.bigquery.TableDataWriteChannel.flushBuffer*"
  overridden: "com.google.cloud.BaseWriteChannel.flushBuffer(int,boolean)"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "protected void flushBuffer(int length, boolean last)"
    parameters:
    - id: "length"
      type: "int"
    - id: "last"
      type: "boolean"
- uid: "com.google.cloud.bigquery.TableDataWriteChannel.getJob()"
  id: "getJob()"
  parent: "com.google.cloud.bigquery.TableDataWriteChannel"
  langs:
  - "java"
  name: "getJob()"
  nameWithType: "TableDataWriteChannel.getJob()"
  fullName: "com.google.cloud.bigquery.TableDataWriteChannel.getJob()"
  overload: "com.google.cloud.bigquery.TableDataWriteChannel.getJob*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns the `Job` created to insert the rows. The job is available only once the upload finished and the channel was closed, returns `null` otherwise."
  syntax:
    content: "public Job getJob()"
    return:
      type: "com.google.cloud.bigquery.Job"
- uid: "com.google.cloud.bigquery.TableDataWriteChannel.stateBuilder()"
  id: "stateBuilder()"
  parent: "com.google.cloud.bigquery.TableDataWriteChannel"
  langs:
  - "java"
  name: "stateBuilder()"
  nameWithType: "TableDataWriteChannel.stateBuilder()"
  fullName: "com.google.cloud.bigquery.TableDataWriteChannel.stateBuilder()"
  overload: "com.google.cloud.bigquery.TableDataWriteChannel.stateBuilder*"
  overridden: "com.google.cloud.BaseWriteChannel.stateBuilder()"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "protected TableDataWriteChannel.StateImpl.Builder stateBuilder()"
    return:
      type: "com.google.cloud.bigquery.TableDataWriteChannel.StateImpl.Builder"
references:
- uid: "com.google.cloud.bigquery.BigQueryOptions"
  name: "BigQueryOptions"
  nameWithType: "BigQueryOptions"
  fullName: "com.google.cloud.bigquery.BigQueryOptions"
- uid: "com.google.cloud.bigquery.JobId"
  name: "JobId"
  nameWithType: "JobId"
  fullName: "com.google.cloud.bigquery.JobId"
- uid: "com.google.cloud.bigquery.WriteChannelConfiguration"
  name: "WriteChannelConfiguration"
  nameWithType: "WriteChannelConfiguration"
  fullName: "com.google.cloud.bigquery.WriteChannelConfiguration"
- uid: "com.google.cloud.bigquery.TableDataWriteChannel.TableDataWriteChannel*"
  name: "TableDataWriteChannel"
  nameWithType: "TableDataWriteChannel.TableDataWriteChannel"
  fullName: "com.google.cloud.bigquery.TableDataWriteChannel.TableDataWriteChannel"
  package: "com.google.cloud.bigquery"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "com.google.cloud.bigquery.TableDataWriteChannel.flushBuffer*"
  name: "flushBuffer"
  nameWithType: "TableDataWriteChannel.flushBuffer"
  fullName: "com.google.cloud.bigquery.TableDataWriteChannel.flushBuffer"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.TableDataWriteChannel.StateImpl.Builder"
  spec.java:
  - uid: "com.google.cloud.bigquery.TableDataWriteChannel.StateImpl.Builder"
    name: "Builder"
    fullName: "com.google.cloud.bigquery.TableDataWriteChannel.StateImpl.Builder"
- uid: "com.google.cloud.bigquery.TableDataWriteChannel.stateBuilder*"
  name: "stateBuilder"
  nameWithType: "TableDataWriteChannel.stateBuilder"
  fullName: "com.google.cloud.bigquery.TableDataWriteChannel.stateBuilder"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.Job"
  name: "Job"
  nameWithType: "Job"
  fullName: "com.google.cloud.bigquery.Job"
- uid: "com.google.cloud.bigquery.TableDataWriteChannel.getJob*"
  name: "getJob"
  nameWithType: "TableDataWriteChannel.getJob"
  fullName: "com.google.cloud.bigquery.TableDataWriteChannel.getJob"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.BaseWriteChannel<com.google.cloud.bigquery.BigQueryOptions,com.google.cloud.bigquery.WriteChannelConfiguration>"
  name: "BaseWriteChannel<BigQueryOptions,WriteChannelConfiguration>"
  nameWithType: "BaseWriteChannel<BigQueryOptions,WriteChannelConfiguration>"
  fullName: "com.google.cloud.BaseWriteChannel<com.google.cloud.bigquery.BigQueryOptions,com.google.cloud.bigquery.WriteChannelConfiguration>"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "com.google.cloud.BaseWriteChannel.setChunkSize(int)"
  name: "BaseWriteChannel.setChunkSize(int)"
  nameWithType: "BaseWriteChannel.setChunkSize(int)"
  fullName: "com.google.cloud.BaseWriteChannel.setChunkSize(int)"
- uid: "com.google.cloud.BaseWriteChannel.getChunkSize()"
  name: "BaseWriteChannel.getChunkSize()"
  nameWithType: "BaseWriteChannel.getChunkSize()"
  fullName: "com.google.cloud.BaseWriteChannel.getChunkSize()"
- uid: "com.google.cloud.BaseWriteChannel.close()"
  name: "BaseWriteChannel.close()"
  nameWithType: "BaseWriteChannel.close()"
  fullName: "com.google.cloud.BaseWriteChannel.close()"
- uid: "com.google.cloud.BaseWriteChannel.capture()"
  name: "BaseWriteChannel.capture()"
  nameWithType: "BaseWriteChannel.capture()"
  fullName: "com.google.cloud.BaseWriteChannel.capture()"
- uid: "com.google.cloud.BaseWriteChannel.getUploadId()"
  name: "BaseWriteChannel.getUploadId()"
  nameWithType: "BaseWriteChannel.getUploadId()"
  fullName: "com.google.cloud.BaseWriteChannel.getUploadId()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "com.google.cloud.BaseWriteChannel.restore(com.google.cloud.BaseWriteChannel.BaseState)"
  name: "BaseWriteChannel.restore(BaseWriteChannel.BaseState)"
  nameWithType: "BaseWriteChannel.restore(BaseWriteChannel.BaseState)"
  fullName: "com.google.cloud.BaseWriteChannel.restore(com.google.cloud.BaseWriteChannel.BaseState)"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "com.google.cloud.BaseWriteChannel.getEntity()"
  name: "BaseWriteChannel.getEntity()"
  nameWithType: "BaseWriteChannel.getEntity()"
  fullName: "com.google.cloud.BaseWriteChannel.getEntity()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "com.google.cloud.BaseWriteChannel.getLimit()"
  name: "BaseWriteChannel.getLimit()"
  nameWithType: "BaseWriteChannel.getLimit()"
  fullName: "com.google.cloud.BaseWriteChannel.getLimit()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "com.google.cloud.BaseWriteChannel.isOpen()"
  name: "BaseWriteChannel.isOpen()"
  nameWithType: "BaseWriteChannel.isOpen()"
  fullName: "com.google.cloud.BaseWriteChannel.isOpen()"
- uid: "com.google.cloud.BaseWriteChannel.getPosition()"
  name: "BaseWriteChannel.getPosition()"
  nameWithType: "BaseWriteChannel.getPosition()"
  fullName: "com.google.cloud.BaseWriteChannel.getPosition()"
- uid: "com.google.cloud.BaseWriteChannel.getBuffer()"
  name: "BaseWriteChannel.getBuffer()"
  nameWithType: "BaseWriteChannel.getBuffer()"
  fullName: "com.google.cloud.BaseWriteChannel.getBuffer()"
- uid: "com.google.cloud.BaseWriteChannel.flushBuffer(int,boolean)"
  name: "BaseWriteChannel.flushBuffer(int,boolean)"
  nameWithType: "BaseWriteChannel.flushBuffer(int,boolean)"
  fullName: "com.google.cloud.BaseWriteChannel.flushBuffer(int,boolean)"
- uid: "com.google.cloud.BaseWriteChannel.getOptions()"
  name: "BaseWriteChannel.getOptions()"
  nameWithType: "BaseWriteChannel.getOptions()"
  fullName: "com.google.cloud.BaseWriteChannel.getOptions()"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "com.google.cloud.BaseWriteChannel.getDefaultChunkSize()"
  name: "BaseWriteChannel.getDefaultChunkSize()"
  nameWithType: "BaseWriteChannel.getDefaultChunkSize()"
  fullName: "com.google.cloud.BaseWriteChannel.getDefaultChunkSize()"
- uid: "com.google.cloud.BaseWriteChannel.write(java.nio.ByteBuffer)"
  name: "BaseWriteChannel.write(ByteBuffer)"
  nameWithType: "BaseWriteChannel.write(ByteBuffer)"
  fullName: "com.google.cloud.BaseWriteChannel.write(java.nio.ByteBuffer)"
- uid: "com.google.cloud.BaseWriteChannel.getMinChunkSize()"
  name: "BaseWriteChannel.getMinChunkSize()"
  nameWithType: "BaseWriteChannel.getMinChunkSize()"
  fullName: "com.google.cloud.BaseWriteChannel.getMinChunkSize()"
- uid: "com.google.cloud.BaseWriteChannel.stateBuilder()"
  name: "BaseWriteChannel.stateBuilder()"
  nameWithType: "BaseWriteChannel.stateBuilder()"
  fullName: "com.google.cloud.BaseWriteChannel.stateBuilder()"
- uid: "com.google.cloud.bigquery.BigQueryOptions,com.google.cloud.bigquery.WriteChannelConfiguration"
  name: "BigQueryOptions,WriteChannelConfiguration"
  nameWithType: "BigQueryOptions,WriteChannelConfiguration"
  fullName: "com.google.cloud.bigquery.BigQueryOptions,com.google.cloud.bigquery.WriteChannelConfiguration"
- uid: "com.google.cloud.BaseWriteChannel"
  name: "BaseWriteChannel"
  nameWithType: "BaseWriteChannel"
  fullName: "com.google.cloud.BaseWriteChannel"
