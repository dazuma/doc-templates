### YamlMime:ManagedReference
items:
- uid: "com.google.cloud.bigquery.ViewDefinition.Builder"
  id: "Builder"
  parent: "com.google.cloud.bigquery"
  children:
  - "com.google.cloud.bigquery.ViewDefinition.Builder.Builder()"
  - "com.google.cloud.bigquery.ViewDefinition.Builder.build()"
  - "com.google.cloud.bigquery.ViewDefinition.Builder.setQuery(java.lang.String)"
  - "com.google.cloud.bigquery.ViewDefinition.Builder.setSchema(com.google.cloud.bigquery.Schema)"
  - "com.google.cloud.bigquery.ViewDefinition.Builder.setType(com.google.cloud.bigquery.TableDefinition.Type)"
  - "com.google.cloud.bigquery.ViewDefinition.Builder.setUseLegacySql(java.lang.Boolean)"
  - "com.google.cloud.bigquery.ViewDefinition.Builder.setUserDefinedFunctions(com.google.cloud.bigquery.UserDefinedFunction...)"
  - "com.google.cloud.bigquery.ViewDefinition.Builder.setUserDefinedFunctions(java.util.List<com.google.cloud.bigquery.UserDefinedFunction>)"
  langs:
  - "java"
  name: "ViewDefinition.Builder"
  nameWithType: "ViewDefinition.Builder"
  fullName: "com.google.cloud.bigquery.ViewDefinition.Builder"
  type: "Class"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public abstract static class ViewDefinition.Builder extends TableDefinition.Builder<ViewDefinition,ViewDefinition.Builder>"
  inheritance:
  - "java.lang.Object"
  - "com.google.cloud.bigquery.TableDefinition.Builder"
  inheritedMembers:
  - "com.google.cloud.bigquery.TableDefinition.Builder.build()"
  - "com.google.cloud.bigquery.TableDefinition.Builder.setSchema(com.google.cloud.bigquery.Schema)"
  - "com.google.cloud.bigquery.TableDefinition.Builder.setType(com.google.cloud.bigquery.TableDefinition.Type)"
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.google.cloud.bigquery.ViewDefinition.Builder.Builder()"
  id: "Builder()"
  parent: "com.google.cloud.bigquery.ViewDefinition.Builder"
  langs:
  - "java"
  name: "Builder()"
  nameWithType: "ViewDefinition.Builder.Builder()"
  fullName: "com.google.cloud.bigquery.ViewDefinition.Builder.Builder()"
  overload: "com.google.cloud.bigquery.ViewDefinition.Builder.Builder*"
  type: "Constructor"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public Builder()"
- uid: "com.google.cloud.bigquery.ViewDefinition.Builder.build()"
  id: "build()"
  parent: "com.google.cloud.bigquery.ViewDefinition.Builder"
  langs:
  - "java"
  name: "build()"
  nameWithType: "ViewDefinition.Builder.build()"
  fullName: "com.google.cloud.bigquery.ViewDefinition.Builder.build()"
  overload: "com.google.cloud.bigquery.ViewDefinition.Builder.build*"
  overridden: "com.google.cloud.bigquery.TableDefinition.Builder.build()"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Creates a `ViewDefinition` object."
  syntax:
    content: "public abstract ViewDefinition build()"
    return:
      type: "com.google.cloud.bigquery.ViewDefinition"
- uid: "com.google.cloud.bigquery.ViewDefinition.Builder.setQuery(java.lang.String)"
  id: "setQuery(java.lang.String)"
  parent: "com.google.cloud.bigquery.ViewDefinition.Builder"
  langs:
  - "java"
  name: "setQuery(String query)"
  nameWithType: "ViewDefinition.Builder.setQuery(String query)"
  fullName: "com.google.cloud.bigquery.ViewDefinition.Builder.setQuery(String query)"
  overload: "com.google.cloud.bigquery.ViewDefinition.Builder.setQuery*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Sets the query used to create the view."
  syntax:
    content: "public abstract ViewDefinition.Builder setQuery(String query)"
    parameters:
    - id: "query"
      type: "java.lang.String"
    return:
      type: "com.google.cloud.bigquery.ViewDefinition.Builder"
- uid: "com.google.cloud.bigquery.ViewDefinition.Builder.setSchema(com.google.cloud.bigquery.Schema)"
  id: "setSchema(com.google.cloud.bigquery.Schema)"
  parent: "com.google.cloud.bigquery.ViewDefinition.Builder"
  langs:
  - "java"
  name: "setSchema(Schema schema)"
  nameWithType: "ViewDefinition.Builder.setSchema(Schema schema)"
  fullName: "com.google.cloud.bigquery.ViewDefinition.Builder.setSchema(Schema schema)"
  overload: "com.google.cloud.bigquery.ViewDefinition.Builder.setSchema*"
  overridden: "com.google.cloud.bigquery.TableDefinition.Builder.setSchema(com.google.cloud.bigquery.Schema)"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Sets the table schema."
  syntax:
    content: "public abstract ViewDefinition.Builder setSchema(Schema schema)"
    parameters:
    - id: "schema"
      type: "com.google.cloud.bigquery.Schema"
    return:
      type: "com.google.cloud.bigquery.ViewDefinition.Builder"
- uid: "com.google.cloud.bigquery.ViewDefinition.Builder.setType(com.google.cloud.bigquery.TableDefinition.Type)"
  id: "setType(com.google.cloud.bigquery.TableDefinition.Type)"
  parent: "com.google.cloud.bigquery.ViewDefinition.Builder"
  langs:
  - "java"
  name: "setType(TableDefinition.Type type)"
  nameWithType: "ViewDefinition.Builder.setType(TableDefinition.Type type)"
  fullName: "com.google.cloud.bigquery.ViewDefinition.Builder.setType(TableDefinition.Type type)"
  overload: "com.google.cloud.bigquery.ViewDefinition.Builder.setType*"
  overridden: "com.google.cloud.bigquery.TableDefinition.Builder.setType(com.google.cloud.bigquery.TableDefinition.Type)"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public abstract ViewDefinition.Builder setType(TableDefinition.Type type)"
    parameters:
    - id: "type"
      type: "com.google.cloud.bigquery.TableDefinition.Type"
    return:
      type: "com.google.cloud.bigquery.ViewDefinition.Builder"
- uid: "com.google.cloud.bigquery.ViewDefinition.Builder.setUseLegacySql(java.lang.Boolean)"
  id: "setUseLegacySql(java.lang.Boolean)"
  parent: "com.google.cloud.bigquery.ViewDefinition.Builder"
  langs:
  - "java"
  name: "setUseLegacySql(Boolean useLegacySql)"
  nameWithType: "ViewDefinition.Builder.setUseLegacySql(Boolean useLegacySql)"
  fullName: "com.google.cloud.bigquery.ViewDefinition.Builder.setUseLegacySql(Boolean useLegacySql)"
  overload: "com.google.cloud.bigquery.ViewDefinition.Builder.setUseLegacySql*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Sets whether to use BigQuery's legacy SQL dialect for this query. By default this property is set to `false`. If set to `false`, the query will use BigQuery's [Standard SQL][].\n\nIf set to `null` or `true`, legacy SQL dialect is used. This property is experimental and might be subject to change.\n\n\n[Standard SQL]: https://cloud.google.com/bigquery/sql-reference/"
  syntax:
    content: "public abstract ViewDefinition.Builder setUseLegacySql(Boolean useLegacySql)"
    parameters:
    - id: "useLegacySql"
      type: "java.lang.Boolean"
    return:
      type: "com.google.cloud.bigquery.ViewDefinition.Builder"
- uid: "com.google.cloud.bigquery.ViewDefinition.Builder.setUserDefinedFunctions(com.google.cloud.bigquery.UserDefinedFunction...)"
  id: "setUserDefinedFunctions(com.google.cloud.bigquery.UserDefinedFunction...)"
  parent: "com.google.cloud.bigquery.ViewDefinition.Builder"
  langs:
  - "java"
  name: "setUserDefinedFunctions(UserDefinedFunction[] userDefinedFunctions)"
  nameWithType: "ViewDefinition.Builder.setUserDefinedFunctions(UserDefinedFunction[] userDefinedFunctions)"
  fullName: "com.google.cloud.bigquery.ViewDefinition.Builder.setUserDefinedFunctions(UserDefinedFunction[] userDefinedFunctions)"
  overload: "com.google.cloud.bigquery.ViewDefinition.Builder.setUserDefinedFunctions*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Sets user defined functions that can be used by <xref uid=\"\" data-throw-if-not-resolved=\"false\">#getQuery()</xref>."
  syntax:
    content: "public ViewDefinition.Builder setUserDefinedFunctions(UserDefinedFunction[] userDefinedFunctions)"
    parameters:
    - id: "userDefinedFunctions"
      type: "com.google.cloud.bigquery.UserDefinedFunction[]"
    return:
      type: "com.google.cloud.bigquery.ViewDefinition.Builder"
- uid: "com.google.cloud.bigquery.ViewDefinition.Builder.setUserDefinedFunctions(java.util.List<com.google.cloud.bigquery.UserDefinedFunction>)"
  id: "setUserDefinedFunctions(java.util.List<com.google.cloud.bigquery.UserDefinedFunction>)"
  parent: "com.google.cloud.bigquery.ViewDefinition.Builder"
  langs:
  - "java"
  name: "setUserDefinedFunctions(List<UserDefinedFunction> userDefinedFunctions)"
  nameWithType: "ViewDefinition.Builder.setUserDefinedFunctions(List<UserDefinedFunction> userDefinedFunctions)"
  fullName: "com.google.cloud.bigquery.ViewDefinition.Builder.setUserDefinedFunctions(List<UserDefinedFunction> userDefinedFunctions)"
  overload: "com.google.cloud.bigquery.ViewDefinition.Builder.setUserDefinedFunctions*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Sets user defined functions that can be used by <xref uid=\"\" data-throw-if-not-resolved=\"false\">#getQuery()</xref>."
  syntax:
    content: "public ViewDefinition.Builder setUserDefinedFunctions(List<UserDefinedFunction> userDefinedFunctions)"
    parameters:
    - id: "userDefinedFunctions"
      type: "java.util.List<com.google.cloud.bigquery.UserDefinedFunction>"
    return:
      type: "com.google.cloud.bigquery.ViewDefinition.Builder"
references:
- uid: "com.google.cloud.bigquery.ViewDefinition.Builder.Builder*"
  name: "Builder"
  nameWithType: "ViewDefinition.Builder.Builder"
  fullName: "com.google.cloud.bigquery.ViewDefinition.Builder.Builder"
  package: "com.google.cloud.bigquery"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.google.cloud.bigquery.ViewDefinition.Builder.setQuery*"
  name: "setQuery"
  nameWithType: "ViewDefinition.Builder.setQuery"
  fullName: "com.google.cloud.bigquery.ViewDefinition.Builder.setQuery"
  package: "com.google.cloud.bigquery"
- uid: "java.util.List<com.google.cloud.bigquery.UserDefinedFunction>"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "com.google.cloud.bigquery.UserDefinedFunction"
    name: "UserDefinedFunction"
    fullName: "com.google.cloud.bigquery.UserDefinedFunction"
  - name: ">"
    fullName: ">"
- uid: "com.google.cloud.bigquery.ViewDefinition.Builder.setUserDefinedFunctions*"
  name: "setUserDefinedFunctions"
  nameWithType: "ViewDefinition.Builder.setUserDefinedFunctions"
  fullName: "com.google.cloud.bigquery.ViewDefinition.Builder.setUserDefinedFunctions"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.UserDefinedFunction[]"
  spec.java:
  - uid: "com.google.cloud.bigquery.UserDefinedFunction"
    name: "UserDefinedFunction"
    fullName: "com.google.cloud.bigquery.UserDefinedFunction"
  - name: "[]"
    fullName: "[]"
- uid: "java.lang.Boolean"
  spec.java:
  - uid: "java.lang.Boolean"
    name: "Boolean"
    fullName: "java.lang.Boolean"
- uid: "com.google.cloud.bigquery.ViewDefinition.Builder.setUseLegacySql*"
  name: "setUseLegacySql"
  nameWithType: "ViewDefinition.Builder.setUseLegacySql"
  fullName: "com.google.cloud.bigquery.ViewDefinition.Builder.setUseLegacySql"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.TableDefinition.Type"
  name: "TableDefinition.Type"
  nameWithType: "TableDefinition.Type"
  fullName: "com.google.cloud.bigquery.TableDefinition.Type"
- uid: "com.google.cloud.bigquery.ViewDefinition.Builder.setType*"
  name: "setType"
  nameWithType: "ViewDefinition.Builder.setType"
  fullName: "com.google.cloud.bigquery.ViewDefinition.Builder.setType"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.Schema"
  name: "Schema"
  nameWithType: "Schema"
  fullName: "com.google.cloud.bigquery.Schema"
- uid: "com.google.cloud.bigquery.ViewDefinition.Builder.setSchema*"
  name: "setSchema"
  nameWithType: "ViewDefinition.Builder.setSchema"
  fullName: "com.google.cloud.bigquery.ViewDefinition.Builder.setSchema"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.ViewDefinition"
  name: "ViewDefinition"
  nameWithType: "ViewDefinition"
  fullName: "com.google.cloud.bigquery.ViewDefinition"
- uid: "com.google.cloud.bigquery.ViewDefinition.Builder.build*"
  name: "build"
  nameWithType: "ViewDefinition.Builder.build"
  fullName: "com.google.cloud.bigquery.ViewDefinition.Builder.build"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.TableDefinition.Builder<com.google.cloud.bigquery.ViewDefinition,com.google.cloud.bigquery.ViewDefinition.Builder>"
  name: "TableDefinition.Builder<ViewDefinition,ViewDefinition.Builder>"
  nameWithType: "TableDefinition.Builder<ViewDefinition,ViewDefinition.Builder>"
  fullName: "com.google.cloud.bigquery.TableDefinition.Builder<com.google.cloud.bigquery.ViewDefinition,com.google.cloud.bigquery.ViewDefinition.Builder>"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "com.google.cloud.bigquery.TableDefinition.Builder.build()"
  name: "TableDefinition.Builder.build()"
  nameWithType: "TableDefinition.Builder.build()"
  fullName: "com.google.cloud.bigquery.TableDefinition.Builder.build()"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "com.google.cloud.bigquery.TableDefinition.Builder.setSchema(com.google.cloud.bigquery.Schema)"
  name: "TableDefinition.Builder.setSchema(Schema)"
  nameWithType: "TableDefinition.Builder.setSchema(Schema)"
  fullName: "com.google.cloud.bigquery.TableDefinition.Builder.setSchema(com.google.cloud.bigquery.Schema)"
- uid: "com.google.cloud.bigquery.TableDefinition.Builder.setType(com.google.cloud.bigquery.TableDefinition.Type)"
  name: "TableDefinition.Builder.setType(TableDefinition.Type)"
  nameWithType: "TableDefinition.Builder.setType(TableDefinition.Type)"
  fullName: "com.google.cloud.bigquery.TableDefinition.Builder.setType(com.google.cloud.bigquery.TableDefinition.Type)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.util.List"
  name: "List"
  nameWithType: "List"
  fullName: "java.util.List"
- uid: "com.google.cloud.bigquery.UserDefinedFunction"
  name: "UserDefinedFunction"
  nameWithType: "UserDefinedFunction"
  fullName: "com.google.cloud.bigquery.UserDefinedFunction"
- uid: "com.google.cloud.bigquery.TableDefinition.Builder"
  name: "TableDefinition.Builder"
  nameWithType: "TableDefinition.Builder"
  fullName: "com.google.cloud.bigquery.TableDefinition.Builder"
- uid: "com.google.cloud.bigquery.ViewDefinition,com.google.cloud.bigquery.ViewDefinition.Builder"
  name: "ViewDefinition,ViewDefinition.Builder"
  nameWithType: "ViewDefinition,ViewDefinition.Builder"
  fullName: "com.google.cloud.bigquery.ViewDefinition,com.google.cloud.bigquery.ViewDefinition.Builder"
