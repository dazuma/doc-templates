### YamlMime:ManagedReference
items:
- uid: "com.google.cloud.bigquery.ModelInfo.Builder"
  id: "Builder"
  parent: "com.google.cloud.bigquery"
  children:
  - "com.google.cloud.bigquery.ModelInfo.Builder.Builder()"
  - "com.google.cloud.bigquery.ModelInfo.Builder.build()"
  - "com.google.cloud.bigquery.ModelInfo.Builder.setDescription(java.lang.String)"
  - "com.google.cloud.bigquery.ModelInfo.Builder.setEncryptionConfiguration(com.google.cloud.bigquery.EncryptionConfiguration)"
  - "com.google.cloud.bigquery.ModelInfo.Builder.setExpirationTime(java.lang.Long)"
  - "com.google.cloud.bigquery.ModelInfo.Builder.setFriendlyName(java.lang.String)"
  - "com.google.cloud.bigquery.ModelInfo.Builder.setLabels(java.util.Map<java.lang.String,java.lang.String>)"
  - "com.google.cloud.bigquery.ModelInfo.Builder.setModelId(com.google.cloud.bigquery.ModelId)"
  langs:
  - "java"
  name: "ModelInfo.Builder"
  nameWithType: "ModelInfo.Builder"
  fullName: "com.google.cloud.bigquery.ModelInfo.Builder"
  type: "Class"
  package: "com.google.cloud.bigquery"
  summary: "A builder for `ModelInfo` objects."
  syntax:
    content: "public abstract static class ModelInfo.Builder"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.google.cloud.bigquery.ModelInfo.Builder.Builder()"
  id: "Builder()"
  parent: "com.google.cloud.bigquery.ModelInfo.Builder"
  langs:
  - "java"
  name: "Builder()"
  nameWithType: "ModelInfo.Builder.Builder()"
  fullName: "com.google.cloud.bigquery.ModelInfo.Builder.Builder()"
  overload: "com.google.cloud.bigquery.ModelInfo.Builder.Builder*"
  type: "Constructor"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public Builder()"
- uid: "com.google.cloud.bigquery.ModelInfo.Builder.build()"
  id: "build()"
  parent: "com.google.cloud.bigquery.ModelInfo.Builder"
  langs:
  - "java"
  name: "build()"
  nameWithType: "ModelInfo.Builder.build()"
  fullName: "com.google.cloud.bigquery.ModelInfo.Builder.build()"
  overload: "com.google.cloud.bigquery.ModelInfo.Builder.build*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Creates a `ModelInfo` object."
  syntax:
    content: "public abstract ModelInfo build()"
    return:
      type: "com.google.cloud.bigquery.ModelInfo"
- uid: "com.google.cloud.bigquery.ModelInfo.Builder.setDescription(java.lang.String)"
  id: "setDescription(java.lang.String)"
  parent: "com.google.cloud.bigquery.ModelInfo.Builder"
  langs:
  - "java"
  name: "setDescription(String description)"
  nameWithType: "ModelInfo.Builder.setDescription(String description)"
  fullName: "com.google.cloud.bigquery.ModelInfo.Builder.setDescription(String description)"
  overload: "com.google.cloud.bigquery.ModelInfo.Builder.setDescription*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Sets the user description for this model."
  syntax:
    content: "public abstract ModelInfo.Builder setDescription(String description)"
    parameters:
    - id: "description"
      type: "java.lang.String"
    return:
      type: "com.google.cloud.bigquery.ModelInfo.Builder"
- uid: "com.google.cloud.bigquery.ModelInfo.Builder.setEncryptionConfiguration(com.google.cloud.bigquery.EncryptionConfiguration)"
  id: "setEncryptionConfiguration(com.google.cloud.bigquery.EncryptionConfiguration)"
  parent: "com.google.cloud.bigquery.ModelInfo.Builder"
  langs:
  - "java"
  name: "setEncryptionConfiguration(EncryptionConfiguration configuration)"
  nameWithType: "ModelInfo.Builder.setEncryptionConfiguration(EncryptionConfiguration configuration)"
  fullName: "com.google.cloud.bigquery.ModelInfo.Builder.setEncryptionConfiguration(EncryptionConfiguration configuration)"
  overload: "com.google.cloud.bigquery.ModelInfo.Builder.setEncryptionConfiguration*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public abstract ModelInfo.Builder setEncryptionConfiguration(EncryptionConfiguration configuration)"
    parameters:
    - id: "configuration"
      type: "com.google.cloud.bigquery.EncryptionConfiguration"
    return:
      type: "com.google.cloud.bigquery.ModelInfo.Builder"
- uid: "com.google.cloud.bigquery.ModelInfo.Builder.setExpirationTime(java.lang.Long)"
  id: "setExpirationTime(java.lang.Long)"
  parent: "com.google.cloud.bigquery.ModelInfo.Builder"
  langs:
  - "java"
  name: "setExpirationTime(Long expirationTime)"
  nameWithType: "ModelInfo.Builder.setExpirationTime(Long expirationTime)"
  fullName: "com.google.cloud.bigquery.ModelInfo.Builder.setExpirationTime(Long expirationTime)"
  overload: "com.google.cloud.bigquery.ModelInfo.Builder.setExpirationTime*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Set the time when this model expires, in milliseconds since the epoch. If not present, the model persists indefinitely. Expired models will be deleted."
  syntax:
    content: "public abstract ModelInfo.Builder setExpirationTime(Long expirationTime)"
    parameters:
    - id: "expirationTime"
      type: "java.lang.Long"
    return:
      type: "com.google.cloud.bigquery.ModelInfo.Builder"
- uid: "com.google.cloud.bigquery.ModelInfo.Builder.setFriendlyName(java.lang.String)"
  id: "setFriendlyName(java.lang.String)"
  parent: "com.google.cloud.bigquery.ModelInfo.Builder"
  langs:
  - "java"
  name: "setFriendlyName(String friendlyName)"
  nameWithType: "ModelInfo.Builder.setFriendlyName(String friendlyName)"
  fullName: "com.google.cloud.bigquery.ModelInfo.Builder.setFriendlyName(String friendlyName)"
  overload: "com.google.cloud.bigquery.ModelInfo.Builder.setFriendlyName*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Sets the user-friendly name for this model."
  syntax:
    content: "public abstract ModelInfo.Builder setFriendlyName(String friendlyName)"
    parameters:
    - id: "friendlyName"
      type: "java.lang.String"
    return:
      type: "com.google.cloud.bigquery.ModelInfo.Builder"
- uid: "com.google.cloud.bigquery.ModelInfo.Builder.setLabels(java.util.Map<java.lang.String,java.lang.String>)"
  id: "setLabels(java.util.Map<java.lang.String,java.lang.String>)"
  parent: "com.google.cloud.bigquery.ModelInfo.Builder"
  langs:
  - "java"
  name: "setLabels(Map<String,String> labels)"
  nameWithType: "ModelInfo.Builder.setLabels(Map<String,String> labels)"
  fullName: "com.google.cloud.bigquery.ModelInfo.Builder.setLabels(Map<String,String> labels)"
  overload: "com.google.cloud.bigquery.ModelInfo.Builder.setLabels*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Set the labels applied to this model.\n\nWhen used with <xref uid=\"com.google.cloud.bigquery.BigQuery.update*\" data-throw-if-not-resolved=\"false\">BigQuery#update(ModelInfo, ModelOption...)</xref>, setting `labels` to `null` removes all labels; otherwise all keys that are mapped to `null` values are removed and other keys are updated to their respective values."
  syntax:
    content: "public abstract ModelInfo.Builder setLabels(Map<String,String> labels)"
    parameters:
    - id: "labels"
      type: "java.util.Map<java.lang.String,java.lang.String>"
    return:
      type: "com.google.cloud.bigquery.ModelInfo.Builder"
- uid: "com.google.cloud.bigquery.ModelInfo.Builder.setModelId(com.google.cloud.bigquery.ModelId)"
  id: "setModelId(com.google.cloud.bigquery.ModelId)"
  parent: "com.google.cloud.bigquery.ModelInfo.Builder"
  langs:
  - "java"
  name: "setModelId(ModelId modelId)"
  nameWithType: "ModelInfo.Builder.setModelId(ModelId modelId)"
  fullName: "com.google.cloud.bigquery.ModelInfo.Builder.setModelId(ModelId modelId)"
  overload: "com.google.cloud.bigquery.ModelInfo.Builder.setModelId*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public abstract ModelInfo.Builder setModelId(ModelId modelId)"
    parameters:
    - id: "modelId"
      type: "com.google.cloud.bigquery.ModelId"
    return:
      type: "com.google.cloud.bigquery.ModelInfo.Builder"
references:
- uid: "com.google.cloud.bigquery.ModelInfo.Builder.Builder*"
  name: "Builder"
  nameWithType: "ModelInfo.Builder.Builder"
  fullName: "com.google.cloud.bigquery.ModelInfo.Builder.Builder"
  package: "com.google.cloud.bigquery"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.google.cloud.bigquery.ModelInfo.Builder.setDescription*"
  name: "setDescription"
  nameWithType: "ModelInfo.Builder.setDescription"
  fullName: "com.google.cloud.bigquery.ModelInfo.Builder.setDescription"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.ModelInfo.Builder.setFriendlyName*"
  name: "setFriendlyName"
  nameWithType: "ModelInfo.Builder.setFriendlyName"
  fullName: "com.google.cloud.bigquery.ModelInfo.Builder.setFriendlyName"
  package: "com.google.cloud.bigquery"
- uid: "java.lang.Long"
  spec.java:
  - uid: "java.lang.Long"
    name: "Long"
    fullName: "java.lang.Long"
- uid: "com.google.cloud.bigquery.ModelInfo.Builder.setExpirationTime*"
  name: "setExpirationTime"
  nameWithType: "ModelInfo.Builder.setExpirationTime"
  fullName: "com.google.cloud.bigquery.ModelInfo.Builder.setExpirationTime"
  package: "com.google.cloud.bigquery"
- uid: "java.util.Map<java.lang.String,java.lang.String>"
  spec.java:
  - uid: "java.util.Map"
    name: "Map"
    fullName: "java.util.Map"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ","
    fullName: ","
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ">"
    fullName: ">"
- uid: "com.google.cloud.bigquery.ModelInfo.Builder.setLabels*"
  name: "setLabels"
  nameWithType: "ModelInfo.Builder.setLabels"
  fullName: "com.google.cloud.bigquery.ModelInfo.Builder.setLabels"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.ModelId"
  name: "ModelId"
  nameWithType: "ModelId"
  fullName: "com.google.cloud.bigquery.ModelId"
- uid: "com.google.cloud.bigquery.ModelInfo.Builder.setModelId*"
  name: "setModelId"
  nameWithType: "ModelInfo.Builder.setModelId"
  fullName: "com.google.cloud.bigquery.ModelInfo.Builder.setModelId"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.EncryptionConfiguration"
  name: "EncryptionConfiguration"
  nameWithType: "EncryptionConfiguration"
  fullName: "com.google.cloud.bigquery.EncryptionConfiguration"
- uid: "com.google.cloud.bigquery.ModelInfo.Builder.setEncryptionConfiguration*"
  name: "setEncryptionConfiguration"
  nameWithType: "ModelInfo.Builder.setEncryptionConfiguration"
  fullName: "com.google.cloud.bigquery.ModelInfo.Builder.setEncryptionConfiguration"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.ModelInfo"
  name: "ModelInfo"
  nameWithType: "ModelInfo"
  fullName: "com.google.cloud.bigquery.ModelInfo"
- uid: "com.google.cloud.bigquery.ModelInfo.Builder.build*"
  name: "build"
  nameWithType: "ModelInfo.Builder.build"
  fullName: "com.google.cloud.bigquery.ModelInfo.Builder.build"
  package: "com.google.cloud.bigquery"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.util.Map"
  name: "Map"
  nameWithType: "Map"
  fullName: "java.util.Map"
- uid: "java.lang.String,java.lang.String"
  name: "String,String"
  nameWithType: "String,String"
  fullName: "java.lang.String,java.lang.String"
