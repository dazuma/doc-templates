### YamlMime:ManagedReference
items:
- uid: Google.Cloud.Spanner.V1.PlanNode.Types.ChildLink
  commentId: T:Google.Cloud.Spanner.V1.PlanNode.Types.ChildLink
  id: PlanNode.Types.ChildLink
  parent: Google.Cloud.Spanner.V1
  children:
  - Google.Cloud.Spanner.V1.PlanNode.Types.ChildLink.#ctor
  - Google.Cloud.Spanner.V1.PlanNode.Types.ChildLink.#ctor(Google.Cloud.Spanner.V1.PlanNode.Types.ChildLink)
  - Google.Cloud.Spanner.V1.PlanNode.Types.ChildLink.ChildIndex
  - Google.Cloud.Spanner.V1.PlanNode.Types.ChildLink.Type
  - Google.Cloud.Spanner.V1.PlanNode.Types.ChildLink.Variable
  langs:
  - csharp
  - vb
  name: PlanNode.Types.ChildLink
  nameWithType: PlanNode.Types.ChildLink
  fullName: Google.Cloud.Spanner.V1.PlanNode.Types.ChildLink
  type: Class
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/QueryPlan.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: ChildLink
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/QueryPlan.cs
    startLine: 533
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nMetadata associated with a parent-child relationship appearing in a\n[PlanNode][google.spanner.v1.PlanNode].\n"
  example: []
  syntax:
    content: 'public sealed class ChildLink : IMessage<PlanNode.Types.ChildLink>, IEquatable<PlanNode.Types.ChildLink>, IDeepCloneable<PlanNode.Types.ChildLink>, IBufferMessage, IMessage'
    content.vb: >-
      Public NotInheritable Class ChildLink
          Implements IMessage(Of PlanNode.Types.ChildLink), IEquatable(Of PlanNode.Types.ChildLink), IDeepCloneable(Of PlanNode.Types.ChildLink), IBufferMessage, IMessage
  inheritance:
  - System.Object
  implements:
  - Google.Protobuf.IMessage{Google.Cloud.Spanner.V1.PlanNode.Types.ChildLink}
  - System.IEquatable{Google.Cloud.Spanner.V1.PlanNode.Types.ChildLink}
  - Google.Protobuf.IDeepCloneable{Google.Cloud.Spanner.V1.PlanNode.Types.ChildLink}
  - Google.Protobuf.IBufferMessage
  - Google.Protobuf.IMessage
  inheritedMembers:
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Google.Cloud.Spanner.V1.PlanNode.Types.ChildLink.#ctor
  commentId: M:Google.Cloud.Spanner.V1.PlanNode.Types.ChildLink.#ctor
  id: '#ctor'
  parent: Google.Cloud.Spanner.V1.PlanNode.Types.ChildLink
  langs:
  - csharp
  - vb
  name: ChildLink()
  nameWithType: PlanNode.Types.ChildLink.ChildLink()
  fullName: Google.Cloud.Spanner.V1.PlanNode.Types.ChildLink.ChildLink()
  type: Constructor
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/QueryPlan.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: .ctor
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/QueryPlan.cs
    startLine: 553
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  syntax:
    content: public ChildLink()
    content.vb: Public Sub New
  overload: Google.Cloud.Spanner.V1.PlanNode.Types.ChildLink.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Cloud.Spanner.V1.PlanNode.Types.ChildLink.#ctor(Google.Cloud.Spanner.V1.PlanNode.Types.ChildLink)
  commentId: M:Google.Cloud.Spanner.V1.PlanNode.Types.ChildLink.#ctor(Google.Cloud.Spanner.V1.PlanNode.Types.ChildLink)
  id: '#ctor(Google.Cloud.Spanner.V1.PlanNode.Types.ChildLink)'
  parent: Google.Cloud.Spanner.V1.PlanNode.Types.ChildLink
  langs:
  - csharp
  - vb
  name: ChildLink(PlanNode.Types.ChildLink)
  nameWithType: PlanNode.Types.ChildLink.ChildLink(PlanNode.Types.ChildLink)
  fullName: Google.Cloud.Spanner.V1.PlanNode.Types.ChildLink.ChildLink(Google.Cloud.Spanner.V1.PlanNode.Types.ChildLink)
  type: Constructor
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/QueryPlan.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: .ctor
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/QueryPlan.cs
    startLine: 560
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  syntax:
    content: public ChildLink(PlanNode.Types.ChildLink other)
    parameters:
    - id: other
      type: Google.Cloud.Spanner.V1.PlanNode.Types.ChildLink
    content.vb: Public Sub New(other As PlanNode.Types.ChildLink)
  overload: Google.Cloud.Spanner.V1.PlanNode.Types.ChildLink.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Cloud.Spanner.V1.PlanNode.Types.ChildLink.ChildIndex
  commentId: P:Google.Cloud.Spanner.V1.PlanNode.Types.ChildLink.ChildIndex
  id: ChildIndex
  parent: Google.Cloud.Spanner.V1.PlanNode.Types.ChildLink
  langs:
  - csharp
  - vb
  name: ChildIndex
  nameWithType: PlanNode.Types.ChildLink.ChildIndex
  fullName: Google.Cloud.Spanner.V1.PlanNode.Types.ChildLink.ChildIndex
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/QueryPlan.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: ChildIndex
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/QueryPlan.cs
    startLine: 579
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nThe node to which the link points.\n"
  example: []
  syntax:
    content: public int ChildIndex { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property ChildIndex As Integer
  overload: Google.Cloud.Spanner.V1.PlanNode.Types.ChildLink.ChildIndex*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Cloud.Spanner.V1.PlanNode.Types.ChildLink.Type
  commentId: P:Google.Cloud.Spanner.V1.PlanNode.Types.ChildLink.Type
  id: Type
  parent: Google.Cloud.Spanner.V1.PlanNode.Types.ChildLink
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: PlanNode.Types.ChildLink.Type
  fullName: Google.Cloud.Spanner.V1.PlanNode.Types.ChildLink.Type
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/QueryPlan.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: Type
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/QueryPlan.cs
    startLine: 596
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nThe type of the link. For example, in Hash Joins this could be used to\ndistinguish between the build child and the probe child, or in the case\nof the child being an output variable, to represent the tag associated\nwith the output variable.\n"
  example: []
  syntax:
    content: public string Type { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Type As String
  overload: Google.Cloud.Spanner.V1.PlanNode.Types.ChildLink.Type*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Cloud.Spanner.V1.PlanNode.Types.ChildLink.Variable
  commentId: P:Google.Cloud.Spanner.V1.PlanNode.Types.ChildLink.Variable
  id: Variable
  parent: Google.Cloud.Spanner.V1.PlanNode.Types.ChildLink
  langs:
  - csharp
  - vb
  name: Variable
  nameWithType: PlanNode.Types.ChildLink.Variable
  fullName: Google.Cloud.Spanner.V1.PlanNode.Types.ChildLink.Variable
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/QueryPlan.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: Variable
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/QueryPlan.cs
    startLine: 617
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nOnly present if the child node is [SCALAR][google.spanner.v1.PlanNode.Kind.SCALAR] and corresponds\nto an output variable of the parent node. The field carries the name of\nthe output variable.\nFor example, a `TableScan` operator that reads rows from a table will\nhave child links to the `SCALAR` nodes representing the output variables\ncreated for each column that is read by the operator. The corresponding\n`variable` fields will be set to the variable names assigned to the\ncolumns.\n"
  example: []
  syntax:
    content: public string Variable { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Variable As String
  overload: Google.Cloud.Spanner.V1.PlanNode.Types.ChildLink.Variable*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Google.Cloud.Spanner.V1
  commentId: N:Google.Cloud.Spanner.V1
  name: Google.Cloud.Spanner.V1
  nameWithType: Google.Cloud.Spanner.V1
  fullName: Google.Cloud.Spanner.V1
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Google.Protobuf.IMessage{Google.Cloud.Spanner.V1.PlanNode.Types.ChildLink}
  commentId: T:Google.Protobuf.IMessage{Google.Cloud.Spanner.V1.PlanNode.Types.ChildLink}
  parent: Google.Protobuf
  definition: Google.Protobuf.IMessage`1
  name: IMessage<PlanNode.Types.ChildLink>
  nameWithType: IMessage<PlanNode.Types.ChildLink>
  fullName: Google.Protobuf.IMessage<Google.Cloud.Spanner.V1.PlanNode.Types.ChildLink>
  nameWithType.vb: IMessage(Of PlanNode.Types.ChildLink)
  fullName.vb: Google.Protobuf.IMessage(Of Google.Cloud.Spanner.V1.PlanNode.Types.ChildLink)
  name.vb: IMessage(Of PlanNode.Types.ChildLink)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Spanner.V1.PlanNode.Types.ChildLink
    name: PlanNode.Types.ChildLink
    nameWithType: PlanNode.Types.ChildLink
    fullName: Google.Cloud.Spanner.V1.PlanNode.Types.ChildLink
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Spanner.V1.PlanNode.Types.ChildLink
    name: PlanNode.Types.ChildLink
    nameWithType: PlanNode.Types.ChildLink
    fullName: Google.Cloud.Spanner.V1.PlanNode.Types.ChildLink
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable{Google.Cloud.Spanner.V1.PlanNode.Types.ChildLink}
  commentId: T:System.IEquatable{Google.Cloud.Spanner.V1.PlanNode.Types.ChildLink}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<PlanNode.Types.ChildLink>
  nameWithType: IEquatable<PlanNode.Types.ChildLink>
  fullName: System.IEquatable<Google.Cloud.Spanner.V1.PlanNode.Types.ChildLink>
  nameWithType.vb: IEquatable(Of PlanNode.Types.ChildLink)
  fullName.vb: System.IEquatable(Of Google.Cloud.Spanner.V1.PlanNode.Types.ChildLink)
  name.vb: IEquatable(Of PlanNode.Types.ChildLink)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Spanner.V1.PlanNode.Types.ChildLink
    name: PlanNode.Types.ChildLink
    nameWithType: PlanNode.Types.ChildLink
    fullName: Google.Cloud.Spanner.V1.PlanNode.Types.ChildLink
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Spanner.V1.PlanNode.Types.ChildLink
    name: PlanNode.Types.ChildLink
    nameWithType: PlanNode.Types.ChildLink
    fullName: Google.Cloud.Spanner.V1.PlanNode.Types.ChildLink
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IDeepCloneable{Google.Cloud.Spanner.V1.PlanNode.Types.ChildLink}
  commentId: T:Google.Protobuf.IDeepCloneable{Google.Cloud.Spanner.V1.PlanNode.Types.ChildLink}
  parent: Google.Protobuf
  definition: Google.Protobuf.IDeepCloneable`1
  name: IDeepCloneable<PlanNode.Types.ChildLink>
  nameWithType: IDeepCloneable<PlanNode.Types.ChildLink>
  fullName: Google.Protobuf.IDeepCloneable<Google.Cloud.Spanner.V1.PlanNode.Types.ChildLink>
  nameWithType.vb: IDeepCloneable(Of PlanNode.Types.ChildLink)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of Google.Cloud.Spanner.V1.PlanNode.Types.ChildLink)
  name.vb: IDeepCloneable(Of PlanNode.Types.ChildLink)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Spanner.V1.PlanNode.Types.ChildLink
    name: PlanNode.Types.ChildLink
    nameWithType: PlanNode.Types.ChildLink
    fullName: Google.Cloud.Spanner.V1.PlanNode.Types.ChildLink
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Spanner.V1.PlanNode.Types.ChildLink
    name: PlanNode.Types.ChildLink
    nameWithType: PlanNode.Types.ChildLink
    fullName: Google.Cloud.Spanner.V1.PlanNode.Types.ChildLink
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IBufferMessage
  commentId: T:Google.Protobuf.IBufferMessage
  parent: Google.Protobuf
  isExternal: true
  name: IBufferMessage
  nameWithType: IBufferMessage
  fullName: Google.Protobuf.IBufferMessage
- uid: Google.Protobuf.IMessage
  commentId: T:Google.Protobuf.IMessage
  parent: Google.Protobuf
  isExternal: true
  name: IMessage
  nameWithType: IMessage
  fullName: Google.Protobuf.IMessage
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Protobuf.IMessage`1
  commentId: T:Google.Protobuf.IMessage`1
  isExternal: true
  name: IMessage<T>
  nameWithType: IMessage<T>
  fullName: Google.Protobuf.IMessage<T>
  nameWithType.vb: IMessage(Of T)
  fullName.vb: Google.Protobuf.IMessage(Of T)
  name.vb: IMessage(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf
  commentId: N:Google.Protobuf
  isExternal: true
  name: Google.Protobuf
  nameWithType: Google.Protobuf
  fullName: Google.Protobuf
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IDeepCloneable`1
  commentId: T:Google.Protobuf.IDeepCloneable`1
  isExternal: true
  name: IDeepCloneable<T>
  nameWithType: IDeepCloneable<T>
  fullName: Google.Protobuf.IDeepCloneable<T>
  nameWithType.vb: IDeepCloneable(Of T)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of T)
  name.vb: IDeepCloneable(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Cloud.Spanner.V1.PlanNode.Types.ChildLink.#ctor*
  commentId: Overload:Google.Cloud.Spanner.V1.PlanNode.Types.ChildLink.#ctor
  name: ChildLink
  nameWithType: PlanNode.Types.ChildLink.ChildLink
  fullName: Google.Cloud.Spanner.V1.PlanNode.Types.ChildLink.ChildLink
- uid: Google.Cloud.Spanner.V1.PlanNode.Types.ChildLink
  commentId: T:Google.Cloud.Spanner.V1.PlanNode.Types.ChildLink
  parent: Google.Cloud.Spanner.V1
  name: PlanNode.Types.ChildLink
  nameWithType: PlanNode.Types.ChildLink
  fullName: Google.Cloud.Spanner.V1.PlanNode.Types.ChildLink
- uid: Google.Cloud.Spanner.V1.PlanNode.Types.ChildLink.ChildIndex*
  commentId: Overload:Google.Cloud.Spanner.V1.PlanNode.Types.ChildLink.ChildIndex
  name: ChildIndex
  nameWithType: PlanNode.Types.ChildLink.ChildIndex
  fullName: Google.Cloud.Spanner.V1.PlanNode.Types.ChildLink.ChildIndex
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Google.Cloud.Spanner.V1.PlanNode.Types.ChildLink.Type*
  commentId: Overload:Google.Cloud.Spanner.V1.PlanNode.Types.ChildLink.Type
  name: Type
  nameWithType: PlanNode.Types.ChildLink.Type
  fullName: Google.Cloud.Spanner.V1.PlanNode.Types.ChildLink.Type
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Google.Cloud.Spanner.V1.PlanNode.Types.ChildLink.Variable*
  commentId: Overload:Google.Cloud.Spanner.V1.PlanNode.Types.ChildLink.Variable
  name: Variable
  nameWithType: PlanNode.Types.ChildLink.Variable
  fullName: Google.Cloud.Spanner.V1.PlanNode.Types.ChildLink.Variable
