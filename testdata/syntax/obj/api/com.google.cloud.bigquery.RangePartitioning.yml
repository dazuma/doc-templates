### YamlMime:ManagedReference
items:
- uid: "com.google.cloud.bigquery.RangePartitioning"
  id: "RangePartitioning"
  parent: "com.google.cloud.bigquery"
  children:
  - "com.google.cloud.bigquery.RangePartitioning.Builder"
  - "com.google.cloud.bigquery.RangePartitioning.Range"
  - "com.google.cloud.bigquery.RangePartitioning.equals(java.lang.Object)"
  - "com.google.cloud.bigquery.RangePartitioning.getField()"
  - "com.google.cloud.bigquery.RangePartitioning.getRange()"
  - "com.google.cloud.bigquery.RangePartitioning.hashCode()"
  - "com.google.cloud.bigquery.RangePartitioning.newBuilder()"
  - "com.google.cloud.bigquery.RangePartitioning.toBuilder()"
  - "com.google.cloud.bigquery.RangePartitioning.toString()"
  langs:
  - "java"
  name: "RangePartitioning"
  nameWithType: "RangePartitioning"
  fullName: "com.google.cloud.bigquery.RangePartitioning"
  type: "Class"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public final class RangePartitioning implements Serializable"
  inheritance:
  - "java.lang.Object"
  implements:
  - "java.io.Serializable"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.google.cloud.bigquery.RangePartitioning.RangePartitioning(com.google.api.services.bigquery.model.RangePartitioning)"
  id: "RangePartitioning(com.google.api.services.bigquery.model.RangePartitioning)"
  parent: "com.google.cloud.bigquery.RangePartitioning"
  langs:
  - "java"
  name: "RangePartitioning(RangePartitioning rangePartitioning)"
  nameWithType: "RangePartitioning.RangePartitioning(RangePartitioning rangePartitioning)"
  fullName: "com.google.cloud.bigquery.RangePartitioning.RangePartitioning(RangePartitioning rangePartitioning)"
  overload: "com.google.cloud.bigquery.RangePartitioning.RangePartitioning*"
  type: "Constructor"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "private RangePartitioning(RangePartitioning rangePartitioning)"
    parameters:
    - id: "rangePartitioning"
      type: "com.google.api.services.bigquery.model.RangePartitioning"
- uid: "com.google.cloud.bigquery.RangePartitioning.RangePartitioning(com.google.cloud.bigquery.RangePartitioning.Builder)"
  id: "RangePartitioning(com.google.cloud.bigquery.RangePartitioning.Builder)"
  parent: "com.google.cloud.bigquery.RangePartitioning"
  langs:
  - "java"
  name: "RangePartitioning(RangePartitioning.Builder builder)"
  nameWithType: "RangePartitioning.RangePartitioning(RangePartitioning.Builder builder)"
  fullName: "com.google.cloud.bigquery.RangePartitioning.RangePartitioning(RangePartitioning.Builder builder)"
  overload: "com.google.cloud.bigquery.RangePartitioning.RangePartitioning*"
  type: "Constructor"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "private RangePartitioning(RangePartitioning.Builder builder)"
    parameters:
    - id: "builder"
      type: "com.google.cloud.bigquery.RangePartitioning.Builder"
- uid: "com.google.cloud.bigquery.RangePartitioning.equals(java.lang.Object)"
  id: "equals(java.lang.Object)"
  parent: "com.google.cloud.bigquery.RangePartitioning"
  langs:
  - "java"
  name: "equals(Object obj)"
  nameWithType: "RangePartitioning.equals(Object obj)"
  fullName: "com.google.cloud.bigquery.RangePartitioning.equals(Object obj)"
  overload: "com.google.cloud.bigquery.RangePartitioning.equals*"
  overridden: "java.lang.Object.equals(java.lang.Object)"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public boolean equals(Object obj)"
    parameters:
    - id: "obj"
      type: "java.lang.Object"
    return:
      type: "boolean"
- uid: "com.google.cloud.bigquery.RangePartitioning.getField()"
  id: "getField()"
  parent: "com.google.cloud.bigquery.RangePartitioning"
  langs:
  - "java"
  name: "getField()"
  nameWithType: "RangePartitioning.getField()"
  fullName: "com.google.cloud.bigquery.RangePartitioning.getField()"
  overload: "com.google.cloud.bigquery.RangePartitioning.getField*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns the range partitioning field."
  syntax:
    content: "public String getField()"
    return:
      type: "java.lang.String"
- uid: "com.google.cloud.bigquery.RangePartitioning.getRange()"
  id: "getRange()"
  parent: "com.google.cloud.bigquery.RangePartitioning"
  langs:
  - "java"
  name: "getRange()"
  nameWithType: "RangePartitioning.getRange()"
  fullName: "com.google.cloud.bigquery.RangePartitioning.getRange()"
  overload: "com.google.cloud.bigquery.RangePartitioning.getRange*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns the range of range partitioning."
  syntax:
    content: "public RangePartitioning.Range getRange()"
    return:
      type: "com.google.cloud.bigquery.RangePartitioning.Range"
- uid: "com.google.cloud.bigquery.RangePartitioning.hashCode()"
  id: "hashCode()"
  parent: "com.google.cloud.bigquery.RangePartitioning"
  langs:
  - "java"
  name: "hashCode()"
  nameWithType: "RangePartitioning.hashCode()"
  fullName: "com.google.cloud.bigquery.RangePartitioning.hashCode()"
  overload: "com.google.cloud.bigquery.RangePartitioning.hashCode*"
  overridden: "java.lang.Object.hashCode()"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public int hashCode()"
    return:
      type: "int"
- uid: "com.google.cloud.bigquery.RangePartitioning.newBuilder()"
  id: "newBuilder()"
  parent: "com.google.cloud.bigquery.RangePartitioning"
  langs:
  - "java"
  name: "newBuilder()"
  nameWithType: "RangePartitioning.newBuilder()"
  fullName: "com.google.cloud.bigquery.RangePartitioning.newBuilder()"
  overload: "com.google.cloud.bigquery.RangePartitioning.newBuilder*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns a builder for a RangePartitioning object"
  syntax:
    content: "public static RangePartitioning.Builder newBuilder()"
    return:
      type: "com.google.cloud.bigquery.RangePartitioning.Builder"
- uid: "com.google.cloud.bigquery.RangePartitioning.toBuilder()"
  id: "toBuilder()"
  parent: "com.google.cloud.bigquery.RangePartitioning"
  langs:
  - "java"
  name: "toBuilder()"
  nameWithType: "RangePartitioning.toBuilder()"
  fullName: "com.google.cloud.bigquery.RangePartitioning.toBuilder()"
  overload: "com.google.cloud.bigquery.RangePartitioning.toBuilder*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns a builder for the `RangePartitioning` object."
  syntax:
    content: "public RangePartitioning.Builder toBuilder()"
    return:
      type: "com.google.cloud.bigquery.RangePartitioning.Builder"
- uid: "com.google.cloud.bigquery.RangePartitioning.toString()"
  id: "toString()"
  parent: "com.google.cloud.bigquery.RangePartitioning"
  langs:
  - "java"
  name: "toString()"
  nameWithType: "RangePartitioning.toString()"
  fullName: "com.google.cloud.bigquery.RangePartitioning.toString()"
  overload: "com.google.cloud.bigquery.RangePartitioning.toString*"
  overridden: "java.lang.Object.toString()"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public String toString()"
    return:
      type: "java.lang.String"
references:
- uid: "com.google.cloud.bigquery.RangePartitioning.Builder"
  name: "RangePartitioning.Builder"
  nameWithType: "RangePartitioning.Builder"
  fullName: "com.google.cloud.bigquery.RangePartitioning.Builder"
- uid: "com.google.cloud.bigquery.RangePartitioning.RangePartitioning*"
  name: "RangePartitioning"
  nameWithType: "RangePartitioning.RangePartitioning"
  fullName: "com.google.cloud.bigquery.RangePartitioning.RangePartitioning"
  package: "com.google.cloud.bigquery"
- uid: "com.google.api.services.bigquery.model.RangePartitioning"
  spec.java:
  - uid: "com.google.api.services.bigquery.model.RangePartitioning"
    name: "RangePartitioning"
    fullName: "com.google.api.services.bigquery.model.RangePartitioning"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.google.cloud.bigquery.RangePartitioning.getField*"
  name: "getField"
  nameWithType: "RangePartitioning.getField"
  fullName: "com.google.cloud.bigquery.RangePartitioning.getField"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.RangePartitioning.Range"
  name: "RangePartitioning.Range"
  nameWithType: "RangePartitioning.Range"
  fullName: "com.google.cloud.bigquery.RangePartitioning.Range"
- uid: "com.google.cloud.bigquery.RangePartitioning.getRange*"
  name: "getRange"
  nameWithType: "RangePartitioning.getRange"
  fullName: "com.google.cloud.bigquery.RangePartitioning.getRange"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.RangePartitioning.newBuilder*"
  name: "newBuilder"
  nameWithType: "RangePartitioning.newBuilder"
  fullName: "com.google.cloud.bigquery.RangePartitioning.newBuilder"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.RangePartitioning.toBuilder*"
  name: "toBuilder"
  nameWithType: "RangePartitioning.toBuilder"
  fullName: "com.google.cloud.bigquery.RangePartitioning.toBuilder"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.RangePartitioning.toString*"
  name: "toString"
  nameWithType: "RangePartitioning.toString"
  fullName: "com.google.cloud.bigquery.RangePartitioning.toString"
  package: "com.google.cloud.bigquery"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "com.google.cloud.bigquery.RangePartitioning.hashCode*"
  name: "hashCode"
  nameWithType: "RangePartitioning.hashCode"
  fullName: "com.google.cloud.bigquery.RangePartitioning.hashCode"
  package: "com.google.cloud.bigquery"
- uid: "java.lang.Object"
  spec.java:
  - uid: "java.lang.Object"
    name: "Object"
    fullName: "java.lang.Object"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "com.google.cloud.bigquery.RangePartitioning.equals*"
  name: "equals"
  nameWithType: "RangePartitioning.equals"
  fullName: "com.google.cloud.bigquery.RangePartitioning.equals"
  package: "com.google.cloud.bigquery"
- uid: "java.io.Serializable"
  name: "Serializable"
  nameWithType: "Serializable"
  fullName: "java.io.Serializable"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
