### YamlMime:ManagedReference
items:
- uid: Google.Cloud.Spanner.V1.TransactionSelector
  commentId: T:Google.Cloud.Spanner.V1.TransactionSelector
  id: TransactionSelector
  parent: Google.Cloud.Spanner.V1
  children:
  - Google.Cloud.Spanner.V1.TransactionSelector.#ctor
  - Google.Cloud.Spanner.V1.TransactionSelector.#ctor(Google.Cloud.Spanner.V1.TransactionSelector)
  - Google.Cloud.Spanner.V1.TransactionSelector.Begin
  - Google.Cloud.Spanner.V1.TransactionSelector.Id
  - Google.Cloud.Spanner.V1.TransactionSelector.SelectorCase
  - Google.Cloud.Spanner.V1.TransactionSelector.SingleUse
  langs:
  - csharp
  - vb
  name: TransactionSelector
  nameWithType: TransactionSelector
  fullName: Google.Cloud.Spanner.V1.TransactionSelector
  type: Class
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Transaction.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: TransactionSelector
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Transaction.cs
    startLine: 1724
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nThis message is used to select the transaction in which a\n[Read][google.spanner.v1.Spanner.Read] or\n[ExecuteSql][google.spanner.v1.Spanner.ExecuteSql] call runs.\n\nSee [TransactionOptions][google.spanner.v1.TransactionOptions] for more information about transactions.\n"
  example: []
  syntax:
    content: 'public sealed class TransactionSelector : IMessage<TransactionSelector>, IEquatable<TransactionSelector>, IDeepCloneable<TransactionSelector>, IBufferMessage, IMessage'
    content.vb: >-
      Public NotInheritable Class TransactionSelector
          Implements IMessage(Of TransactionSelector), IEquatable(Of TransactionSelector), IDeepCloneable(Of TransactionSelector), IBufferMessage, IMessage
  inheritance:
  - System.Object
  implements:
  - Google.Protobuf.IMessage{Google.Cloud.Spanner.V1.TransactionSelector}
  - System.IEquatable{Google.Cloud.Spanner.V1.TransactionSelector}
  - Google.Protobuf.IDeepCloneable{Google.Cloud.Spanner.V1.TransactionSelector}
  - Google.Protobuf.IBufferMessage
  - Google.Protobuf.IMessage
  inheritedMembers:
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Google.Cloud.Spanner.V1.TransactionSelector.#ctor
  commentId: M:Google.Cloud.Spanner.V1.TransactionSelector.#ctor
  id: '#ctor'
  parent: Google.Cloud.Spanner.V1.TransactionSelector
  langs:
  - csharp
  - vb
  name: TransactionSelector()
  nameWithType: TransactionSelector.TransactionSelector()
  fullName: Google.Cloud.Spanner.V1.TransactionSelector.TransactionSelector()
  type: Constructor
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Transaction.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: .ctor
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Transaction.cs
    startLine: 1744
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  syntax:
    content: public TransactionSelector()
    content.vb: Public Sub New
  overload: Google.Cloud.Spanner.V1.TransactionSelector.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Cloud.Spanner.V1.TransactionSelector.#ctor(Google.Cloud.Spanner.V1.TransactionSelector)
  commentId: M:Google.Cloud.Spanner.V1.TransactionSelector.#ctor(Google.Cloud.Spanner.V1.TransactionSelector)
  id: '#ctor(Google.Cloud.Spanner.V1.TransactionSelector)'
  parent: Google.Cloud.Spanner.V1.TransactionSelector
  langs:
  - csharp
  - vb
  name: TransactionSelector(TransactionSelector)
  nameWithType: TransactionSelector.TransactionSelector(TransactionSelector)
  fullName: Google.Cloud.Spanner.V1.TransactionSelector.TransactionSelector(Google.Cloud.Spanner.V1.TransactionSelector)
  type: Constructor
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Transaction.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: .ctor
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Transaction.cs
    startLine: 1751
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  syntax:
    content: public TransactionSelector(TransactionSelector other)
    parameters:
    - id: other
      type: Google.Cloud.Spanner.V1.TransactionSelector
    content.vb: Public Sub New(other As TransactionSelector)
  overload: Google.Cloud.Spanner.V1.TransactionSelector.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Cloud.Spanner.V1.TransactionSelector.SingleUse
  commentId: P:Google.Cloud.Spanner.V1.TransactionSelector.SingleUse
  id: SingleUse
  parent: Google.Cloud.Spanner.V1.TransactionSelector
  langs:
  - csharp
  - vb
  name: SingleUse
  nameWithType: TransactionSelector.SingleUse
  fullName: Google.Cloud.Spanner.V1.TransactionSelector.SingleUse
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Transaction.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: SingleUse
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Transaction.cs
    startLine: 1780
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nExecute the read or SQL query in a temporary transaction.\nThis is the most efficient way to execute a transaction that\nconsists of a single SQL query.\n"
  example: []
  syntax:
    content: public TransactionOptions SingleUse { get; set; }
    parameters: []
    return:
      type: Google.Cloud.Spanner.V1.TransactionOptions
    content.vb: Public Property SingleUse As TransactionOptions
  overload: Google.Cloud.Spanner.V1.TransactionSelector.SingleUse*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Cloud.Spanner.V1.TransactionSelector.Id
  commentId: P:Google.Cloud.Spanner.V1.TransactionSelector.Id
  id: Id
  parent: Google.Cloud.Spanner.V1.TransactionSelector
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: TransactionSelector.Id
  fullName: Google.Cloud.Spanner.V1.TransactionSelector.Id
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Transaction.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: Id
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Transaction.cs
    startLine: 1794
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nExecute the read or SQL query in a previously-started transaction.\n"
  example: []
  syntax:
    content: public ByteString Id { get; set; }
    parameters: []
    return:
      type: Google.Protobuf.ByteString
    content.vb: Public Property Id As ByteString
  overload: Google.Cloud.Spanner.V1.TransactionSelector.Id*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Cloud.Spanner.V1.TransactionSelector.Begin
  commentId: P:Google.Cloud.Spanner.V1.TransactionSelector.Begin
  id: Begin
  parent: Google.Cloud.Spanner.V1.TransactionSelector
  langs:
  - csharp
  - vb
  name: Begin
  nameWithType: TransactionSelector.Begin
  fullName: Google.Cloud.Spanner.V1.TransactionSelector.Begin
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Transaction.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: Begin
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Transaction.cs
    startLine: 1810
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nBegin a new transaction and execute this read or SQL query in\nit. The transaction ID of the new transaction is returned in\n[ResultSetMetadata.transaction][google.spanner.v1.ResultSetMetadata.transaction], which is a [Transaction][google.spanner.v1.Transaction].\n"
  example: []
  syntax:
    content: public TransactionOptions Begin { get; set; }
    parameters: []
    return:
      type: Google.Cloud.Spanner.V1.TransactionOptions
    content.vb: Public Property Begin As TransactionOptions
  overload: Google.Cloud.Spanner.V1.TransactionSelector.Begin*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Cloud.Spanner.V1.TransactionSelector.SelectorCase
  commentId: P:Google.Cloud.Spanner.V1.TransactionSelector.SelectorCase
  id: SelectorCase
  parent: Google.Cloud.Spanner.V1.TransactionSelector
  langs:
  - csharp
  - vb
  name: SelectorCase
  nameWithType: TransactionSelector.SelectorCase
  fullName: Google.Cloud.Spanner.V1.TransactionSelector.SelectorCase
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Transaction.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: SelectorCase
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Transaction.cs
    startLine: 1828
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  syntax:
    content: public TransactionSelector.SelectorOneofCase SelectorCase { get; }
    parameters: []
    return:
      type: Google.Cloud.Spanner.V1.TransactionSelector.SelectorOneofCase
    content.vb: Public ReadOnly Property SelectorCase As TransactionSelector.SelectorOneofCase
  overload: Google.Cloud.Spanner.V1.TransactionSelector.SelectorCase*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Google.Cloud.Spanner.V1
  commentId: N:Google.Cloud.Spanner.V1
  name: Google.Cloud.Spanner.V1
  nameWithType: Google.Cloud.Spanner.V1
  fullName: Google.Cloud.Spanner.V1
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Google.Protobuf.IMessage{Google.Cloud.Spanner.V1.TransactionSelector}
  commentId: T:Google.Protobuf.IMessage{Google.Cloud.Spanner.V1.TransactionSelector}
  parent: Google.Protobuf
  definition: Google.Protobuf.IMessage`1
  name: IMessage<TransactionSelector>
  nameWithType: IMessage<TransactionSelector>
  fullName: Google.Protobuf.IMessage<Google.Cloud.Spanner.V1.TransactionSelector>
  nameWithType.vb: IMessage(Of TransactionSelector)
  fullName.vb: Google.Protobuf.IMessage(Of Google.Cloud.Spanner.V1.TransactionSelector)
  name.vb: IMessage(Of TransactionSelector)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Spanner.V1.TransactionSelector
    name: TransactionSelector
    nameWithType: TransactionSelector
    fullName: Google.Cloud.Spanner.V1.TransactionSelector
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Spanner.V1.TransactionSelector
    name: TransactionSelector
    nameWithType: TransactionSelector
    fullName: Google.Cloud.Spanner.V1.TransactionSelector
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable{Google.Cloud.Spanner.V1.TransactionSelector}
  commentId: T:System.IEquatable{Google.Cloud.Spanner.V1.TransactionSelector}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<TransactionSelector>
  nameWithType: IEquatable<TransactionSelector>
  fullName: System.IEquatable<Google.Cloud.Spanner.V1.TransactionSelector>
  nameWithType.vb: IEquatable(Of TransactionSelector)
  fullName.vb: System.IEquatable(Of Google.Cloud.Spanner.V1.TransactionSelector)
  name.vb: IEquatable(Of TransactionSelector)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Spanner.V1.TransactionSelector
    name: TransactionSelector
    nameWithType: TransactionSelector
    fullName: Google.Cloud.Spanner.V1.TransactionSelector
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Spanner.V1.TransactionSelector
    name: TransactionSelector
    nameWithType: TransactionSelector
    fullName: Google.Cloud.Spanner.V1.TransactionSelector
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IDeepCloneable{Google.Cloud.Spanner.V1.TransactionSelector}
  commentId: T:Google.Protobuf.IDeepCloneable{Google.Cloud.Spanner.V1.TransactionSelector}
  parent: Google.Protobuf
  definition: Google.Protobuf.IDeepCloneable`1
  name: IDeepCloneable<TransactionSelector>
  nameWithType: IDeepCloneable<TransactionSelector>
  fullName: Google.Protobuf.IDeepCloneable<Google.Cloud.Spanner.V1.TransactionSelector>
  nameWithType.vb: IDeepCloneable(Of TransactionSelector)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of Google.Cloud.Spanner.V1.TransactionSelector)
  name.vb: IDeepCloneable(Of TransactionSelector)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Spanner.V1.TransactionSelector
    name: TransactionSelector
    nameWithType: TransactionSelector
    fullName: Google.Cloud.Spanner.V1.TransactionSelector
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Spanner.V1.TransactionSelector
    name: TransactionSelector
    nameWithType: TransactionSelector
    fullName: Google.Cloud.Spanner.V1.TransactionSelector
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IBufferMessage
  commentId: T:Google.Protobuf.IBufferMessage
  parent: Google.Protobuf
  isExternal: true
  name: IBufferMessage
  nameWithType: IBufferMessage
  fullName: Google.Protobuf.IBufferMessage
- uid: Google.Protobuf.IMessage
  commentId: T:Google.Protobuf.IMessage
  parent: Google.Protobuf
  isExternal: true
  name: IMessage
  nameWithType: IMessage
  fullName: Google.Protobuf.IMessage
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Protobuf.IMessage`1
  commentId: T:Google.Protobuf.IMessage`1
  isExternal: true
  name: IMessage<T>
  nameWithType: IMessage<T>
  fullName: Google.Protobuf.IMessage<T>
  nameWithType.vb: IMessage(Of T)
  fullName.vb: Google.Protobuf.IMessage(Of T)
  name.vb: IMessage(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf
  commentId: N:Google.Protobuf
  isExternal: true
  name: Google.Protobuf
  nameWithType: Google.Protobuf
  fullName: Google.Protobuf
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IDeepCloneable`1
  commentId: T:Google.Protobuf.IDeepCloneable`1
  isExternal: true
  name: IDeepCloneable<T>
  nameWithType: IDeepCloneable<T>
  fullName: Google.Protobuf.IDeepCloneable<T>
  nameWithType.vb: IDeepCloneable(Of T)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of T)
  name.vb: IDeepCloneable(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Cloud.Spanner.V1.TransactionSelector.#ctor*
  commentId: Overload:Google.Cloud.Spanner.V1.TransactionSelector.#ctor
  name: TransactionSelector
  nameWithType: TransactionSelector.TransactionSelector
  fullName: Google.Cloud.Spanner.V1.TransactionSelector.TransactionSelector
- uid: Google.Cloud.Spanner.V1.TransactionSelector
  commentId: T:Google.Cloud.Spanner.V1.TransactionSelector
  parent: Google.Cloud.Spanner.V1
  name: TransactionSelector
  nameWithType: TransactionSelector
  fullName: Google.Cloud.Spanner.V1.TransactionSelector
- uid: Google.Cloud.Spanner.V1.TransactionSelector.SingleUse*
  commentId: Overload:Google.Cloud.Spanner.V1.TransactionSelector.SingleUse
  name: SingleUse
  nameWithType: TransactionSelector.SingleUse
  fullName: Google.Cloud.Spanner.V1.TransactionSelector.SingleUse
- uid: Google.Cloud.Spanner.V1.TransactionOptions
  commentId: T:Google.Cloud.Spanner.V1.TransactionOptions
  parent: Google.Cloud.Spanner.V1
  name: TransactionOptions
  nameWithType: TransactionOptions
  fullName: Google.Cloud.Spanner.V1.TransactionOptions
- uid: Google.Cloud.Spanner.V1.TransactionSelector.Id*
  commentId: Overload:Google.Cloud.Spanner.V1.TransactionSelector.Id
  name: Id
  nameWithType: TransactionSelector.Id
  fullName: Google.Cloud.Spanner.V1.TransactionSelector.Id
- uid: Google.Protobuf.ByteString
  commentId: T:Google.Protobuf.ByteString
  parent: Google.Protobuf
  isExternal: true
  name: ByteString
  nameWithType: ByteString
  fullName: Google.Protobuf.ByteString
- uid: Google.Cloud.Spanner.V1.TransactionSelector.Begin*
  commentId: Overload:Google.Cloud.Spanner.V1.TransactionSelector.Begin
  name: Begin
  nameWithType: TransactionSelector.Begin
  fullName: Google.Cloud.Spanner.V1.TransactionSelector.Begin
- uid: Google.Cloud.Spanner.V1.TransactionSelector.SelectorCase*
  commentId: Overload:Google.Cloud.Spanner.V1.TransactionSelector.SelectorCase
  name: SelectorCase
  nameWithType: TransactionSelector.SelectorCase
  fullName: Google.Cloud.Spanner.V1.TransactionSelector.SelectorCase
- uid: Google.Cloud.Spanner.V1.TransactionSelector.SelectorOneofCase
  commentId: T:Google.Cloud.Spanner.V1.TransactionSelector.SelectorOneofCase
  parent: Google.Cloud.Spanner.V1
  name: TransactionSelector.SelectorOneofCase
  nameWithType: TransactionSelector.SelectorOneofCase
  fullName: Google.Cloud.Spanner.V1.TransactionSelector.SelectorOneofCase
