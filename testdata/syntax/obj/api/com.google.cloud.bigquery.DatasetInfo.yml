### YamlMime:ManagedReference
items:
- uid: "com.google.cloud.bigquery.DatasetInfo"
  id: "DatasetInfo"
  parent: "com.google.cloud.bigquery"
  children:
  - "com.google.cloud.bigquery.DatasetInfo.Builder"
  - "com.google.cloud.bigquery.DatasetInfo.equals(java.lang.Object)"
  - "com.google.cloud.bigquery.DatasetInfo.getAcl()"
  - "com.google.cloud.bigquery.DatasetInfo.getCreationTime()"
  - "com.google.cloud.bigquery.DatasetInfo.getDatasetId()"
  - "com.google.cloud.bigquery.DatasetInfo.getDefaultEncryptionConfiguration()"
  - "com.google.cloud.bigquery.DatasetInfo.getDefaultPartitionExpirationMs()"
  - "com.google.cloud.bigquery.DatasetInfo.getDefaultTableLifetime()"
  - "com.google.cloud.bigquery.DatasetInfo.getDescription()"
  - "com.google.cloud.bigquery.DatasetInfo.getEtag()"
  - "com.google.cloud.bigquery.DatasetInfo.getFriendlyName()"
  - "com.google.cloud.bigquery.DatasetInfo.getGeneratedId()"
  - "com.google.cloud.bigquery.DatasetInfo.getLabels()"
  - "com.google.cloud.bigquery.DatasetInfo.getLastModified()"
  - "com.google.cloud.bigquery.DatasetInfo.getLocation()"
  - "com.google.cloud.bigquery.DatasetInfo.getSelfLink()"
  - "com.google.cloud.bigquery.DatasetInfo.hashCode()"
  - "com.google.cloud.bigquery.DatasetInfo.newBuilder(com.google.cloud.bigquery.DatasetId)"
  - "com.google.cloud.bigquery.DatasetInfo.newBuilder(java.lang.String)"
  - "com.google.cloud.bigquery.DatasetInfo.newBuilder(java.lang.String,java.lang.String)"
  - "com.google.cloud.bigquery.DatasetInfo.of(com.google.cloud.bigquery.DatasetId)"
  - "com.google.cloud.bigquery.DatasetInfo.of(java.lang.String)"
  - "com.google.cloud.bigquery.DatasetInfo.toBuilder()"
  - "com.google.cloud.bigquery.DatasetInfo.toString()"
  langs:
  - "java"
  name: "DatasetInfo"
  nameWithType: "DatasetInfo"
  fullName: "com.google.cloud.bigquery.DatasetInfo"
  type: "Class"
  package: "com.google.cloud.bigquery"
  summary: "Google BigQuery Dataset information. A dataset is a grouping mechanism that holds zero or more tables. Datasets are the lowest level unit of access control; you cannot control access at the table level."
  syntax:
    content: "public class DatasetInfo implements Serializable"
  inheritance:
  - "java.lang.Object"
  implements:
  - "java.io.Serializable"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.google.cloud.bigquery.DatasetInfo.DatasetInfo(com.google.cloud.bigquery.DatasetInfo.BuilderImpl)"
  id: "DatasetInfo(com.google.cloud.bigquery.DatasetInfo.BuilderImpl)"
  parent: "com.google.cloud.bigquery.DatasetInfo"
  langs:
  - "java"
  name: "DatasetInfo(DatasetInfo.BuilderImpl builder)"
  nameWithType: "DatasetInfo.DatasetInfo(DatasetInfo.BuilderImpl builder)"
  fullName: "com.google.cloud.bigquery.DatasetInfo.DatasetInfo(DatasetInfo.BuilderImpl builder)"
  overload: "com.google.cloud.bigquery.DatasetInfo.DatasetInfo*"
  type: "Constructor"
  package: "com.google.cloud.bigquery"
  syntax:
    content: " DatasetInfo(DatasetInfo.BuilderImpl builder)"
    parameters:
    - id: "builder"
      type: "com.google.cloud.bigquery.DatasetInfo.BuilderImpl"
- uid: "com.google.cloud.bigquery.DatasetInfo.equals(java.lang.Object)"
  id: "equals(java.lang.Object)"
  parent: "com.google.cloud.bigquery.DatasetInfo"
  langs:
  - "java"
  name: "equals(Object obj)"
  nameWithType: "DatasetInfo.equals(Object obj)"
  fullName: "com.google.cloud.bigquery.DatasetInfo.equals(Object obj)"
  overload: "com.google.cloud.bigquery.DatasetInfo.equals*"
  overridden: "java.lang.Object.equals(java.lang.Object)"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public boolean equals(Object obj)"
    parameters:
    - id: "obj"
      type: "java.lang.Object"
    return:
      type: "boolean"
- uid: "com.google.cloud.bigquery.DatasetInfo.getAcl()"
  id: "getAcl()"
  parent: "com.google.cloud.bigquery.DatasetInfo"
  langs:
  - "java"
  name: "getAcl()"
  nameWithType: "DatasetInfo.getAcl()"
  fullName: "com.google.cloud.bigquery.DatasetInfo.getAcl()"
  overload: "com.google.cloud.bigquery.DatasetInfo.getAcl*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns the dataset's access control configuration.\n\nUpdate the ACLs for a dataset.\n\n```java\nDataset dataset = bigquery.getDataset(DatasetId.of(\"my_dataset\"));\n List beforeAcls = dataset.getAcl();\n\n // Make a copy of the ACLs so that they can be modified.\n ArrayList acls = new ArrayList<>(beforeAcls);\n acls.add(Acl.of(new Acl.User(\"sample.bigquery.dev@gmail.com\"), Acl.Role.READER));\n Dataset.Builder builder = dataset.toBuilder();\n builder.setAcl(acls);\n\n bigquery.update(builder.build());  // API request.\n```"
  syntax:
    content: "public List<Acl> getAcl()"
    return:
      type: "java.util.List<com.google.cloud.bigquery.Acl>"
- uid: "com.google.cloud.bigquery.DatasetInfo.getCreationTime()"
  id: "getCreationTime()"
  parent: "com.google.cloud.bigquery.DatasetInfo"
  langs:
  - "java"
  name: "getCreationTime()"
  nameWithType: "DatasetInfo.getCreationTime()"
  fullName: "com.google.cloud.bigquery.DatasetInfo.getCreationTime()"
  overload: "com.google.cloud.bigquery.DatasetInfo.getCreationTime*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns the time when this dataset was created, in milliseconds since the epoch."
  syntax:
    content: "public Long getCreationTime()"
    return:
      type: "java.lang.Long"
- uid: "com.google.cloud.bigquery.DatasetInfo.getDatasetId()"
  id: "getDatasetId()"
  parent: "com.google.cloud.bigquery.DatasetInfo"
  langs:
  - "java"
  name: "getDatasetId()"
  nameWithType: "DatasetInfo.getDatasetId()"
  fullName: "com.google.cloud.bigquery.DatasetInfo.getDatasetId()"
  overload: "com.google.cloud.bigquery.DatasetInfo.getDatasetId*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns the dataset identity."
  syntax:
    content: "public DatasetId getDatasetId()"
    return:
      type: "com.google.cloud.bigquery.DatasetId"
- uid: "com.google.cloud.bigquery.DatasetInfo.getDefaultEncryptionConfiguration()"
  id: "getDefaultEncryptionConfiguration()"
  parent: "com.google.cloud.bigquery.DatasetInfo"
  langs:
  - "java"
  name: "getDefaultEncryptionConfiguration()"
  nameWithType: "DatasetInfo.getDefaultEncryptionConfiguration()"
  fullName: "com.google.cloud.bigquery.DatasetInfo.getDefaultEncryptionConfiguration()"
  overload: "com.google.cloud.bigquery.DatasetInfo.getDefaultEncryptionConfiguration*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public EncryptionConfiguration getDefaultEncryptionConfiguration()"
    return:
      type: "com.google.cloud.bigquery.EncryptionConfiguration"
- uid: "com.google.cloud.bigquery.DatasetInfo.getDefaultPartitionExpirationMs()"
  id: "getDefaultPartitionExpirationMs()"
  parent: "com.google.cloud.bigquery.DatasetInfo"
  langs:
  - "java"
  name: "getDefaultPartitionExpirationMs()"
  nameWithType: "DatasetInfo.getDefaultPartitionExpirationMs()"
  fullName: "com.google.cloud.bigquery.DatasetInfo.getDefaultPartitionExpirationMs()"
  overload: "com.google.cloud.bigquery.DatasetInfo.getDefaultPartitionExpirationMs*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public Long getDefaultPartitionExpirationMs()"
    return:
      type: "java.lang.Long"
- uid: "com.google.cloud.bigquery.DatasetInfo.getDefaultTableLifetime()"
  id: "getDefaultTableLifetime()"
  parent: "com.google.cloud.bigquery.DatasetInfo"
  langs:
  - "java"
  name: "getDefaultTableLifetime()"
  nameWithType: "DatasetInfo.getDefaultTableLifetime()"
  fullName: "com.google.cloud.bigquery.DatasetInfo.getDefaultTableLifetime()"
  overload: "com.google.cloud.bigquery.DatasetInfo.getDefaultTableLifetime*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns the default lifetime of all tables in the dataset, in milliseconds. Once this property is set, all newly-created tables in the dataset will have an expirationTime property set to the creation time plus the value in this property, and changing the value will only affect new tables, not existing ones. When the expirationTime for a given table is reached, that table will be deleted automatically. If a table's expirationTime is modified or removed before the table expires, or if you provide an explicit expirationTime when creating a table, that value takes precedence over the default expiration time indicated by this property.\n\nUpdate the default table expiration time for a dataset.\n\n```java\nDataset dataset = bigquery.getDataset(DatasetId.of(\"my_dataset\"));\n Long beforeExpiration = dataset.getDefaultTableLifetime();\n\n Long oneDayMilliseconds = 24 * 60 * 60 * 1000L;\n Dataset.Builder builder = dataset.toBuilder();\n builder.setDefaultTableLifetime(oneDayMilliseconds);\n bigquery.update(builder.build());  // API request.\n```"
  syntax:
    content: "public Long getDefaultTableLifetime()"
    return:
      type: "java.lang.Long"
- uid: "com.google.cloud.bigquery.DatasetInfo.getDescription()"
  id: "getDescription()"
  parent: "com.google.cloud.bigquery.DatasetInfo"
  langs:
  - "java"
  name: "getDescription()"
  nameWithType: "DatasetInfo.getDescription()"
  fullName: "com.google.cloud.bigquery.DatasetInfo.getDescription()"
  overload: "com.google.cloud.bigquery.DatasetInfo.getDescription*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns a user-friendly description for the dataset."
  syntax:
    content: "public String getDescription()"
    return:
      type: "java.lang.String"
- uid: "com.google.cloud.bigquery.DatasetInfo.getEtag()"
  id: "getEtag()"
  parent: "com.google.cloud.bigquery.DatasetInfo"
  langs:
  - "java"
  name: "getEtag()"
  nameWithType: "DatasetInfo.getEtag()"
  fullName: "com.google.cloud.bigquery.DatasetInfo.getEtag()"
  overload: "com.google.cloud.bigquery.DatasetInfo.getEtag*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns the hash of the dataset resource."
  syntax:
    content: "public String getEtag()"
    return:
      type: "java.lang.String"
- uid: "com.google.cloud.bigquery.DatasetInfo.getFriendlyName()"
  id: "getFriendlyName()"
  parent: "com.google.cloud.bigquery.DatasetInfo"
  langs:
  - "java"
  name: "getFriendlyName()"
  nameWithType: "DatasetInfo.getFriendlyName()"
  fullName: "com.google.cloud.bigquery.DatasetInfo.getFriendlyName()"
  overload: "com.google.cloud.bigquery.DatasetInfo.getFriendlyName*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns a user-friendly name for the dataset."
  syntax:
    content: "public String getFriendlyName()"
    return:
      type: "java.lang.String"
- uid: "com.google.cloud.bigquery.DatasetInfo.getGeneratedId()"
  id: "getGeneratedId()"
  parent: "com.google.cloud.bigquery.DatasetInfo"
  langs:
  - "java"
  name: "getGeneratedId()"
  nameWithType: "DatasetInfo.getGeneratedId()"
  fullName: "com.google.cloud.bigquery.DatasetInfo.getGeneratedId()"
  overload: "com.google.cloud.bigquery.DatasetInfo.getGeneratedId*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns the service-generated id for the dataset."
  syntax:
    content: "public String getGeneratedId()"
    return:
      type: "java.lang.String"
- uid: "com.google.cloud.bigquery.DatasetInfo.getLabels()"
  id: "getLabels()"
  parent: "com.google.cloud.bigquery.DatasetInfo"
  langs:
  - "java"
  name: "getLabels()"
  nameWithType: "DatasetInfo.getLabels()"
  fullName: "com.google.cloud.bigquery.DatasetInfo.getLabels()"
  overload: "com.google.cloud.bigquery.DatasetInfo.getLabels*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Return a map for labels applied to the dataset."
  syntax:
    content: "public Map<String,String> getLabels()"
    return:
      type: "java.util.Map<java.lang.String,java.lang.String>"
- uid: "com.google.cloud.bigquery.DatasetInfo.getLastModified()"
  id: "getLastModified()"
  parent: "com.google.cloud.bigquery.DatasetInfo"
  langs:
  - "java"
  name: "getLastModified()"
  nameWithType: "DatasetInfo.getLastModified()"
  fullName: "com.google.cloud.bigquery.DatasetInfo.getLastModified()"
  overload: "com.google.cloud.bigquery.DatasetInfo.getLastModified*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns the time when this dataset or any of its tables was last modified, in milliseconds since the epoch."
  syntax:
    content: "public Long getLastModified()"
    return:
      type: "java.lang.Long"
- uid: "com.google.cloud.bigquery.DatasetInfo.getLocation()"
  id: "getLocation()"
  parent: "com.google.cloud.bigquery.DatasetInfo"
  langs:
  - "java"
  name: "getLocation()"
  nameWithType: "DatasetInfo.getLocation()"
  fullName: "com.google.cloud.bigquery.DatasetInfo.getLocation()"
  overload: "com.google.cloud.bigquery.DatasetInfo.getLocation*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns the geographic location where the dataset should reside."
  syntax:
    content: "public String getLocation()"
    return:
      type: "java.lang.String"
- uid: "com.google.cloud.bigquery.DatasetInfo.getSelfLink()"
  id: "getSelfLink()"
  parent: "com.google.cloud.bigquery.DatasetInfo"
  langs:
  - "java"
  name: "getSelfLink()"
  nameWithType: "DatasetInfo.getSelfLink()"
  fullName: "com.google.cloud.bigquery.DatasetInfo.getSelfLink()"
  overload: "com.google.cloud.bigquery.DatasetInfo.getSelfLink*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns an URL that can be used to access the resource again. The returned URL can be used for get or update requests."
  syntax:
    content: "public String getSelfLink()"
    return:
      type: "java.lang.String"
- uid: "com.google.cloud.bigquery.DatasetInfo.hashCode()"
  id: "hashCode()"
  parent: "com.google.cloud.bigquery.DatasetInfo"
  langs:
  - "java"
  name: "hashCode()"
  nameWithType: "DatasetInfo.hashCode()"
  fullName: "com.google.cloud.bigquery.DatasetInfo.hashCode()"
  overload: "com.google.cloud.bigquery.DatasetInfo.hashCode*"
  overridden: "java.lang.Object.hashCode()"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public int hashCode()"
    return:
      type: "int"
- uid: "com.google.cloud.bigquery.DatasetInfo.newBuilder(com.google.cloud.bigquery.DatasetId)"
  id: "newBuilder(com.google.cloud.bigquery.DatasetId)"
  parent: "com.google.cloud.bigquery.DatasetInfo"
  langs:
  - "java"
  name: "newBuilder(DatasetId datasetId)"
  nameWithType: "DatasetInfo.newBuilder(DatasetId datasetId)"
  fullName: "com.google.cloud.bigquery.DatasetInfo.newBuilder(DatasetId datasetId)"
  overload: "com.google.cloud.bigquery.DatasetInfo.newBuilder*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns a builder for a `DatasetInfo` object given it's identity."
  syntax:
    content: "public static DatasetInfo.Builder newBuilder(DatasetId datasetId)"
    parameters:
    - id: "datasetId"
      type: "com.google.cloud.bigquery.DatasetId"
    return:
      type: "com.google.cloud.bigquery.DatasetInfo.Builder"
- uid: "com.google.cloud.bigquery.DatasetInfo.newBuilder(java.lang.String)"
  id: "newBuilder(java.lang.String)"
  parent: "com.google.cloud.bigquery.DatasetInfo"
  langs:
  - "java"
  name: "newBuilder(String datasetId)"
  nameWithType: "DatasetInfo.newBuilder(String datasetId)"
  fullName: "com.google.cloud.bigquery.DatasetInfo.newBuilder(String datasetId)"
  overload: "com.google.cloud.bigquery.DatasetInfo.newBuilder*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns a builder for a `DatasetInfo` object given it's user-defined id."
  syntax:
    content: "public static DatasetInfo.Builder newBuilder(String datasetId)"
    parameters:
    - id: "datasetId"
      type: "java.lang.String"
    return:
      type: "com.google.cloud.bigquery.DatasetInfo.Builder"
- uid: "com.google.cloud.bigquery.DatasetInfo.newBuilder(java.lang.String,java.lang.String)"
  id: "newBuilder(java.lang.String,java.lang.String)"
  parent: "com.google.cloud.bigquery.DatasetInfo"
  langs:
  - "java"
  name: "newBuilder(String projectId, String datasetId)"
  nameWithType: "DatasetInfo.newBuilder(String projectId, String datasetId)"
  fullName: "com.google.cloud.bigquery.DatasetInfo.newBuilder(String projectId, String datasetId)"
  overload: "com.google.cloud.bigquery.DatasetInfo.newBuilder*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns a builder for the DatasetInfo object given it's user-defined project and dataset ids."
  syntax:
    content: "public static DatasetInfo.Builder newBuilder(String projectId, String datasetId)"
    parameters:
    - id: "projectId"
      type: "java.lang.String"
    - id: "datasetId"
      type: "java.lang.String"
    return:
      type: "com.google.cloud.bigquery.DatasetInfo.Builder"
- uid: "com.google.cloud.bigquery.DatasetInfo.of(com.google.cloud.bigquery.DatasetId)"
  id: "of(com.google.cloud.bigquery.DatasetId)"
  parent: "com.google.cloud.bigquery.DatasetInfo"
  langs:
  - "java"
  name: "of(DatasetId datasetId)"
  nameWithType: "DatasetInfo.of(DatasetId datasetId)"
  fullName: "com.google.cloud.bigquery.DatasetInfo.of(DatasetId datasetId)"
  overload: "com.google.cloud.bigquery.DatasetInfo.of*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns a `DatasetInfo` object given it's identity."
  syntax:
    content: "public static DatasetInfo of(DatasetId datasetId)"
    parameters:
    - id: "datasetId"
      type: "com.google.cloud.bigquery.DatasetId"
    return:
      type: "com.google.cloud.bigquery.DatasetInfo"
- uid: "com.google.cloud.bigquery.DatasetInfo.of(java.lang.String)"
  id: "of(java.lang.String)"
  parent: "com.google.cloud.bigquery.DatasetInfo"
  langs:
  - "java"
  name: "of(String datasetId)"
  nameWithType: "DatasetInfo.of(String datasetId)"
  fullName: "com.google.cloud.bigquery.DatasetInfo.of(String datasetId)"
  overload: "com.google.cloud.bigquery.DatasetInfo.of*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns a `DatasetInfo` object given it's user-defined id."
  syntax:
    content: "public static DatasetInfo of(String datasetId)"
    parameters:
    - id: "datasetId"
      type: "java.lang.String"
    return:
      type: "com.google.cloud.bigquery.DatasetInfo"
- uid: "com.google.cloud.bigquery.DatasetInfo.toBuilder()"
  id: "toBuilder()"
  parent: "com.google.cloud.bigquery.DatasetInfo"
  langs:
  - "java"
  name: "toBuilder()"
  nameWithType: "DatasetInfo.toBuilder()"
  fullName: "com.google.cloud.bigquery.DatasetInfo.toBuilder()"
  overload: "com.google.cloud.bigquery.DatasetInfo.toBuilder*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns a builder for the dataset object."
  syntax:
    content: "public DatasetInfo.Builder toBuilder()"
    return:
      type: "com.google.cloud.bigquery.DatasetInfo.Builder"
- uid: "com.google.cloud.bigquery.DatasetInfo.toString()"
  id: "toString()"
  parent: "com.google.cloud.bigquery.DatasetInfo"
  langs:
  - "java"
  name: "toString()"
  nameWithType: "DatasetInfo.toString()"
  fullName: "com.google.cloud.bigquery.DatasetInfo.toString()"
  overload: "com.google.cloud.bigquery.DatasetInfo.toString*"
  overridden: "java.lang.Object.toString()"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public String toString()"
    return:
      type: "java.lang.String"
references:
- uid: "com.google.cloud.bigquery.DatasetInfo.BuilderImpl"
  spec.java:
  - uid: "com.google.cloud.bigquery.DatasetInfo.BuilderImpl"
    name: "BuilderImpl"
    fullName: "com.google.cloud.bigquery.DatasetInfo.BuilderImpl"
- uid: "com.google.cloud.bigquery.DatasetInfo.DatasetInfo*"
  name: "DatasetInfo"
  nameWithType: "DatasetInfo.DatasetInfo"
  fullName: "com.google.cloud.bigquery.DatasetInfo.DatasetInfo"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.DatasetId"
  name: "DatasetId"
  nameWithType: "DatasetId"
  fullName: "com.google.cloud.bigquery.DatasetId"
- uid: "com.google.cloud.bigquery.DatasetInfo.getDatasetId*"
  name: "getDatasetId"
  nameWithType: "DatasetInfo.getDatasetId"
  fullName: "com.google.cloud.bigquery.DatasetInfo.getDatasetId"
  package: "com.google.cloud.bigquery"
- uid: "java.util.List<com.google.cloud.bigquery.Acl>"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "com.google.cloud.bigquery.Acl"
    name: "Acl"
    fullName: "com.google.cloud.bigquery.Acl"
  - name: ">"
    fullName: ">"
- uid: "com.google.cloud.bigquery.DatasetInfo.getAcl*"
  name: "getAcl"
  nameWithType: "DatasetInfo.getAcl"
  fullName: "com.google.cloud.bigquery.DatasetInfo.getAcl"
  package: "com.google.cloud.bigquery"
- uid: "java.lang.Long"
  spec.java:
  - uid: "java.lang.Long"
    name: "Long"
    fullName: "java.lang.Long"
- uid: "com.google.cloud.bigquery.DatasetInfo.getCreationTime*"
  name: "getCreationTime"
  nameWithType: "DatasetInfo.getCreationTime"
  fullName: "com.google.cloud.bigquery.DatasetInfo.getCreationTime"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.DatasetInfo.getDefaultTableLifetime*"
  name: "getDefaultTableLifetime"
  nameWithType: "DatasetInfo.getDefaultTableLifetime"
  fullName: "com.google.cloud.bigquery.DatasetInfo.getDefaultTableLifetime"
  package: "com.google.cloud.bigquery"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.google.cloud.bigquery.DatasetInfo.getDescription*"
  name: "getDescription"
  nameWithType: "DatasetInfo.getDescription"
  fullName: "com.google.cloud.bigquery.DatasetInfo.getDescription"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.DatasetInfo.getEtag*"
  name: "getEtag"
  nameWithType: "DatasetInfo.getEtag"
  fullName: "com.google.cloud.bigquery.DatasetInfo.getEtag"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.DatasetInfo.getFriendlyName*"
  name: "getFriendlyName"
  nameWithType: "DatasetInfo.getFriendlyName"
  fullName: "com.google.cloud.bigquery.DatasetInfo.getFriendlyName"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.DatasetInfo.getGeneratedId*"
  name: "getGeneratedId"
  nameWithType: "DatasetInfo.getGeneratedId"
  fullName: "com.google.cloud.bigquery.DatasetInfo.getGeneratedId"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.DatasetInfo.getLastModified*"
  name: "getLastModified"
  nameWithType: "DatasetInfo.getLastModified"
  fullName: "com.google.cloud.bigquery.DatasetInfo.getLastModified"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.DatasetInfo.getLocation*"
  name: "getLocation"
  nameWithType: "DatasetInfo.getLocation"
  fullName: "com.google.cloud.bigquery.DatasetInfo.getLocation"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.DatasetInfo.getSelfLink*"
  name: "getSelfLink"
  nameWithType: "DatasetInfo.getSelfLink"
  fullName: "com.google.cloud.bigquery.DatasetInfo.getSelfLink"
  package: "com.google.cloud.bigquery"
- uid: "java.util.Map<java.lang.String,java.lang.String>"
  spec.java:
  - uid: "java.util.Map"
    name: "Map"
    fullName: "java.util.Map"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ","
    fullName: ","
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ">"
    fullName: ">"
- uid: "com.google.cloud.bigquery.DatasetInfo.getLabels*"
  name: "getLabels"
  nameWithType: "DatasetInfo.getLabels"
  fullName: "com.google.cloud.bigquery.DatasetInfo.getLabels"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.EncryptionConfiguration"
  name: "EncryptionConfiguration"
  nameWithType: "EncryptionConfiguration"
  fullName: "com.google.cloud.bigquery.EncryptionConfiguration"
- uid: "com.google.cloud.bigquery.DatasetInfo.getDefaultEncryptionConfiguration*"
  name: "getDefaultEncryptionConfiguration"
  nameWithType: "DatasetInfo.getDefaultEncryptionConfiguration"
  fullName: "com.google.cloud.bigquery.DatasetInfo.getDefaultEncryptionConfiguration"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.DatasetInfo.getDefaultPartitionExpirationMs*"
  name: "getDefaultPartitionExpirationMs"
  nameWithType: "DatasetInfo.getDefaultPartitionExpirationMs"
  fullName: "com.google.cloud.bigquery.DatasetInfo.getDefaultPartitionExpirationMs"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.DatasetInfo.Builder"
  name: "DatasetInfo.Builder"
  nameWithType: "DatasetInfo.Builder"
  fullName: "com.google.cloud.bigquery.DatasetInfo.Builder"
- uid: "com.google.cloud.bigquery.DatasetInfo.toBuilder*"
  name: "toBuilder"
  nameWithType: "DatasetInfo.toBuilder"
  fullName: "com.google.cloud.bigquery.DatasetInfo.toBuilder"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.DatasetInfo.toString*"
  name: "toString"
  nameWithType: "DatasetInfo.toString"
  fullName: "com.google.cloud.bigquery.DatasetInfo.toString"
  package: "com.google.cloud.bigquery"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "com.google.cloud.bigquery.DatasetInfo.hashCode*"
  name: "hashCode"
  nameWithType: "DatasetInfo.hashCode"
  fullName: "com.google.cloud.bigquery.DatasetInfo.hashCode"
  package: "com.google.cloud.bigquery"
- uid: "java.lang.Object"
  spec.java:
  - uid: "java.lang.Object"
    name: "Object"
    fullName: "java.lang.Object"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "com.google.cloud.bigquery.DatasetInfo.equals*"
  name: "equals"
  nameWithType: "DatasetInfo.equals"
  fullName: "com.google.cloud.bigquery.DatasetInfo.equals"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.DatasetInfo.newBuilder*"
  name: "newBuilder"
  nameWithType: "DatasetInfo.newBuilder"
  fullName: "com.google.cloud.bigquery.DatasetInfo.newBuilder"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.DatasetInfo.of*"
  name: "of"
  nameWithType: "DatasetInfo.of"
  fullName: "com.google.cloud.bigquery.DatasetInfo.of"
  package: "com.google.cloud.bigquery"
- uid: "java.io.Serializable"
  name: "Serializable"
  nameWithType: "Serializable"
  fullName: "java.io.Serializable"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.util.List"
  name: "List"
  nameWithType: "List"
  fullName: "java.util.List"
- uid: "com.google.cloud.bigquery.Acl"
  name: "Acl"
  nameWithType: "Acl"
  fullName: "com.google.cloud.bigquery.Acl"
- uid: "java.util.Map"
  name: "Map"
  nameWithType: "Map"
  fullName: "java.util.Map"
- uid: "java.lang.String,java.lang.String"
  name: "String,String"
  nameWithType: "String,String"
  fullName: "java.lang.String,java.lang.String"
