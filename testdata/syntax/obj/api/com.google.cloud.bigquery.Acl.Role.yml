### YamlMime:ManagedReference
items:
- uid: "com.google.cloud.bigquery.Acl.Role"
  id: "Role"
  parent: "com.google.cloud.bigquery"
  children:
  - "com.google.cloud.bigquery.Acl.Role.OWNER"
  - "com.google.cloud.bigquery.Acl.Role.READER"
  - "com.google.cloud.bigquery.Acl.Role.WRITER"
  - "com.google.cloud.bigquery.Acl.Role.valueOf(java.lang.String)"
  - "com.google.cloud.bigquery.Acl.Role.valueOfStrict(java.lang.String)"
  - "com.google.cloud.bigquery.Acl.Role.values()"
  langs:
  - "java"
  name: "Acl.Role"
  nameWithType: "Acl.Role"
  fullName: "com.google.cloud.bigquery.Acl.Role"
  type: "Class"
  package: "com.google.cloud.bigquery"
  summary: "Dataset roles supported by BigQuery."
  syntax:
    content: "public static final class Acl.Role extends StringEnumValue"
  inheritance:
  - "java.lang.Object"
  - "com.google.cloud.StringEnumValue"
  inheritedMembers:
  - "com.google.cloud.StringEnumValue.equals(java.lang.Object)"
  - "com.google.cloud.StringEnumValue.hashCode()"
  - "com.google.cloud.StringEnumValue.name()"
  - "com.google.cloud.StringEnumValue.toString()"
  - "java.lang.Object.clone()"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.google.cloud.bigquery.Acl.Role.OWNER"
  id: "OWNER"
  parent: "com.google.cloud.bigquery.Acl.Role"
  langs:
  - "java"
  name: "OWNER"
  nameWithType: "Acl.Role.OWNER"
  fullName: "com.google.cloud.bigquery.Acl.Role.OWNER"
  type: "Field"
  package: "com.google.cloud.bigquery"
  summary: "Same as <xref uid=\"com.google.cloud.bigquery.Acl.Role.WRITER\" data-throw-if-not-resolved=\"false\">#WRITER</xref> plus can update and delete the dataset."
  syntax:
    content: "public static final Acl.Role OWNER"
    return:
      type: "com.google.cloud.bigquery.Acl.Role"
- uid: "com.google.cloud.bigquery.Acl.Role.READER"
  id: "READER"
  parent: "com.google.cloud.bigquery.Acl.Role"
  langs:
  - "java"
  name: "READER"
  nameWithType: "Acl.Role.READER"
  fullName: "com.google.cloud.bigquery.Acl.Role.READER"
  type: "Field"
  package: "com.google.cloud.bigquery"
  summary: "Can read, query, copy or export tables in the dataset."
  syntax:
    content: "public static final Acl.Role READER"
    return:
      type: "com.google.cloud.bigquery.Acl.Role"
- uid: "com.google.cloud.bigquery.Acl.Role.Role(java.lang.String)"
  id: "Role(java.lang.String)"
  parent: "com.google.cloud.bigquery.Acl.Role"
  langs:
  - "java"
  name: "Role(String constant)"
  nameWithType: "Acl.Role.Role(String constant)"
  fullName: "com.google.cloud.bigquery.Acl.Role.Role(String constant)"
  overload: "com.google.cloud.bigquery.Acl.Role.Role*"
  type: "Constructor"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "private Role(String constant)"
    parameters:
    - id: "constant"
      type: "java.lang.String"
- uid: "com.google.cloud.bigquery.Acl.Role.WRITER"
  id: "WRITER"
  parent: "com.google.cloud.bigquery.Acl.Role"
  langs:
  - "java"
  name: "WRITER"
  nameWithType: "Acl.Role.WRITER"
  fullName: "com.google.cloud.bigquery.Acl.Role.WRITER"
  type: "Field"
  package: "com.google.cloud.bigquery"
  summary: "Same as <xref uid=\"com.google.cloud.bigquery.Acl.Role.READER\" data-throw-if-not-resolved=\"false\">#READER</xref> plus can edit or append data in the dataset."
  syntax:
    content: "public static final Acl.Role WRITER"
    return:
      type: "com.google.cloud.bigquery.Acl.Role"
- uid: "com.google.cloud.bigquery.Acl.Role.valueOf(java.lang.String)"
  id: "valueOf(java.lang.String)"
  parent: "com.google.cloud.bigquery.Acl.Role"
  langs:
  - "java"
  name: "valueOf(String constant)"
  nameWithType: "Acl.Role.valueOf(String constant)"
  fullName: "com.google.cloud.bigquery.Acl.Role.valueOf(String constant)"
  overload: "com.google.cloud.bigquery.Acl.Role.valueOf*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Get the Role for the given String constant, and allow unrecognized values."
  syntax:
    content: "public static Acl.Role valueOf(String constant)"
    parameters:
    - id: "constant"
      type: "java.lang.String"
    return:
      type: "com.google.cloud.bigquery.Acl.Role"
- uid: "com.google.cloud.bigquery.Acl.Role.valueOfStrict(java.lang.String)"
  id: "valueOfStrict(java.lang.String)"
  parent: "com.google.cloud.bigquery.Acl.Role"
  langs:
  - "java"
  name: "valueOfStrict(String constant)"
  nameWithType: "Acl.Role.valueOfStrict(String constant)"
  fullName: "com.google.cloud.bigquery.Acl.Role.valueOfStrict(String constant)"
  overload: "com.google.cloud.bigquery.Acl.Role.valueOfStrict*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Get the Role for the given String constant, and throw an exception if the constant is not recognized."
  syntax:
    content: "public static Acl.Role valueOfStrict(String constant)"
    parameters:
    - id: "constant"
      type: "java.lang.String"
    return:
      type: "com.google.cloud.bigquery.Acl.Role"
- uid: "com.google.cloud.bigquery.Acl.Role.values()"
  id: "values()"
  parent: "com.google.cloud.bigquery.Acl.Role"
  langs:
  - "java"
  name: "values()"
  nameWithType: "Acl.Role.values()"
  fullName: "com.google.cloud.bigquery.Acl.Role.values()"
  overload: "com.google.cloud.bigquery.Acl.Role.values*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Return the known values for Role."
  syntax:
    content: "public static Acl.Role[] values()"
    return:
      type: "com.google.cloud.bigquery.Acl.Role[]"
references:
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.google.cloud.bigquery.Acl.Role.Role*"
  name: "Role"
  nameWithType: "Acl.Role.Role"
  fullName: "com.google.cloud.bigquery.Acl.Role.Role"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.Acl.Role.valueOfStrict*"
  name: "valueOfStrict"
  nameWithType: "Acl.Role.valueOfStrict"
  fullName: "com.google.cloud.bigquery.Acl.Role.valueOfStrict"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.Acl.Role.valueOf*"
  name: "valueOf"
  nameWithType: "Acl.Role.valueOf"
  fullName: "com.google.cloud.bigquery.Acl.Role.valueOf"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.Acl.Role[]"
  spec.java:
  - uid: "com.google.cloud.bigquery.Acl.Role"
    name: "Role"
    fullName: "com.google.cloud.bigquery.Acl.Role"
  - name: "[]"
    fullName: "[]"
- uid: "com.google.cloud.bigquery.Acl.Role.values*"
  name: "values"
  nameWithType: "Acl.Role.values"
  fullName: "com.google.cloud.bigquery.Acl.Role.values"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.StringEnumValue"
  name: "StringEnumValue"
  nameWithType: "StringEnumValue"
  fullName: "com.google.cloud.StringEnumValue"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "com.google.cloud.StringEnumValue.name()"
  name: "StringEnumValue.name()"
  nameWithType: "StringEnumValue.name()"
  fullName: "com.google.cloud.StringEnumValue.name()"
- uid: "com.google.cloud.StringEnumValue.toString()"
  name: "StringEnumValue.toString()"
  nameWithType: "StringEnumValue.toString()"
  fullName: "com.google.cloud.StringEnumValue.toString()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "com.google.cloud.StringEnumValue.hashCode()"
  name: "StringEnumValue.hashCode()"
  nameWithType: "StringEnumValue.hashCode()"
  fullName: "com.google.cloud.StringEnumValue.hashCode()"
- uid: "com.google.cloud.StringEnumValue.equals(java.lang.Object)"
  name: "StringEnumValue.equals(Object)"
  nameWithType: "StringEnumValue.equals(Object)"
  fullName: "com.google.cloud.StringEnumValue.equals(java.lang.Object)"
