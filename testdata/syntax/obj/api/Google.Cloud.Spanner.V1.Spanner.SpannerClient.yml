### YamlMime:ManagedReference
items:
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerClient
  commentId: T:Google.Cloud.Spanner.V1.Spanner.SpannerClient
  id: Spanner.SpannerClient
  parent: Google.Cloud.Spanner.V1
  children:
  - Google.Cloud.Spanner.V1.Spanner.SpannerClient.#ctor
  - Google.Cloud.Spanner.V1.Spanner.SpannerClient.#ctor(Grpc.Core.CallInvoker)
  - Google.Cloud.Spanner.V1.Spanner.SpannerClient.#ctor(Grpc.Core.Channel)
  - Google.Cloud.Spanner.V1.Spanner.SpannerClient.#ctor(Grpc.Core.ChannelBase)
  - Google.Cloud.Spanner.V1.Spanner.SpannerClient.#ctor(Grpc.Core.ClientBase.ClientBaseConfiguration)
  - Google.Cloud.Spanner.V1.Spanner.SpannerClient.BatchCreateSessions(Google.Cloud.Spanner.V1.BatchCreateSessionsRequest,Grpc.Core.CallOptions)
  - Google.Cloud.Spanner.V1.Spanner.SpannerClient.BatchCreateSessions(Google.Cloud.Spanner.V1.BatchCreateSessionsRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - Google.Cloud.Spanner.V1.Spanner.SpannerClient.BatchCreateSessionsAsync(Google.Cloud.Spanner.V1.BatchCreateSessionsRequest,Grpc.Core.CallOptions)
  - Google.Cloud.Spanner.V1.Spanner.SpannerClient.BatchCreateSessionsAsync(Google.Cloud.Spanner.V1.BatchCreateSessionsRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - Google.Cloud.Spanner.V1.Spanner.SpannerClient.BeginTransaction(Google.Cloud.Spanner.V1.BeginTransactionRequest,Grpc.Core.CallOptions)
  - Google.Cloud.Spanner.V1.Spanner.SpannerClient.BeginTransaction(Google.Cloud.Spanner.V1.BeginTransactionRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - Google.Cloud.Spanner.V1.Spanner.SpannerClient.BeginTransactionAsync(Google.Cloud.Spanner.V1.BeginTransactionRequest,Grpc.Core.CallOptions)
  - Google.Cloud.Spanner.V1.Spanner.SpannerClient.BeginTransactionAsync(Google.Cloud.Spanner.V1.BeginTransactionRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - Google.Cloud.Spanner.V1.Spanner.SpannerClient.Commit(Google.Cloud.Spanner.V1.CommitRequest,Grpc.Core.CallOptions)
  - Google.Cloud.Spanner.V1.Spanner.SpannerClient.Commit(Google.Cloud.Spanner.V1.CommitRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - Google.Cloud.Spanner.V1.Spanner.SpannerClient.CommitAsync(Google.Cloud.Spanner.V1.CommitRequest,Grpc.Core.CallOptions)
  - Google.Cloud.Spanner.V1.Spanner.SpannerClient.CommitAsync(Google.Cloud.Spanner.V1.CommitRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - Google.Cloud.Spanner.V1.Spanner.SpannerClient.CreateSession(Google.Cloud.Spanner.V1.CreateSessionRequest,Grpc.Core.CallOptions)
  - Google.Cloud.Spanner.V1.Spanner.SpannerClient.CreateSession(Google.Cloud.Spanner.V1.CreateSessionRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - Google.Cloud.Spanner.V1.Spanner.SpannerClient.CreateSessionAsync(Google.Cloud.Spanner.V1.CreateSessionRequest,Grpc.Core.CallOptions)
  - Google.Cloud.Spanner.V1.Spanner.SpannerClient.CreateSessionAsync(Google.Cloud.Spanner.V1.CreateSessionRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - Google.Cloud.Spanner.V1.Spanner.SpannerClient.DeleteSession(Google.Cloud.Spanner.V1.DeleteSessionRequest,Grpc.Core.CallOptions)
  - Google.Cloud.Spanner.V1.Spanner.SpannerClient.DeleteSession(Google.Cloud.Spanner.V1.DeleteSessionRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - Google.Cloud.Spanner.V1.Spanner.SpannerClient.DeleteSessionAsync(Google.Cloud.Spanner.V1.DeleteSessionRequest,Grpc.Core.CallOptions)
  - Google.Cloud.Spanner.V1.Spanner.SpannerClient.DeleteSessionAsync(Google.Cloud.Spanner.V1.DeleteSessionRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - Google.Cloud.Spanner.V1.Spanner.SpannerClient.ExecuteBatchDml(Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest,Grpc.Core.CallOptions)
  - Google.Cloud.Spanner.V1.Spanner.SpannerClient.ExecuteBatchDml(Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - Google.Cloud.Spanner.V1.Spanner.SpannerClient.ExecuteBatchDmlAsync(Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest,Grpc.Core.CallOptions)
  - Google.Cloud.Spanner.V1.Spanner.SpannerClient.ExecuteBatchDmlAsync(Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - Google.Cloud.Spanner.V1.Spanner.SpannerClient.ExecuteSql(Google.Cloud.Spanner.V1.ExecuteSqlRequest,Grpc.Core.CallOptions)
  - Google.Cloud.Spanner.V1.Spanner.SpannerClient.ExecuteSql(Google.Cloud.Spanner.V1.ExecuteSqlRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - Google.Cloud.Spanner.V1.Spanner.SpannerClient.ExecuteSqlAsync(Google.Cloud.Spanner.V1.ExecuteSqlRequest,Grpc.Core.CallOptions)
  - Google.Cloud.Spanner.V1.Spanner.SpannerClient.ExecuteSqlAsync(Google.Cloud.Spanner.V1.ExecuteSqlRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - Google.Cloud.Spanner.V1.Spanner.SpannerClient.ExecuteStreamingSql(Google.Cloud.Spanner.V1.ExecuteSqlRequest,Grpc.Core.CallOptions)
  - Google.Cloud.Spanner.V1.Spanner.SpannerClient.ExecuteStreamingSql(Google.Cloud.Spanner.V1.ExecuteSqlRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - Google.Cloud.Spanner.V1.Spanner.SpannerClient.GetSession(Google.Cloud.Spanner.V1.GetSessionRequest,Grpc.Core.CallOptions)
  - Google.Cloud.Spanner.V1.Spanner.SpannerClient.GetSession(Google.Cloud.Spanner.V1.GetSessionRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - Google.Cloud.Spanner.V1.Spanner.SpannerClient.GetSessionAsync(Google.Cloud.Spanner.V1.GetSessionRequest,Grpc.Core.CallOptions)
  - Google.Cloud.Spanner.V1.Spanner.SpannerClient.GetSessionAsync(Google.Cloud.Spanner.V1.GetSessionRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - Google.Cloud.Spanner.V1.Spanner.SpannerClient.ListSessions(Google.Cloud.Spanner.V1.ListSessionsRequest,Grpc.Core.CallOptions)
  - Google.Cloud.Spanner.V1.Spanner.SpannerClient.ListSessions(Google.Cloud.Spanner.V1.ListSessionsRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - Google.Cloud.Spanner.V1.Spanner.SpannerClient.ListSessionsAsync(Google.Cloud.Spanner.V1.ListSessionsRequest,Grpc.Core.CallOptions)
  - Google.Cloud.Spanner.V1.Spanner.SpannerClient.ListSessionsAsync(Google.Cloud.Spanner.V1.ListSessionsRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - Google.Cloud.Spanner.V1.Spanner.SpannerClient.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
  - Google.Cloud.Spanner.V1.Spanner.SpannerClient.PartitionQuery(Google.Cloud.Spanner.V1.PartitionQueryRequest,Grpc.Core.CallOptions)
  - Google.Cloud.Spanner.V1.Spanner.SpannerClient.PartitionQuery(Google.Cloud.Spanner.V1.PartitionQueryRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - Google.Cloud.Spanner.V1.Spanner.SpannerClient.PartitionQueryAsync(Google.Cloud.Spanner.V1.PartitionQueryRequest,Grpc.Core.CallOptions)
  - Google.Cloud.Spanner.V1.Spanner.SpannerClient.PartitionQueryAsync(Google.Cloud.Spanner.V1.PartitionQueryRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - Google.Cloud.Spanner.V1.Spanner.SpannerClient.PartitionRead(Google.Cloud.Spanner.V1.PartitionReadRequest,Grpc.Core.CallOptions)
  - Google.Cloud.Spanner.V1.Spanner.SpannerClient.PartitionRead(Google.Cloud.Spanner.V1.PartitionReadRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - Google.Cloud.Spanner.V1.Spanner.SpannerClient.PartitionReadAsync(Google.Cloud.Spanner.V1.PartitionReadRequest,Grpc.Core.CallOptions)
  - Google.Cloud.Spanner.V1.Spanner.SpannerClient.PartitionReadAsync(Google.Cloud.Spanner.V1.PartitionReadRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - Google.Cloud.Spanner.V1.Spanner.SpannerClient.Read(Google.Cloud.Spanner.V1.ReadRequest,Grpc.Core.CallOptions)
  - Google.Cloud.Spanner.V1.Spanner.SpannerClient.Read(Google.Cloud.Spanner.V1.ReadRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - Google.Cloud.Spanner.V1.Spanner.SpannerClient.ReadAsync(Google.Cloud.Spanner.V1.ReadRequest,Grpc.Core.CallOptions)
  - Google.Cloud.Spanner.V1.Spanner.SpannerClient.ReadAsync(Google.Cloud.Spanner.V1.ReadRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - Google.Cloud.Spanner.V1.Spanner.SpannerClient.Rollback(Google.Cloud.Spanner.V1.RollbackRequest,Grpc.Core.CallOptions)
  - Google.Cloud.Spanner.V1.Spanner.SpannerClient.Rollback(Google.Cloud.Spanner.V1.RollbackRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - Google.Cloud.Spanner.V1.Spanner.SpannerClient.RollbackAsync(Google.Cloud.Spanner.V1.RollbackRequest,Grpc.Core.CallOptions)
  - Google.Cloud.Spanner.V1.Spanner.SpannerClient.RollbackAsync(Google.Cloud.Spanner.V1.RollbackRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - Google.Cloud.Spanner.V1.Spanner.SpannerClient.StreamingRead(Google.Cloud.Spanner.V1.ReadRequest,Grpc.Core.CallOptions)
  - Google.Cloud.Spanner.V1.Spanner.SpannerClient.StreamingRead(Google.Cloud.Spanner.V1.ReadRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: Spanner.SpannerClient
  nameWithType: Spanner.SpannerClient
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerClient
  type: Class
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: SpannerClient
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
    startLine: 454
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: Client for Spanner
  example: []
  syntax:
    content: 'public class SpannerClient : ClientBase<Spanner.SpannerClient>'
    content.vb: >-
      Public Class SpannerClient
          Inherits ClientBase(Of Spanner.SpannerClient)
  inheritance:
  - System.Object
  - Grpc.Core.ClientBase
  - Grpc.Core.ClientBase{Google.Cloud.Spanner.V1.Spanner.SpannerClient}
  inheritedMembers:
  - Grpc.Core.ClientBase{Google.Cloud.Spanner.V1.Spanner.SpannerClient}.WithHost(System.String)
  - Grpc.Core.ClientBase.CallInvoker
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerClient.#ctor(Grpc.Core.Channel)
  commentId: M:Google.Cloud.Spanner.V1.Spanner.SpannerClient.#ctor(Grpc.Core.Channel)
  id: '#ctor(Grpc.Core.Channel)'
  parent: Google.Cloud.Spanner.V1.Spanner.SpannerClient
  langs:
  - csharp
  - vb
  name: SpannerClient(Channel)
  nameWithType: Spanner.SpannerClient.SpannerClient(Channel)
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerClient.SpannerClient(Grpc.Core.Channel)
  type: Constructor
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/GrpcCtorCompatibility.g.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: .ctor
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/GrpcCtorCompatibility.g.cs
    startLine: 28
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: Creates a new client using a channel.
  example: []
  syntax:
    content: >-
      [Obsolete("This constructor overload is present for compatibility only, and will be removed in the next major version")]

      public SpannerClient(Channel channel)
    parameters:
    - id: channel
      type: Grpc.Core.Channel
      description: The channel to use to make remote calls.
    content.vb: >-
      <Obsolete("This constructor overload is present for compatibility only, and will be removed in the next major version")>

      Public Sub New(channel As Channel)
  overload: Google.Cloud.Spanner.V1.Spanner.SpannerClient.#ctor*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This constructor overload is present for compatibility only, and will be removed in the next major version
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerClient.#ctor(Grpc.Core.ChannelBase)
  commentId: M:Google.Cloud.Spanner.V1.Spanner.SpannerClient.#ctor(Grpc.Core.ChannelBase)
  id: '#ctor(Grpc.Core.ChannelBase)'
  parent: Google.Cloud.Spanner.V1.Spanner.SpannerClient
  langs:
  - csharp
  - vb
  name: SpannerClient(ChannelBase)
  nameWithType: Spanner.SpannerClient.SpannerClient(ChannelBase)
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerClient.SpannerClient(Grpc.Core.ChannelBase)
  type: Constructor
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: .ctor
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
    startLine: 458
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: Creates a new client for Spanner
  example: []
  syntax:
    content: public SpannerClient(ChannelBase channel)
    parameters:
    - id: channel
      type: Grpc.Core.ChannelBase
      description: The channel to use to make remote calls.
    content.vb: Public Sub New(channel As ChannelBase)
  overload: Google.Cloud.Spanner.V1.Spanner.SpannerClient.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerClient.#ctor(Grpc.Core.CallInvoker)
  commentId: M:Google.Cloud.Spanner.V1.Spanner.SpannerClient.#ctor(Grpc.Core.CallInvoker)
  id: '#ctor(Grpc.Core.CallInvoker)'
  parent: Google.Cloud.Spanner.V1.Spanner.SpannerClient
  langs:
  - csharp
  - vb
  name: SpannerClient(CallInvoker)
  nameWithType: Spanner.SpannerClient.SpannerClient(CallInvoker)
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerClient.SpannerClient(Grpc.Core.CallInvoker)
  type: Constructor
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: .ctor
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
    startLine: 463
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: Creates a new client for Spanner that uses a custom <code>CallInvoker</code>.
  example: []
  syntax:
    content: public SpannerClient(CallInvoker callInvoker)
    parameters:
    - id: callInvoker
      type: Grpc.Core.CallInvoker
      description: The callInvoker to use to make remote calls.
    content.vb: Public Sub New(callInvoker As CallInvoker)
  overload: Google.Cloud.Spanner.V1.Spanner.SpannerClient.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerClient.#ctor
  commentId: M:Google.Cloud.Spanner.V1.Spanner.SpannerClient.#ctor
  id: '#ctor'
  parent: Google.Cloud.Spanner.V1.Spanner.SpannerClient
  langs:
  - csharp
  - vb
  name: SpannerClient()
  nameWithType: Spanner.SpannerClient.SpannerClient()
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerClient.SpannerClient()
  type: Constructor
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: .ctor
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
    startLine: 467
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: Protected parameterless constructor to allow creation of test doubles.
  example: []
  syntax:
    content: protected SpannerClient()
    content.vb: Protected Sub New
  overload: Google.Cloud.Spanner.V1.Spanner.SpannerClient.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerClient.#ctor(Grpc.Core.ClientBase.ClientBaseConfiguration)
  commentId: M:Google.Cloud.Spanner.V1.Spanner.SpannerClient.#ctor(Grpc.Core.ClientBase.ClientBaseConfiguration)
  id: '#ctor(Grpc.Core.ClientBase.ClientBaseConfiguration)'
  parent: Google.Cloud.Spanner.V1.Spanner.SpannerClient
  langs:
  - csharp
  - vb
  name: SpannerClient(ClientBase.ClientBaseConfiguration)
  nameWithType: Spanner.SpannerClient.SpannerClient(ClientBase.ClientBaseConfiguration)
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerClient.SpannerClient(Grpc.Core.ClientBase.ClientBaseConfiguration)
  type: Constructor
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: .ctor
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
    startLine: 472
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: Protected constructor to allow creation of configured clients.
  example: []
  syntax:
    content: protected SpannerClient(ClientBase.ClientBaseConfiguration configuration)
    parameters:
    - id: configuration
      type: Grpc.Core.ClientBase.ClientBaseConfiguration
      description: The client configuration.
    content.vb: Protected Sub New(configuration As ClientBase.ClientBaseConfiguration)
  overload: Google.Cloud.Spanner.V1.Spanner.SpannerClient.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerClient.CreateSession(Google.Cloud.Spanner.V1.CreateSessionRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:Google.Cloud.Spanner.V1.Spanner.SpannerClient.CreateSession(Google.Cloud.Spanner.V1.CreateSessionRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: CreateSession(Google.Cloud.Spanner.V1.CreateSessionRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: Google.Cloud.Spanner.V1.Spanner.SpannerClient
  langs:
  - csharp
  - vb
  name: CreateSession(CreateSessionRequest, Metadata, Nullable<DateTime>, CancellationToken)
  nameWithType: Spanner.SpannerClient.CreateSession(CreateSessionRequest, Metadata, Nullable<DateTime>, CancellationToken)
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerClient.CreateSession(Google.Cloud.Spanner.V1.CreateSessionRequest, Grpc.Core.Metadata, System.Nullable<System.DateTime>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: CreateSession
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
    startLine: 502
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nCreates a new session. A session can be used to perform\ntransactions that read and/or modify data in a Cloud Spanner database.\nSessions are meant to be reused for many consecutive\ntransactions.\n\nSessions can only execute one transaction at a time. To execute\nmultiple concurrent read-write/write-only transactions, create\nmultiple sessions. Note that standalone reads and queries use a\ntransaction internally, and count toward the one transaction\nlimit.\n\nActive sessions use additional server resources, so it is a good idea to\ndelete idle and unneeded sessions.\nAside from explicit deletes, Cloud Spanner may delete sessions for which no\noperations are sent for more than an hour. If a session is deleted,\nrequests to it return `NOT_FOUND`.\n\nIdle sessions can be kept alive by sending a trivial SQL query\nperiodically, e.g., `&quot;SELECT 1&quot;`.\n"
  example: []
  syntax:
    content: public virtual Session CreateSession(CreateSessionRequest request, Metadata headers = null, DateTime? deadline = default(DateTime? ), CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: request
      type: Google.Cloud.Spanner.V1.CreateSessionRequest
      description: The request to send to the server.
    - id: headers
      type: Grpc.Core.Metadata
      description: The initial metadata to send with the call. This parameter is optional.
    - id: deadline
      type: System.Nullable{System.DateTime}
      description: An optional deadline for the call. The call will be cancelled if deadline is hit.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: An optional token for canceling the call.
    return:
      type: Google.Cloud.Spanner.V1.Session
      description: The response received from the server.
    content.vb: Public Overridable Function CreateSession(request As CreateSessionRequest, headers As Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As Session
  overload: Google.Cloud.Spanner.V1.Spanner.SpannerClient.CreateSession*
  nameWithType.vb: Spanner.SpannerClient.CreateSession(CreateSessionRequest, Metadata, Nullable(Of DateTime), CancellationToken)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Google.Cloud.Spanner.V1.Spanner.SpannerClient.CreateSession(Google.Cloud.Spanner.V1.CreateSessionRequest, Grpc.Core.Metadata, System.Nullable(Of System.DateTime), System.Threading.CancellationToken)
  name.vb: CreateSession(CreateSessionRequest, Metadata, Nullable(Of DateTime), CancellationToken)
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerClient.CreateSession(Google.Cloud.Spanner.V1.CreateSessionRequest,Grpc.Core.CallOptions)
  commentId: M:Google.Cloud.Spanner.V1.Spanner.SpannerClient.CreateSession(Google.Cloud.Spanner.V1.CreateSessionRequest,Grpc.Core.CallOptions)
  id: CreateSession(Google.Cloud.Spanner.V1.CreateSessionRequest,Grpc.Core.CallOptions)
  parent: Google.Cloud.Spanner.V1.Spanner.SpannerClient
  langs:
  - csharp
  - vb
  name: CreateSession(CreateSessionRequest, CallOptions)
  nameWithType: Spanner.SpannerClient.CreateSession(CreateSessionRequest, CallOptions)
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerClient.CreateSession(Google.Cloud.Spanner.V1.CreateSessionRequest, Grpc.Core.CallOptions)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: CreateSession
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
    startLine: 530
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nCreates a new session. A session can be used to perform\ntransactions that read and/or modify data in a Cloud Spanner database.\nSessions are meant to be reused for many consecutive\ntransactions.\n\nSessions can only execute one transaction at a time. To execute\nmultiple concurrent read-write/write-only transactions, create\nmultiple sessions. Note that standalone reads and queries use a\ntransaction internally, and count toward the one transaction\nlimit.\n\nActive sessions use additional server resources, so it is a good idea to\ndelete idle and unneeded sessions.\nAside from explicit deletes, Cloud Spanner may delete sessions for which no\noperations are sent for more than an hour. If a session is deleted,\nrequests to it return `NOT_FOUND`.\n\nIdle sessions can be kept alive by sending a trivial SQL query\nperiodically, e.g., `&quot;SELECT 1&quot;`.\n"
  example: []
  syntax:
    content: public virtual Session CreateSession(CreateSessionRequest request, CallOptions options)
    parameters:
    - id: request
      type: Google.Cloud.Spanner.V1.CreateSessionRequest
      description: The request to send to the server.
    - id: options
      type: Grpc.Core.CallOptions
      description: The options for the call.
    return:
      type: Google.Cloud.Spanner.V1.Session
      description: The response received from the server.
    content.vb: Public Overridable Function CreateSession(request As CreateSessionRequest, options As CallOptions) As Session
  overload: Google.Cloud.Spanner.V1.Spanner.SpannerClient.CreateSession*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerClient.CreateSessionAsync(Google.Cloud.Spanner.V1.CreateSessionRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:Google.Cloud.Spanner.V1.Spanner.SpannerClient.CreateSessionAsync(Google.Cloud.Spanner.V1.CreateSessionRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: CreateSessionAsync(Google.Cloud.Spanner.V1.CreateSessionRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: Google.Cloud.Spanner.V1.Spanner.SpannerClient
  langs:
  - csharp
  - vb
  name: CreateSessionAsync(CreateSessionRequest, Metadata, Nullable<DateTime>, CancellationToken)
  nameWithType: Spanner.SpannerClient.CreateSessionAsync(CreateSessionRequest, Metadata, Nullable<DateTime>, CancellationToken)
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerClient.CreateSessionAsync(Google.Cloud.Spanner.V1.CreateSessionRequest, Grpc.Core.Metadata, System.Nullable<System.DateTime>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: CreateSessionAsync
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
    startLine: 560
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nCreates a new session. A session can be used to perform\ntransactions that read and/or modify data in a Cloud Spanner database.\nSessions are meant to be reused for many consecutive\ntransactions.\n\nSessions can only execute one transaction at a time. To execute\nmultiple concurrent read-write/write-only transactions, create\nmultiple sessions. Note that standalone reads and queries use a\ntransaction internally, and count toward the one transaction\nlimit.\n\nActive sessions use additional server resources, so it is a good idea to\ndelete idle and unneeded sessions.\nAside from explicit deletes, Cloud Spanner may delete sessions for which no\noperations are sent for more than an hour. If a session is deleted,\nrequests to it return `NOT_FOUND`.\n\nIdle sessions can be kept alive by sending a trivial SQL query\nperiodically, e.g., `&quot;SELECT 1&quot;`.\n"
  example: []
  syntax:
    content: public virtual AsyncUnaryCall<Session> CreateSessionAsync(CreateSessionRequest request, Metadata headers = null, DateTime? deadline = default(DateTime? ), CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: request
      type: Google.Cloud.Spanner.V1.CreateSessionRequest
      description: The request to send to the server.
    - id: headers
      type: Grpc.Core.Metadata
      description: The initial metadata to send with the call. This parameter is optional.
    - id: deadline
      type: System.Nullable{System.DateTime}
      description: An optional deadline for the call. The call will be cancelled if deadline is hit.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: An optional token for canceling the call.
    return:
      type: Grpc.Core.AsyncUnaryCall{Google.Cloud.Spanner.V1.Session}
      description: The call object.
    content.vb: Public Overridable Function CreateSessionAsync(request As CreateSessionRequest, headers As Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As AsyncUnaryCall(Of Session)
  overload: Google.Cloud.Spanner.V1.Spanner.SpannerClient.CreateSessionAsync*
  nameWithType.vb: Spanner.SpannerClient.CreateSessionAsync(CreateSessionRequest, Metadata, Nullable(Of DateTime), CancellationToken)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Google.Cloud.Spanner.V1.Spanner.SpannerClient.CreateSessionAsync(Google.Cloud.Spanner.V1.CreateSessionRequest, Grpc.Core.Metadata, System.Nullable(Of System.DateTime), System.Threading.CancellationToken)
  name.vb: CreateSessionAsync(CreateSessionRequest, Metadata, Nullable(Of DateTime), CancellationToken)
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerClient.CreateSessionAsync(Google.Cloud.Spanner.V1.CreateSessionRequest,Grpc.Core.CallOptions)
  commentId: M:Google.Cloud.Spanner.V1.Spanner.SpannerClient.CreateSessionAsync(Google.Cloud.Spanner.V1.CreateSessionRequest,Grpc.Core.CallOptions)
  id: CreateSessionAsync(Google.Cloud.Spanner.V1.CreateSessionRequest,Grpc.Core.CallOptions)
  parent: Google.Cloud.Spanner.V1.Spanner.SpannerClient
  langs:
  - csharp
  - vb
  name: CreateSessionAsync(CreateSessionRequest, CallOptions)
  nameWithType: Spanner.SpannerClient.CreateSessionAsync(CreateSessionRequest, CallOptions)
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerClient.CreateSessionAsync(Google.Cloud.Spanner.V1.CreateSessionRequest, Grpc.Core.CallOptions)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: CreateSessionAsync
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
    startLine: 588
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nCreates a new session. A session can be used to perform\ntransactions that read and/or modify data in a Cloud Spanner database.\nSessions are meant to be reused for many consecutive\ntransactions.\n\nSessions can only execute one transaction at a time. To execute\nmultiple concurrent read-write/write-only transactions, create\nmultiple sessions. Note that standalone reads and queries use a\ntransaction internally, and count toward the one transaction\nlimit.\n\nActive sessions use additional server resources, so it is a good idea to\ndelete idle and unneeded sessions.\nAside from explicit deletes, Cloud Spanner may delete sessions for which no\noperations are sent for more than an hour. If a session is deleted,\nrequests to it return `NOT_FOUND`.\n\nIdle sessions can be kept alive by sending a trivial SQL query\nperiodically, e.g., `&quot;SELECT 1&quot;`.\n"
  example: []
  syntax:
    content: public virtual AsyncUnaryCall<Session> CreateSessionAsync(CreateSessionRequest request, CallOptions options)
    parameters:
    - id: request
      type: Google.Cloud.Spanner.V1.CreateSessionRequest
      description: The request to send to the server.
    - id: options
      type: Grpc.Core.CallOptions
      description: The options for the call.
    return:
      type: Grpc.Core.AsyncUnaryCall{Google.Cloud.Spanner.V1.Session}
      description: The call object.
    content.vb: Public Overridable Function CreateSessionAsync(request As CreateSessionRequest, options As CallOptions) As AsyncUnaryCall(Of Session)
  overload: Google.Cloud.Spanner.V1.Spanner.SpannerClient.CreateSessionAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerClient.BatchCreateSessions(Google.Cloud.Spanner.V1.BatchCreateSessionsRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:Google.Cloud.Spanner.V1.Spanner.SpannerClient.BatchCreateSessions(Google.Cloud.Spanner.V1.BatchCreateSessionsRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: BatchCreateSessions(Google.Cloud.Spanner.V1.BatchCreateSessionsRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: Google.Cloud.Spanner.V1.Spanner.SpannerClient
  langs:
  - csharp
  - vb
  name: BatchCreateSessions(BatchCreateSessionsRequest, Metadata, Nullable<DateTime>, CancellationToken)
  nameWithType: Spanner.SpannerClient.BatchCreateSessions(BatchCreateSessionsRequest, Metadata, Nullable<DateTime>, CancellationToken)
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerClient.BatchCreateSessions(Google.Cloud.Spanner.V1.BatchCreateSessionsRequest, Grpc.Core.Metadata, System.Nullable<System.DateTime>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: BatchCreateSessions
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
    startLine: 603
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nCreates multiple new sessions.\n\nThis API can be used to initialize a session cache on the clients.\nSee https://goo.gl/TgSFN2 for best practices on session cache management.\n"
  example: []
  syntax:
    content: public virtual BatchCreateSessionsResponse BatchCreateSessions(BatchCreateSessionsRequest request, Metadata headers = null, DateTime? deadline = default(DateTime? ), CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: request
      type: Google.Cloud.Spanner.V1.BatchCreateSessionsRequest
      description: The request to send to the server.
    - id: headers
      type: Grpc.Core.Metadata
      description: The initial metadata to send with the call. This parameter is optional.
    - id: deadline
      type: System.Nullable{System.DateTime}
      description: An optional deadline for the call. The call will be cancelled if deadline is hit.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: An optional token for canceling the call.
    return:
      type: Google.Cloud.Spanner.V1.BatchCreateSessionsResponse
      description: The response received from the server.
    content.vb: Public Overridable Function BatchCreateSessions(request As BatchCreateSessionsRequest, headers As Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As BatchCreateSessionsResponse
  overload: Google.Cloud.Spanner.V1.Spanner.SpannerClient.BatchCreateSessions*
  nameWithType.vb: Spanner.SpannerClient.BatchCreateSessions(BatchCreateSessionsRequest, Metadata, Nullable(Of DateTime), CancellationToken)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Google.Cloud.Spanner.V1.Spanner.SpannerClient.BatchCreateSessions(Google.Cloud.Spanner.V1.BatchCreateSessionsRequest, Grpc.Core.Metadata, System.Nullable(Of System.DateTime), System.Threading.CancellationToken)
  name.vb: BatchCreateSessions(BatchCreateSessionsRequest, Metadata, Nullable(Of DateTime), CancellationToken)
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerClient.BatchCreateSessions(Google.Cloud.Spanner.V1.BatchCreateSessionsRequest,Grpc.Core.CallOptions)
  commentId: M:Google.Cloud.Spanner.V1.Spanner.SpannerClient.BatchCreateSessions(Google.Cloud.Spanner.V1.BatchCreateSessionsRequest,Grpc.Core.CallOptions)
  id: BatchCreateSessions(Google.Cloud.Spanner.V1.BatchCreateSessionsRequest,Grpc.Core.CallOptions)
  parent: Google.Cloud.Spanner.V1.Spanner.SpannerClient
  langs:
  - csharp
  - vb
  name: BatchCreateSessions(BatchCreateSessionsRequest, CallOptions)
  nameWithType: Spanner.SpannerClient.BatchCreateSessions(BatchCreateSessionsRequest, CallOptions)
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerClient.BatchCreateSessions(Google.Cloud.Spanner.V1.BatchCreateSessionsRequest, Grpc.Core.CallOptions)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: BatchCreateSessions
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
    startLine: 616
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nCreates multiple new sessions.\n\nThis API can be used to initialize a session cache on the clients.\nSee https://goo.gl/TgSFN2 for best practices on session cache management.\n"
  example: []
  syntax:
    content: public virtual BatchCreateSessionsResponse BatchCreateSessions(BatchCreateSessionsRequest request, CallOptions options)
    parameters:
    - id: request
      type: Google.Cloud.Spanner.V1.BatchCreateSessionsRequest
      description: The request to send to the server.
    - id: options
      type: Grpc.Core.CallOptions
      description: The options for the call.
    return:
      type: Google.Cloud.Spanner.V1.BatchCreateSessionsResponse
      description: The response received from the server.
    content.vb: Public Overridable Function BatchCreateSessions(request As BatchCreateSessionsRequest, options As CallOptions) As BatchCreateSessionsResponse
  overload: Google.Cloud.Spanner.V1.Spanner.SpannerClient.BatchCreateSessions*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerClient.BatchCreateSessionsAsync(Google.Cloud.Spanner.V1.BatchCreateSessionsRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:Google.Cloud.Spanner.V1.Spanner.SpannerClient.BatchCreateSessionsAsync(Google.Cloud.Spanner.V1.BatchCreateSessionsRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: BatchCreateSessionsAsync(Google.Cloud.Spanner.V1.BatchCreateSessionsRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: Google.Cloud.Spanner.V1.Spanner.SpannerClient
  langs:
  - csharp
  - vb
  name: BatchCreateSessionsAsync(BatchCreateSessionsRequest, Metadata, Nullable<DateTime>, CancellationToken)
  nameWithType: Spanner.SpannerClient.BatchCreateSessionsAsync(BatchCreateSessionsRequest, Metadata, Nullable<DateTime>, CancellationToken)
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerClient.BatchCreateSessionsAsync(Google.Cloud.Spanner.V1.BatchCreateSessionsRequest, Grpc.Core.Metadata, System.Nullable<System.DateTime>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: BatchCreateSessionsAsync
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
    startLine: 631
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nCreates multiple new sessions.\n\nThis API can be used to initialize a session cache on the clients.\nSee https://goo.gl/TgSFN2 for best practices on session cache management.\n"
  example: []
  syntax:
    content: public virtual AsyncUnaryCall<BatchCreateSessionsResponse> BatchCreateSessionsAsync(BatchCreateSessionsRequest request, Metadata headers = null, DateTime? deadline = default(DateTime? ), CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: request
      type: Google.Cloud.Spanner.V1.BatchCreateSessionsRequest
      description: The request to send to the server.
    - id: headers
      type: Grpc.Core.Metadata
      description: The initial metadata to send with the call. This parameter is optional.
    - id: deadline
      type: System.Nullable{System.DateTime}
      description: An optional deadline for the call. The call will be cancelled if deadline is hit.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: An optional token for canceling the call.
    return:
      type: Grpc.Core.AsyncUnaryCall{Google.Cloud.Spanner.V1.BatchCreateSessionsResponse}
      description: The call object.
    content.vb: Public Overridable Function BatchCreateSessionsAsync(request As BatchCreateSessionsRequest, headers As Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As AsyncUnaryCall(Of BatchCreateSessionsResponse)
  overload: Google.Cloud.Spanner.V1.Spanner.SpannerClient.BatchCreateSessionsAsync*
  nameWithType.vb: Spanner.SpannerClient.BatchCreateSessionsAsync(BatchCreateSessionsRequest, Metadata, Nullable(Of DateTime), CancellationToken)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Google.Cloud.Spanner.V1.Spanner.SpannerClient.BatchCreateSessionsAsync(Google.Cloud.Spanner.V1.BatchCreateSessionsRequest, Grpc.Core.Metadata, System.Nullable(Of System.DateTime), System.Threading.CancellationToken)
  name.vb: BatchCreateSessionsAsync(BatchCreateSessionsRequest, Metadata, Nullable(Of DateTime), CancellationToken)
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerClient.BatchCreateSessionsAsync(Google.Cloud.Spanner.V1.BatchCreateSessionsRequest,Grpc.Core.CallOptions)
  commentId: M:Google.Cloud.Spanner.V1.Spanner.SpannerClient.BatchCreateSessionsAsync(Google.Cloud.Spanner.V1.BatchCreateSessionsRequest,Grpc.Core.CallOptions)
  id: BatchCreateSessionsAsync(Google.Cloud.Spanner.V1.BatchCreateSessionsRequest,Grpc.Core.CallOptions)
  parent: Google.Cloud.Spanner.V1.Spanner.SpannerClient
  langs:
  - csharp
  - vb
  name: BatchCreateSessionsAsync(BatchCreateSessionsRequest, CallOptions)
  nameWithType: Spanner.SpannerClient.BatchCreateSessionsAsync(BatchCreateSessionsRequest, CallOptions)
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerClient.BatchCreateSessionsAsync(Google.Cloud.Spanner.V1.BatchCreateSessionsRequest, Grpc.Core.CallOptions)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: BatchCreateSessionsAsync
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
    startLine: 644
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nCreates multiple new sessions.\n\nThis API can be used to initialize a session cache on the clients.\nSee https://goo.gl/TgSFN2 for best practices on session cache management.\n"
  example: []
  syntax:
    content: public virtual AsyncUnaryCall<BatchCreateSessionsResponse> BatchCreateSessionsAsync(BatchCreateSessionsRequest request, CallOptions options)
    parameters:
    - id: request
      type: Google.Cloud.Spanner.V1.BatchCreateSessionsRequest
      description: The request to send to the server.
    - id: options
      type: Grpc.Core.CallOptions
      description: The options for the call.
    return:
      type: Grpc.Core.AsyncUnaryCall{Google.Cloud.Spanner.V1.BatchCreateSessionsResponse}
      description: The call object.
    content.vb: Public Overridable Function BatchCreateSessionsAsync(request As BatchCreateSessionsRequest, options As CallOptions) As AsyncUnaryCall(Of BatchCreateSessionsResponse)
  overload: Google.Cloud.Spanner.V1.Spanner.SpannerClient.BatchCreateSessionsAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerClient.GetSession(Google.Cloud.Spanner.V1.GetSessionRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:Google.Cloud.Spanner.V1.Spanner.SpannerClient.GetSession(Google.Cloud.Spanner.V1.GetSessionRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: GetSession(Google.Cloud.Spanner.V1.GetSessionRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: Google.Cloud.Spanner.V1.Spanner.SpannerClient
  langs:
  - csharp
  - vb
  name: GetSession(GetSessionRequest, Metadata, Nullable<DateTime>, CancellationToken)
  nameWithType: Spanner.SpannerClient.GetSession(GetSessionRequest, Metadata, Nullable<DateTime>, CancellationToken)
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerClient.GetSession(Google.Cloud.Spanner.V1.GetSessionRequest, Grpc.Core.Metadata, System.Nullable<System.DateTime>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: GetSession
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
    startLine: 658
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nGets a session. Returns `NOT_FOUND` if the session does not exist.\nThis is mainly useful for determining whether a session is still\nalive.\n"
  example: []
  syntax:
    content: public virtual Session GetSession(GetSessionRequest request, Metadata headers = null, DateTime? deadline = default(DateTime? ), CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: request
      type: Google.Cloud.Spanner.V1.GetSessionRequest
      description: The request to send to the server.
    - id: headers
      type: Grpc.Core.Metadata
      description: The initial metadata to send with the call. This parameter is optional.
    - id: deadline
      type: System.Nullable{System.DateTime}
      description: An optional deadline for the call. The call will be cancelled if deadline is hit.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: An optional token for canceling the call.
    return:
      type: Google.Cloud.Spanner.V1.Session
      description: The response received from the server.
    content.vb: Public Overridable Function GetSession(request As GetSessionRequest, headers As Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As Session
  overload: Google.Cloud.Spanner.V1.Spanner.SpannerClient.GetSession*
  nameWithType.vb: Spanner.SpannerClient.GetSession(GetSessionRequest, Metadata, Nullable(Of DateTime), CancellationToken)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Google.Cloud.Spanner.V1.Spanner.SpannerClient.GetSession(Google.Cloud.Spanner.V1.GetSessionRequest, Grpc.Core.Metadata, System.Nullable(Of System.DateTime), System.Threading.CancellationToken)
  name.vb: GetSession(GetSessionRequest, Metadata, Nullable(Of DateTime), CancellationToken)
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerClient.GetSession(Google.Cloud.Spanner.V1.GetSessionRequest,Grpc.Core.CallOptions)
  commentId: M:Google.Cloud.Spanner.V1.Spanner.SpannerClient.GetSession(Google.Cloud.Spanner.V1.GetSessionRequest,Grpc.Core.CallOptions)
  id: GetSession(Google.Cloud.Spanner.V1.GetSessionRequest,Grpc.Core.CallOptions)
  parent: Google.Cloud.Spanner.V1.Spanner.SpannerClient
  langs:
  - csharp
  - vb
  name: GetSession(GetSessionRequest, CallOptions)
  nameWithType: Spanner.SpannerClient.GetSession(GetSessionRequest, CallOptions)
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerClient.GetSession(Google.Cloud.Spanner.V1.GetSessionRequest, Grpc.Core.CallOptions)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: GetSession
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
    startLine: 670
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nGets a session. Returns `NOT_FOUND` if the session does not exist.\nThis is mainly useful for determining whether a session is still\nalive.\n"
  example: []
  syntax:
    content: public virtual Session GetSession(GetSessionRequest request, CallOptions options)
    parameters:
    - id: request
      type: Google.Cloud.Spanner.V1.GetSessionRequest
      description: The request to send to the server.
    - id: options
      type: Grpc.Core.CallOptions
      description: The options for the call.
    return:
      type: Google.Cloud.Spanner.V1.Session
      description: The response received from the server.
    content.vb: Public Overridable Function GetSession(request As GetSessionRequest, options As CallOptions) As Session
  overload: Google.Cloud.Spanner.V1.Spanner.SpannerClient.GetSession*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerClient.GetSessionAsync(Google.Cloud.Spanner.V1.GetSessionRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:Google.Cloud.Spanner.V1.Spanner.SpannerClient.GetSessionAsync(Google.Cloud.Spanner.V1.GetSessionRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: GetSessionAsync(Google.Cloud.Spanner.V1.GetSessionRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: Google.Cloud.Spanner.V1.Spanner.SpannerClient
  langs:
  - csharp
  - vb
  name: GetSessionAsync(GetSessionRequest, Metadata, Nullable<DateTime>, CancellationToken)
  nameWithType: Spanner.SpannerClient.GetSessionAsync(GetSessionRequest, Metadata, Nullable<DateTime>, CancellationToken)
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerClient.GetSessionAsync(Google.Cloud.Spanner.V1.GetSessionRequest, Grpc.Core.Metadata, System.Nullable<System.DateTime>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: GetSessionAsync
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
    startLine: 684
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nGets a session. Returns `NOT_FOUND` if the session does not exist.\nThis is mainly useful for determining whether a session is still\nalive.\n"
  example: []
  syntax:
    content: public virtual AsyncUnaryCall<Session> GetSessionAsync(GetSessionRequest request, Metadata headers = null, DateTime? deadline = default(DateTime? ), CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: request
      type: Google.Cloud.Spanner.V1.GetSessionRequest
      description: The request to send to the server.
    - id: headers
      type: Grpc.Core.Metadata
      description: The initial metadata to send with the call. This parameter is optional.
    - id: deadline
      type: System.Nullable{System.DateTime}
      description: An optional deadline for the call. The call will be cancelled if deadline is hit.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: An optional token for canceling the call.
    return:
      type: Grpc.Core.AsyncUnaryCall{Google.Cloud.Spanner.V1.Session}
      description: The call object.
    content.vb: Public Overridable Function GetSessionAsync(request As GetSessionRequest, headers As Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As AsyncUnaryCall(Of Session)
  overload: Google.Cloud.Spanner.V1.Spanner.SpannerClient.GetSessionAsync*
  nameWithType.vb: Spanner.SpannerClient.GetSessionAsync(GetSessionRequest, Metadata, Nullable(Of DateTime), CancellationToken)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Google.Cloud.Spanner.V1.Spanner.SpannerClient.GetSessionAsync(Google.Cloud.Spanner.V1.GetSessionRequest, Grpc.Core.Metadata, System.Nullable(Of System.DateTime), System.Threading.CancellationToken)
  name.vb: GetSessionAsync(GetSessionRequest, Metadata, Nullable(Of DateTime), CancellationToken)
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerClient.GetSessionAsync(Google.Cloud.Spanner.V1.GetSessionRequest,Grpc.Core.CallOptions)
  commentId: M:Google.Cloud.Spanner.V1.Spanner.SpannerClient.GetSessionAsync(Google.Cloud.Spanner.V1.GetSessionRequest,Grpc.Core.CallOptions)
  id: GetSessionAsync(Google.Cloud.Spanner.V1.GetSessionRequest,Grpc.Core.CallOptions)
  parent: Google.Cloud.Spanner.V1.Spanner.SpannerClient
  langs:
  - csharp
  - vb
  name: GetSessionAsync(GetSessionRequest, CallOptions)
  nameWithType: Spanner.SpannerClient.GetSessionAsync(GetSessionRequest, CallOptions)
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerClient.GetSessionAsync(Google.Cloud.Spanner.V1.GetSessionRequest, Grpc.Core.CallOptions)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: GetSessionAsync
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
    startLine: 696
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nGets a session. Returns `NOT_FOUND` if the session does not exist.\nThis is mainly useful for determining whether a session is still\nalive.\n"
  example: []
  syntax:
    content: public virtual AsyncUnaryCall<Session> GetSessionAsync(GetSessionRequest request, CallOptions options)
    parameters:
    - id: request
      type: Google.Cloud.Spanner.V1.GetSessionRequest
      description: The request to send to the server.
    - id: options
      type: Grpc.Core.CallOptions
      description: The options for the call.
    return:
      type: Grpc.Core.AsyncUnaryCall{Google.Cloud.Spanner.V1.Session}
      description: The call object.
    content.vb: Public Overridable Function GetSessionAsync(request As GetSessionRequest, options As CallOptions) As AsyncUnaryCall(Of Session)
  overload: Google.Cloud.Spanner.V1.Spanner.SpannerClient.GetSessionAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerClient.ListSessions(Google.Cloud.Spanner.V1.ListSessionsRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:Google.Cloud.Spanner.V1.Spanner.SpannerClient.ListSessions(Google.Cloud.Spanner.V1.ListSessionsRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: ListSessions(Google.Cloud.Spanner.V1.ListSessionsRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: Google.Cloud.Spanner.V1.Spanner.SpannerClient
  langs:
  - csharp
  - vb
  name: ListSessions(ListSessionsRequest, Metadata, Nullable<DateTime>, CancellationToken)
  nameWithType: Spanner.SpannerClient.ListSessions(ListSessionsRequest, Metadata, Nullable<DateTime>, CancellationToken)
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerClient.ListSessions(Google.Cloud.Spanner.V1.ListSessionsRequest, Grpc.Core.Metadata, System.Nullable<System.DateTime>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: ListSessions
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
    startLine: 708
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nLists all sessions in a given database.\n"
  example: []
  syntax:
    content: public virtual ListSessionsResponse ListSessions(ListSessionsRequest request, Metadata headers = null, DateTime? deadline = default(DateTime? ), CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: request
      type: Google.Cloud.Spanner.V1.ListSessionsRequest
      description: The request to send to the server.
    - id: headers
      type: Grpc.Core.Metadata
      description: The initial metadata to send with the call. This parameter is optional.
    - id: deadline
      type: System.Nullable{System.DateTime}
      description: An optional deadline for the call. The call will be cancelled if deadline is hit.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: An optional token for canceling the call.
    return:
      type: Google.Cloud.Spanner.V1.ListSessionsResponse
      description: The response received from the server.
    content.vb: Public Overridable Function ListSessions(request As ListSessionsRequest, headers As Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As ListSessionsResponse
  overload: Google.Cloud.Spanner.V1.Spanner.SpannerClient.ListSessions*
  nameWithType.vb: Spanner.SpannerClient.ListSessions(ListSessionsRequest, Metadata, Nullable(Of DateTime), CancellationToken)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Google.Cloud.Spanner.V1.Spanner.SpannerClient.ListSessions(Google.Cloud.Spanner.V1.ListSessionsRequest, Grpc.Core.Metadata, System.Nullable(Of System.DateTime), System.Threading.CancellationToken)
  name.vb: ListSessions(ListSessionsRequest, Metadata, Nullable(Of DateTime), CancellationToken)
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerClient.ListSessions(Google.Cloud.Spanner.V1.ListSessionsRequest,Grpc.Core.CallOptions)
  commentId: M:Google.Cloud.Spanner.V1.Spanner.SpannerClient.ListSessions(Google.Cloud.Spanner.V1.ListSessionsRequest,Grpc.Core.CallOptions)
  id: ListSessions(Google.Cloud.Spanner.V1.ListSessionsRequest,Grpc.Core.CallOptions)
  parent: Google.Cloud.Spanner.V1.Spanner.SpannerClient
  langs:
  - csharp
  - vb
  name: ListSessions(ListSessionsRequest, CallOptions)
  nameWithType: Spanner.SpannerClient.ListSessions(ListSessionsRequest, CallOptions)
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerClient.ListSessions(Google.Cloud.Spanner.V1.ListSessionsRequest, Grpc.Core.CallOptions)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: ListSessions
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
    startLine: 718
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nLists all sessions in a given database.\n"
  example: []
  syntax:
    content: public virtual ListSessionsResponse ListSessions(ListSessionsRequest request, CallOptions options)
    parameters:
    - id: request
      type: Google.Cloud.Spanner.V1.ListSessionsRequest
      description: The request to send to the server.
    - id: options
      type: Grpc.Core.CallOptions
      description: The options for the call.
    return:
      type: Google.Cloud.Spanner.V1.ListSessionsResponse
      description: The response received from the server.
    content.vb: Public Overridable Function ListSessions(request As ListSessionsRequest, options As CallOptions) As ListSessionsResponse
  overload: Google.Cloud.Spanner.V1.Spanner.SpannerClient.ListSessions*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerClient.ListSessionsAsync(Google.Cloud.Spanner.V1.ListSessionsRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:Google.Cloud.Spanner.V1.Spanner.SpannerClient.ListSessionsAsync(Google.Cloud.Spanner.V1.ListSessionsRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: ListSessionsAsync(Google.Cloud.Spanner.V1.ListSessionsRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: Google.Cloud.Spanner.V1.Spanner.SpannerClient
  langs:
  - csharp
  - vb
  name: ListSessionsAsync(ListSessionsRequest, Metadata, Nullable<DateTime>, CancellationToken)
  nameWithType: Spanner.SpannerClient.ListSessionsAsync(ListSessionsRequest, Metadata, Nullable<DateTime>, CancellationToken)
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerClient.ListSessionsAsync(Google.Cloud.Spanner.V1.ListSessionsRequest, Grpc.Core.Metadata, System.Nullable<System.DateTime>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: ListSessionsAsync
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
    startLine: 730
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nLists all sessions in a given database.\n"
  example: []
  syntax:
    content: public virtual AsyncUnaryCall<ListSessionsResponse> ListSessionsAsync(ListSessionsRequest request, Metadata headers = null, DateTime? deadline = default(DateTime? ), CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: request
      type: Google.Cloud.Spanner.V1.ListSessionsRequest
      description: The request to send to the server.
    - id: headers
      type: Grpc.Core.Metadata
      description: The initial metadata to send with the call. This parameter is optional.
    - id: deadline
      type: System.Nullable{System.DateTime}
      description: An optional deadline for the call. The call will be cancelled if deadline is hit.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: An optional token for canceling the call.
    return:
      type: Grpc.Core.AsyncUnaryCall{Google.Cloud.Spanner.V1.ListSessionsResponse}
      description: The call object.
    content.vb: Public Overridable Function ListSessionsAsync(request As ListSessionsRequest, headers As Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As AsyncUnaryCall(Of ListSessionsResponse)
  overload: Google.Cloud.Spanner.V1.Spanner.SpannerClient.ListSessionsAsync*
  nameWithType.vb: Spanner.SpannerClient.ListSessionsAsync(ListSessionsRequest, Metadata, Nullable(Of DateTime), CancellationToken)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Google.Cloud.Spanner.V1.Spanner.SpannerClient.ListSessionsAsync(Google.Cloud.Spanner.V1.ListSessionsRequest, Grpc.Core.Metadata, System.Nullable(Of System.DateTime), System.Threading.CancellationToken)
  name.vb: ListSessionsAsync(ListSessionsRequest, Metadata, Nullable(Of DateTime), CancellationToken)
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerClient.ListSessionsAsync(Google.Cloud.Spanner.V1.ListSessionsRequest,Grpc.Core.CallOptions)
  commentId: M:Google.Cloud.Spanner.V1.Spanner.SpannerClient.ListSessionsAsync(Google.Cloud.Spanner.V1.ListSessionsRequest,Grpc.Core.CallOptions)
  id: ListSessionsAsync(Google.Cloud.Spanner.V1.ListSessionsRequest,Grpc.Core.CallOptions)
  parent: Google.Cloud.Spanner.V1.Spanner.SpannerClient
  langs:
  - csharp
  - vb
  name: ListSessionsAsync(ListSessionsRequest, CallOptions)
  nameWithType: Spanner.SpannerClient.ListSessionsAsync(ListSessionsRequest, CallOptions)
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerClient.ListSessionsAsync(Google.Cloud.Spanner.V1.ListSessionsRequest, Grpc.Core.CallOptions)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: ListSessionsAsync
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
    startLine: 740
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nLists all sessions in a given database.\n"
  example: []
  syntax:
    content: public virtual AsyncUnaryCall<ListSessionsResponse> ListSessionsAsync(ListSessionsRequest request, CallOptions options)
    parameters:
    - id: request
      type: Google.Cloud.Spanner.V1.ListSessionsRequest
      description: The request to send to the server.
    - id: options
      type: Grpc.Core.CallOptions
      description: The options for the call.
    return:
      type: Grpc.Core.AsyncUnaryCall{Google.Cloud.Spanner.V1.ListSessionsResponse}
      description: The call object.
    content.vb: Public Overridable Function ListSessionsAsync(request As ListSessionsRequest, options As CallOptions) As AsyncUnaryCall(Of ListSessionsResponse)
  overload: Google.Cloud.Spanner.V1.Spanner.SpannerClient.ListSessionsAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerClient.DeleteSession(Google.Cloud.Spanner.V1.DeleteSessionRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:Google.Cloud.Spanner.V1.Spanner.SpannerClient.DeleteSession(Google.Cloud.Spanner.V1.DeleteSessionRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: DeleteSession(Google.Cloud.Spanner.V1.DeleteSessionRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: Google.Cloud.Spanner.V1.Spanner.SpannerClient
  langs:
  - csharp
  - vb
  name: DeleteSession(DeleteSessionRequest, Metadata, Nullable<DateTime>, CancellationToken)
  nameWithType: Spanner.SpannerClient.DeleteSession(DeleteSessionRequest, Metadata, Nullable<DateTime>, CancellationToken)
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerClient.DeleteSession(Google.Cloud.Spanner.V1.DeleteSessionRequest, Grpc.Core.Metadata, System.Nullable<System.DateTime>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: DeleteSession
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
    startLine: 754
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nEnds a session, releasing server resources associated with it. This will\nasynchronously trigger cancellation of any operations that are running with\nthis session.\n"
  example: []
  syntax:
    content: public virtual Empty DeleteSession(DeleteSessionRequest request, Metadata headers = null, DateTime? deadline = default(DateTime? ), CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: request
      type: Google.Cloud.Spanner.V1.DeleteSessionRequest
      description: The request to send to the server.
    - id: headers
      type: Grpc.Core.Metadata
      description: The initial metadata to send with the call. This parameter is optional.
    - id: deadline
      type: System.Nullable{System.DateTime}
      description: An optional deadline for the call. The call will be cancelled if deadline is hit.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: An optional token for canceling the call.
    return:
      type: Google.Protobuf.WellKnownTypes.Empty
      description: The response received from the server.
    content.vb: Public Overridable Function DeleteSession(request As DeleteSessionRequest, headers As Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As Empty
  overload: Google.Cloud.Spanner.V1.Spanner.SpannerClient.DeleteSession*
  nameWithType.vb: Spanner.SpannerClient.DeleteSession(DeleteSessionRequest, Metadata, Nullable(Of DateTime), CancellationToken)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Google.Cloud.Spanner.V1.Spanner.SpannerClient.DeleteSession(Google.Cloud.Spanner.V1.DeleteSessionRequest, Grpc.Core.Metadata, System.Nullable(Of System.DateTime), System.Threading.CancellationToken)
  name.vb: DeleteSession(DeleteSessionRequest, Metadata, Nullable(Of DateTime), CancellationToken)
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerClient.DeleteSession(Google.Cloud.Spanner.V1.DeleteSessionRequest,Grpc.Core.CallOptions)
  commentId: M:Google.Cloud.Spanner.V1.Spanner.SpannerClient.DeleteSession(Google.Cloud.Spanner.V1.DeleteSessionRequest,Grpc.Core.CallOptions)
  id: DeleteSession(Google.Cloud.Spanner.V1.DeleteSessionRequest,Grpc.Core.CallOptions)
  parent: Google.Cloud.Spanner.V1.Spanner.SpannerClient
  langs:
  - csharp
  - vb
  name: DeleteSession(DeleteSessionRequest, CallOptions)
  nameWithType: Spanner.SpannerClient.DeleteSession(DeleteSessionRequest, CallOptions)
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerClient.DeleteSession(Google.Cloud.Spanner.V1.DeleteSessionRequest, Grpc.Core.CallOptions)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: DeleteSession
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
    startLine: 766
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nEnds a session, releasing server resources associated with it. This will\nasynchronously trigger cancellation of any operations that are running with\nthis session.\n"
  example: []
  syntax:
    content: public virtual Empty DeleteSession(DeleteSessionRequest request, CallOptions options)
    parameters:
    - id: request
      type: Google.Cloud.Spanner.V1.DeleteSessionRequest
      description: The request to send to the server.
    - id: options
      type: Grpc.Core.CallOptions
      description: The options for the call.
    return:
      type: Google.Protobuf.WellKnownTypes.Empty
      description: The response received from the server.
    content.vb: Public Overridable Function DeleteSession(request As DeleteSessionRequest, options As CallOptions) As Empty
  overload: Google.Cloud.Spanner.V1.Spanner.SpannerClient.DeleteSession*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerClient.DeleteSessionAsync(Google.Cloud.Spanner.V1.DeleteSessionRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:Google.Cloud.Spanner.V1.Spanner.SpannerClient.DeleteSessionAsync(Google.Cloud.Spanner.V1.DeleteSessionRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: DeleteSessionAsync(Google.Cloud.Spanner.V1.DeleteSessionRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: Google.Cloud.Spanner.V1.Spanner.SpannerClient
  langs:
  - csharp
  - vb
  name: DeleteSessionAsync(DeleteSessionRequest, Metadata, Nullable<DateTime>, CancellationToken)
  nameWithType: Spanner.SpannerClient.DeleteSessionAsync(DeleteSessionRequest, Metadata, Nullable<DateTime>, CancellationToken)
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerClient.DeleteSessionAsync(Google.Cloud.Spanner.V1.DeleteSessionRequest, Grpc.Core.Metadata, System.Nullable<System.DateTime>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: DeleteSessionAsync
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
    startLine: 780
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nEnds a session, releasing server resources associated with it. This will\nasynchronously trigger cancellation of any operations that are running with\nthis session.\n"
  example: []
  syntax:
    content: public virtual AsyncUnaryCall<Empty> DeleteSessionAsync(DeleteSessionRequest request, Metadata headers = null, DateTime? deadline = default(DateTime? ), CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: request
      type: Google.Cloud.Spanner.V1.DeleteSessionRequest
      description: The request to send to the server.
    - id: headers
      type: Grpc.Core.Metadata
      description: The initial metadata to send with the call. This parameter is optional.
    - id: deadline
      type: System.Nullable{System.DateTime}
      description: An optional deadline for the call. The call will be cancelled if deadline is hit.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: An optional token for canceling the call.
    return:
      type: Grpc.Core.AsyncUnaryCall{Google.Protobuf.WellKnownTypes.Empty}
      description: The call object.
    content.vb: Public Overridable Function DeleteSessionAsync(request As DeleteSessionRequest, headers As Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As AsyncUnaryCall(Of Empty)
  overload: Google.Cloud.Spanner.V1.Spanner.SpannerClient.DeleteSessionAsync*
  nameWithType.vb: Spanner.SpannerClient.DeleteSessionAsync(DeleteSessionRequest, Metadata, Nullable(Of DateTime), CancellationToken)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Google.Cloud.Spanner.V1.Spanner.SpannerClient.DeleteSessionAsync(Google.Cloud.Spanner.V1.DeleteSessionRequest, Grpc.Core.Metadata, System.Nullable(Of System.DateTime), System.Threading.CancellationToken)
  name.vb: DeleteSessionAsync(DeleteSessionRequest, Metadata, Nullable(Of DateTime), CancellationToken)
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerClient.DeleteSessionAsync(Google.Cloud.Spanner.V1.DeleteSessionRequest,Grpc.Core.CallOptions)
  commentId: M:Google.Cloud.Spanner.V1.Spanner.SpannerClient.DeleteSessionAsync(Google.Cloud.Spanner.V1.DeleteSessionRequest,Grpc.Core.CallOptions)
  id: DeleteSessionAsync(Google.Cloud.Spanner.V1.DeleteSessionRequest,Grpc.Core.CallOptions)
  parent: Google.Cloud.Spanner.V1.Spanner.SpannerClient
  langs:
  - csharp
  - vb
  name: DeleteSessionAsync(DeleteSessionRequest, CallOptions)
  nameWithType: Spanner.SpannerClient.DeleteSessionAsync(DeleteSessionRequest, CallOptions)
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerClient.DeleteSessionAsync(Google.Cloud.Spanner.V1.DeleteSessionRequest, Grpc.Core.CallOptions)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: DeleteSessionAsync
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
    startLine: 792
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nEnds a session, releasing server resources associated with it. This will\nasynchronously trigger cancellation of any operations that are running with\nthis session.\n"
  example: []
  syntax:
    content: public virtual AsyncUnaryCall<Empty> DeleteSessionAsync(DeleteSessionRequest request, CallOptions options)
    parameters:
    - id: request
      type: Google.Cloud.Spanner.V1.DeleteSessionRequest
      description: The request to send to the server.
    - id: options
      type: Grpc.Core.CallOptions
      description: The options for the call.
    return:
      type: Grpc.Core.AsyncUnaryCall{Google.Protobuf.WellKnownTypes.Empty}
      description: The call object.
    content.vb: Public Overridable Function DeleteSessionAsync(request As DeleteSessionRequest, options As CallOptions) As AsyncUnaryCall(Of Empty)
  overload: Google.Cloud.Spanner.V1.Spanner.SpannerClient.DeleteSessionAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerClient.ExecuteSql(Google.Cloud.Spanner.V1.ExecuteSqlRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:Google.Cloud.Spanner.V1.Spanner.SpannerClient.ExecuteSql(Google.Cloud.Spanner.V1.ExecuteSqlRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: ExecuteSql(Google.Cloud.Spanner.V1.ExecuteSqlRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: Google.Cloud.Spanner.V1.Spanner.SpannerClient
  langs:
  - csharp
  - vb
  name: ExecuteSql(ExecuteSqlRequest, Metadata, Nullable<DateTime>, CancellationToken)
  nameWithType: Spanner.SpannerClient.ExecuteSql(ExecuteSqlRequest, Metadata, Nullable<DateTime>, CancellationToken)
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerClient.ExecuteSql(Google.Cloud.Spanner.V1.ExecuteSqlRequest, Grpc.Core.Metadata, System.Nullable<System.DateTime>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: ExecuteSql
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
    startLine: 814
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nExecutes an SQL statement, returning all results in a single reply. This\nmethod cannot be used to return a result set larger than 10 MiB;\nif the query yields more data than that, the query fails with\na `FAILED_PRECONDITION` error.\n\nOperations inside read-write transactions might return `ABORTED`. If\nthis occurs, the application should restart the transaction from\nthe beginning. See [Transaction][google.spanner.v1.Transaction] for more details.\n\nLarger result sets can be fetched in streaming fashion by calling\n[ExecuteStreamingSql][google.spanner.v1.Spanner.ExecuteStreamingSql] instead.\n"
  example: []
  syntax:
    content: public virtual ResultSet ExecuteSql(ExecuteSqlRequest request, Metadata headers = null, DateTime? deadline = default(DateTime? ), CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: request
      type: Google.Cloud.Spanner.V1.ExecuteSqlRequest
      description: The request to send to the server.
    - id: headers
      type: Grpc.Core.Metadata
      description: The initial metadata to send with the call. This parameter is optional.
    - id: deadline
      type: System.Nullable{System.DateTime}
      description: An optional deadline for the call. The call will be cancelled if deadline is hit.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: An optional token for canceling the call.
    return:
      type: Google.Cloud.Spanner.V1.ResultSet
      description: The response received from the server.
    content.vb: Public Overridable Function ExecuteSql(request As ExecuteSqlRequest, headers As Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As ResultSet
  overload: Google.Cloud.Spanner.V1.Spanner.SpannerClient.ExecuteSql*
  nameWithType.vb: Spanner.SpannerClient.ExecuteSql(ExecuteSqlRequest, Metadata, Nullable(Of DateTime), CancellationToken)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Google.Cloud.Spanner.V1.Spanner.SpannerClient.ExecuteSql(Google.Cloud.Spanner.V1.ExecuteSqlRequest, Grpc.Core.Metadata, System.Nullable(Of System.DateTime), System.Threading.CancellationToken)
  name.vb: ExecuteSql(ExecuteSqlRequest, Metadata, Nullable(Of DateTime), CancellationToken)
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerClient.ExecuteSql(Google.Cloud.Spanner.V1.ExecuteSqlRequest,Grpc.Core.CallOptions)
  commentId: M:Google.Cloud.Spanner.V1.Spanner.SpannerClient.ExecuteSql(Google.Cloud.Spanner.V1.ExecuteSqlRequest,Grpc.Core.CallOptions)
  id: ExecuteSql(Google.Cloud.Spanner.V1.ExecuteSqlRequest,Grpc.Core.CallOptions)
  parent: Google.Cloud.Spanner.V1.Spanner.SpannerClient
  langs:
  - csharp
  - vb
  name: ExecuteSql(ExecuteSqlRequest, CallOptions)
  nameWithType: Spanner.SpannerClient.ExecuteSql(ExecuteSqlRequest, CallOptions)
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerClient.ExecuteSql(Google.Cloud.Spanner.V1.ExecuteSqlRequest, Grpc.Core.CallOptions)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: ExecuteSql
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
    startLine: 834
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nExecutes an SQL statement, returning all results in a single reply. This\nmethod cannot be used to return a result set larger than 10 MiB;\nif the query yields more data than that, the query fails with\na `FAILED_PRECONDITION` error.\n\nOperations inside read-write transactions might return `ABORTED`. If\nthis occurs, the application should restart the transaction from\nthe beginning. See [Transaction][google.spanner.v1.Transaction] for more details.\n\nLarger result sets can be fetched in streaming fashion by calling\n[ExecuteStreamingSql][google.spanner.v1.Spanner.ExecuteStreamingSql] instead.\n"
  example: []
  syntax:
    content: public virtual ResultSet ExecuteSql(ExecuteSqlRequest request, CallOptions options)
    parameters:
    - id: request
      type: Google.Cloud.Spanner.V1.ExecuteSqlRequest
      description: The request to send to the server.
    - id: options
      type: Grpc.Core.CallOptions
      description: The options for the call.
    return:
      type: Google.Cloud.Spanner.V1.ResultSet
      description: The response received from the server.
    content.vb: Public Overridable Function ExecuteSql(request As ExecuteSqlRequest, options As CallOptions) As ResultSet
  overload: Google.Cloud.Spanner.V1.Spanner.SpannerClient.ExecuteSql*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerClient.ExecuteSqlAsync(Google.Cloud.Spanner.V1.ExecuteSqlRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:Google.Cloud.Spanner.V1.Spanner.SpannerClient.ExecuteSqlAsync(Google.Cloud.Spanner.V1.ExecuteSqlRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: ExecuteSqlAsync(Google.Cloud.Spanner.V1.ExecuteSqlRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: Google.Cloud.Spanner.V1.Spanner.SpannerClient
  langs:
  - csharp
  - vb
  name: ExecuteSqlAsync(ExecuteSqlRequest, Metadata, Nullable<DateTime>, CancellationToken)
  nameWithType: Spanner.SpannerClient.ExecuteSqlAsync(ExecuteSqlRequest, Metadata, Nullable<DateTime>, CancellationToken)
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerClient.ExecuteSqlAsync(Google.Cloud.Spanner.V1.ExecuteSqlRequest, Grpc.Core.Metadata, System.Nullable<System.DateTime>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: ExecuteSqlAsync
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
    startLine: 856
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nExecutes an SQL statement, returning all results in a single reply. This\nmethod cannot be used to return a result set larger than 10 MiB;\nif the query yields more data than that, the query fails with\na `FAILED_PRECONDITION` error.\n\nOperations inside read-write transactions might return `ABORTED`. If\nthis occurs, the application should restart the transaction from\nthe beginning. See [Transaction][google.spanner.v1.Transaction] for more details.\n\nLarger result sets can be fetched in streaming fashion by calling\n[ExecuteStreamingSql][google.spanner.v1.Spanner.ExecuteStreamingSql] instead.\n"
  example: []
  syntax:
    content: public virtual AsyncUnaryCall<ResultSet> ExecuteSqlAsync(ExecuteSqlRequest request, Metadata headers = null, DateTime? deadline = default(DateTime? ), CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: request
      type: Google.Cloud.Spanner.V1.ExecuteSqlRequest
      description: The request to send to the server.
    - id: headers
      type: Grpc.Core.Metadata
      description: The initial metadata to send with the call. This parameter is optional.
    - id: deadline
      type: System.Nullable{System.DateTime}
      description: An optional deadline for the call. The call will be cancelled if deadline is hit.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: An optional token for canceling the call.
    return:
      type: Grpc.Core.AsyncUnaryCall{Google.Cloud.Spanner.V1.ResultSet}
      description: The call object.
    content.vb: Public Overridable Function ExecuteSqlAsync(request As ExecuteSqlRequest, headers As Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As AsyncUnaryCall(Of ResultSet)
  overload: Google.Cloud.Spanner.V1.Spanner.SpannerClient.ExecuteSqlAsync*
  nameWithType.vb: Spanner.SpannerClient.ExecuteSqlAsync(ExecuteSqlRequest, Metadata, Nullable(Of DateTime), CancellationToken)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Google.Cloud.Spanner.V1.Spanner.SpannerClient.ExecuteSqlAsync(Google.Cloud.Spanner.V1.ExecuteSqlRequest, Grpc.Core.Metadata, System.Nullable(Of System.DateTime), System.Threading.CancellationToken)
  name.vb: ExecuteSqlAsync(ExecuteSqlRequest, Metadata, Nullable(Of DateTime), CancellationToken)
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerClient.ExecuteSqlAsync(Google.Cloud.Spanner.V1.ExecuteSqlRequest,Grpc.Core.CallOptions)
  commentId: M:Google.Cloud.Spanner.V1.Spanner.SpannerClient.ExecuteSqlAsync(Google.Cloud.Spanner.V1.ExecuteSqlRequest,Grpc.Core.CallOptions)
  id: ExecuteSqlAsync(Google.Cloud.Spanner.V1.ExecuteSqlRequest,Grpc.Core.CallOptions)
  parent: Google.Cloud.Spanner.V1.Spanner.SpannerClient
  langs:
  - csharp
  - vb
  name: ExecuteSqlAsync(ExecuteSqlRequest, CallOptions)
  nameWithType: Spanner.SpannerClient.ExecuteSqlAsync(ExecuteSqlRequest, CallOptions)
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerClient.ExecuteSqlAsync(Google.Cloud.Spanner.V1.ExecuteSqlRequest, Grpc.Core.CallOptions)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: ExecuteSqlAsync
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
    startLine: 876
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nExecutes an SQL statement, returning all results in a single reply. This\nmethod cannot be used to return a result set larger than 10 MiB;\nif the query yields more data than that, the query fails with\na `FAILED_PRECONDITION` error.\n\nOperations inside read-write transactions might return `ABORTED`. If\nthis occurs, the application should restart the transaction from\nthe beginning. See [Transaction][google.spanner.v1.Transaction] for more details.\n\nLarger result sets can be fetched in streaming fashion by calling\n[ExecuteStreamingSql][google.spanner.v1.Spanner.ExecuteStreamingSql] instead.\n"
  example: []
  syntax:
    content: public virtual AsyncUnaryCall<ResultSet> ExecuteSqlAsync(ExecuteSqlRequest request, CallOptions options)
    parameters:
    - id: request
      type: Google.Cloud.Spanner.V1.ExecuteSqlRequest
      description: The request to send to the server.
    - id: options
      type: Grpc.Core.CallOptions
      description: The options for the call.
    return:
      type: Grpc.Core.AsyncUnaryCall{Google.Cloud.Spanner.V1.ResultSet}
      description: The call object.
    content.vb: Public Overridable Function ExecuteSqlAsync(request As ExecuteSqlRequest, options As CallOptions) As AsyncUnaryCall(Of ResultSet)
  overload: Google.Cloud.Spanner.V1.Spanner.SpannerClient.ExecuteSqlAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerClient.ExecuteStreamingSql(Google.Cloud.Spanner.V1.ExecuteSqlRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:Google.Cloud.Spanner.V1.Spanner.SpannerClient.ExecuteStreamingSql(Google.Cloud.Spanner.V1.ExecuteSqlRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: ExecuteStreamingSql(Google.Cloud.Spanner.V1.ExecuteSqlRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: Google.Cloud.Spanner.V1.Spanner.SpannerClient
  langs:
  - csharp
  - vb
  name: ExecuteStreamingSql(ExecuteSqlRequest, Metadata, Nullable<DateTime>, CancellationToken)
  nameWithType: Spanner.SpannerClient.ExecuteStreamingSql(ExecuteSqlRequest, Metadata, Nullable<DateTime>, CancellationToken)
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerClient.ExecuteStreamingSql(Google.Cloud.Spanner.V1.ExecuteSqlRequest, Grpc.Core.Metadata, System.Nullable<System.DateTime>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: ExecuteStreamingSql
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
    startLine: 892
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nLike [ExecuteSql][google.spanner.v1.Spanner.ExecuteSql], except returns the result\nset as a stream. Unlike [ExecuteSql][google.spanner.v1.Spanner.ExecuteSql], there\nis no limit on the size of the returned result set. However, no\nindividual row in the result set can exceed 100 MiB, and no\ncolumn value can exceed 10 MiB.\n"
  example: []
  syntax:
    content: public virtual AsyncServerStreamingCall<PartialResultSet> ExecuteStreamingSql(ExecuteSqlRequest request, Metadata headers = null, DateTime? deadline = default(DateTime? ), CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: request
      type: Google.Cloud.Spanner.V1.ExecuteSqlRequest
      description: The request to send to the server.
    - id: headers
      type: Grpc.Core.Metadata
      description: The initial metadata to send with the call. This parameter is optional.
    - id: deadline
      type: System.Nullable{System.DateTime}
      description: An optional deadline for the call. The call will be cancelled if deadline is hit.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: An optional token for canceling the call.
    return:
      type: Grpc.Core.AsyncServerStreamingCall{Google.Cloud.Spanner.V1.PartialResultSet}
      description: The call object.
    content.vb: Public Overridable Function ExecuteStreamingSql(request As ExecuteSqlRequest, headers As Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As AsyncServerStreamingCall(Of PartialResultSet)
  overload: Google.Cloud.Spanner.V1.Spanner.SpannerClient.ExecuteStreamingSql*
  nameWithType.vb: Spanner.SpannerClient.ExecuteStreamingSql(ExecuteSqlRequest, Metadata, Nullable(Of DateTime), CancellationToken)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Google.Cloud.Spanner.V1.Spanner.SpannerClient.ExecuteStreamingSql(Google.Cloud.Spanner.V1.ExecuteSqlRequest, Grpc.Core.Metadata, System.Nullable(Of System.DateTime), System.Threading.CancellationToken)
  name.vb: ExecuteStreamingSql(ExecuteSqlRequest, Metadata, Nullable(Of DateTime), CancellationToken)
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerClient.ExecuteStreamingSql(Google.Cloud.Spanner.V1.ExecuteSqlRequest,Grpc.Core.CallOptions)
  commentId: M:Google.Cloud.Spanner.V1.Spanner.SpannerClient.ExecuteStreamingSql(Google.Cloud.Spanner.V1.ExecuteSqlRequest,Grpc.Core.CallOptions)
  id: ExecuteStreamingSql(Google.Cloud.Spanner.V1.ExecuteSqlRequest,Grpc.Core.CallOptions)
  parent: Google.Cloud.Spanner.V1.Spanner.SpannerClient
  langs:
  - csharp
  - vb
  name: ExecuteStreamingSql(ExecuteSqlRequest, CallOptions)
  nameWithType: Spanner.SpannerClient.ExecuteStreamingSql(ExecuteSqlRequest, CallOptions)
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerClient.ExecuteStreamingSql(Google.Cloud.Spanner.V1.ExecuteSqlRequest, Grpc.Core.CallOptions)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: ExecuteStreamingSql
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
    startLine: 906
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nLike [ExecuteSql][google.spanner.v1.Spanner.ExecuteSql], except returns the result\nset as a stream. Unlike [ExecuteSql][google.spanner.v1.Spanner.ExecuteSql], there\nis no limit on the size of the returned result set. However, no\nindividual row in the result set can exceed 100 MiB, and no\ncolumn value can exceed 10 MiB.\n"
  example: []
  syntax:
    content: public virtual AsyncServerStreamingCall<PartialResultSet> ExecuteStreamingSql(ExecuteSqlRequest request, CallOptions options)
    parameters:
    - id: request
      type: Google.Cloud.Spanner.V1.ExecuteSqlRequest
      description: The request to send to the server.
    - id: options
      type: Grpc.Core.CallOptions
      description: The options for the call.
    return:
      type: Grpc.Core.AsyncServerStreamingCall{Google.Cloud.Spanner.V1.PartialResultSet}
      description: The call object.
    content.vb: Public Overridable Function ExecuteStreamingSql(request As ExecuteSqlRequest, options As CallOptions) As AsyncServerStreamingCall(Of PartialResultSet)
  overload: Google.Cloud.Spanner.V1.Spanner.SpannerClient.ExecuteStreamingSql*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerClient.ExecuteBatchDml(Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:Google.Cloud.Spanner.V1.Spanner.SpannerClient.ExecuteBatchDml(Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: ExecuteBatchDml(Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: Google.Cloud.Spanner.V1.Spanner.SpannerClient
  langs:
  - csharp
  - vb
  name: ExecuteBatchDml(ExecuteBatchDmlRequest, Metadata, Nullable<DateTime>, CancellationToken)
  nameWithType: Spanner.SpannerClient.ExecuteBatchDml(ExecuteBatchDmlRequest, Metadata, Nullable<DateTime>, CancellationToken)
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerClient.ExecuteBatchDml(Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest, Grpc.Core.Metadata, System.Nullable<System.DateTime>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: ExecuteBatchDml
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
    startLine: 928
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nExecutes a batch of SQL DML statements. This method allows many statements\nto be run with lower latency than submitting them sequentially with\n[ExecuteSql][google.spanner.v1.Spanner.ExecuteSql].\n\nStatements are executed in sequential order. A request can succeed even if\na statement fails. The [ExecuteBatchDmlResponse.status][google.spanner.v1.ExecuteBatchDmlResponse.status] field in the\nresponse provides information about the statement that failed. Clients must\ninspect this field to determine whether an error occurred.\n\nExecution stops after the first failed statement; the remaining statements\nare not executed.\n"
  example: []
  syntax:
    content: public virtual ExecuteBatchDmlResponse ExecuteBatchDml(ExecuteBatchDmlRequest request, Metadata headers = null, DateTime? deadline = default(DateTime? ), CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: request
      type: Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest
      description: The request to send to the server.
    - id: headers
      type: Grpc.Core.Metadata
      description: The initial metadata to send with the call. This parameter is optional.
    - id: deadline
      type: System.Nullable{System.DateTime}
      description: An optional deadline for the call. The call will be cancelled if deadline is hit.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: An optional token for canceling the call.
    return:
      type: Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse
      description: The response received from the server.
    content.vb: Public Overridable Function ExecuteBatchDml(request As ExecuteBatchDmlRequest, headers As Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As ExecuteBatchDmlResponse
  overload: Google.Cloud.Spanner.V1.Spanner.SpannerClient.ExecuteBatchDml*
  nameWithType.vb: Spanner.SpannerClient.ExecuteBatchDml(ExecuteBatchDmlRequest, Metadata, Nullable(Of DateTime), CancellationToken)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Google.Cloud.Spanner.V1.Spanner.SpannerClient.ExecuteBatchDml(Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest, Grpc.Core.Metadata, System.Nullable(Of System.DateTime), System.Threading.CancellationToken)
  name.vb: ExecuteBatchDml(ExecuteBatchDmlRequest, Metadata, Nullable(Of DateTime), CancellationToken)
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerClient.ExecuteBatchDml(Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest,Grpc.Core.CallOptions)
  commentId: M:Google.Cloud.Spanner.V1.Spanner.SpannerClient.ExecuteBatchDml(Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest,Grpc.Core.CallOptions)
  id: ExecuteBatchDml(Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest,Grpc.Core.CallOptions)
  parent: Google.Cloud.Spanner.V1.Spanner.SpannerClient
  langs:
  - csharp
  - vb
  name: ExecuteBatchDml(ExecuteBatchDmlRequest, CallOptions)
  nameWithType: Spanner.SpannerClient.ExecuteBatchDml(ExecuteBatchDmlRequest, CallOptions)
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerClient.ExecuteBatchDml(Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest, Grpc.Core.CallOptions)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: ExecuteBatchDml
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
    startLine: 948
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nExecutes a batch of SQL DML statements. This method allows many statements\nto be run with lower latency than submitting them sequentially with\n[ExecuteSql][google.spanner.v1.Spanner.ExecuteSql].\n\nStatements are executed in sequential order. A request can succeed even if\na statement fails. The [ExecuteBatchDmlResponse.status][google.spanner.v1.ExecuteBatchDmlResponse.status] field in the\nresponse provides information about the statement that failed. Clients must\ninspect this field to determine whether an error occurred.\n\nExecution stops after the first failed statement; the remaining statements\nare not executed.\n"
  example: []
  syntax:
    content: public virtual ExecuteBatchDmlResponse ExecuteBatchDml(ExecuteBatchDmlRequest request, CallOptions options)
    parameters:
    - id: request
      type: Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest
      description: The request to send to the server.
    - id: options
      type: Grpc.Core.CallOptions
      description: The options for the call.
    return:
      type: Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse
      description: The response received from the server.
    content.vb: Public Overridable Function ExecuteBatchDml(request As ExecuteBatchDmlRequest, options As CallOptions) As ExecuteBatchDmlResponse
  overload: Google.Cloud.Spanner.V1.Spanner.SpannerClient.ExecuteBatchDml*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerClient.ExecuteBatchDmlAsync(Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:Google.Cloud.Spanner.V1.Spanner.SpannerClient.ExecuteBatchDmlAsync(Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: ExecuteBatchDmlAsync(Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: Google.Cloud.Spanner.V1.Spanner.SpannerClient
  langs:
  - csharp
  - vb
  name: ExecuteBatchDmlAsync(ExecuteBatchDmlRequest, Metadata, Nullable<DateTime>, CancellationToken)
  nameWithType: Spanner.SpannerClient.ExecuteBatchDmlAsync(ExecuteBatchDmlRequest, Metadata, Nullable<DateTime>, CancellationToken)
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerClient.ExecuteBatchDmlAsync(Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest, Grpc.Core.Metadata, System.Nullable<System.DateTime>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: ExecuteBatchDmlAsync
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
    startLine: 970
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nExecutes a batch of SQL DML statements. This method allows many statements\nto be run with lower latency than submitting them sequentially with\n[ExecuteSql][google.spanner.v1.Spanner.ExecuteSql].\n\nStatements are executed in sequential order. A request can succeed even if\na statement fails. The [ExecuteBatchDmlResponse.status][google.spanner.v1.ExecuteBatchDmlResponse.status] field in the\nresponse provides information about the statement that failed. Clients must\ninspect this field to determine whether an error occurred.\n\nExecution stops after the first failed statement; the remaining statements\nare not executed.\n"
  example: []
  syntax:
    content: public virtual AsyncUnaryCall<ExecuteBatchDmlResponse> ExecuteBatchDmlAsync(ExecuteBatchDmlRequest request, Metadata headers = null, DateTime? deadline = default(DateTime? ), CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: request
      type: Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest
      description: The request to send to the server.
    - id: headers
      type: Grpc.Core.Metadata
      description: The initial metadata to send with the call. This parameter is optional.
    - id: deadline
      type: System.Nullable{System.DateTime}
      description: An optional deadline for the call. The call will be cancelled if deadline is hit.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: An optional token for canceling the call.
    return:
      type: Grpc.Core.AsyncUnaryCall{Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse}
      description: The call object.
    content.vb: Public Overridable Function ExecuteBatchDmlAsync(request As ExecuteBatchDmlRequest, headers As Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As AsyncUnaryCall(Of ExecuteBatchDmlResponse)
  overload: Google.Cloud.Spanner.V1.Spanner.SpannerClient.ExecuteBatchDmlAsync*
  nameWithType.vb: Spanner.SpannerClient.ExecuteBatchDmlAsync(ExecuteBatchDmlRequest, Metadata, Nullable(Of DateTime), CancellationToken)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Google.Cloud.Spanner.V1.Spanner.SpannerClient.ExecuteBatchDmlAsync(Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest, Grpc.Core.Metadata, System.Nullable(Of System.DateTime), System.Threading.CancellationToken)
  name.vb: ExecuteBatchDmlAsync(ExecuteBatchDmlRequest, Metadata, Nullable(Of DateTime), CancellationToken)
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerClient.ExecuteBatchDmlAsync(Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest,Grpc.Core.CallOptions)
  commentId: M:Google.Cloud.Spanner.V1.Spanner.SpannerClient.ExecuteBatchDmlAsync(Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest,Grpc.Core.CallOptions)
  id: ExecuteBatchDmlAsync(Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest,Grpc.Core.CallOptions)
  parent: Google.Cloud.Spanner.V1.Spanner.SpannerClient
  langs:
  - csharp
  - vb
  name: ExecuteBatchDmlAsync(ExecuteBatchDmlRequest, CallOptions)
  nameWithType: Spanner.SpannerClient.ExecuteBatchDmlAsync(ExecuteBatchDmlRequest, CallOptions)
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerClient.ExecuteBatchDmlAsync(Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest, Grpc.Core.CallOptions)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: ExecuteBatchDmlAsync
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
    startLine: 990
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nExecutes a batch of SQL DML statements. This method allows many statements\nto be run with lower latency than submitting them sequentially with\n[ExecuteSql][google.spanner.v1.Spanner.ExecuteSql].\n\nStatements are executed in sequential order. A request can succeed even if\na statement fails. The [ExecuteBatchDmlResponse.status][google.spanner.v1.ExecuteBatchDmlResponse.status] field in the\nresponse provides information about the statement that failed. Clients must\ninspect this field to determine whether an error occurred.\n\nExecution stops after the first failed statement; the remaining statements\nare not executed.\n"
  example: []
  syntax:
    content: public virtual AsyncUnaryCall<ExecuteBatchDmlResponse> ExecuteBatchDmlAsync(ExecuteBatchDmlRequest request, CallOptions options)
    parameters:
    - id: request
      type: Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest
      description: The request to send to the server.
    - id: options
      type: Grpc.Core.CallOptions
      description: The options for the call.
    return:
      type: Grpc.Core.AsyncUnaryCall{Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse}
      description: The call object.
    content.vb: Public Overridable Function ExecuteBatchDmlAsync(request As ExecuteBatchDmlRequest, options As CallOptions) As AsyncUnaryCall(Of ExecuteBatchDmlResponse)
  overload: Google.Cloud.Spanner.V1.Spanner.SpannerClient.ExecuteBatchDmlAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerClient.Read(Google.Cloud.Spanner.V1.ReadRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:Google.Cloud.Spanner.V1.Spanner.SpannerClient.Read(Google.Cloud.Spanner.V1.ReadRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: Read(Google.Cloud.Spanner.V1.ReadRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: Google.Cloud.Spanner.V1.Spanner.SpannerClient
  langs:
  - csharp
  - vb
  name: Read(ReadRequest, Metadata, Nullable<DateTime>, CancellationToken)
  nameWithType: Spanner.SpannerClient.Read(ReadRequest, Metadata, Nullable<DateTime>, CancellationToken)
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerClient.Read(Google.Cloud.Spanner.V1.ReadRequest, Grpc.Core.Metadata, System.Nullable<System.DateTime>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: Read
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
    startLine: 1014
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nReads rows from the database using key lookups and scans, as a\nsimple key/value style alternative to\n[ExecuteSql][google.spanner.v1.Spanner.ExecuteSql].  This method cannot be used to\nreturn a result set larger than 10 MiB; if the read matches more\ndata than that, the read fails with a `FAILED_PRECONDITION`\nerror.\n\nReads inside read-write transactions might return `ABORTED`. If\nthis occurs, the application should restart the transaction from\nthe beginning. See [Transaction][google.spanner.v1.Transaction] for more details.\n\nLarger result sets can be yielded in streaming fashion by calling\n[StreamingRead][google.spanner.v1.Spanner.StreamingRead] instead.\n"
  example: []
  syntax:
    content: public virtual ResultSet Read(ReadRequest request, Metadata headers = null, DateTime? deadline = default(DateTime? ), CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: request
      type: Google.Cloud.Spanner.V1.ReadRequest
      description: The request to send to the server.
    - id: headers
      type: Grpc.Core.Metadata
      description: The initial metadata to send with the call. This parameter is optional.
    - id: deadline
      type: System.Nullable{System.DateTime}
      description: An optional deadline for the call. The call will be cancelled if deadline is hit.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: An optional token for canceling the call.
    return:
      type: Google.Cloud.Spanner.V1.ResultSet
      description: The response received from the server.
    content.vb: Public Overridable Function Read(request As ReadRequest, headers As Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As ResultSet
  overload: Google.Cloud.Spanner.V1.Spanner.SpannerClient.Read*
  nameWithType.vb: Spanner.SpannerClient.Read(ReadRequest, Metadata, Nullable(Of DateTime), CancellationToken)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Google.Cloud.Spanner.V1.Spanner.SpannerClient.Read(Google.Cloud.Spanner.V1.ReadRequest, Grpc.Core.Metadata, System.Nullable(Of System.DateTime), System.Threading.CancellationToken)
  name.vb: Read(ReadRequest, Metadata, Nullable(Of DateTime), CancellationToken)
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerClient.Read(Google.Cloud.Spanner.V1.ReadRequest,Grpc.Core.CallOptions)
  commentId: M:Google.Cloud.Spanner.V1.Spanner.SpannerClient.Read(Google.Cloud.Spanner.V1.ReadRequest,Grpc.Core.CallOptions)
  id: Read(Google.Cloud.Spanner.V1.ReadRequest,Grpc.Core.CallOptions)
  parent: Google.Cloud.Spanner.V1.Spanner.SpannerClient
  langs:
  - csharp
  - vb
  name: Read(ReadRequest, CallOptions)
  nameWithType: Spanner.SpannerClient.Read(ReadRequest, CallOptions)
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerClient.Read(Google.Cloud.Spanner.V1.ReadRequest, Grpc.Core.CallOptions)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: Read
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
    startLine: 1036
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nReads rows from the database using key lookups and scans, as a\nsimple key/value style alternative to\n[ExecuteSql][google.spanner.v1.Spanner.ExecuteSql].  This method cannot be used to\nreturn a result set larger than 10 MiB; if the read matches more\ndata than that, the read fails with a `FAILED_PRECONDITION`\nerror.\n\nReads inside read-write transactions might return `ABORTED`. If\nthis occurs, the application should restart the transaction from\nthe beginning. See [Transaction][google.spanner.v1.Transaction] for more details.\n\nLarger result sets can be yielded in streaming fashion by calling\n[StreamingRead][google.spanner.v1.Spanner.StreamingRead] instead.\n"
  example: []
  syntax:
    content: public virtual ResultSet Read(ReadRequest request, CallOptions options)
    parameters:
    - id: request
      type: Google.Cloud.Spanner.V1.ReadRequest
      description: The request to send to the server.
    - id: options
      type: Grpc.Core.CallOptions
      description: The options for the call.
    return:
      type: Google.Cloud.Spanner.V1.ResultSet
      description: The response received from the server.
    content.vb: Public Overridable Function Read(request As ReadRequest, options As CallOptions) As ResultSet
  overload: Google.Cloud.Spanner.V1.Spanner.SpannerClient.Read*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerClient.ReadAsync(Google.Cloud.Spanner.V1.ReadRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:Google.Cloud.Spanner.V1.Spanner.SpannerClient.ReadAsync(Google.Cloud.Spanner.V1.ReadRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: ReadAsync(Google.Cloud.Spanner.V1.ReadRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: Google.Cloud.Spanner.V1.Spanner.SpannerClient
  langs:
  - csharp
  - vb
  name: ReadAsync(ReadRequest, Metadata, Nullable<DateTime>, CancellationToken)
  nameWithType: Spanner.SpannerClient.ReadAsync(ReadRequest, Metadata, Nullable<DateTime>, CancellationToken)
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerClient.ReadAsync(Google.Cloud.Spanner.V1.ReadRequest, Grpc.Core.Metadata, System.Nullable<System.DateTime>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: ReadAsync
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
    startLine: 1060
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nReads rows from the database using key lookups and scans, as a\nsimple key/value style alternative to\n[ExecuteSql][google.spanner.v1.Spanner.ExecuteSql].  This method cannot be used to\nreturn a result set larger than 10 MiB; if the read matches more\ndata than that, the read fails with a `FAILED_PRECONDITION`\nerror.\n\nReads inside read-write transactions might return `ABORTED`. If\nthis occurs, the application should restart the transaction from\nthe beginning. See [Transaction][google.spanner.v1.Transaction] for more details.\n\nLarger result sets can be yielded in streaming fashion by calling\n[StreamingRead][google.spanner.v1.Spanner.StreamingRead] instead.\n"
  example: []
  syntax:
    content: public virtual AsyncUnaryCall<ResultSet> ReadAsync(ReadRequest request, Metadata headers = null, DateTime? deadline = default(DateTime? ), CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: request
      type: Google.Cloud.Spanner.V1.ReadRequest
      description: The request to send to the server.
    - id: headers
      type: Grpc.Core.Metadata
      description: The initial metadata to send with the call. This parameter is optional.
    - id: deadline
      type: System.Nullable{System.DateTime}
      description: An optional deadline for the call. The call will be cancelled if deadline is hit.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: An optional token for canceling the call.
    return:
      type: Grpc.Core.AsyncUnaryCall{Google.Cloud.Spanner.V1.ResultSet}
      description: The call object.
    content.vb: Public Overridable Function ReadAsync(request As ReadRequest, headers As Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As AsyncUnaryCall(Of ResultSet)
  overload: Google.Cloud.Spanner.V1.Spanner.SpannerClient.ReadAsync*
  nameWithType.vb: Spanner.SpannerClient.ReadAsync(ReadRequest, Metadata, Nullable(Of DateTime), CancellationToken)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Google.Cloud.Spanner.V1.Spanner.SpannerClient.ReadAsync(Google.Cloud.Spanner.V1.ReadRequest, Grpc.Core.Metadata, System.Nullable(Of System.DateTime), System.Threading.CancellationToken)
  name.vb: ReadAsync(ReadRequest, Metadata, Nullable(Of DateTime), CancellationToken)
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerClient.ReadAsync(Google.Cloud.Spanner.V1.ReadRequest,Grpc.Core.CallOptions)
  commentId: M:Google.Cloud.Spanner.V1.Spanner.SpannerClient.ReadAsync(Google.Cloud.Spanner.V1.ReadRequest,Grpc.Core.CallOptions)
  id: ReadAsync(Google.Cloud.Spanner.V1.ReadRequest,Grpc.Core.CallOptions)
  parent: Google.Cloud.Spanner.V1.Spanner.SpannerClient
  langs:
  - csharp
  - vb
  name: ReadAsync(ReadRequest, CallOptions)
  nameWithType: Spanner.SpannerClient.ReadAsync(ReadRequest, CallOptions)
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerClient.ReadAsync(Google.Cloud.Spanner.V1.ReadRequest, Grpc.Core.CallOptions)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: ReadAsync
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
    startLine: 1082
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nReads rows from the database using key lookups and scans, as a\nsimple key/value style alternative to\n[ExecuteSql][google.spanner.v1.Spanner.ExecuteSql].  This method cannot be used to\nreturn a result set larger than 10 MiB; if the read matches more\ndata than that, the read fails with a `FAILED_PRECONDITION`\nerror.\n\nReads inside read-write transactions might return `ABORTED`. If\nthis occurs, the application should restart the transaction from\nthe beginning. See [Transaction][google.spanner.v1.Transaction] for more details.\n\nLarger result sets can be yielded in streaming fashion by calling\n[StreamingRead][google.spanner.v1.Spanner.StreamingRead] instead.\n"
  example: []
  syntax:
    content: public virtual AsyncUnaryCall<ResultSet> ReadAsync(ReadRequest request, CallOptions options)
    parameters:
    - id: request
      type: Google.Cloud.Spanner.V1.ReadRequest
      description: The request to send to the server.
    - id: options
      type: Grpc.Core.CallOptions
      description: The options for the call.
    return:
      type: Grpc.Core.AsyncUnaryCall{Google.Cloud.Spanner.V1.ResultSet}
      description: The call object.
    content.vb: Public Overridable Function ReadAsync(request As ReadRequest, options As CallOptions) As AsyncUnaryCall(Of ResultSet)
  overload: Google.Cloud.Spanner.V1.Spanner.SpannerClient.ReadAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerClient.StreamingRead(Google.Cloud.Spanner.V1.ReadRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:Google.Cloud.Spanner.V1.Spanner.SpannerClient.StreamingRead(Google.Cloud.Spanner.V1.ReadRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: StreamingRead(Google.Cloud.Spanner.V1.ReadRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: Google.Cloud.Spanner.V1.Spanner.SpannerClient
  langs:
  - csharp
  - vb
  name: StreamingRead(ReadRequest, Metadata, Nullable<DateTime>, CancellationToken)
  nameWithType: Spanner.SpannerClient.StreamingRead(ReadRequest, Metadata, Nullable<DateTime>, CancellationToken)
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerClient.StreamingRead(Google.Cloud.Spanner.V1.ReadRequest, Grpc.Core.Metadata, System.Nullable<System.DateTime>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: StreamingRead
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
    startLine: 1098
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nLike [Read][google.spanner.v1.Spanner.Read], except returns the result set as a\nstream. Unlike [Read][google.spanner.v1.Spanner.Read], there is no limit on the\nsize of the returned result set. However, no individual row in\nthe result set can exceed 100 MiB, and no column value can exceed\n10 MiB.\n"
  example: []
  syntax:
    content: public virtual AsyncServerStreamingCall<PartialResultSet> StreamingRead(ReadRequest request, Metadata headers = null, DateTime? deadline = default(DateTime? ), CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: request
      type: Google.Cloud.Spanner.V1.ReadRequest
      description: The request to send to the server.
    - id: headers
      type: Grpc.Core.Metadata
      description: The initial metadata to send with the call. This parameter is optional.
    - id: deadline
      type: System.Nullable{System.DateTime}
      description: An optional deadline for the call. The call will be cancelled if deadline is hit.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: An optional token for canceling the call.
    return:
      type: Grpc.Core.AsyncServerStreamingCall{Google.Cloud.Spanner.V1.PartialResultSet}
      description: The call object.
    content.vb: Public Overridable Function StreamingRead(request As ReadRequest, headers As Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As AsyncServerStreamingCall(Of PartialResultSet)
  overload: Google.Cloud.Spanner.V1.Spanner.SpannerClient.StreamingRead*
  nameWithType.vb: Spanner.SpannerClient.StreamingRead(ReadRequest, Metadata, Nullable(Of DateTime), CancellationToken)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Google.Cloud.Spanner.V1.Spanner.SpannerClient.StreamingRead(Google.Cloud.Spanner.V1.ReadRequest, Grpc.Core.Metadata, System.Nullable(Of System.DateTime), System.Threading.CancellationToken)
  name.vb: StreamingRead(ReadRequest, Metadata, Nullable(Of DateTime), CancellationToken)
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerClient.StreamingRead(Google.Cloud.Spanner.V1.ReadRequest,Grpc.Core.CallOptions)
  commentId: M:Google.Cloud.Spanner.V1.Spanner.SpannerClient.StreamingRead(Google.Cloud.Spanner.V1.ReadRequest,Grpc.Core.CallOptions)
  id: StreamingRead(Google.Cloud.Spanner.V1.ReadRequest,Grpc.Core.CallOptions)
  parent: Google.Cloud.Spanner.V1.Spanner.SpannerClient
  langs:
  - csharp
  - vb
  name: StreamingRead(ReadRequest, CallOptions)
  nameWithType: Spanner.SpannerClient.StreamingRead(ReadRequest, CallOptions)
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerClient.StreamingRead(Google.Cloud.Spanner.V1.ReadRequest, Grpc.Core.CallOptions)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: StreamingRead
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
    startLine: 1112
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nLike [Read][google.spanner.v1.Spanner.Read], except returns the result set as a\nstream. Unlike [Read][google.spanner.v1.Spanner.Read], there is no limit on the\nsize of the returned result set. However, no individual row in\nthe result set can exceed 100 MiB, and no column value can exceed\n10 MiB.\n"
  example: []
  syntax:
    content: public virtual AsyncServerStreamingCall<PartialResultSet> StreamingRead(ReadRequest request, CallOptions options)
    parameters:
    - id: request
      type: Google.Cloud.Spanner.V1.ReadRequest
      description: The request to send to the server.
    - id: options
      type: Grpc.Core.CallOptions
      description: The options for the call.
    return:
      type: Grpc.Core.AsyncServerStreamingCall{Google.Cloud.Spanner.V1.PartialResultSet}
      description: The call object.
    content.vb: Public Overridable Function StreamingRead(request As ReadRequest, options As CallOptions) As AsyncServerStreamingCall(Of PartialResultSet)
  overload: Google.Cloud.Spanner.V1.Spanner.SpannerClient.StreamingRead*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerClient.BeginTransaction(Google.Cloud.Spanner.V1.BeginTransactionRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:Google.Cloud.Spanner.V1.Spanner.SpannerClient.BeginTransaction(Google.Cloud.Spanner.V1.BeginTransactionRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: BeginTransaction(Google.Cloud.Spanner.V1.BeginTransactionRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: Google.Cloud.Spanner.V1.Spanner.SpannerClient
  langs:
  - csharp
  - vb
  name: BeginTransaction(BeginTransactionRequest, Metadata, Nullable<DateTime>, CancellationToken)
  nameWithType: Spanner.SpannerClient.BeginTransaction(BeginTransactionRequest, Metadata, Nullable<DateTime>, CancellationToken)
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerClient.BeginTransaction(Google.Cloud.Spanner.V1.BeginTransactionRequest, Grpc.Core.Metadata, System.Nullable<System.DateTime>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: BeginTransaction
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
    startLine: 1127
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nBegins a new transaction. This step can often be skipped:\n[Read][google.spanner.v1.Spanner.Read], [ExecuteSql][google.spanner.v1.Spanner.ExecuteSql] and\n[Commit][google.spanner.v1.Spanner.Commit] can begin a new transaction as a\nside-effect.\n"
  example: []
  syntax:
    content: public virtual Transaction BeginTransaction(BeginTransactionRequest request, Metadata headers = null, DateTime? deadline = default(DateTime? ), CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: request
      type: Google.Cloud.Spanner.V1.BeginTransactionRequest
      description: The request to send to the server.
    - id: headers
      type: Grpc.Core.Metadata
      description: The initial metadata to send with the call. This parameter is optional.
    - id: deadline
      type: System.Nullable{System.DateTime}
      description: An optional deadline for the call. The call will be cancelled if deadline is hit.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: An optional token for canceling the call.
    return:
      type: Google.Cloud.Spanner.V1.Transaction
      description: The response received from the server.
    content.vb: Public Overridable Function BeginTransaction(request As BeginTransactionRequest, headers As Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As Transaction
  overload: Google.Cloud.Spanner.V1.Spanner.SpannerClient.BeginTransaction*
  nameWithType.vb: Spanner.SpannerClient.BeginTransaction(BeginTransactionRequest, Metadata, Nullable(Of DateTime), CancellationToken)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Google.Cloud.Spanner.V1.Spanner.SpannerClient.BeginTransaction(Google.Cloud.Spanner.V1.BeginTransactionRequest, Grpc.Core.Metadata, System.Nullable(Of System.DateTime), System.Threading.CancellationToken)
  name.vb: BeginTransaction(BeginTransactionRequest, Metadata, Nullable(Of DateTime), CancellationToken)
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerClient.BeginTransaction(Google.Cloud.Spanner.V1.BeginTransactionRequest,Grpc.Core.CallOptions)
  commentId: M:Google.Cloud.Spanner.V1.Spanner.SpannerClient.BeginTransaction(Google.Cloud.Spanner.V1.BeginTransactionRequest,Grpc.Core.CallOptions)
  id: BeginTransaction(Google.Cloud.Spanner.V1.BeginTransactionRequest,Grpc.Core.CallOptions)
  parent: Google.Cloud.Spanner.V1.Spanner.SpannerClient
  langs:
  - csharp
  - vb
  name: BeginTransaction(BeginTransactionRequest, CallOptions)
  nameWithType: Spanner.SpannerClient.BeginTransaction(BeginTransactionRequest, CallOptions)
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerClient.BeginTransaction(Google.Cloud.Spanner.V1.BeginTransactionRequest, Grpc.Core.CallOptions)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: BeginTransaction
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
    startLine: 1140
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nBegins a new transaction. This step can often be skipped:\n[Read][google.spanner.v1.Spanner.Read], [ExecuteSql][google.spanner.v1.Spanner.ExecuteSql] and\n[Commit][google.spanner.v1.Spanner.Commit] can begin a new transaction as a\nside-effect.\n"
  example: []
  syntax:
    content: public virtual Transaction BeginTransaction(BeginTransactionRequest request, CallOptions options)
    parameters:
    - id: request
      type: Google.Cloud.Spanner.V1.BeginTransactionRequest
      description: The request to send to the server.
    - id: options
      type: Grpc.Core.CallOptions
      description: The options for the call.
    return:
      type: Google.Cloud.Spanner.V1.Transaction
      description: The response received from the server.
    content.vb: Public Overridable Function BeginTransaction(request As BeginTransactionRequest, options As CallOptions) As Transaction
  overload: Google.Cloud.Spanner.V1.Spanner.SpannerClient.BeginTransaction*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerClient.BeginTransactionAsync(Google.Cloud.Spanner.V1.BeginTransactionRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:Google.Cloud.Spanner.V1.Spanner.SpannerClient.BeginTransactionAsync(Google.Cloud.Spanner.V1.BeginTransactionRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: BeginTransactionAsync(Google.Cloud.Spanner.V1.BeginTransactionRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: Google.Cloud.Spanner.V1.Spanner.SpannerClient
  langs:
  - csharp
  - vb
  name: BeginTransactionAsync(BeginTransactionRequest, Metadata, Nullable<DateTime>, CancellationToken)
  nameWithType: Spanner.SpannerClient.BeginTransactionAsync(BeginTransactionRequest, Metadata, Nullable<DateTime>, CancellationToken)
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerClient.BeginTransactionAsync(Google.Cloud.Spanner.V1.BeginTransactionRequest, Grpc.Core.Metadata, System.Nullable<System.DateTime>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: BeginTransactionAsync
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
    startLine: 1155
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nBegins a new transaction. This step can often be skipped:\n[Read][google.spanner.v1.Spanner.Read], [ExecuteSql][google.spanner.v1.Spanner.ExecuteSql] and\n[Commit][google.spanner.v1.Spanner.Commit] can begin a new transaction as a\nside-effect.\n"
  example: []
  syntax:
    content: public virtual AsyncUnaryCall<Transaction> BeginTransactionAsync(BeginTransactionRequest request, Metadata headers = null, DateTime? deadline = default(DateTime? ), CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: request
      type: Google.Cloud.Spanner.V1.BeginTransactionRequest
      description: The request to send to the server.
    - id: headers
      type: Grpc.Core.Metadata
      description: The initial metadata to send with the call. This parameter is optional.
    - id: deadline
      type: System.Nullable{System.DateTime}
      description: An optional deadline for the call. The call will be cancelled if deadline is hit.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: An optional token for canceling the call.
    return:
      type: Grpc.Core.AsyncUnaryCall{Google.Cloud.Spanner.V1.Transaction}
      description: The call object.
    content.vb: Public Overridable Function BeginTransactionAsync(request As BeginTransactionRequest, headers As Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As AsyncUnaryCall(Of Transaction)
  overload: Google.Cloud.Spanner.V1.Spanner.SpannerClient.BeginTransactionAsync*
  nameWithType.vb: Spanner.SpannerClient.BeginTransactionAsync(BeginTransactionRequest, Metadata, Nullable(Of DateTime), CancellationToken)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Google.Cloud.Spanner.V1.Spanner.SpannerClient.BeginTransactionAsync(Google.Cloud.Spanner.V1.BeginTransactionRequest, Grpc.Core.Metadata, System.Nullable(Of System.DateTime), System.Threading.CancellationToken)
  name.vb: BeginTransactionAsync(BeginTransactionRequest, Metadata, Nullable(Of DateTime), CancellationToken)
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerClient.BeginTransactionAsync(Google.Cloud.Spanner.V1.BeginTransactionRequest,Grpc.Core.CallOptions)
  commentId: M:Google.Cloud.Spanner.V1.Spanner.SpannerClient.BeginTransactionAsync(Google.Cloud.Spanner.V1.BeginTransactionRequest,Grpc.Core.CallOptions)
  id: BeginTransactionAsync(Google.Cloud.Spanner.V1.BeginTransactionRequest,Grpc.Core.CallOptions)
  parent: Google.Cloud.Spanner.V1.Spanner.SpannerClient
  langs:
  - csharp
  - vb
  name: BeginTransactionAsync(BeginTransactionRequest, CallOptions)
  nameWithType: Spanner.SpannerClient.BeginTransactionAsync(BeginTransactionRequest, CallOptions)
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerClient.BeginTransactionAsync(Google.Cloud.Spanner.V1.BeginTransactionRequest, Grpc.Core.CallOptions)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: BeginTransactionAsync
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
    startLine: 1168
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nBegins a new transaction. This step can often be skipped:\n[Read][google.spanner.v1.Spanner.Read], [ExecuteSql][google.spanner.v1.Spanner.ExecuteSql] and\n[Commit][google.spanner.v1.Spanner.Commit] can begin a new transaction as a\nside-effect.\n"
  example: []
  syntax:
    content: public virtual AsyncUnaryCall<Transaction> BeginTransactionAsync(BeginTransactionRequest request, CallOptions options)
    parameters:
    - id: request
      type: Google.Cloud.Spanner.V1.BeginTransactionRequest
      description: The request to send to the server.
    - id: options
      type: Grpc.Core.CallOptions
      description: The options for the call.
    return:
      type: Grpc.Core.AsyncUnaryCall{Google.Cloud.Spanner.V1.Transaction}
      description: The call object.
    content.vb: Public Overridable Function BeginTransactionAsync(request As BeginTransactionRequest, options As CallOptions) As AsyncUnaryCall(Of Transaction)
  overload: Google.Cloud.Spanner.V1.Spanner.SpannerClient.BeginTransactionAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerClient.Commit(Google.Cloud.Spanner.V1.CommitRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:Google.Cloud.Spanner.V1.Spanner.SpannerClient.Commit(Google.Cloud.Spanner.V1.CommitRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: Commit(Google.Cloud.Spanner.V1.CommitRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: Google.Cloud.Spanner.V1.Spanner.SpannerClient
  langs:
  - csharp
  - vb
  name: Commit(CommitRequest, Metadata, Nullable<DateTime>, CancellationToken)
  nameWithType: Spanner.SpannerClient.Commit(CommitRequest, Metadata, Nullable<DateTime>, CancellationToken)
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerClient.Commit(Google.Cloud.Spanner.V1.CommitRequest, Grpc.Core.Metadata, System.Nullable<System.DateTime>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: Commit
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
    startLine: 1193
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nCommits a transaction. The request includes the mutations to be\napplied to rows in the database.\n\n`Commit` might return an `ABORTED` error. This can occur at any time;\ncommonly, the cause is conflicts with concurrent\ntransactions. However, it can also happen for a variety of other\nreasons. If `Commit` returns `ABORTED`, the caller should re-attempt\nthe transaction from the beginning, re-using the same session.\n\nOn very rare occasions, `Commit` might return `UNKNOWN`. This can happen,\nfor example, if the client job experiences a 1+ hour networking failure.\nAt that point, Cloud Spanner has lost track of the transaction outcome and\nwe recommend that you perform another read from the database to see the\nstate of things as they are now.\n"
  example: []
  syntax:
    content: public virtual CommitResponse Commit(CommitRequest request, Metadata headers = null, DateTime? deadline = default(DateTime? ), CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: request
      type: Google.Cloud.Spanner.V1.CommitRequest
      description: The request to send to the server.
    - id: headers
      type: Grpc.Core.Metadata
      description: The initial metadata to send with the call. This parameter is optional.
    - id: deadline
      type: System.Nullable{System.DateTime}
      description: An optional deadline for the call. The call will be cancelled if deadline is hit.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: An optional token for canceling the call.
    return:
      type: Google.Cloud.Spanner.V1.CommitResponse
      description: The response received from the server.
    content.vb: Public Overridable Function Commit(request As CommitRequest, headers As Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As CommitResponse
  overload: Google.Cloud.Spanner.V1.Spanner.SpannerClient.Commit*
  nameWithType.vb: Spanner.SpannerClient.Commit(CommitRequest, Metadata, Nullable(Of DateTime), CancellationToken)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Google.Cloud.Spanner.V1.Spanner.SpannerClient.Commit(Google.Cloud.Spanner.V1.CommitRequest, Grpc.Core.Metadata, System.Nullable(Of System.DateTime), System.Threading.CancellationToken)
  name.vb: Commit(CommitRequest, Metadata, Nullable(Of DateTime), CancellationToken)
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerClient.Commit(Google.Cloud.Spanner.V1.CommitRequest,Grpc.Core.CallOptions)
  commentId: M:Google.Cloud.Spanner.V1.Spanner.SpannerClient.Commit(Google.Cloud.Spanner.V1.CommitRequest,Grpc.Core.CallOptions)
  id: Commit(Google.Cloud.Spanner.V1.CommitRequest,Grpc.Core.CallOptions)
  parent: Google.Cloud.Spanner.V1.Spanner.SpannerClient
  langs:
  - csharp
  - vb
  name: Commit(CommitRequest, CallOptions)
  nameWithType: Spanner.SpannerClient.Commit(CommitRequest, CallOptions)
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerClient.Commit(Google.Cloud.Spanner.V1.CommitRequest, Grpc.Core.CallOptions)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: Commit
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
    startLine: 1216
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nCommits a transaction. The request includes the mutations to be\napplied to rows in the database.\n\n`Commit` might return an `ABORTED` error. This can occur at any time;\ncommonly, the cause is conflicts with concurrent\ntransactions. However, it can also happen for a variety of other\nreasons. If `Commit` returns `ABORTED`, the caller should re-attempt\nthe transaction from the beginning, re-using the same session.\n\nOn very rare occasions, `Commit` might return `UNKNOWN`. This can happen,\nfor example, if the client job experiences a 1+ hour networking failure.\nAt that point, Cloud Spanner has lost track of the transaction outcome and\nwe recommend that you perform another read from the database to see the\nstate of things as they are now.\n"
  example: []
  syntax:
    content: public virtual CommitResponse Commit(CommitRequest request, CallOptions options)
    parameters:
    - id: request
      type: Google.Cloud.Spanner.V1.CommitRequest
      description: The request to send to the server.
    - id: options
      type: Grpc.Core.CallOptions
      description: The options for the call.
    return:
      type: Google.Cloud.Spanner.V1.CommitResponse
      description: The response received from the server.
    content.vb: Public Overridable Function Commit(request As CommitRequest, options As CallOptions) As CommitResponse
  overload: Google.Cloud.Spanner.V1.Spanner.SpannerClient.Commit*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerClient.CommitAsync(Google.Cloud.Spanner.V1.CommitRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:Google.Cloud.Spanner.V1.Spanner.SpannerClient.CommitAsync(Google.Cloud.Spanner.V1.CommitRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: CommitAsync(Google.Cloud.Spanner.V1.CommitRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: Google.Cloud.Spanner.V1.Spanner.SpannerClient
  langs:
  - csharp
  - vb
  name: CommitAsync(CommitRequest, Metadata, Nullable<DateTime>, CancellationToken)
  nameWithType: Spanner.SpannerClient.CommitAsync(CommitRequest, Metadata, Nullable<DateTime>, CancellationToken)
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerClient.CommitAsync(Google.Cloud.Spanner.V1.CommitRequest, Grpc.Core.Metadata, System.Nullable<System.DateTime>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: CommitAsync
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
    startLine: 1241
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nCommits a transaction. The request includes the mutations to be\napplied to rows in the database.\n\n`Commit` might return an `ABORTED` error. This can occur at any time;\ncommonly, the cause is conflicts with concurrent\ntransactions. However, it can also happen for a variety of other\nreasons. If `Commit` returns `ABORTED`, the caller should re-attempt\nthe transaction from the beginning, re-using the same session.\n\nOn very rare occasions, `Commit` might return `UNKNOWN`. This can happen,\nfor example, if the client job experiences a 1+ hour networking failure.\nAt that point, Cloud Spanner has lost track of the transaction outcome and\nwe recommend that you perform another read from the database to see the\nstate of things as they are now.\n"
  example: []
  syntax:
    content: public virtual AsyncUnaryCall<CommitResponse> CommitAsync(CommitRequest request, Metadata headers = null, DateTime? deadline = default(DateTime? ), CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: request
      type: Google.Cloud.Spanner.V1.CommitRequest
      description: The request to send to the server.
    - id: headers
      type: Grpc.Core.Metadata
      description: The initial metadata to send with the call. This parameter is optional.
    - id: deadline
      type: System.Nullable{System.DateTime}
      description: An optional deadline for the call. The call will be cancelled if deadline is hit.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: An optional token for canceling the call.
    return:
      type: Grpc.Core.AsyncUnaryCall{Google.Cloud.Spanner.V1.CommitResponse}
      description: The call object.
    content.vb: Public Overridable Function CommitAsync(request As CommitRequest, headers As Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As AsyncUnaryCall(Of CommitResponse)
  overload: Google.Cloud.Spanner.V1.Spanner.SpannerClient.CommitAsync*
  nameWithType.vb: Spanner.SpannerClient.CommitAsync(CommitRequest, Metadata, Nullable(Of DateTime), CancellationToken)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Google.Cloud.Spanner.V1.Spanner.SpannerClient.CommitAsync(Google.Cloud.Spanner.V1.CommitRequest, Grpc.Core.Metadata, System.Nullable(Of System.DateTime), System.Threading.CancellationToken)
  name.vb: CommitAsync(CommitRequest, Metadata, Nullable(Of DateTime), CancellationToken)
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerClient.CommitAsync(Google.Cloud.Spanner.V1.CommitRequest,Grpc.Core.CallOptions)
  commentId: M:Google.Cloud.Spanner.V1.Spanner.SpannerClient.CommitAsync(Google.Cloud.Spanner.V1.CommitRequest,Grpc.Core.CallOptions)
  id: CommitAsync(Google.Cloud.Spanner.V1.CommitRequest,Grpc.Core.CallOptions)
  parent: Google.Cloud.Spanner.V1.Spanner.SpannerClient
  langs:
  - csharp
  - vb
  name: CommitAsync(CommitRequest, CallOptions)
  nameWithType: Spanner.SpannerClient.CommitAsync(CommitRequest, CallOptions)
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerClient.CommitAsync(Google.Cloud.Spanner.V1.CommitRequest, Grpc.Core.CallOptions)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: CommitAsync
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
    startLine: 1264
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nCommits a transaction. The request includes the mutations to be\napplied to rows in the database.\n\n`Commit` might return an `ABORTED` error. This can occur at any time;\ncommonly, the cause is conflicts with concurrent\ntransactions. However, it can also happen for a variety of other\nreasons. If `Commit` returns `ABORTED`, the caller should re-attempt\nthe transaction from the beginning, re-using the same session.\n\nOn very rare occasions, `Commit` might return `UNKNOWN`. This can happen,\nfor example, if the client job experiences a 1+ hour networking failure.\nAt that point, Cloud Spanner has lost track of the transaction outcome and\nwe recommend that you perform another read from the database to see the\nstate of things as they are now.\n"
  example: []
  syntax:
    content: public virtual AsyncUnaryCall<CommitResponse> CommitAsync(CommitRequest request, CallOptions options)
    parameters:
    - id: request
      type: Google.Cloud.Spanner.V1.CommitRequest
      description: The request to send to the server.
    - id: options
      type: Grpc.Core.CallOptions
      description: The options for the call.
    return:
      type: Grpc.Core.AsyncUnaryCall{Google.Cloud.Spanner.V1.CommitResponse}
      description: The call object.
    content.vb: Public Overridable Function CommitAsync(request As CommitRequest, options As CallOptions) As AsyncUnaryCall(Of CommitResponse)
  overload: Google.Cloud.Spanner.V1.Spanner.SpannerClient.CommitAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerClient.Rollback(Google.Cloud.Spanner.V1.RollbackRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:Google.Cloud.Spanner.V1.Spanner.SpannerClient.Rollback(Google.Cloud.Spanner.V1.RollbackRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: Rollback(Google.Cloud.Spanner.V1.RollbackRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: Google.Cloud.Spanner.V1.Spanner.SpannerClient
  langs:
  - csharp
  - vb
  name: Rollback(RollbackRequest, Metadata, Nullable<DateTime>, CancellationToken)
  nameWithType: Spanner.SpannerClient.Rollback(RollbackRequest, Metadata, Nullable<DateTime>, CancellationToken)
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerClient.Rollback(Google.Cloud.Spanner.V1.RollbackRequest, Grpc.Core.Metadata, System.Nullable<System.DateTime>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: Rollback
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
    startLine: 1283
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nRolls back a transaction, releasing any locks it holds. It is a good\nidea to call this for any transaction that includes one or more\n[Read][google.spanner.v1.Spanner.Read] or [ExecuteSql][google.spanner.v1.Spanner.ExecuteSql] requests and\nultimately decides not to commit.\n\n`Rollback` returns `OK` if it successfully aborts the transaction, the\ntransaction was already aborted, or the transaction is not\nfound. `Rollback` never returns `ABORTED`.\n"
  example: []
  syntax:
    content: public virtual Empty Rollback(RollbackRequest request, Metadata headers = null, DateTime? deadline = default(DateTime? ), CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: request
      type: Google.Cloud.Spanner.V1.RollbackRequest
      description: The request to send to the server.
    - id: headers
      type: Grpc.Core.Metadata
      description: The initial metadata to send with the call. This parameter is optional.
    - id: deadline
      type: System.Nullable{System.DateTime}
      description: An optional deadline for the call. The call will be cancelled if deadline is hit.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: An optional token for canceling the call.
    return:
      type: Google.Protobuf.WellKnownTypes.Empty
      description: The response received from the server.
    content.vb: Public Overridable Function Rollback(request As RollbackRequest, headers As Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As Empty
  overload: Google.Cloud.Spanner.V1.Spanner.SpannerClient.Rollback*
  nameWithType.vb: Spanner.SpannerClient.Rollback(RollbackRequest, Metadata, Nullable(Of DateTime), CancellationToken)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Google.Cloud.Spanner.V1.Spanner.SpannerClient.Rollback(Google.Cloud.Spanner.V1.RollbackRequest, Grpc.Core.Metadata, System.Nullable(Of System.DateTime), System.Threading.CancellationToken)
  name.vb: Rollback(RollbackRequest, Metadata, Nullable(Of DateTime), CancellationToken)
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerClient.Rollback(Google.Cloud.Spanner.V1.RollbackRequest,Grpc.Core.CallOptions)
  commentId: M:Google.Cloud.Spanner.V1.Spanner.SpannerClient.Rollback(Google.Cloud.Spanner.V1.RollbackRequest,Grpc.Core.CallOptions)
  id: Rollback(Google.Cloud.Spanner.V1.RollbackRequest,Grpc.Core.CallOptions)
  parent: Google.Cloud.Spanner.V1.Spanner.SpannerClient
  langs:
  - csharp
  - vb
  name: Rollback(RollbackRequest, CallOptions)
  nameWithType: Spanner.SpannerClient.Rollback(RollbackRequest, CallOptions)
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerClient.Rollback(Google.Cloud.Spanner.V1.RollbackRequest, Grpc.Core.CallOptions)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: Rollback
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
    startLine: 1300
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nRolls back a transaction, releasing any locks it holds. It is a good\nidea to call this for any transaction that includes one or more\n[Read][google.spanner.v1.Spanner.Read] or [ExecuteSql][google.spanner.v1.Spanner.ExecuteSql] requests and\nultimately decides not to commit.\n\n`Rollback` returns `OK` if it successfully aborts the transaction, the\ntransaction was already aborted, or the transaction is not\nfound. `Rollback` never returns `ABORTED`.\n"
  example: []
  syntax:
    content: public virtual Empty Rollback(RollbackRequest request, CallOptions options)
    parameters:
    - id: request
      type: Google.Cloud.Spanner.V1.RollbackRequest
      description: The request to send to the server.
    - id: options
      type: Grpc.Core.CallOptions
      description: The options for the call.
    return:
      type: Google.Protobuf.WellKnownTypes.Empty
      description: The response received from the server.
    content.vb: Public Overridable Function Rollback(request As RollbackRequest, options As CallOptions) As Empty
  overload: Google.Cloud.Spanner.V1.Spanner.SpannerClient.Rollback*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerClient.RollbackAsync(Google.Cloud.Spanner.V1.RollbackRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:Google.Cloud.Spanner.V1.Spanner.SpannerClient.RollbackAsync(Google.Cloud.Spanner.V1.RollbackRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: RollbackAsync(Google.Cloud.Spanner.V1.RollbackRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: Google.Cloud.Spanner.V1.Spanner.SpannerClient
  langs:
  - csharp
  - vb
  name: RollbackAsync(RollbackRequest, Metadata, Nullable<DateTime>, CancellationToken)
  nameWithType: Spanner.SpannerClient.RollbackAsync(RollbackRequest, Metadata, Nullable<DateTime>, CancellationToken)
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerClient.RollbackAsync(Google.Cloud.Spanner.V1.RollbackRequest, Grpc.Core.Metadata, System.Nullable<System.DateTime>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: RollbackAsync
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
    startLine: 1319
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nRolls back a transaction, releasing any locks it holds. It is a good\nidea to call this for any transaction that includes one or more\n[Read][google.spanner.v1.Spanner.Read] or [ExecuteSql][google.spanner.v1.Spanner.ExecuteSql] requests and\nultimately decides not to commit.\n\n`Rollback` returns `OK` if it successfully aborts the transaction, the\ntransaction was already aborted, or the transaction is not\nfound. `Rollback` never returns `ABORTED`.\n"
  example: []
  syntax:
    content: public virtual AsyncUnaryCall<Empty> RollbackAsync(RollbackRequest request, Metadata headers = null, DateTime? deadline = default(DateTime? ), CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: request
      type: Google.Cloud.Spanner.V1.RollbackRequest
      description: The request to send to the server.
    - id: headers
      type: Grpc.Core.Metadata
      description: The initial metadata to send with the call. This parameter is optional.
    - id: deadline
      type: System.Nullable{System.DateTime}
      description: An optional deadline for the call. The call will be cancelled if deadline is hit.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: An optional token for canceling the call.
    return:
      type: Grpc.Core.AsyncUnaryCall{Google.Protobuf.WellKnownTypes.Empty}
      description: The call object.
    content.vb: Public Overridable Function RollbackAsync(request As RollbackRequest, headers As Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As AsyncUnaryCall(Of Empty)
  overload: Google.Cloud.Spanner.V1.Spanner.SpannerClient.RollbackAsync*
  nameWithType.vb: Spanner.SpannerClient.RollbackAsync(RollbackRequest, Metadata, Nullable(Of DateTime), CancellationToken)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Google.Cloud.Spanner.V1.Spanner.SpannerClient.RollbackAsync(Google.Cloud.Spanner.V1.RollbackRequest, Grpc.Core.Metadata, System.Nullable(Of System.DateTime), System.Threading.CancellationToken)
  name.vb: RollbackAsync(RollbackRequest, Metadata, Nullable(Of DateTime), CancellationToken)
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerClient.RollbackAsync(Google.Cloud.Spanner.V1.RollbackRequest,Grpc.Core.CallOptions)
  commentId: M:Google.Cloud.Spanner.V1.Spanner.SpannerClient.RollbackAsync(Google.Cloud.Spanner.V1.RollbackRequest,Grpc.Core.CallOptions)
  id: RollbackAsync(Google.Cloud.Spanner.V1.RollbackRequest,Grpc.Core.CallOptions)
  parent: Google.Cloud.Spanner.V1.Spanner.SpannerClient
  langs:
  - csharp
  - vb
  name: RollbackAsync(RollbackRequest, CallOptions)
  nameWithType: Spanner.SpannerClient.RollbackAsync(RollbackRequest, CallOptions)
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerClient.RollbackAsync(Google.Cloud.Spanner.V1.RollbackRequest, Grpc.Core.CallOptions)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: RollbackAsync
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
    startLine: 1336
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nRolls back a transaction, releasing any locks it holds. It is a good\nidea to call this for any transaction that includes one or more\n[Read][google.spanner.v1.Spanner.Read] or [ExecuteSql][google.spanner.v1.Spanner.ExecuteSql] requests and\nultimately decides not to commit.\n\n`Rollback` returns `OK` if it successfully aborts the transaction, the\ntransaction was already aborted, or the transaction is not\nfound. `Rollback` never returns `ABORTED`.\n"
  example: []
  syntax:
    content: public virtual AsyncUnaryCall<Empty> RollbackAsync(RollbackRequest request, CallOptions options)
    parameters:
    - id: request
      type: Google.Cloud.Spanner.V1.RollbackRequest
      description: The request to send to the server.
    - id: options
      type: Grpc.Core.CallOptions
      description: The options for the call.
    return:
      type: Grpc.Core.AsyncUnaryCall{Google.Protobuf.WellKnownTypes.Empty}
      description: The call object.
    content.vb: Public Overridable Function RollbackAsync(request As RollbackRequest, options As CallOptions) As AsyncUnaryCall(Of Empty)
  overload: Google.Cloud.Spanner.V1.Spanner.SpannerClient.RollbackAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerClient.PartitionQuery(Google.Cloud.Spanner.V1.PartitionQueryRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:Google.Cloud.Spanner.V1.Spanner.SpannerClient.PartitionQuery(Google.Cloud.Spanner.V1.PartitionQueryRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: PartitionQuery(Google.Cloud.Spanner.V1.PartitionQueryRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: Google.Cloud.Spanner.V1.Spanner.SpannerClient
  langs:
  - csharp
  - vb
  name: PartitionQuery(PartitionQueryRequest, Metadata, Nullable<DateTime>, CancellationToken)
  nameWithType: Spanner.SpannerClient.PartitionQuery(PartitionQueryRequest, Metadata, Nullable<DateTime>, CancellationToken)
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerClient.PartitionQuery(Google.Cloud.Spanner.V1.PartitionQueryRequest, Grpc.Core.Metadata, System.Nullable<System.DateTime>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: PartitionQuery
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
    startLine: 1358
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nCreates a set of partition tokens that can be used to execute a query\noperation in parallel.  Each of the returned partition tokens can be used\nby [ExecuteStreamingSql][google.spanner.v1.Spanner.ExecuteStreamingSql] to specify a subset\nof the query result to read.  The same session and read-only transaction\nmust be used by the PartitionQueryRequest used to create the\npartition tokens and the ExecuteSqlRequests that use the partition tokens.\n\nPartition tokens become invalid when the session used to create them\nis deleted, is idle for too long, begins a new transaction, or becomes too\nold.  When any of these happen, it is not possible to resume the query, and\nthe whole operation must be restarted from the beginning.\n"
  example: []
  syntax:
    content: public virtual PartitionResponse PartitionQuery(PartitionQueryRequest request, Metadata headers = null, DateTime? deadline = default(DateTime? ), CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: request
      type: Google.Cloud.Spanner.V1.PartitionQueryRequest
      description: The request to send to the server.
    - id: headers
      type: Grpc.Core.Metadata
      description: The initial metadata to send with the call. This parameter is optional.
    - id: deadline
      type: System.Nullable{System.DateTime}
      description: An optional deadline for the call. The call will be cancelled if deadline is hit.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: An optional token for canceling the call.
    return:
      type: Google.Cloud.Spanner.V1.PartitionResponse
      description: The response received from the server.
    content.vb: Public Overridable Function PartitionQuery(request As PartitionQueryRequest, headers As Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As PartitionResponse
  overload: Google.Cloud.Spanner.V1.Spanner.SpannerClient.PartitionQuery*
  nameWithType.vb: Spanner.SpannerClient.PartitionQuery(PartitionQueryRequest, Metadata, Nullable(Of DateTime), CancellationToken)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Google.Cloud.Spanner.V1.Spanner.SpannerClient.PartitionQuery(Google.Cloud.Spanner.V1.PartitionQueryRequest, Grpc.Core.Metadata, System.Nullable(Of System.DateTime), System.Threading.CancellationToken)
  name.vb: PartitionQuery(PartitionQueryRequest, Metadata, Nullable(Of DateTime), CancellationToken)
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerClient.PartitionQuery(Google.Cloud.Spanner.V1.PartitionQueryRequest,Grpc.Core.CallOptions)
  commentId: M:Google.Cloud.Spanner.V1.Spanner.SpannerClient.PartitionQuery(Google.Cloud.Spanner.V1.PartitionQueryRequest,Grpc.Core.CallOptions)
  id: PartitionQuery(Google.Cloud.Spanner.V1.PartitionQueryRequest,Grpc.Core.CallOptions)
  parent: Google.Cloud.Spanner.V1.Spanner.SpannerClient
  langs:
  - csharp
  - vb
  name: PartitionQuery(PartitionQueryRequest, CallOptions)
  nameWithType: Spanner.SpannerClient.PartitionQuery(PartitionQueryRequest, CallOptions)
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerClient.PartitionQuery(Google.Cloud.Spanner.V1.PartitionQueryRequest, Grpc.Core.CallOptions)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: PartitionQuery
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
    startLine: 1378
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nCreates a set of partition tokens that can be used to execute a query\noperation in parallel.  Each of the returned partition tokens can be used\nby [ExecuteStreamingSql][google.spanner.v1.Spanner.ExecuteStreamingSql] to specify a subset\nof the query result to read.  The same session and read-only transaction\nmust be used by the PartitionQueryRequest used to create the\npartition tokens and the ExecuteSqlRequests that use the partition tokens.\n\nPartition tokens become invalid when the session used to create them\nis deleted, is idle for too long, begins a new transaction, or becomes too\nold.  When any of these happen, it is not possible to resume the query, and\nthe whole operation must be restarted from the beginning.\n"
  example: []
  syntax:
    content: public virtual PartitionResponse PartitionQuery(PartitionQueryRequest request, CallOptions options)
    parameters:
    - id: request
      type: Google.Cloud.Spanner.V1.PartitionQueryRequest
      description: The request to send to the server.
    - id: options
      type: Grpc.Core.CallOptions
      description: The options for the call.
    return:
      type: Google.Cloud.Spanner.V1.PartitionResponse
      description: The response received from the server.
    content.vb: Public Overridable Function PartitionQuery(request As PartitionQueryRequest, options As CallOptions) As PartitionResponse
  overload: Google.Cloud.Spanner.V1.Spanner.SpannerClient.PartitionQuery*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerClient.PartitionQueryAsync(Google.Cloud.Spanner.V1.PartitionQueryRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:Google.Cloud.Spanner.V1.Spanner.SpannerClient.PartitionQueryAsync(Google.Cloud.Spanner.V1.PartitionQueryRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: PartitionQueryAsync(Google.Cloud.Spanner.V1.PartitionQueryRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: Google.Cloud.Spanner.V1.Spanner.SpannerClient
  langs:
  - csharp
  - vb
  name: PartitionQueryAsync(PartitionQueryRequest, Metadata, Nullable<DateTime>, CancellationToken)
  nameWithType: Spanner.SpannerClient.PartitionQueryAsync(PartitionQueryRequest, Metadata, Nullable<DateTime>, CancellationToken)
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerClient.PartitionQueryAsync(Google.Cloud.Spanner.V1.PartitionQueryRequest, Grpc.Core.Metadata, System.Nullable<System.DateTime>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: PartitionQueryAsync
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
    startLine: 1400
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nCreates a set of partition tokens that can be used to execute a query\noperation in parallel.  Each of the returned partition tokens can be used\nby [ExecuteStreamingSql][google.spanner.v1.Spanner.ExecuteStreamingSql] to specify a subset\nof the query result to read.  The same session and read-only transaction\nmust be used by the PartitionQueryRequest used to create the\npartition tokens and the ExecuteSqlRequests that use the partition tokens.\n\nPartition tokens become invalid when the session used to create them\nis deleted, is idle for too long, begins a new transaction, or becomes too\nold.  When any of these happen, it is not possible to resume the query, and\nthe whole operation must be restarted from the beginning.\n"
  example: []
  syntax:
    content: public virtual AsyncUnaryCall<PartitionResponse> PartitionQueryAsync(PartitionQueryRequest request, Metadata headers = null, DateTime? deadline = default(DateTime? ), CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: request
      type: Google.Cloud.Spanner.V1.PartitionQueryRequest
      description: The request to send to the server.
    - id: headers
      type: Grpc.Core.Metadata
      description: The initial metadata to send with the call. This parameter is optional.
    - id: deadline
      type: System.Nullable{System.DateTime}
      description: An optional deadline for the call. The call will be cancelled if deadline is hit.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: An optional token for canceling the call.
    return:
      type: Grpc.Core.AsyncUnaryCall{Google.Cloud.Spanner.V1.PartitionResponse}
      description: The call object.
    content.vb: Public Overridable Function PartitionQueryAsync(request As PartitionQueryRequest, headers As Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As AsyncUnaryCall(Of PartitionResponse)
  overload: Google.Cloud.Spanner.V1.Spanner.SpannerClient.PartitionQueryAsync*
  nameWithType.vb: Spanner.SpannerClient.PartitionQueryAsync(PartitionQueryRequest, Metadata, Nullable(Of DateTime), CancellationToken)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Google.Cloud.Spanner.V1.Spanner.SpannerClient.PartitionQueryAsync(Google.Cloud.Spanner.V1.PartitionQueryRequest, Grpc.Core.Metadata, System.Nullable(Of System.DateTime), System.Threading.CancellationToken)
  name.vb: PartitionQueryAsync(PartitionQueryRequest, Metadata, Nullable(Of DateTime), CancellationToken)
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerClient.PartitionQueryAsync(Google.Cloud.Spanner.V1.PartitionQueryRequest,Grpc.Core.CallOptions)
  commentId: M:Google.Cloud.Spanner.V1.Spanner.SpannerClient.PartitionQueryAsync(Google.Cloud.Spanner.V1.PartitionQueryRequest,Grpc.Core.CallOptions)
  id: PartitionQueryAsync(Google.Cloud.Spanner.V1.PartitionQueryRequest,Grpc.Core.CallOptions)
  parent: Google.Cloud.Spanner.V1.Spanner.SpannerClient
  langs:
  - csharp
  - vb
  name: PartitionQueryAsync(PartitionQueryRequest, CallOptions)
  nameWithType: Spanner.SpannerClient.PartitionQueryAsync(PartitionQueryRequest, CallOptions)
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerClient.PartitionQueryAsync(Google.Cloud.Spanner.V1.PartitionQueryRequest, Grpc.Core.CallOptions)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: PartitionQueryAsync
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
    startLine: 1420
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nCreates a set of partition tokens that can be used to execute a query\noperation in parallel.  Each of the returned partition tokens can be used\nby [ExecuteStreamingSql][google.spanner.v1.Spanner.ExecuteStreamingSql] to specify a subset\nof the query result to read.  The same session and read-only transaction\nmust be used by the PartitionQueryRequest used to create the\npartition tokens and the ExecuteSqlRequests that use the partition tokens.\n\nPartition tokens become invalid when the session used to create them\nis deleted, is idle for too long, begins a new transaction, or becomes too\nold.  When any of these happen, it is not possible to resume the query, and\nthe whole operation must be restarted from the beginning.\n"
  example: []
  syntax:
    content: public virtual AsyncUnaryCall<PartitionResponse> PartitionQueryAsync(PartitionQueryRequest request, CallOptions options)
    parameters:
    - id: request
      type: Google.Cloud.Spanner.V1.PartitionQueryRequest
      description: The request to send to the server.
    - id: options
      type: Grpc.Core.CallOptions
      description: The options for the call.
    return:
      type: Grpc.Core.AsyncUnaryCall{Google.Cloud.Spanner.V1.PartitionResponse}
      description: The call object.
    content.vb: Public Overridable Function PartitionQueryAsync(request As PartitionQueryRequest, options As CallOptions) As AsyncUnaryCall(Of PartitionResponse)
  overload: Google.Cloud.Spanner.V1.Spanner.SpannerClient.PartitionQueryAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerClient.PartitionRead(Google.Cloud.Spanner.V1.PartitionReadRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:Google.Cloud.Spanner.V1.Spanner.SpannerClient.PartitionRead(Google.Cloud.Spanner.V1.PartitionReadRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: PartitionRead(Google.Cloud.Spanner.V1.PartitionReadRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: Google.Cloud.Spanner.V1.Spanner.SpannerClient
  langs:
  - csharp
  - vb
  name: PartitionRead(PartitionReadRequest, Metadata, Nullable<DateTime>, CancellationToken)
  nameWithType: Spanner.SpannerClient.PartitionRead(PartitionReadRequest, Metadata, Nullable<DateTime>, CancellationToken)
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerClient.PartitionRead(Google.Cloud.Spanner.V1.PartitionReadRequest, Grpc.Core.Metadata, System.Nullable<System.DateTime>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: PartitionRead
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
    startLine: 1444
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nCreates a set of partition tokens that can be used to execute a read\noperation in parallel.  Each of the returned partition tokens can be used\nby [StreamingRead][google.spanner.v1.Spanner.StreamingRead] to specify a subset of the read\nresult to read.  The same session and read-only transaction must be used by\nthe PartitionReadRequest used to create the partition tokens and the\nReadRequests that use the partition tokens.  There are no ordering\nguarantees on rows returned among the returned partition tokens, or even\nwithin each individual StreamingRead call issued with a partition_token.\n\nPartition tokens become invalid when the session used to create them\nis deleted, is idle for too long, begins a new transaction, or becomes too\nold.  When any of these happen, it is not possible to resume the read, and\nthe whole operation must be restarted from the beginning.\n"
  example: []
  syntax:
    content: public virtual PartitionResponse PartitionRead(PartitionReadRequest request, Metadata headers = null, DateTime? deadline = default(DateTime? ), CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: request
      type: Google.Cloud.Spanner.V1.PartitionReadRequest
      description: The request to send to the server.
    - id: headers
      type: Grpc.Core.Metadata
      description: The initial metadata to send with the call. This parameter is optional.
    - id: deadline
      type: System.Nullable{System.DateTime}
      description: An optional deadline for the call. The call will be cancelled if deadline is hit.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: An optional token for canceling the call.
    return:
      type: Google.Cloud.Spanner.V1.PartitionResponse
      description: The response received from the server.
    content.vb: Public Overridable Function PartitionRead(request As PartitionReadRequest, headers As Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As PartitionResponse
  overload: Google.Cloud.Spanner.V1.Spanner.SpannerClient.PartitionRead*
  nameWithType.vb: Spanner.SpannerClient.PartitionRead(PartitionReadRequest, Metadata, Nullable(Of DateTime), CancellationToken)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Google.Cloud.Spanner.V1.Spanner.SpannerClient.PartitionRead(Google.Cloud.Spanner.V1.PartitionReadRequest, Grpc.Core.Metadata, System.Nullable(Of System.DateTime), System.Threading.CancellationToken)
  name.vb: PartitionRead(PartitionReadRequest, Metadata, Nullable(Of DateTime), CancellationToken)
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerClient.PartitionRead(Google.Cloud.Spanner.V1.PartitionReadRequest,Grpc.Core.CallOptions)
  commentId: M:Google.Cloud.Spanner.V1.Spanner.SpannerClient.PartitionRead(Google.Cloud.Spanner.V1.PartitionReadRequest,Grpc.Core.CallOptions)
  id: PartitionRead(Google.Cloud.Spanner.V1.PartitionReadRequest,Grpc.Core.CallOptions)
  parent: Google.Cloud.Spanner.V1.Spanner.SpannerClient
  langs:
  - csharp
  - vb
  name: PartitionRead(PartitionReadRequest, CallOptions)
  nameWithType: Spanner.SpannerClient.PartitionRead(PartitionReadRequest, CallOptions)
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerClient.PartitionRead(Google.Cloud.Spanner.V1.PartitionReadRequest, Grpc.Core.CallOptions)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: PartitionRead
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
    startLine: 1466
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nCreates a set of partition tokens that can be used to execute a read\noperation in parallel.  Each of the returned partition tokens can be used\nby [StreamingRead][google.spanner.v1.Spanner.StreamingRead] to specify a subset of the read\nresult to read.  The same session and read-only transaction must be used by\nthe PartitionReadRequest used to create the partition tokens and the\nReadRequests that use the partition tokens.  There are no ordering\nguarantees on rows returned among the returned partition tokens, or even\nwithin each individual StreamingRead call issued with a partition_token.\n\nPartition tokens become invalid when the session used to create them\nis deleted, is idle for too long, begins a new transaction, or becomes too\nold.  When any of these happen, it is not possible to resume the read, and\nthe whole operation must be restarted from the beginning.\n"
  example: []
  syntax:
    content: public virtual PartitionResponse PartitionRead(PartitionReadRequest request, CallOptions options)
    parameters:
    - id: request
      type: Google.Cloud.Spanner.V1.PartitionReadRequest
      description: The request to send to the server.
    - id: options
      type: Grpc.Core.CallOptions
      description: The options for the call.
    return:
      type: Google.Cloud.Spanner.V1.PartitionResponse
      description: The response received from the server.
    content.vb: Public Overridable Function PartitionRead(request As PartitionReadRequest, options As CallOptions) As PartitionResponse
  overload: Google.Cloud.Spanner.V1.Spanner.SpannerClient.PartitionRead*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerClient.PartitionReadAsync(Google.Cloud.Spanner.V1.PartitionReadRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:Google.Cloud.Spanner.V1.Spanner.SpannerClient.PartitionReadAsync(Google.Cloud.Spanner.V1.PartitionReadRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: PartitionReadAsync(Google.Cloud.Spanner.V1.PartitionReadRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: Google.Cloud.Spanner.V1.Spanner.SpannerClient
  langs:
  - csharp
  - vb
  name: PartitionReadAsync(PartitionReadRequest, Metadata, Nullable<DateTime>, CancellationToken)
  nameWithType: Spanner.SpannerClient.PartitionReadAsync(PartitionReadRequest, Metadata, Nullable<DateTime>, CancellationToken)
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerClient.PartitionReadAsync(Google.Cloud.Spanner.V1.PartitionReadRequest, Grpc.Core.Metadata, System.Nullable<System.DateTime>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: PartitionReadAsync
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
    startLine: 1490
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nCreates a set of partition tokens that can be used to execute a read\noperation in parallel.  Each of the returned partition tokens can be used\nby [StreamingRead][google.spanner.v1.Spanner.StreamingRead] to specify a subset of the read\nresult to read.  The same session and read-only transaction must be used by\nthe PartitionReadRequest used to create the partition tokens and the\nReadRequests that use the partition tokens.  There are no ordering\nguarantees on rows returned among the returned partition tokens, or even\nwithin each individual StreamingRead call issued with a partition_token.\n\nPartition tokens become invalid when the session used to create them\nis deleted, is idle for too long, begins a new transaction, or becomes too\nold.  When any of these happen, it is not possible to resume the read, and\nthe whole operation must be restarted from the beginning.\n"
  example: []
  syntax:
    content: public virtual AsyncUnaryCall<PartitionResponse> PartitionReadAsync(PartitionReadRequest request, Metadata headers = null, DateTime? deadline = default(DateTime? ), CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: request
      type: Google.Cloud.Spanner.V1.PartitionReadRequest
      description: The request to send to the server.
    - id: headers
      type: Grpc.Core.Metadata
      description: The initial metadata to send with the call. This parameter is optional.
    - id: deadline
      type: System.Nullable{System.DateTime}
      description: An optional deadline for the call. The call will be cancelled if deadline is hit.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: An optional token for canceling the call.
    return:
      type: Grpc.Core.AsyncUnaryCall{Google.Cloud.Spanner.V1.PartitionResponse}
      description: The call object.
    content.vb: Public Overridable Function PartitionReadAsync(request As PartitionReadRequest, headers As Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As AsyncUnaryCall(Of PartitionResponse)
  overload: Google.Cloud.Spanner.V1.Spanner.SpannerClient.PartitionReadAsync*
  nameWithType.vb: Spanner.SpannerClient.PartitionReadAsync(PartitionReadRequest, Metadata, Nullable(Of DateTime), CancellationToken)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Google.Cloud.Spanner.V1.Spanner.SpannerClient.PartitionReadAsync(Google.Cloud.Spanner.V1.PartitionReadRequest, Grpc.Core.Metadata, System.Nullable(Of System.DateTime), System.Threading.CancellationToken)
  name.vb: PartitionReadAsync(PartitionReadRequest, Metadata, Nullable(Of DateTime), CancellationToken)
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerClient.PartitionReadAsync(Google.Cloud.Spanner.V1.PartitionReadRequest,Grpc.Core.CallOptions)
  commentId: M:Google.Cloud.Spanner.V1.Spanner.SpannerClient.PartitionReadAsync(Google.Cloud.Spanner.V1.PartitionReadRequest,Grpc.Core.CallOptions)
  id: PartitionReadAsync(Google.Cloud.Spanner.V1.PartitionReadRequest,Grpc.Core.CallOptions)
  parent: Google.Cloud.Spanner.V1.Spanner.SpannerClient
  langs:
  - csharp
  - vb
  name: PartitionReadAsync(PartitionReadRequest, CallOptions)
  nameWithType: Spanner.SpannerClient.PartitionReadAsync(PartitionReadRequest, CallOptions)
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerClient.PartitionReadAsync(Google.Cloud.Spanner.V1.PartitionReadRequest, Grpc.Core.CallOptions)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: PartitionReadAsync
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
    startLine: 1512
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nCreates a set of partition tokens that can be used to execute a read\noperation in parallel.  Each of the returned partition tokens can be used\nby [StreamingRead][google.spanner.v1.Spanner.StreamingRead] to specify a subset of the read\nresult to read.  The same session and read-only transaction must be used by\nthe PartitionReadRequest used to create the partition tokens and the\nReadRequests that use the partition tokens.  There are no ordering\nguarantees on rows returned among the returned partition tokens, or even\nwithin each individual StreamingRead call issued with a partition_token.\n\nPartition tokens become invalid when the session used to create them\nis deleted, is idle for too long, begins a new transaction, or becomes too\nold.  When any of these happen, it is not possible to resume the read, and\nthe whole operation must be restarted from the beginning.\n"
  example: []
  syntax:
    content: public virtual AsyncUnaryCall<PartitionResponse> PartitionReadAsync(PartitionReadRequest request, CallOptions options)
    parameters:
    - id: request
      type: Google.Cloud.Spanner.V1.PartitionReadRequest
      description: The request to send to the server.
    - id: options
      type: Grpc.Core.CallOptions
      description: The options for the call.
    return:
      type: Grpc.Core.AsyncUnaryCall{Google.Cloud.Spanner.V1.PartitionResponse}
      description: The call object.
    content.vb: Public Overridable Function PartitionReadAsync(request As PartitionReadRequest, options As CallOptions) As AsyncUnaryCall(Of PartitionResponse)
  overload: Google.Cloud.Spanner.V1.Spanner.SpannerClient.PartitionReadAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerClient.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
  commentId: M:Google.Cloud.Spanner.V1.Spanner.SpannerClient.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
  id: NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
  parent: Google.Cloud.Spanner.V1.Spanner.SpannerClient
  langs:
  - csharp
  - vb
  name: NewInstance(ClientBase.ClientBaseConfiguration)
  nameWithType: Spanner.SpannerClient.NewInstance(ClientBase.ClientBaseConfiguration)
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerClient.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: NewInstance
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
    startLine: 1517
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: Creates a new instance of client from given <code>ClientBaseConfiguration</code>.
  example: []
  syntax:
    content: protected override Spanner.SpannerClient NewInstance(ClientBase.ClientBaseConfiguration configuration)
    parameters:
    - id: configuration
      type: Grpc.Core.ClientBase.ClientBaseConfiguration
    return:
      type: Google.Cloud.Spanner.V1.Spanner.SpannerClient
    content.vb: Protected Overrides Function NewInstance(configuration As ClientBase.ClientBaseConfiguration) As Spanner.SpannerClient
  overridden: Grpc.Core.ClientBase{Google.Cloud.Spanner.V1.Spanner.SpannerClient}.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
  overload: Google.Cloud.Spanner.V1.Spanner.SpannerClient.NewInstance*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: Google.Cloud.Spanner.V1
  commentId: N:Google.Cloud.Spanner.V1
  name: Google.Cloud.Spanner.V1
  nameWithType: Google.Cloud.Spanner.V1
  fullName: Google.Cloud.Spanner.V1
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Grpc.Core.ClientBase
  commentId: T:Grpc.Core.ClientBase
  parent: Grpc.Core
  isExternal: true
  name: ClientBase
  nameWithType: ClientBase
  fullName: Grpc.Core.ClientBase
- uid: Grpc.Core.ClientBase{Google.Cloud.Spanner.V1.Spanner.SpannerClient}
  commentId: T:Grpc.Core.ClientBase{Google.Cloud.Spanner.V1.Spanner.SpannerClient}
  parent: Grpc.Core
  definition: Grpc.Core.ClientBase`1
  name: ClientBase<Spanner.SpannerClient>
  nameWithType: ClientBase<Spanner.SpannerClient>
  fullName: Grpc.Core.ClientBase<Google.Cloud.Spanner.V1.Spanner.SpannerClient>
  nameWithType.vb: ClientBase(Of Spanner.SpannerClient)
  fullName.vb: Grpc.Core.ClientBase(Of Google.Cloud.Spanner.V1.Spanner.SpannerClient)
  name.vb: ClientBase(Of Spanner.SpannerClient)
  spec.csharp:
  - uid: Grpc.Core.ClientBase`1
    name: ClientBase
    nameWithType: ClientBase
    fullName: Grpc.Core.ClientBase
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Spanner.V1.Spanner.SpannerClient
    name: Spanner.SpannerClient
    nameWithType: Spanner.SpannerClient
    fullName: Google.Cloud.Spanner.V1.Spanner.SpannerClient
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Grpc.Core.ClientBase`1
    name: ClientBase
    nameWithType: ClientBase
    fullName: Grpc.Core.ClientBase
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Spanner.V1.Spanner.SpannerClient
    name: Spanner.SpannerClient
    nameWithType: Spanner.SpannerClient
    fullName: Google.Cloud.Spanner.V1.Spanner.SpannerClient
  - name: )
    nameWithType: )
    fullName: )
- uid: Grpc.Core.ClientBase{Google.Cloud.Spanner.V1.Spanner.SpannerClient}.WithHost(System.String)
  commentId: M:Grpc.Core.ClientBase{Google.Cloud.Spanner.V1.Spanner.SpannerClient}.WithHost(System.String)
  parent: Grpc.Core.ClientBase{Google.Cloud.Spanner.V1.Spanner.SpannerClient}
  definition: Grpc.Core.ClientBase`1.WithHost(System.String)
  name: WithHost(String)
  nameWithType: ClientBase<Spanner.SpannerClient>.WithHost(String)
  fullName: Grpc.Core.ClientBase<Google.Cloud.Spanner.V1.Spanner.SpannerClient>.WithHost(System.String)
  nameWithType.vb: ClientBase(Of Spanner.SpannerClient).WithHost(String)
  fullName.vb: Grpc.Core.ClientBase(Of Google.Cloud.Spanner.V1.Spanner.SpannerClient).WithHost(System.String)
  spec.csharp:
  - uid: Grpc.Core.ClientBase`1.WithHost(System.String)
    name: WithHost
    nameWithType: ClientBase<Spanner.SpannerClient>.WithHost
    fullName: Grpc.Core.ClientBase<Google.Cloud.Spanner.V1.Spanner.SpannerClient>.WithHost
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Grpc.Core.ClientBase`1.WithHost(System.String)
    name: WithHost
    nameWithType: ClientBase(Of Spanner.SpannerClient).WithHost
    fullName: Grpc.Core.ClientBase(Of Google.Cloud.Spanner.V1.Spanner.SpannerClient).WithHost
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Grpc.Core.ClientBase.CallInvoker
  commentId: P:Grpc.Core.ClientBase.CallInvoker
  parent: Grpc.Core.ClientBase
  isExternal: true
  name: CallInvoker
  nameWithType: ClientBase.CallInvoker
  fullName: Grpc.Core.ClientBase.CallInvoker
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Grpc.Core
  commentId: N:Grpc.Core
  isExternal: true
  name: Grpc.Core
  nameWithType: Grpc.Core
  fullName: Grpc.Core
- uid: Grpc.Core.ClientBase`1
  commentId: T:Grpc.Core.ClientBase`1
  isExternal: true
  name: ClientBase<T>
  nameWithType: ClientBase<T>
  fullName: Grpc.Core.ClientBase<T>
  nameWithType.vb: ClientBase(Of T)
  fullName.vb: Grpc.Core.ClientBase(Of T)
  name.vb: ClientBase(Of T)
  spec.csharp:
  - uid: Grpc.Core.ClientBase`1
    name: ClientBase
    nameWithType: ClientBase
    fullName: Grpc.Core.ClientBase
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Grpc.Core.ClientBase`1
    name: ClientBase
    nameWithType: ClientBase
    fullName: Grpc.Core.ClientBase
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Grpc.Core.ClientBase`1.WithHost(System.String)
  commentId: M:Grpc.Core.ClientBase`1.WithHost(System.String)
  isExternal: true
  name: WithHost(String)
  nameWithType: ClientBase<T>.WithHost(String)
  fullName: Grpc.Core.ClientBase<T>.WithHost(System.String)
  nameWithType.vb: ClientBase(Of T).WithHost(String)
  fullName.vb: Grpc.Core.ClientBase(Of T).WithHost(System.String)
  spec.csharp:
  - uid: Grpc.Core.ClientBase`1.WithHost(System.String)
    name: WithHost
    nameWithType: ClientBase<T>.WithHost
    fullName: Grpc.Core.ClientBase<T>.WithHost
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Grpc.Core.ClientBase`1.WithHost(System.String)
    name: WithHost
    nameWithType: ClientBase(Of T).WithHost
    fullName: Grpc.Core.ClientBase(Of T).WithHost
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerClient.#ctor*
  commentId: Overload:Google.Cloud.Spanner.V1.Spanner.SpannerClient.#ctor
  name: SpannerClient
  nameWithType: Spanner.SpannerClient.SpannerClient
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerClient.SpannerClient
- uid: Grpc.Core.Channel
  commentId: T:Grpc.Core.Channel
  parent: Grpc.Core
  isExternal: true
  name: Channel
  nameWithType: Channel
  fullName: Grpc.Core.Channel
- uid: Grpc.Core.ChannelBase
  commentId: T:Grpc.Core.ChannelBase
  parent: Grpc.Core
  isExternal: true
  name: ChannelBase
  nameWithType: ChannelBase
  fullName: Grpc.Core.ChannelBase
- uid: Grpc.Core.CallInvoker
  commentId: T:Grpc.Core.CallInvoker
  parent: Grpc.Core
  isExternal: true
  name: CallInvoker
  nameWithType: CallInvoker
  fullName: Grpc.Core.CallInvoker
- uid: Grpc.Core.ClientBase.ClientBaseConfiguration
  commentId: T:Grpc.Core.ClientBase.ClientBaseConfiguration
  parent: Grpc.Core
  isExternal: true
  name: ClientBase.ClientBaseConfiguration
  nameWithType: ClientBase.ClientBaseConfiguration
  fullName: Grpc.Core.ClientBase.ClientBaseConfiguration
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerClient.CreateSession*
  commentId: Overload:Google.Cloud.Spanner.V1.Spanner.SpannerClient.CreateSession
  name: CreateSession
  nameWithType: Spanner.SpannerClient.CreateSession
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerClient.CreateSession
- uid: Google.Cloud.Spanner.V1.CreateSessionRequest
  commentId: T:Google.Cloud.Spanner.V1.CreateSessionRequest
  parent: Google.Cloud.Spanner.V1
  name: CreateSessionRequest
  nameWithType: CreateSessionRequest
  fullName: Google.Cloud.Spanner.V1.CreateSessionRequest
- uid: Grpc.Core.Metadata
  commentId: T:Grpc.Core.Metadata
  parent: Grpc.Core
  isExternal: true
  name: Metadata
  nameWithType: Metadata
  fullName: Grpc.Core.Metadata
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullName.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: Google.Cloud.Spanner.V1.Session
  commentId: T:Google.Cloud.Spanner.V1.Session
  parent: Google.Cloud.Spanner.V1
  name: Session
  nameWithType: Session
  fullName: Google.Cloud.Spanner.V1.Session
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: Grpc.Core.CallOptions
  commentId: T:Grpc.Core.CallOptions
  parent: Grpc.Core
  isExternal: true
  name: CallOptions
  nameWithType: CallOptions
  fullName: Grpc.Core.CallOptions
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerClient.CreateSessionAsync*
  commentId: Overload:Google.Cloud.Spanner.V1.Spanner.SpannerClient.CreateSessionAsync
  name: CreateSessionAsync
  nameWithType: Spanner.SpannerClient.CreateSessionAsync
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerClient.CreateSessionAsync
- uid: Grpc.Core.AsyncUnaryCall{Google.Cloud.Spanner.V1.Session}
  commentId: T:Grpc.Core.AsyncUnaryCall{Google.Cloud.Spanner.V1.Session}
  parent: Grpc.Core
  definition: Grpc.Core.AsyncUnaryCall`1
  name: AsyncUnaryCall<Session>
  nameWithType: AsyncUnaryCall<Session>
  fullName: Grpc.Core.AsyncUnaryCall<Google.Cloud.Spanner.V1.Session>
  nameWithType.vb: AsyncUnaryCall(Of Session)
  fullName.vb: Grpc.Core.AsyncUnaryCall(Of Google.Cloud.Spanner.V1.Session)
  name.vb: AsyncUnaryCall(Of Session)
  spec.csharp:
  - uid: Grpc.Core.AsyncUnaryCall`1
    name: AsyncUnaryCall
    nameWithType: AsyncUnaryCall
    fullName: Grpc.Core.AsyncUnaryCall
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Spanner.V1.Session
    name: Session
    nameWithType: Session
    fullName: Google.Cloud.Spanner.V1.Session
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Grpc.Core.AsyncUnaryCall`1
    name: AsyncUnaryCall
    nameWithType: AsyncUnaryCall
    fullName: Grpc.Core.AsyncUnaryCall
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Spanner.V1.Session
    name: Session
    nameWithType: Session
    fullName: Google.Cloud.Spanner.V1.Session
  - name: )
    nameWithType: )
    fullName: )
- uid: Grpc.Core.AsyncUnaryCall`1
  commentId: T:Grpc.Core.AsyncUnaryCall`1
  isExternal: true
  name: AsyncUnaryCall<TResponse>
  nameWithType: AsyncUnaryCall<TResponse>
  fullName: Grpc.Core.AsyncUnaryCall<TResponse>
  nameWithType.vb: AsyncUnaryCall(Of TResponse)
  fullName.vb: Grpc.Core.AsyncUnaryCall(Of TResponse)
  name.vb: AsyncUnaryCall(Of TResponse)
  spec.csharp:
  - uid: Grpc.Core.AsyncUnaryCall`1
    name: AsyncUnaryCall
    nameWithType: AsyncUnaryCall
    fullName: Grpc.Core.AsyncUnaryCall
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Grpc.Core.AsyncUnaryCall`1
    name: AsyncUnaryCall
    nameWithType: AsyncUnaryCall
    fullName: Grpc.Core.AsyncUnaryCall
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerClient.BatchCreateSessions*
  commentId: Overload:Google.Cloud.Spanner.V1.Spanner.SpannerClient.BatchCreateSessions
  name: BatchCreateSessions
  nameWithType: Spanner.SpannerClient.BatchCreateSessions
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerClient.BatchCreateSessions
- uid: Google.Cloud.Spanner.V1.BatchCreateSessionsRequest
  commentId: T:Google.Cloud.Spanner.V1.BatchCreateSessionsRequest
  parent: Google.Cloud.Spanner.V1
  name: BatchCreateSessionsRequest
  nameWithType: BatchCreateSessionsRequest
  fullName: Google.Cloud.Spanner.V1.BatchCreateSessionsRequest
- uid: Google.Cloud.Spanner.V1.BatchCreateSessionsResponse
  commentId: T:Google.Cloud.Spanner.V1.BatchCreateSessionsResponse
  parent: Google.Cloud.Spanner.V1
  name: BatchCreateSessionsResponse
  nameWithType: BatchCreateSessionsResponse
  fullName: Google.Cloud.Spanner.V1.BatchCreateSessionsResponse
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerClient.BatchCreateSessionsAsync*
  commentId: Overload:Google.Cloud.Spanner.V1.Spanner.SpannerClient.BatchCreateSessionsAsync
  name: BatchCreateSessionsAsync
  nameWithType: Spanner.SpannerClient.BatchCreateSessionsAsync
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerClient.BatchCreateSessionsAsync
- uid: Grpc.Core.AsyncUnaryCall{Google.Cloud.Spanner.V1.BatchCreateSessionsResponse}
  commentId: T:Grpc.Core.AsyncUnaryCall{Google.Cloud.Spanner.V1.BatchCreateSessionsResponse}
  parent: Grpc.Core
  definition: Grpc.Core.AsyncUnaryCall`1
  name: AsyncUnaryCall<BatchCreateSessionsResponse>
  nameWithType: AsyncUnaryCall<BatchCreateSessionsResponse>
  fullName: Grpc.Core.AsyncUnaryCall<Google.Cloud.Spanner.V1.BatchCreateSessionsResponse>
  nameWithType.vb: AsyncUnaryCall(Of BatchCreateSessionsResponse)
  fullName.vb: Grpc.Core.AsyncUnaryCall(Of Google.Cloud.Spanner.V1.BatchCreateSessionsResponse)
  name.vb: AsyncUnaryCall(Of BatchCreateSessionsResponse)
  spec.csharp:
  - uid: Grpc.Core.AsyncUnaryCall`1
    name: AsyncUnaryCall
    nameWithType: AsyncUnaryCall
    fullName: Grpc.Core.AsyncUnaryCall
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Spanner.V1.BatchCreateSessionsResponse
    name: BatchCreateSessionsResponse
    nameWithType: BatchCreateSessionsResponse
    fullName: Google.Cloud.Spanner.V1.BatchCreateSessionsResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Grpc.Core.AsyncUnaryCall`1
    name: AsyncUnaryCall
    nameWithType: AsyncUnaryCall
    fullName: Grpc.Core.AsyncUnaryCall
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Spanner.V1.BatchCreateSessionsResponse
    name: BatchCreateSessionsResponse
    nameWithType: BatchCreateSessionsResponse
    fullName: Google.Cloud.Spanner.V1.BatchCreateSessionsResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerClient.GetSession*
  commentId: Overload:Google.Cloud.Spanner.V1.Spanner.SpannerClient.GetSession
  name: GetSession
  nameWithType: Spanner.SpannerClient.GetSession
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerClient.GetSession
- uid: Google.Cloud.Spanner.V1.GetSessionRequest
  commentId: T:Google.Cloud.Spanner.V1.GetSessionRequest
  parent: Google.Cloud.Spanner.V1
  name: GetSessionRequest
  nameWithType: GetSessionRequest
  fullName: Google.Cloud.Spanner.V1.GetSessionRequest
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerClient.GetSessionAsync*
  commentId: Overload:Google.Cloud.Spanner.V1.Spanner.SpannerClient.GetSessionAsync
  name: GetSessionAsync
  nameWithType: Spanner.SpannerClient.GetSessionAsync
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerClient.GetSessionAsync
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerClient.ListSessions*
  commentId: Overload:Google.Cloud.Spanner.V1.Spanner.SpannerClient.ListSessions
  name: ListSessions
  nameWithType: Spanner.SpannerClient.ListSessions
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerClient.ListSessions
- uid: Google.Cloud.Spanner.V1.ListSessionsRequest
  commentId: T:Google.Cloud.Spanner.V1.ListSessionsRequest
  parent: Google.Cloud.Spanner.V1
  name: ListSessionsRequest
  nameWithType: ListSessionsRequest
  fullName: Google.Cloud.Spanner.V1.ListSessionsRequest
- uid: Google.Cloud.Spanner.V1.ListSessionsResponse
  commentId: T:Google.Cloud.Spanner.V1.ListSessionsResponse
  parent: Google.Cloud.Spanner.V1
  name: ListSessionsResponse
  nameWithType: ListSessionsResponse
  fullName: Google.Cloud.Spanner.V1.ListSessionsResponse
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerClient.ListSessionsAsync*
  commentId: Overload:Google.Cloud.Spanner.V1.Spanner.SpannerClient.ListSessionsAsync
  name: ListSessionsAsync
  nameWithType: Spanner.SpannerClient.ListSessionsAsync
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerClient.ListSessionsAsync
- uid: Grpc.Core.AsyncUnaryCall{Google.Cloud.Spanner.V1.ListSessionsResponse}
  commentId: T:Grpc.Core.AsyncUnaryCall{Google.Cloud.Spanner.V1.ListSessionsResponse}
  parent: Grpc.Core
  definition: Grpc.Core.AsyncUnaryCall`1
  name: AsyncUnaryCall<ListSessionsResponse>
  nameWithType: AsyncUnaryCall<ListSessionsResponse>
  fullName: Grpc.Core.AsyncUnaryCall<Google.Cloud.Spanner.V1.ListSessionsResponse>
  nameWithType.vb: AsyncUnaryCall(Of ListSessionsResponse)
  fullName.vb: Grpc.Core.AsyncUnaryCall(Of Google.Cloud.Spanner.V1.ListSessionsResponse)
  name.vb: AsyncUnaryCall(Of ListSessionsResponse)
  spec.csharp:
  - uid: Grpc.Core.AsyncUnaryCall`1
    name: AsyncUnaryCall
    nameWithType: AsyncUnaryCall
    fullName: Grpc.Core.AsyncUnaryCall
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Spanner.V1.ListSessionsResponse
    name: ListSessionsResponse
    nameWithType: ListSessionsResponse
    fullName: Google.Cloud.Spanner.V1.ListSessionsResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Grpc.Core.AsyncUnaryCall`1
    name: AsyncUnaryCall
    nameWithType: AsyncUnaryCall
    fullName: Grpc.Core.AsyncUnaryCall
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Spanner.V1.ListSessionsResponse
    name: ListSessionsResponse
    nameWithType: ListSessionsResponse
    fullName: Google.Cloud.Spanner.V1.ListSessionsResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerClient.DeleteSession*
  commentId: Overload:Google.Cloud.Spanner.V1.Spanner.SpannerClient.DeleteSession
  name: DeleteSession
  nameWithType: Spanner.SpannerClient.DeleteSession
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerClient.DeleteSession
- uid: Google.Cloud.Spanner.V1.DeleteSessionRequest
  commentId: T:Google.Cloud.Spanner.V1.DeleteSessionRequest
  parent: Google.Cloud.Spanner.V1
  name: DeleteSessionRequest
  nameWithType: DeleteSessionRequest
  fullName: Google.Cloud.Spanner.V1.DeleteSessionRequest
- uid: Google.Protobuf.WellKnownTypes.Empty
  commentId: T:Google.Protobuf.WellKnownTypes.Empty
  parent: Google.Protobuf.WellKnownTypes
  isExternal: true
  name: Empty
  nameWithType: Empty
  fullName: Google.Protobuf.WellKnownTypes.Empty
- uid: Google.Protobuf.WellKnownTypes
  commentId: N:Google.Protobuf.WellKnownTypes
  isExternal: true
  name: Google.Protobuf.WellKnownTypes
  nameWithType: Google.Protobuf.WellKnownTypes
  fullName: Google.Protobuf.WellKnownTypes
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerClient.DeleteSessionAsync*
  commentId: Overload:Google.Cloud.Spanner.V1.Spanner.SpannerClient.DeleteSessionAsync
  name: DeleteSessionAsync
  nameWithType: Spanner.SpannerClient.DeleteSessionAsync
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerClient.DeleteSessionAsync
- uid: Grpc.Core.AsyncUnaryCall{Google.Protobuf.WellKnownTypes.Empty}
  commentId: T:Grpc.Core.AsyncUnaryCall{Google.Protobuf.WellKnownTypes.Empty}
  parent: Grpc.Core
  definition: Grpc.Core.AsyncUnaryCall`1
  name: AsyncUnaryCall<Empty>
  nameWithType: AsyncUnaryCall<Empty>
  fullName: Grpc.Core.AsyncUnaryCall<Google.Protobuf.WellKnownTypes.Empty>
  nameWithType.vb: AsyncUnaryCall(Of Empty)
  fullName.vb: Grpc.Core.AsyncUnaryCall(Of Google.Protobuf.WellKnownTypes.Empty)
  name.vb: AsyncUnaryCall(Of Empty)
  spec.csharp:
  - uid: Grpc.Core.AsyncUnaryCall`1
    name: AsyncUnaryCall
    nameWithType: AsyncUnaryCall
    fullName: Grpc.Core.AsyncUnaryCall
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Protobuf.WellKnownTypes.Empty
    name: Empty
    nameWithType: Empty
    fullName: Google.Protobuf.WellKnownTypes.Empty
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Grpc.Core.AsyncUnaryCall`1
    name: AsyncUnaryCall
    nameWithType: AsyncUnaryCall
    fullName: Grpc.Core.AsyncUnaryCall
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Protobuf.WellKnownTypes.Empty
    name: Empty
    nameWithType: Empty
    fullName: Google.Protobuf.WellKnownTypes.Empty
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerClient.ExecuteSql*
  commentId: Overload:Google.Cloud.Spanner.V1.Spanner.SpannerClient.ExecuteSql
  name: ExecuteSql
  nameWithType: Spanner.SpannerClient.ExecuteSql
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerClient.ExecuteSql
- uid: Google.Cloud.Spanner.V1.ExecuteSqlRequest
  commentId: T:Google.Cloud.Spanner.V1.ExecuteSqlRequest
  parent: Google.Cloud.Spanner.V1
  name: ExecuteSqlRequest
  nameWithType: ExecuteSqlRequest
  fullName: Google.Cloud.Spanner.V1.ExecuteSqlRequest
- uid: Google.Cloud.Spanner.V1.ResultSet
  commentId: T:Google.Cloud.Spanner.V1.ResultSet
  parent: Google.Cloud.Spanner.V1
  name: ResultSet
  nameWithType: ResultSet
  fullName: Google.Cloud.Spanner.V1.ResultSet
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerClient.ExecuteSqlAsync*
  commentId: Overload:Google.Cloud.Spanner.V1.Spanner.SpannerClient.ExecuteSqlAsync
  name: ExecuteSqlAsync
  nameWithType: Spanner.SpannerClient.ExecuteSqlAsync
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerClient.ExecuteSqlAsync
- uid: Grpc.Core.AsyncUnaryCall{Google.Cloud.Spanner.V1.ResultSet}
  commentId: T:Grpc.Core.AsyncUnaryCall{Google.Cloud.Spanner.V1.ResultSet}
  parent: Grpc.Core
  definition: Grpc.Core.AsyncUnaryCall`1
  name: AsyncUnaryCall<ResultSet>
  nameWithType: AsyncUnaryCall<ResultSet>
  fullName: Grpc.Core.AsyncUnaryCall<Google.Cloud.Spanner.V1.ResultSet>
  nameWithType.vb: AsyncUnaryCall(Of ResultSet)
  fullName.vb: Grpc.Core.AsyncUnaryCall(Of Google.Cloud.Spanner.V1.ResultSet)
  name.vb: AsyncUnaryCall(Of ResultSet)
  spec.csharp:
  - uid: Grpc.Core.AsyncUnaryCall`1
    name: AsyncUnaryCall
    nameWithType: AsyncUnaryCall
    fullName: Grpc.Core.AsyncUnaryCall
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Spanner.V1.ResultSet
    name: ResultSet
    nameWithType: ResultSet
    fullName: Google.Cloud.Spanner.V1.ResultSet
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Grpc.Core.AsyncUnaryCall`1
    name: AsyncUnaryCall
    nameWithType: AsyncUnaryCall
    fullName: Grpc.Core.AsyncUnaryCall
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Spanner.V1.ResultSet
    name: ResultSet
    nameWithType: ResultSet
    fullName: Google.Cloud.Spanner.V1.ResultSet
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerClient.ExecuteStreamingSql*
  commentId: Overload:Google.Cloud.Spanner.V1.Spanner.SpannerClient.ExecuteStreamingSql
  name: ExecuteStreamingSql
  nameWithType: Spanner.SpannerClient.ExecuteStreamingSql
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerClient.ExecuteStreamingSql
- uid: Grpc.Core.AsyncServerStreamingCall{Google.Cloud.Spanner.V1.PartialResultSet}
  commentId: T:Grpc.Core.AsyncServerStreamingCall{Google.Cloud.Spanner.V1.PartialResultSet}
  parent: Grpc.Core
  definition: Grpc.Core.AsyncServerStreamingCall`1
  name: AsyncServerStreamingCall<PartialResultSet>
  nameWithType: AsyncServerStreamingCall<PartialResultSet>
  fullName: Grpc.Core.AsyncServerStreamingCall<Google.Cloud.Spanner.V1.PartialResultSet>
  nameWithType.vb: AsyncServerStreamingCall(Of PartialResultSet)
  fullName.vb: Grpc.Core.AsyncServerStreamingCall(Of Google.Cloud.Spanner.V1.PartialResultSet)
  name.vb: AsyncServerStreamingCall(Of PartialResultSet)
  spec.csharp:
  - uid: Grpc.Core.AsyncServerStreamingCall`1
    name: AsyncServerStreamingCall
    nameWithType: AsyncServerStreamingCall
    fullName: Grpc.Core.AsyncServerStreamingCall
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Spanner.V1.PartialResultSet
    name: PartialResultSet
    nameWithType: PartialResultSet
    fullName: Google.Cloud.Spanner.V1.PartialResultSet
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Grpc.Core.AsyncServerStreamingCall`1
    name: AsyncServerStreamingCall
    nameWithType: AsyncServerStreamingCall
    fullName: Grpc.Core.AsyncServerStreamingCall
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Spanner.V1.PartialResultSet
    name: PartialResultSet
    nameWithType: PartialResultSet
    fullName: Google.Cloud.Spanner.V1.PartialResultSet
  - name: )
    nameWithType: )
    fullName: )
- uid: Grpc.Core.AsyncServerStreamingCall`1
  commentId: T:Grpc.Core.AsyncServerStreamingCall`1
  isExternal: true
  name: AsyncServerStreamingCall<TResponse>
  nameWithType: AsyncServerStreamingCall<TResponse>
  fullName: Grpc.Core.AsyncServerStreamingCall<TResponse>
  nameWithType.vb: AsyncServerStreamingCall(Of TResponse)
  fullName.vb: Grpc.Core.AsyncServerStreamingCall(Of TResponse)
  name.vb: AsyncServerStreamingCall(Of TResponse)
  spec.csharp:
  - uid: Grpc.Core.AsyncServerStreamingCall`1
    name: AsyncServerStreamingCall
    nameWithType: AsyncServerStreamingCall
    fullName: Grpc.Core.AsyncServerStreamingCall
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Grpc.Core.AsyncServerStreamingCall`1
    name: AsyncServerStreamingCall
    nameWithType: AsyncServerStreamingCall
    fullName: Grpc.Core.AsyncServerStreamingCall
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerClient.ExecuteBatchDml*
  commentId: Overload:Google.Cloud.Spanner.V1.Spanner.SpannerClient.ExecuteBatchDml
  name: ExecuteBatchDml
  nameWithType: Spanner.SpannerClient.ExecuteBatchDml
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerClient.ExecuteBatchDml
- uid: Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest
  commentId: T:Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest
  parent: Google.Cloud.Spanner.V1
  name: ExecuteBatchDmlRequest
  nameWithType: ExecuteBatchDmlRequest
  fullName: Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest
- uid: Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse
  commentId: T:Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse
  parent: Google.Cloud.Spanner.V1
  name: ExecuteBatchDmlResponse
  nameWithType: ExecuteBatchDmlResponse
  fullName: Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerClient.ExecuteBatchDmlAsync*
  commentId: Overload:Google.Cloud.Spanner.V1.Spanner.SpannerClient.ExecuteBatchDmlAsync
  name: ExecuteBatchDmlAsync
  nameWithType: Spanner.SpannerClient.ExecuteBatchDmlAsync
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerClient.ExecuteBatchDmlAsync
- uid: Grpc.Core.AsyncUnaryCall{Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse}
  commentId: T:Grpc.Core.AsyncUnaryCall{Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse}
  parent: Grpc.Core
  definition: Grpc.Core.AsyncUnaryCall`1
  name: AsyncUnaryCall<ExecuteBatchDmlResponse>
  nameWithType: AsyncUnaryCall<ExecuteBatchDmlResponse>
  fullName: Grpc.Core.AsyncUnaryCall<Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse>
  nameWithType.vb: AsyncUnaryCall(Of ExecuteBatchDmlResponse)
  fullName.vb: Grpc.Core.AsyncUnaryCall(Of Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse)
  name.vb: AsyncUnaryCall(Of ExecuteBatchDmlResponse)
  spec.csharp:
  - uid: Grpc.Core.AsyncUnaryCall`1
    name: AsyncUnaryCall
    nameWithType: AsyncUnaryCall
    fullName: Grpc.Core.AsyncUnaryCall
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse
    name: ExecuteBatchDmlResponse
    nameWithType: ExecuteBatchDmlResponse
    fullName: Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Grpc.Core.AsyncUnaryCall`1
    name: AsyncUnaryCall
    nameWithType: AsyncUnaryCall
    fullName: Grpc.Core.AsyncUnaryCall
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse
    name: ExecuteBatchDmlResponse
    nameWithType: ExecuteBatchDmlResponse
    fullName: Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerClient.Read*
  commentId: Overload:Google.Cloud.Spanner.V1.Spanner.SpannerClient.Read
  name: Read
  nameWithType: Spanner.SpannerClient.Read
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerClient.Read
- uid: Google.Cloud.Spanner.V1.ReadRequest
  commentId: T:Google.Cloud.Spanner.V1.ReadRequest
  parent: Google.Cloud.Spanner.V1
  name: ReadRequest
  nameWithType: ReadRequest
  fullName: Google.Cloud.Spanner.V1.ReadRequest
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerClient.ReadAsync*
  commentId: Overload:Google.Cloud.Spanner.V1.Spanner.SpannerClient.ReadAsync
  name: ReadAsync
  nameWithType: Spanner.SpannerClient.ReadAsync
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerClient.ReadAsync
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerClient.StreamingRead*
  commentId: Overload:Google.Cloud.Spanner.V1.Spanner.SpannerClient.StreamingRead
  name: StreamingRead
  nameWithType: Spanner.SpannerClient.StreamingRead
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerClient.StreamingRead
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerClient.BeginTransaction*
  commentId: Overload:Google.Cloud.Spanner.V1.Spanner.SpannerClient.BeginTransaction
  name: BeginTransaction
  nameWithType: Spanner.SpannerClient.BeginTransaction
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerClient.BeginTransaction
- uid: Google.Cloud.Spanner.V1.BeginTransactionRequest
  commentId: T:Google.Cloud.Spanner.V1.BeginTransactionRequest
  parent: Google.Cloud.Spanner.V1
  name: BeginTransactionRequest
  nameWithType: BeginTransactionRequest
  fullName: Google.Cloud.Spanner.V1.BeginTransactionRequest
- uid: Google.Cloud.Spanner.V1.Transaction
  commentId: T:Google.Cloud.Spanner.V1.Transaction
  parent: Google.Cloud.Spanner.V1
  name: Transaction
  nameWithType: Transaction
  fullName: Google.Cloud.Spanner.V1.Transaction
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerClient.BeginTransactionAsync*
  commentId: Overload:Google.Cloud.Spanner.V1.Spanner.SpannerClient.BeginTransactionAsync
  name: BeginTransactionAsync
  nameWithType: Spanner.SpannerClient.BeginTransactionAsync
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerClient.BeginTransactionAsync
- uid: Grpc.Core.AsyncUnaryCall{Google.Cloud.Spanner.V1.Transaction}
  commentId: T:Grpc.Core.AsyncUnaryCall{Google.Cloud.Spanner.V1.Transaction}
  parent: Grpc.Core
  definition: Grpc.Core.AsyncUnaryCall`1
  name: AsyncUnaryCall<Transaction>
  nameWithType: AsyncUnaryCall<Transaction>
  fullName: Grpc.Core.AsyncUnaryCall<Google.Cloud.Spanner.V1.Transaction>
  nameWithType.vb: AsyncUnaryCall(Of Transaction)
  fullName.vb: Grpc.Core.AsyncUnaryCall(Of Google.Cloud.Spanner.V1.Transaction)
  name.vb: AsyncUnaryCall(Of Transaction)
  spec.csharp:
  - uid: Grpc.Core.AsyncUnaryCall`1
    name: AsyncUnaryCall
    nameWithType: AsyncUnaryCall
    fullName: Grpc.Core.AsyncUnaryCall
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Spanner.V1.Transaction
    name: Transaction
    nameWithType: Transaction
    fullName: Google.Cloud.Spanner.V1.Transaction
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Grpc.Core.AsyncUnaryCall`1
    name: AsyncUnaryCall
    nameWithType: AsyncUnaryCall
    fullName: Grpc.Core.AsyncUnaryCall
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Spanner.V1.Transaction
    name: Transaction
    nameWithType: Transaction
    fullName: Google.Cloud.Spanner.V1.Transaction
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerClient.Commit*
  commentId: Overload:Google.Cloud.Spanner.V1.Spanner.SpannerClient.Commit
  name: Commit
  nameWithType: Spanner.SpannerClient.Commit
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerClient.Commit
- uid: Google.Cloud.Spanner.V1.CommitRequest
  commentId: T:Google.Cloud.Spanner.V1.CommitRequest
  parent: Google.Cloud.Spanner.V1
  name: CommitRequest
  nameWithType: CommitRequest
  fullName: Google.Cloud.Spanner.V1.CommitRequest
- uid: Google.Cloud.Spanner.V1.CommitResponse
  commentId: T:Google.Cloud.Spanner.V1.CommitResponse
  parent: Google.Cloud.Spanner.V1
  name: CommitResponse
  nameWithType: CommitResponse
  fullName: Google.Cloud.Spanner.V1.CommitResponse
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerClient.CommitAsync*
  commentId: Overload:Google.Cloud.Spanner.V1.Spanner.SpannerClient.CommitAsync
  name: CommitAsync
  nameWithType: Spanner.SpannerClient.CommitAsync
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerClient.CommitAsync
- uid: Grpc.Core.AsyncUnaryCall{Google.Cloud.Spanner.V1.CommitResponse}
  commentId: T:Grpc.Core.AsyncUnaryCall{Google.Cloud.Spanner.V1.CommitResponse}
  parent: Grpc.Core
  definition: Grpc.Core.AsyncUnaryCall`1
  name: AsyncUnaryCall<CommitResponse>
  nameWithType: AsyncUnaryCall<CommitResponse>
  fullName: Grpc.Core.AsyncUnaryCall<Google.Cloud.Spanner.V1.CommitResponse>
  nameWithType.vb: AsyncUnaryCall(Of CommitResponse)
  fullName.vb: Grpc.Core.AsyncUnaryCall(Of Google.Cloud.Spanner.V1.CommitResponse)
  name.vb: AsyncUnaryCall(Of CommitResponse)
  spec.csharp:
  - uid: Grpc.Core.AsyncUnaryCall`1
    name: AsyncUnaryCall
    nameWithType: AsyncUnaryCall
    fullName: Grpc.Core.AsyncUnaryCall
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Spanner.V1.CommitResponse
    name: CommitResponse
    nameWithType: CommitResponse
    fullName: Google.Cloud.Spanner.V1.CommitResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Grpc.Core.AsyncUnaryCall`1
    name: AsyncUnaryCall
    nameWithType: AsyncUnaryCall
    fullName: Grpc.Core.AsyncUnaryCall
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Spanner.V1.CommitResponse
    name: CommitResponse
    nameWithType: CommitResponse
    fullName: Google.Cloud.Spanner.V1.CommitResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerClient.Rollback*
  commentId: Overload:Google.Cloud.Spanner.V1.Spanner.SpannerClient.Rollback
  name: Rollback
  nameWithType: Spanner.SpannerClient.Rollback
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerClient.Rollback
- uid: Google.Cloud.Spanner.V1.RollbackRequest
  commentId: T:Google.Cloud.Spanner.V1.RollbackRequest
  parent: Google.Cloud.Spanner.V1
  name: RollbackRequest
  nameWithType: RollbackRequest
  fullName: Google.Cloud.Spanner.V1.RollbackRequest
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerClient.RollbackAsync*
  commentId: Overload:Google.Cloud.Spanner.V1.Spanner.SpannerClient.RollbackAsync
  name: RollbackAsync
  nameWithType: Spanner.SpannerClient.RollbackAsync
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerClient.RollbackAsync
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerClient.PartitionQuery*
  commentId: Overload:Google.Cloud.Spanner.V1.Spanner.SpannerClient.PartitionQuery
  name: PartitionQuery
  nameWithType: Spanner.SpannerClient.PartitionQuery
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerClient.PartitionQuery
- uid: Google.Cloud.Spanner.V1.PartitionQueryRequest
  commentId: T:Google.Cloud.Spanner.V1.PartitionQueryRequest
  parent: Google.Cloud.Spanner.V1
  name: PartitionQueryRequest
  nameWithType: PartitionQueryRequest
  fullName: Google.Cloud.Spanner.V1.PartitionQueryRequest
- uid: Google.Cloud.Spanner.V1.PartitionResponse
  commentId: T:Google.Cloud.Spanner.V1.PartitionResponse
  parent: Google.Cloud.Spanner.V1
  name: PartitionResponse
  nameWithType: PartitionResponse
  fullName: Google.Cloud.Spanner.V1.PartitionResponse
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerClient.PartitionQueryAsync*
  commentId: Overload:Google.Cloud.Spanner.V1.Spanner.SpannerClient.PartitionQueryAsync
  name: PartitionQueryAsync
  nameWithType: Spanner.SpannerClient.PartitionQueryAsync
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerClient.PartitionQueryAsync
- uid: Grpc.Core.AsyncUnaryCall{Google.Cloud.Spanner.V1.PartitionResponse}
  commentId: T:Grpc.Core.AsyncUnaryCall{Google.Cloud.Spanner.V1.PartitionResponse}
  parent: Grpc.Core
  definition: Grpc.Core.AsyncUnaryCall`1
  name: AsyncUnaryCall<PartitionResponse>
  nameWithType: AsyncUnaryCall<PartitionResponse>
  fullName: Grpc.Core.AsyncUnaryCall<Google.Cloud.Spanner.V1.PartitionResponse>
  nameWithType.vb: AsyncUnaryCall(Of PartitionResponse)
  fullName.vb: Grpc.Core.AsyncUnaryCall(Of Google.Cloud.Spanner.V1.PartitionResponse)
  name.vb: AsyncUnaryCall(Of PartitionResponse)
  spec.csharp:
  - uid: Grpc.Core.AsyncUnaryCall`1
    name: AsyncUnaryCall
    nameWithType: AsyncUnaryCall
    fullName: Grpc.Core.AsyncUnaryCall
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Spanner.V1.PartitionResponse
    name: PartitionResponse
    nameWithType: PartitionResponse
    fullName: Google.Cloud.Spanner.V1.PartitionResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Grpc.Core.AsyncUnaryCall`1
    name: AsyncUnaryCall
    nameWithType: AsyncUnaryCall
    fullName: Grpc.Core.AsyncUnaryCall
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Spanner.V1.PartitionResponse
    name: PartitionResponse
    nameWithType: PartitionResponse
    fullName: Google.Cloud.Spanner.V1.PartitionResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerClient.PartitionRead*
  commentId: Overload:Google.Cloud.Spanner.V1.Spanner.SpannerClient.PartitionRead
  name: PartitionRead
  nameWithType: Spanner.SpannerClient.PartitionRead
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerClient.PartitionRead
- uid: Google.Cloud.Spanner.V1.PartitionReadRequest
  commentId: T:Google.Cloud.Spanner.V1.PartitionReadRequest
  parent: Google.Cloud.Spanner.V1
  name: PartitionReadRequest
  nameWithType: PartitionReadRequest
  fullName: Google.Cloud.Spanner.V1.PartitionReadRequest
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerClient.PartitionReadAsync*
  commentId: Overload:Google.Cloud.Spanner.V1.Spanner.SpannerClient.PartitionReadAsync
  name: PartitionReadAsync
  nameWithType: Spanner.SpannerClient.PartitionReadAsync
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerClient.PartitionReadAsync
- uid: Grpc.Core.ClientBase{Google.Cloud.Spanner.V1.Spanner.SpannerClient}.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
  commentId: M:Grpc.Core.ClientBase{Google.Cloud.Spanner.V1.Spanner.SpannerClient}.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
  parent: Grpc.Core.ClientBase{Google.Cloud.Spanner.V1.Spanner.SpannerClient}
  definition: Grpc.Core.ClientBase`1.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
  name: NewInstance(ClientBase.ClientBaseConfiguration)
  nameWithType: ClientBase<Spanner.SpannerClient>.NewInstance(ClientBase.ClientBaseConfiguration)
  fullName: Grpc.Core.ClientBase<Google.Cloud.Spanner.V1.Spanner.SpannerClient>.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
  nameWithType.vb: ClientBase(Of Spanner.SpannerClient).NewInstance(ClientBase.ClientBaseConfiguration)
  fullName.vb: Grpc.Core.ClientBase(Of Google.Cloud.Spanner.V1.Spanner.SpannerClient).NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
  spec.csharp:
  - uid: Grpc.Core.ClientBase`1.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
    name: NewInstance
    nameWithType: ClientBase<Spanner.SpannerClient>.NewInstance
    fullName: Grpc.Core.ClientBase<Google.Cloud.Spanner.V1.Spanner.SpannerClient>.NewInstance
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Grpc.Core.ClientBase.ClientBaseConfiguration
    name: ClientBase.ClientBaseConfiguration
    nameWithType: ClientBase.ClientBaseConfiguration
    fullName: Grpc.Core.ClientBase.ClientBaseConfiguration
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Grpc.Core.ClientBase`1.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
    name: NewInstance
    nameWithType: ClientBase(Of Spanner.SpannerClient).NewInstance
    fullName: Grpc.Core.ClientBase(Of Google.Cloud.Spanner.V1.Spanner.SpannerClient).NewInstance
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Grpc.Core.ClientBase.ClientBaseConfiguration
    name: ClientBase.ClientBaseConfiguration
    nameWithType: ClientBase.ClientBaseConfiguration
    fullName: Grpc.Core.ClientBase.ClientBaseConfiguration
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerClient.NewInstance*
  commentId: Overload:Google.Cloud.Spanner.V1.Spanner.SpannerClient.NewInstance
  name: NewInstance
  nameWithType: Spanner.SpannerClient.NewInstance
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerClient.NewInstance
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerClient
  commentId: T:Google.Cloud.Spanner.V1.Spanner.SpannerClient
  parent: Google.Cloud.Spanner.V1
  name: Spanner.SpannerClient
  nameWithType: Spanner.SpannerClient
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerClient
- uid: Grpc.Core.ClientBase`1.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
  commentId: M:Grpc.Core.ClientBase`1.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
  isExternal: true
  name: NewInstance(ClientBase.ClientBaseConfiguration)
  nameWithType: ClientBase<T>.NewInstance(ClientBase.ClientBaseConfiguration)
  fullName: Grpc.Core.ClientBase<T>.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
  nameWithType.vb: ClientBase(Of T).NewInstance(ClientBase.ClientBaseConfiguration)
  fullName.vb: Grpc.Core.ClientBase(Of T).NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
  spec.csharp:
  - uid: Grpc.Core.ClientBase`1.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
    name: NewInstance
    nameWithType: ClientBase<T>.NewInstance
    fullName: Grpc.Core.ClientBase<T>.NewInstance
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Grpc.Core.ClientBase.ClientBaseConfiguration
    name: ClientBase.ClientBaseConfiguration
    nameWithType: ClientBase.ClientBaseConfiguration
    fullName: Grpc.Core.ClientBase.ClientBaseConfiguration
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Grpc.Core.ClientBase`1.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
    name: NewInstance
    nameWithType: ClientBase(Of T).NewInstance
    fullName: Grpc.Core.ClientBase(Of T).NewInstance
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Grpc.Core.ClientBase.ClientBaseConfiguration
    name: ClientBase.ClientBaseConfiguration
    nameWithType: ClientBase.ClientBaseConfiguration
    fullName: Grpc.Core.ClientBase.ClientBaseConfiguration
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
