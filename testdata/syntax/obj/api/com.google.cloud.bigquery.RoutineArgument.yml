### YamlMime:ManagedReference
items:
- uid: "com.google.cloud.bigquery.RoutineArgument"
  id: "RoutineArgument"
  parent: "com.google.cloud.bigquery"
  children:
  - "com.google.cloud.bigquery.RoutineArgument.Builder"
  - "com.google.cloud.bigquery.RoutineArgument.RoutineArgument()"
  - "com.google.cloud.bigquery.RoutineArgument.getDataType()"
  - "com.google.cloud.bigquery.RoutineArgument.getKind()"
  - "com.google.cloud.bigquery.RoutineArgument.getMode()"
  - "com.google.cloud.bigquery.RoutineArgument.getName()"
  - "com.google.cloud.bigquery.RoutineArgument.newBuilder()"
  - "com.google.cloud.bigquery.RoutineArgument.toBuilder()"
  langs:
  - "java"
  name: "RoutineArgument"
  nameWithType: "RoutineArgument"
  fullName: "com.google.cloud.bigquery.RoutineArgument"
  type: "Class"
  package: "com.google.cloud.bigquery"
  summary: "An argument for a BigQuery Routine."
  syntax:
    content: "public abstract class RoutineArgument"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.google.cloud.bigquery.RoutineArgument.RoutineArgument()"
  id: "RoutineArgument()"
  parent: "com.google.cloud.bigquery.RoutineArgument"
  langs:
  - "java"
  name: "RoutineArgument()"
  nameWithType: "RoutineArgument.RoutineArgument()"
  fullName: "com.google.cloud.bigquery.RoutineArgument.RoutineArgument()"
  overload: "com.google.cloud.bigquery.RoutineArgument.RoutineArgument*"
  type: "Constructor"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public RoutineArgument()"
- uid: "com.google.cloud.bigquery.RoutineArgument.getDataType()"
  id: "getDataType()"
  parent: "com.google.cloud.bigquery.RoutineArgument"
  langs:
  - "java"
  name: "getDataType()"
  nameWithType: "RoutineArgument.getDataType()"
  fullName: "com.google.cloud.bigquery.RoutineArgument.getDataType()"
  overload: "com.google.cloud.bigquery.RoutineArgument.getDataType*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public abstract StandardSQLDataType getDataType()"
    return:
      type: "com.google.cloud.bigquery.StandardSQLDataType"
- uid: "com.google.cloud.bigquery.RoutineArgument.getKind()"
  id: "getKind()"
  parent: "com.google.cloud.bigquery.RoutineArgument"
  langs:
  - "java"
  name: "getKind()"
  nameWithType: "RoutineArgument.getKind()"
  fullName: "com.google.cloud.bigquery.RoutineArgument.getKind()"
  overload: "com.google.cloud.bigquery.RoutineArgument.getKind*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns the kind of the argument."
  syntax:
    content: "public abstract String getKind()"
    return:
      type: "java.lang.String"
- uid: "com.google.cloud.bigquery.RoutineArgument.getMode()"
  id: "getMode()"
  parent: "com.google.cloud.bigquery.RoutineArgument"
  langs:
  - "java"
  name: "getMode()"
  nameWithType: "RoutineArgument.getMode()"
  fullName: "com.google.cloud.bigquery.RoutineArgument.getMode()"
  overload: "com.google.cloud.bigquery.RoutineArgument.getMode*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns the mode of the argument."
  syntax:
    content: "public abstract String getMode()"
    return:
      type: "java.lang.String"
- uid: "com.google.cloud.bigquery.RoutineArgument.getName()"
  id: "getName()"
  parent: "com.google.cloud.bigquery.RoutineArgument"
  langs:
  - "java"
  name: "getName()"
  nameWithType: "RoutineArgument.getName()"
  fullName: "com.google.cloud.bigquery.RoutineArgument.getName()"
  overload: "com.google.cloud.bigquery.RoutineArgument.getName*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns the name of the argument."
  syntax:
    content: "public abstract String getName()"
    return:
      type: "java.lang.String"
- uid: "com.google.cloud.bigquery.RoutineArgument.newBuilder()"
  id: "newBuilder()"
  parent: "com.google.cloud.bigquery.RoutineArgument"
  langs:
  - "java"
  name: "newBuilder()"
  nameWithType: "RoutineArgument.newBuilder()"
  fullName: "com.google.cloud.bigquery.RoutineArgument.newBuilder()"
  overload: "com.google.cloud.bigquery.RoutineArgument.newBuilder*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns a builder for a \\{@Code RoutineArgument\\} object."
  syntax:
    content: "public static RoutineArgument.Builder newBuilder()"
    return:
      type: "com.google.cloud.bigquery.RoutineArgument.Builder"
- uid: "com.google.cloud.bigquery.RoutineArgument.toBuilder()"
  id: "toBuilder()"
  parent: "com.google.cloud.bigquery.RoutineArgument"
  langs:
  - "java"
  name: "toBuilder()"
  nameWithType: "RoutineArgument.toBuilder()"
  fullName: "com.google.cloud.bigquery.RoutineArgument.toBuilder()"
  overload: "com.google.cloud.bigquery.RoutineArgument.toBuilder*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns a builder pre-populated using the current values of this `RoutineArgument`."
  syntax:
    content: "public abstract RoutineArgument.Builder toBuilder()"
    return:
      type: "com.google.cloud.bigquery.RoutineArgument.Builder"
references:
- uid: "com.google.cloud.bigquery.RoutineArgument.RoutineArgument*"
  name: "RoutineArgument"
  nameWithType: "RoutineArgument.RoutineArgument"
  fullName: "com.google.cloud.bigquery.RoutineArgument.RoutineArgument"
  package: "com.google.cloud.bigquery"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.google.cloud.bigquery.RoutineArgument.getName*"
  name: "getName"
  nameWithType: "RoutineArgument.getName"
  fullName: "com.google.cloud.bigquery.RoutineArgument.getName"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.RoutineArgument.getKind*"
  name: "getKind"
  nameWithType: "RoutineArgument.getKind"
  fullName: "com.google.cloud.bigquery.RoutineArgument.getKind"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.RoutineArgument.getMode*"
  name: "getMode"
  nameWithType: "RoutineArgument.getMode"
  fullName: "com.google.cloud.bigquery.RoutineArgument.getMode"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.StandardSQLDataType"
  name: "StandardSQLDataType"
  nameWithType: "StandardSQLDataType"
  fullName: "com.google.cloud.bigquery.StandardSQLDataType"
- uid: "com.google.cloud.bigquery.RoutineArgument.getDataType*"
  name: "getDataType"
  nameWithType: "RoutineArgument.getDataType"
  fullName: "com.google.cloud.bigquery.RoutineArgument.getDataType"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.RoutineArgument.Builder"
  name: "RoutineArgument.Builder"
  nameWithType: "RoutineArgument.Builder"
  fullName: "com.google.cloud.bigquery.RoutineArgument.Builder"
- uid: "com.google.cloud.bigquery.RoutineArgument.toBuilder*"
  name: "toBuilder"
  nameWithType: "RoutineArgument.toBuilder"
  fullName: "com.google.cloud.bigquery.RoutineArgument.toBuilder"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.RoutineArgument.newBuilder*"
  name: "newBuilder"
  nameWithType: "RoutineArgument.newBuilder"
  fullName: "com.google.cloud.bigquery.RoutineArgument.newBuilder"
  package: "com.google.cloud.bigquery"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
