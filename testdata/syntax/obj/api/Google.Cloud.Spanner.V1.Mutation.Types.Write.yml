### YamlMime:ManagedReference
items:
- uid: Google.Cloud.Spanner.V1.Mutation.Types.Write
  commentId: T:Google.Cloud.Spanner.V1.Mutation.Types.Write
  id: Mutation.Types.Write
  parent: Google.Cloud.Spanner.V1
  children:
  - Google.Cloud.Spanner.V1.Mutation.Types.Write.#ctor
  - Google.Cloud.Spanner.V1.Mutation.Types.Write.#ctor(Google.Cloud.Spanner.V1.Mutation.Types.Write)
  - Google.Cloud.Spanner.V1.Mutation.Types.Write.Columns
  - Google.Cloud.Spanner.V1.Mutation.Types.Write.Table
  - Google.Cloud.Spanner.V1.Mutation.Types.Write.Values
  langs:
  - csharp
  - vb
  name: Mutation.Types.Write
  nameWithType: Mutation.Types.Write
  fullName: Google.Cloud.Spanner.V1.Mutation.Types.Write
  type: Class
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Mutation.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: Write
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Mutation.cs
    startLine: 519
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nArguments to [insert][google.spanner.v1.Mutation.insert], [update][google.spanner.v1.Mutation.update], [insert_or_update][google.spanner.v1.Mutation.insert_or_update], and\n[replace][google.spanner.v1.Mutation.replace] operations.\n"
  example: []
  syntax:
    content: 'public sealed class Write : IMessage<Mutation.Types.Write>, IEquatable<Mutation.Types.Write>, IDeepCloneable<Mutation.Types.Write>, IBufferMessage, IMessage'
    content.vb: >-
      Public NotInheritable Class Write
          Implements IMessage(Of Mutation.Types.Write), IEquatable(Of Mutation.Types.Write), IDeepCloneable(Of Mutation.Types.Write), IBufferMessage, IMessage
  inheritance:
  - System.Object
  implements:
  - Google.Protobuf.IMessage{Google.Cloud.Spanner.V1.Mutation.Types.Write}
  - System.IEquatable{Google.Cloud.Spanner.V1.Mutation.Types.Write}
  - Google.Protobuf.IDeepCloneable{Google.Cloud.Spanner.V1.Mutation.Types.Write}
  - Google.Protobuf.IBufferMessage
  - Google.Protobuf.IMessage
  inheritedMembers:
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Google.Cloud.Spanner.V1.Mutation.Types.Write.#ctor
  commentId: M:Google.Cloud.Spanner.V1.Mutation.Types.Write.#ctor
  id: '#ctor'
  parent: Google.Cloud.Spanner.V1.Mutation.Types.Write
  langs:
  - csharp
  - vb
  name: Write()
  nameWithType: Mutation.Types.Write.Write()
  fullName: Google.Cloud.Spanner.V1.Mutation.Types.Write.Write()
  type: Constructor
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Mutation.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: .ctor
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Mutation.cs
    startLine: 539
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  syntax:
    content: public Write()
    content.vb: Public Sub New
  overload: Google.Cloud.Spanner.V1.Mutation.Types.Write.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Cloud.Spanner.V1.Mutation.Types.Write.#ctor(Google.Cloud.Spanner.V1.Mutation.Types.Write)
  commentId: M:Google.Cloud.Spanner.V1.Mutation.Types.Write.#ctor(Google.Cloud.Spanner.V1.Mutation.Types.Write)
  id: '#ctor(Google.Cloud.Spanner.V1.Mutation.Types.Write)'
  parent: Google.Cloud.Spanner.V1.Mutation.Types.Write
  langs:
  - csharp
  - vb
  name: Write(Mutation.Types.Write)
  nameWithType: Mutation.Types.Write.Write(Mutation.Types.Write)
  fullName: Google.Cloud.Spanner.V1.Mutation.Types.Write.Write(Google.Cloud.Spanner.V1.Mutation.Types.Write)
  type: Constructor
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Mutation.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: .ctor
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Mutation.cs
    startLine: 546
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  syntax:
    content: public Write(Mutation.Types.Write other)
    parameters:
    - id: other
      type: Google.Cloud.Spanner.V1.Mutation.Types.Write
    content.vb: Public Sub New(other As Mutation.Types.Write)
  overload: Google.Cloud.Spanner.V1.Mutation.Types.Write.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Cloud.Spanner.V1.Mutation.Types.Write.Table
  commentId: P:Google.Cloud.Spanner.V1.Mutation.Types.Write.Table
  id: Table
  parent: Google.Cloud.Spanner.V1.Mutation.Types.Write
  langs:
  - csharp
  - vb
  name: Table
  nameWithType: Mutation.Types.Write.Table
  fullName: Google.Cloud.Spanner.V1.Mutation.Types.Write.Table
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Mutation.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: Table
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Mutation.cs
    startLine: 565
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nRequired. The table whose rows will be written.\n"
  example: []
  syntax:
    content: public string Table { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Table As String
  overload: Google.Cloud.Spanner.V1.Mutation.Types.Write.Table*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Cloud.Spanner.V1.Mutation.Types.Write.Columns
  commentId: P:Google.Cloud.Spanner.V1.Mutation.Types.Write.Columns
  id: Columns
  parent: Google.Cloud.Spanner.V1.Mutation.Types.Write
  langs:
  - csharp
  - vb
  name: Columns
  nameWithType: Mutation.Types.Write.Columns
  fullName: Google.Cloud.Spanner.V1.Mutation.Types.Write.Columns
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Mutation.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: Columns
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Mutation.cs
    startLine: 585
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nThe names of the columns in [table][google.spanner.v1.Mutation.Write.table] to be written.\n\nThe list of columns must contain enough columns to allow\nCloud Spanner to derive values for all primary key columns in the\nrow(s) to be modified.\n"
  example: []
  syntax:
    content: public RepeatedField<string> Columns { get; }
    parameters: []
    return:
      type: Google.Protobuf.Collections.RepeatedField{System.String}
    content.vb: Public ReadOnly Property Columns As RepeatedField(Of String)
  overload: Google.Cloud.Spanner.V1.Mutation.Types.Write.Columns*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Cloud.Spanner.V1.Mutation.Types.Write.Values
  commentId: P:Google.Cloud.Spanner.V1.Mutation.Types.Write.Values
  id: Values
  parent: Google.Cloud.Spanner.V1.Mutation.Types.Write
  langs:
  - csharp
  - vb
  name: Values
  nameWithType: Mutation.Types.Write.Values
  fullName: Google.Cloud.Spanner.V1.Mutation.Types.Write.Values
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Mutation.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: Values
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Mutation.cs
    startLine: 605
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nThe values to be written. `values` can contain more than one\nlist of values. If it does, then multiple rows are written, one\nfor each entry in `values`. Each list in `values` must have\nexactly as many entries as there are entries in [columns][google.spanner.v1.Mutation.Write.columns]\nabove. Sending multiple lists is equivalent to sending multiple\n`Mutation`s, each containing one `values` entry and repeating\n[table][google.spanner.v1.Mutation.Write.table] and [columns][google.spanner.v1.Mutation.Write.columns]. Individual values in each list are\nencoded as described [here][google.spanner.v1.TypeCode].\n"
  example: []
  syntax:
    content: public RepeatedField<ListValue> Values { get; }
    parameters: []
    return:
      type: Google.Protobuf.Collections.RepeatedField{Google.Protobuf.WellKnownTypes.ListValue}
    content.vb: Public ReadOnly Property Values As RepeatedField(Of ListValue)
  overload: Google.Cloud.Spanner.V1.Mutation.Types.Write.Values*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Google.Cloud.Spanner.V1
  commentId: N:Google.Cloud.Spanner.V1
  name: Google.Cloud.Spanner.V1
  nameWithType: Google.Cloud.Spanner.V1
  fullName: Google.Cloud.Spanner.V1
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Google.Protobuf.IMessage{Google.Cloud.Spanner.V1.Mutation.Types.Write}
  commentId: T:Google.Protobuf.IMessage{Google.Cloud.Spanner.V1.Mutation.Types.Write}
  parent: Google.Protobuf
  definition: Google.Protobuf.IMessage`1
  name: IMessage<Mutation.Types.Write>
  nameWithType: IMessage<Mutation.Types.Write>
  fullName: Google.Protobuf.IMessage<Google.Cloud.Spanner.V1.Mutation.Types.Write>
  nameWithType.vb: IMessage(Of Mutation.Types.Write)
  fullName.vb: Google.Protobuf.IMessage(Of Google.Cloud.Spanner.V1.Mutation.Types.Write)
  name.vb: IMessage(Of Mutation.Types.Write)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Spanner.V1.Mutation.Types.Write
    name: Mutation.Types.Write
    nameWithType: Mutation.Types.Write
    fullName: Google.Cloud.Spanner.V1.Mutation.Types.Write
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Spanner.V1.Mutation.Types.Write
    name: Mutation.Types.Write
    nameWithType: Mutation.Types.Write
    fullName: Google.Cloud.Spanner.V1.Mutation.Types.Write
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable{Google.Cloud.Spanner.V1.Mutation.Types.Write}
  commentId: T:System.IEquatable{Google.Cloud.Spanner.V1.Mutation.Types.Write}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<Mutation.Types.Write>
  nameWithType: IEquatable<Mutation.Types.Write>
  fullName: System.IEquatable<Google.Cloud.Spanner.V1.Mutation.Types.Write>
  nameWithType.vb: IEquatable(Of Mutation.Types.Write)
  fullName.vb: System.IEquatable(Of Google.Cloud.Spanner.V1.Mutation.Types.Write)
  name.vb: IEquatable(Of Mutation.Types.Write)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Spanner.V1.Mutation.Types.Write
    name: Mutation.Types.Write
    nameWithType: Mutation.Types.Write
    fullName: Google.Cloud.Spanner.V1.Mutation.Types.Write
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Spanner.V1.Mutation.Types.Write
    name: Mutation.Types.Write
    nameWithType: Mutation.Types.Write
    fullName: Google.Cloud.Spanner.V1.Mutation.Types.Write
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IDeepCloneable{Google.Cloud.Spanner.V1.Mutation.Types.Write}
  commentId: T:Google.Protobuf.IDeepCloneable{Google.Cloud.Spanner.V1.Mutation.Types.Write}
  parent: Google.Protobuf
  definition: Google.Protobuf.IDeepCloneable`1
  name: IDeepCloneable<Mutation.Types.Write>
  nameWithType: IDeepCloneable<Mutation.Types.Write>
  fullName: Google.Protobuf.IDeepCloneable<Google.Cloud.Spanner.V1.Mutation.Types.Write>
  nameWithType.vb: IDeepCloneable(Of Mutation.Types.Write)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of Google.Cloud.Spanner.V1.Mutation.Types.Write)
  name.vb: IDeepCloneable(Of Mutation.Types.Write)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Spanner.V1.Mutation.Types.Write
    name: Mutation.Types.Write
    nameWithType: Mutation.Types.Write
    fullName: Google.Cloud.Spanner.V1.Mutation.Types.Write
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Spanner.V1.Mutation.Types.Write
    name: Mutation.Types.Write
    nameWithType: Mutation.Types.Write
    fullName: Google.Cloud.Spanner.V1.Mutation.Types.Write
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IBufferMessage
  commentId: T:Google.Protobuf.IBufferMessage
  parent: Google.Protobuf
  isExternal: true
  name: IBufferMessage
  nameWithType: IBufferMessage
  fullName: Google.Protobuf.IBufferMessage
- uid: Google.Protobuf.IMessage
  commentId: T:Google.Protobuf.IMessage
  parent: Google.Protobuf
  isExternal: true
  name: IMessage
  nameWithType: IMessage
  fullName: Google.Protobuf.IMessage
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Protobuf.IMessage`1
  commentId: T:Google.Protobuf.IMessage`1
  isExternal: true
  name: IMessage<T>
  nameWithType: IMessage<T>
  fullName: Google.Protobuf.IMessage<T>
  nameWithType.vb: IMessage(Of T)
  fullName.vb: Google.Protobuf.IMessage(Of T)
  name.vb: IMessage(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf
  commentId: N:Google.Protobuf
  isExternal: true
  name: Google.Protobuf
  nameWithType: Google.Protobuf
  fullName: Google.Protobuf
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IDeepCloneable`1
  commentId: T:Google.Protobuf.IDeepCloneable`1
  isExternal: true
  name: IDeepCloneable<T>
  nameWithType: IDeepCloneable<T>
  fullName: Google.Protobuf.IDeepCloneable<T>
  nameWithType.vb: IDeepCloneable(Of T)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of T)
  name.vb: IDeepCloneable(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Cloud.Spanner.V1.Mutation.Types.Write.#ctor*
  commentId: Overload:Google.Cloud.Spanner.V1.Mutation.Types.Write.#ctor
  name: Write
  nameWithType: Mutation.Types.Write.Write
  fullName: Google.Cloud.Spanner.V1.Mutation.Types.Write.Write
- uid: Google.Cloud.Spanner.V1.Mutation.Types.Write
  commentId: T:Google.Cloud.Spanner.V1.Mutation.Types.Write
  parent: Google.Cloud.Spanner.V1
  name: Mutation.Types.Write
  nameWithType: Mutation.Types.Write
  fullName: Google.Cloud.Spanner.V1.Mutation.Types.Write
- uid: Google.Cloud.Spanner.V1.Mutation.Types.Write.Table*
  commentId: Overload:Google.Cloud.Spanner.V1.Mutation.Types.Write.Table
  name: Table
  nameWithType: Mutation.Types.Write.Table
  fullName: Google.Cloud.Spanner.V1.Mutation.Types.Write.Table
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Google.Cloud.Spanner.V1.Mutation.Types.Write.Columns*
  commentId: Overload:Google.Cloud.Spanner.V1.Mutation.Types.Write.Columns
  name: Columns
  nameWithType: Mutation.Types.Write.Columns
  fullName: Google.Cloud.Spanner.V1.Mutation.Types.Write.Columns
- uid: Google.Protobuf.Collections.RepeatedField{System.String}
  commentId: T:Google.Protobuf.Collections.RepeatedField{System.String}
  parent: Google.Protobuf.Collections
  definition: Google.Protobuf.Collections.RepeatedField`1
  name: RepeatedField<String>
  nameWithType: RepeatedField<String>
  fullName: Google.Protobuf.Collections.RepeatedField<System.String>
  nameWithType.vb: RepeatedField(Of String)
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of System.String)
  name.vb: RepeatedField(Of String)
  spec.csharp:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    nameWithType: RepeatedField
    fullName: Google.Protobuf.Collections.RepeatedField
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    nameWithType: RepeatedField
    fullName: Google.Protobuf.Collections.RepeatedField
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.Collections.RepeatedField`1
  commentId: T:Google.Protobuf.Collections.RepeatedField`1
  isExternal: true
  name: RepeatedField<T>
  nameWithType: RepeatedField<T>
  fullName: Google.Protobuf.Collections.RepeatedField<T>
  nameWithType.vb: RepeatedField(Of T)
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of T)
  name.vb: RepeatedField(Of T)
  spec.csharp:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    nameWithType: RepeatedField
    fullName: Google.Protobuf.Collections.RepeatedField
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    nameWithType: RepeatedField
    fullName: Google.Protobuf.Collections.RepeatedField
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.Collections
  commentId: N:Google.Protobuf.Collections
  isExternal: true
  name: Google.Protobuf.Collections
  nameWithType: Google.Protobuf.Collections
  fullName: Google.Protobuf.Collections
- uid: Google.Cloud.Spanner.V1.Mutation.Types.Write.Values*
  commentId: Overload:Google.Cloud.Spanner.V1.Mutation.Types.Write.Values
  name: Values
  nameWithType: Mutation.Types.Write.Values
  fullName: Google.Cloud.Spanner.V1.Mutation.Types.Write.Values
- uid: Google.Protobuf.Collections.RepeatedField{Google.Protobuf.WellKnownTypes.ListValue}
  commentId: T:Google.Protobuf.Collections.RepeatedField{Google.Protobuf.WellKnownTypes.ListValue}
  parent: Google.Protobuf.Collections
  definition: Google.Protobuf.Collections.RepeatedField`1
  name: RepeatedField<ListValue>
  nameWithType: RepeatedField<ListValue>
  fullName: Google.Protobuf.Collections.RepeatedField<Google.Protobuf.WellKnownTypes.ListValue>
  nameWithType.vb: RepeatedField(Of ListValue)
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of Google.Protobuf.WellKnownTypes.ListValue)
  name.vb: RepeatedField(Of ListValue)
  spec.csharp:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    nameWithType: RepeatedField
    fullName: Google.Protobuf.Collections.RepeatedField
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Protobuf.WellKnownTypes.ListValue
    name: ListValue
    nameWithType: ListValue
    fullName: Google.Protobuf.WellKnownTypes.ListValue
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    nameWithType: RepeatedField
    fullName: Google.Protobuf.Collections.RepeatedField
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Protobuf.WellKnownTypes.ListValue
    name: ListValue
    nameWithType: ListValue
    fullName: Google.Protobuf.WellKnownTypes.ListValue
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
