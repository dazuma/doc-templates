### YamlMime:ManagedReference
items:
- uid: "com.google.cloud.bigquery.WriteChannelConfiguration"
  id: "WriteChannelConfiguration"
  parent: "com.google.cloud.bigquery"
  children:
  - "com.google.cloud.bigquery.WriteChannelConfiguration.Builder"
  - "com.google.cloud.bigquery.WriteChannelConfiguration.WriteChannelConfiguration(com.google.cloud.bigquery.WriteChannelConfiguration.Builder)"
  - "com.google.cloud.bigquery.WriteChannelConfiguration.equals(java.lang.Object)"
  - "com.google.cloud.bigquery.WriteChannelConfiguration.getAutodetect()"
  - "com.google.cloud.bigquery.WriteChannelConfiguration.getClustering()"
  - "com.google.cloud.bigquery.WriteChannelConfiguration.getCreateDisposition()"
  - "com.google.cloud.bigquery.WriteChannelConfiguration.getCsvOptions()"
  - "com.google.cloud.bigquery.WriteChannelConfiguration.getDatastoreBackupOptions()"
  - "com.google.cloud.bigquery.WriteChannelConfiguration.getDestinationEncryptionConfiguration()"
  - "com.google.cloud.bigquery.WriteChannelConfiguration.getDestinationTable()"
  - "com.google.cloud.bigquery.WriteChannelConfiguration.getFormat()"
  - "com.google.cloud.bigquery.WriteChannelConfiguration.getLabels()"
  - "com.google.cloud.bigquery.WriteChannelConfiguration.getMaxBadRecords()"
  - "com.google.cloud.bigquery.WriteChannelConfiguration.getNullMarker()"
  - "com.google.cloud.bigquery.WriteChannelConfiguration.getSchema()"
  - "com.google.cloud.bigquery.WriteChannelConfiguration.getSchemaUpdateOptions()"
  - "com.google.cloud.bigquery.WriteChannelConfiguration.getTimePartitioning()"
  - "com.google.cloud.bigquery.WriteChannelConfiguration.getUseAvroLogicalTypes()"
  - "com.google.cloud.bigquery.WriteChannelConfiguration.getWriteDisposition()"
  - "com.google.cloud.bigquery.WriteChannelConfiguration.hashCode()"
  - "com.google.cloud.bigquery.WriteChannelConfiguration.ignoreUnknownValues()"
  - "com.google.cloud.bigquery.WriteChannelConfiguration.newBuilder(com.google.cloud.bigquery.TableId)"
  - "com.google.cloud.bigquery.WriteChannelConfiguration.newBuilder(com.google.cloud.bigquery.TableId,com.google.cloud.bigquery.FormatOptions)"
  - "com.google.cloud.bigquery.WriteChannelConfiguration.of(com.google.cloud.bigquery.TableId)"
  - "com.google.cloud.bigquery.WriteChannelConfiguration.of(com.google.cloud.bigquery.TableId,com.google.cloud.bigquery.FormatOptions)"
  - "com.google.cloud.bigquery.WriteChannelConfiguration.toBuilder()"
  - "com.google.cloud.bigquery.WriteChannelConfiguration.toString()"
  langs:
  - "java"
  name: "WriteChannelConfiguration"
  nameWithType: "WriteChannelConfiguration"
  fullName: "com.google.cloud.bigquery.WriteChannelConfiguration"
  type: "Class"
  package: "com.google.cloud.bigquery"
  summary: "Google BigQuery Configuration for a load operation. A load configuration can be used to load data into a table with a <xref uid=\"\" data-throw-if-not-resolved=\"false\">com.google.cloud.WriteChannel</xref> (<xref uid=\"com.google.cloud.bigquery.BigQuery.writer(com.google.cloud.bigquery.WriteChannelConfiguration)\" data-throw-if-not-resolved=\"false\">BigQuery#writer(WriteChannelConfiguration)</xref>)."
  syntax:
    content: "public final class WriteChannelConfiguration implements LoadConfiguration, Serializable"
  inheritance:
  - "java.lang.Object"
  implements:
  - "com.google.cloud.bigquery.LoadConfiguration"
  - "java.io.Serializable"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.google.cloud.bigquery.WriteChannelConfiguration.WriteChannelConfiguration(com.google.cloud.bigquery.WriteChannelConfiguration.Builder)"
  id: "WriteChannelConfiguration(com.google.cloud.bigquery.WriteChannelConfiguration.Builder)"
  parent: "com.google.cloud.bigquery.WriteChannelConfiguration"
  langs:
  - "java"
  name: "WriteChannelConfiguration(WriteChannelConfiguration.Builder builder)"
  nameWithType: "WriteChannelConfiguration.WriteChannelConfiguration(WriteChannelConfiguration.Builder builder)"
  fullName: "com.google.cloud.bigquery.WriteChannelConfiguration.WriteChannelConfiguration(WriteChannelConfiguration.Builder builder)"
  overload: "com.google.cloud.bigquery.WriteChannelConfiguration.WriteChannelConfiguration*"
  type: "Constructor"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "protected WriteChannelConfiguration(WriteChannelConfiguration.Builder builder)"
    parameters:
    - id: "builder"
      type: "com.google.cloud.bigquery.WriteChannelConfiguration.Builder"
- uid: "com.google.cloud.bigquery.WriteChannelConfiguration.equals(java.lang.Object)"
  id: "equals(java.lang.Object)"
  parent: "com.google.cloud.bigquery.WriteChannelConfiguration"
  langs:
  - "java"
  name: "equals(Object obj)"
  nameWithType: "WriteChannelConfiguration.equals(Object obj)"
  fullName: "com.google.cloud.bigquery.WriteChannelConfiguration.equals(Object obj)"
  overload: "com.google.cloud.bigquery.WriteChannelConfiguration.equals*"
  overridden: "java.lang.Object.equals(java.lang.Object)"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public boolean equals(Object obj)"
    parameters:
    - id: "obj"
      type: "java.lang.Object"
    return:
      type: "boolean"
- uid: "com.google.cloud.bigquery.WriteChannelConfiguration.getAutodetect()"
  id: "getAutodetect()"
  parent: "com.google.cloud.bigquery.WriteChannelConfiguration"
  langs:
  - "java"
  name: "getAutodetect()"
  nameWithType: "WriteChannelConfiguration.getAutodetect()"
  fullName: "com.google.cloud.bigquery.WriteChannelConfiguration.getAutodetect()"
  overload: "com.google.cloud.bigquery.WriteChannelConfiguration.getAutodetect*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "\\[Experimental\\] Returns whether automatic inference of the options and schema for CSV and JSON sources is set."
  syntax:
    content: "public Boolean getAutodetect()"
    return:
      type: "java.lang.Boolean"
- uid: "com.google.cloud.bigquery.WriteChannelConfiguration.getClustering()"
  id: "getClustering()"
  parent: "com.google.cloud.bigquery.WriteChannelConfiguration"
  langs:
  - "java"
  name: "getClustering()"
  nameWithType: "WriteChannelConfiguration.getClustering()"
  fullName: "com.google.cloud.bigquery.WriteChannelConfiguration.getClustering()"
  overload: "com.google.cloud.bigquery.WriteChannelConfiguration.getClustering*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns the clustering specification for the definition table."
  syntax:
    content: "public Clustering getClustering()"
    return:
      type: "com.google.cloud.bigquery.Clustering"
- uid: "com.google.cloud.bigquery.WriteChannelConfiguration.getCreateDisposition()"
  id: "getCreateDisposition()"
  parent: "com.google.cloud.bigquery.WriteChannelConfiguration"
  langs:
  - "java"
  name: "getCreateDisposition()"
  nameWithType: "WriteChannelConfiguration.getCreateDisposition()"
  fullName: "com.google.cloud.bigquery.WriteChannelConfiguration.getCreateDisposition()"
  overload: "com.google.cloud.bigquery.WriteChannelConfiguration.getCreateDisposition*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns whether the job is allowed to create new tables."
  syntax:
    content: "public JobInfo.CreateDisposition getCreateDisposition()"
    return:
      type: "com.google.cloud.bigquery.JobInfo.CreateDisposition"
- uid: "com.google.cloud.bigquery.WriteChannelConfiguration.getCsvOptions()"
  id: "getCsvOptions()"
  parent: "com.google.cloud.bigquery.WriteChannelConfiguration"
  langs:
  - "java"
  name: "getCsvOptions()"
  nameWithType: "WriteChannelConfiguration.getCsvOptions()"
  fullName: "com.google.cloud.bigquery.WriteChannelConfiguration.getCsvOptions()"
  overload: "com.google.cloud.bigquery.WriteChannelConfiguration.getCsvOptions*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns additional properties used to parse CSV data (used when <xref uid=\"com.google.cloud.bigquery.WriteChannelConfiguration.getFormat()\" data-throw-if-not-resolved=\"false\">#getFormat()</xref> is set to CSV). Returns `null` if not set."
  syntax:
    content: "public CsvOptions getCsvOptions()"
    return:
      type: "com.google.cloud.bigquery.CsvOptions"
- uid: "com.google.cloud.bigquery.WriteChannelConfiguration.getDatastoreBackupOptions()"
  id: "getDatastoreBackupOptions()"
  parent: "com.google.cloud.bigquery.WriteChannelConfiguration"
  langs:
  - "java"
  name: "getDatastoreBackupOptions()"
  nameWithType: "WriteChannelConfiguration.getDatastoreBackupOptions()"
  fullName: "com.google.cloud.bigquery.WriteChannelConfiguration.getDatastoreBackupOptions()"
  overload: "com.google.cloud.bigquery.WriteChannelConfiguration.getDatastoreBackupOptions*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns additional options used to load from a Cloud datastore backup."
  syntax:
    content: "public DatastoreBackupOptions getDatastoreBackupOptions()"
    return:
      type: "com.google.cloud.bigquery.DatastoreBackupOptions"
- uid: "com.google.cloud.bigquery.WriteChannelConfiguration.getDestinationEncryptionConfiguration()"
  id: "getDestinationEncryptionConfiguration()"
  parent: "com.google.cloud.bigquery.WriteChannelConfiguration"
  langs:
  - "java"
  name: "getDestinationEncryptionConfiguration()"
  nameWithType: "WriteChannelConfiguration.getDestinationEncryptionConfiguration()"
  fullName: "com.google.cloud.bigquery.WriteChannelConfiguration.getDestinationEncryptionConfiguration()"
  overload: "com.google.cloud.bigquery.WriteChannelConfiguration.getDestinationEncryptionConfiguration*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public EncryptionConfiguration getDestinationEncryptionConfiguration()"
    return:
      type: "com.google.cloud.bigquery.EncryptionConfiguration"
- uid: "com.google.cloud.bigquery.WriteChannelConfiguration.getDestinationTable()"
  id: "getDestinationTable()"
  parent: "com.google.cloud.bigquery.WriteChannelConfiguration"
  langs:
  - "java"
  name: "getDestinationTable()"
  nameWithType: "WriteChannelConfiguration.getDestinationTable()"
  fullName: "com.google.cloud.bigquery.WriteChannelConfiguration.getDestinationTable()"
  overload: "com.google.cloud.bigquery.WriteChannelConfiguration.getDestinationTable*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns the destination table to load the data into."
  syntax:
    content: "public TableId getDestinationTable()"
    return:
      type: "com.google.cloud.bigquery.TableId"
- uid: "com.google.cloud.bigquery.WriteChannelConfiguration.getFormat()"
  id: "getFormat()"
  parent: "com.google.cloud.bigquery.WriteChannelConfiguration"
  langs:
  - "java"
  name: "getFormat()"
  nameWithType: "WriteChannelConfiguration.getFormat()"
  fullName: "com.google.cloud.bigquery.WriteChannelConfiguration.getFormat()"
  overload: "com.google.cloud.bigquery.WriteChannelConfiguration.getFormat*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns the format of the data files."
  syntax:
    content: "public String getFormat()"
    return:
      type: "java.lang.String"
- uid: "com.google.cloud.bigquery.WriteChannelConfiguration.getLabels()"
  id: "getLabels()"
  parent: "com.google.cloud.bigquery.WriteChannelConfiguration"
  langs:
  - "java"
  name: "getLabels()"
  nameWithType: "WriteChannelConfiguration.getLabels()"
  fullName: "com.google.cloud.bigquery.WriteChannelConfiguration.getLabels()"
  overload: "com.google.cloud.bigquery.WriteChannelConfiguration.getLabels*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public Map<String,String> getLabels()"
    return:
      type: "java.util.Map<java.lang.String,java.lang.String>"
- uid: "com.google.cloud.bigquery.WriteChannelConfiguration.getMaxBadRecords()"
  id: "getMaxBadRecords()"
  parent: "com.google.cloud.bigquery.WriteChannelConfiguration"
  langs:
  - "java"
  name: "getMaxBadRecords()"
  nameWithType: "WriteChannelConfiguration.getMaxBadRecords()"
  fullName: "com.google.cloud.bigquery.WriteChannelConfiguration.getMaxBadRecords()"
  overload: "com.google.cloud.bigquery.WriteChannelConfiguration.getMaxBadRecords*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns the maximum number of bad records that BigQuery can ignore when running the job. If the number of bad records exceeds this value, an invalid error is returned in the job result. By default no bad record is ignored."
  syntax:
    content: "public Integer getMaxBadRecords()"
    return:
      type: "java.lang.Integer"
- uid: "com.google.cloud.bigquery.WriteChannelConfiguration.getNullMarker()"
  id: "getNullMarker()"
  parent: "com.google.cloud.bigquery.WriteChannelConfiguration"
  langs:
  - "java"
  name: "getNullMarker()"
  nameWithType: "WriteChannelConfiguration.getNullMarker()"
  fullName: "com.google.cloud.bigquery.WriteChannelConfiguration.getNullMarker()"
  overload: "com.google.cloud.bigquery.WriteChannelConfiguration.getNullMarker*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns the string that represents a null value in a CSV file."
  syntax:
    content: "public String getNullMarker()"
    return:
      type: "java.lang.String"
- uid: "com.google.cloud.bigquery.WriteChannelConfiguration.getSchema()"
  id: "getSchema()"
  parent: "com.google.cloud.bigquery.WriteChannelConfiguration"
  langs:
  - "java"
  name: "getSchema()"
  nameWithType: "WriteChannelConfiguration.getSchema()"
  fullName: "com.google.cloud.bigquery.WriteChannelConfiguration.getSchema()"
  overload: "com.google.cloud.bigquery.WriteChannelConfiguration.getSchema*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns the schema for the destination table, if set. Returns `null` otherwise."
  syntax:
    content: "public Schema getSchema()"
    return:
      type: "com.google.cloud.bigquery.Schema"
- uid: "com.google.cloud.bigquery.WriteChannelConfiguration.getSchemaUpdateOptions()"
  id: "getSchemaUpdateOptions()"
  parent: "com.google.cloud.bigquery.WriteChannelConfiguration"
  langs:
  - "java"
  name: "getSchemaUpdateOptions()"
  nameWithType: "WriteChannelConfiguration.getSchemaUpdateOptions()"
  fullName: "com.google.cloud.bigquery.WriteChannelConfiguration.getSchemaUpdateOptions()"
  overload: "com.google.cloud.bigquery.WriteChannelConfiguration.getSchemaUpdateOptions*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "\\[Experimental\\] Returns options allowing the schema of the destination table to be updated as a side effect of the load job. Schema update options are supported in two cases: when writeDisposition is WRITE\\_APPEND; when writeDisposition is WRITE\\_TRUNCATE and the destination table is a partition of a table, specified by partition decorators. For normal tables, WRITE\\_TRUNCATE will always overwrite the schema."
  syntax:
    content: "public List<JobInfo.SchemaUpdateOption> getSchemaUpdateOptions()"
    return:
      type: "java.util.List<com.google.cloud.bigquery.JobInfo.SchemaUpdateOption>"
- uid: "com.google.cloud.bigquery.WriteChannelConfiguration.getTimePartitioning()"
  id: "getTimePartitioning()"
  parent: "com.google.cloud.bigquery.WriteChannelConfiguration"
  langs:
  - "java"
  name: "getTimePartitioning()"
  nameWithType: "WriteChannelConfiguration.getTimePartitioning()"
  fullName: "com.google.cloud.bigquery.WriteChannelConfiguration.getTimePartitioning()"
  overload: "com.google.cloud.bigquery.WriteChannelConfiguration.getTimePartitioning*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns the time partitioning specification defined for the destination table."
  syntax:
    content: "public TimePartitioning getTimePartitioning()"
    return:
      type: "com.google.cloud.bigquery.TimePartitioning"
- uid: "com.google.cloud.bigquery.WriteChannelConfiguration.getUseAvroLogicalTypes()"
  id: "getUseAvroLogicalTypes()"
  parent: "com.google.cloud.bigquery.WriteChannelConfiguration"
  langs:
  - "java"
  name: "getUseAvroLogicalTypes()"
  nameWithType: "WriteChannelConfiguration.getUseAvroLogicalTypes()"
  fullName: "com.google.cloud.bigquery.WriteChannelConfiguration.getUseAvroLogicalTypes()"
  overload: "com.google.cloud.bigquery.WriteChannelConfiguration.getUseAvroLogicalTypes*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns True/False. Indicates whether the logical type is interpreted."
  syntax:
    content: "public Boolean getUseAvroLogicalTypes()"
    return:
      type: "java.lang.Boolean"
- uid: "com.google.cloud.bigquery.WriteChannelConfiguration.getWriteDisposition()"
  id: "getWriteDisposition()"
  parent: "com.google.cloud.bigquery.WriteChannelConfiguration"
  langs:
  - "java"
  name: "getWriteDisposition()"
  nameWithType: "WriteChannelConfiguration.getWriteDisposition()"
  fullName: "com.google.cloud.bigquery.WriteChannelConfiguration.getWriteDisposition()"
  overload: "com.google.cloud.bigquery.WriteChannelConfiguration.getWriteDisposition*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns the action that should occur if the destination table already exists."
  syntax:
    content: "public JobInfo.WriteDisposition getWriteDisposition()"
    return:
      type: "com.google.cloud.bigquery.JobInfo.WriteDisposition"
- uid: "com.google.cloud.bigquery.WriteChannelConfiguration.hashCode()"
  id: "hashCode()"
  parent: "com.google.cloud.bigquery.WriteChannelConfiguration"
  langs:
  - "java"
  name: "hashCode()"
  nameWithType: "WriteChannelConfiguration.hashCode()"
  fullName: "com.google.cloud.bigquery.WriteChannelConfiguration.hashCode()"
  overload: "com.google.cloud.bigquery.WriteChannelConfiguration.hashCode*"
  overridden: "java.lang.Object.hashCode()"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public int hashCode()"
    return:
      type: "int"
- uid: "com.google.cloud.bigquery.WriteChannelConfiguration.ignoreUnknownValues()"
  id: "ignoreUnknownValues()"
  parent: "com.google.cloud.bigquery.WriteChannelConfiguration"
  langs:
  - "java"
  name: "ignoreUnknownValues()"
  nameWithType: "WriteChannelConfiguration.ignoreUnknownValues()"
  fullName: "com.google.cloud.bigquery.WriteChannelConfiguration.ignoreUnknownValues()"
  overload: "com.google.cloud.bigquery.WriteChannelConfiguration.ignoreUnknownValues*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns whether BigQuery should allow extra values that are not represented in the table schema. If `true`, the extra values are ignored. If `true`, records with extra columns are treated as bad records, and if there are too many bad records, an invalid error is returned in the job result. By default unknown values are not allowed."
  syntax:
    content: "public Boolean ignoreUnknownValues()"
    return:
      type: "java.lang.Boolean"
- uid: "com.google.cloud.bigquery.WriteChannelConfiguration.newBuilder(com.google.cloud.bigquery.TableId)"
  id: "newBuilder(com.google.cloud.bigquery.TableId)"
  parent: "com.google.cloud.bigquery.WriteChannelConfiguration"
  langs:
  - "java"
  name: "newBuilder(TableId destinationTable)"
  nameWithType: "WriteChannelConfiguration.newBuilder(TableId destinationTable)"
  fullName: "com.google.cloud.bigquery.WriteChannelConfiguration.newBuilder(TableId destinationTable)"
  overload: "com.google.cloud.bigquery.WriteChannelConfiguration.newBuilder*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Creates a builder for a BigQuery Load Configuration given the destination table."
  syntax:
    content: "public static WriteChannelConfiguration.Builder newBuilder(TableId destinationTable)"
    parameters:
    - id: "destinationTable"
      type: "com.google.cloud.bigquery.TableId"
    return:
      type: "com.google.cloud.bigquery.WriteChannelConfiguration.Builder"
- uid: "com.google.cloud.bigquery.WriteChannelConfiguration.newBuilder(com.google.cloud.bigquery.TableId,com.google.cloud.bigquery.FormatOptions)"
  id: "newBuilder(com.google.cloud.bigquery.TableId,com.google.cloud.bigquery.FormatOptions)"
  parent: "com.google.cloud.bigquery.WriteChannelConfiguration"
  langs:
  - "java"
  name: "newBuilder(TableId destinationTable, FormatOptions format)"
  nameWithType: "WriteChannelConfiguration.newBuilder(TableId destinationTable, FormatOptions format)"
  fullName: "com.google.cloud.bigquery.WriteChannelConfiguration.newBuilder(TableId destinationTable, FormatOptions format)"
  overload: "com.google.cloud.bigquery.WriteChannelConfiguration.newBuilder*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Creates a builder for a BigQuery Load Configuration given the destination table and format."
  syntax:
    content: "public static WriteChannelConfiguration.Builder newBuilder(TableId destinationTable, FormatOptions format)"
    parameters:
    - id: "destinationTable"
      type: "com.google.cloud.bigquery.TableId"
    - id: "format"
      type: "com.google.cloud.bigquery.FormatOptions"
    return:
      type: "com.google.cloud.bigquery.WriteChannelConfiguration.Builder"
- uid: "com.google.cloud.bigquery.WriteChannelConfiguration.of(com.google.cloud.bigquery.TableId)"
  id: "of(com.google.cloud.bigquery.TableId)"
  parent: "com.google.cloud.bigquery.WriteChannelConfiguration"
  langs:
  - "java"
  name: "of(TableId destinationTable)"
  nameWithType: "WriteChannelConfiguration.of(TableId destinationTable)"
  fullName: "com.google.cloud.bigquery.WriteChannelConfiguration.of(TableId destinationTable)"
  overload: "com.google.cloud.bigquery.WriteChannelConfiguration.of*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns a BigQuery Load Configuration for the given destination table."
  syntax:
    content: "public static WriteChannelConfiguration of(TableId destinationTable)"
    parameters:
    - id: "destinationTable"
      type: "com.google.cloud.bigquery.TableId"
    return:
      type: "com.google.cloud.bigquery.WriteChannelConfiguration"
- uid: "com.google.cloud.bigquery.WriteChannelConfiguration.of(com.google.cloud.bigquery.TableId,com.google.cloud.bigquery.FormatOptions)"
  id: "of(com.google.cloud.bigquery.TableId,com.google.cloud.bigquery.FormatOptions)"
  parent: "com.google.cloud.bigquery.WriteChannelConfiguration"
  langs:
  - "java"
  name: "of(TableId destinationTable, FormatOptions format)"
  nameWithType: "WriteChannelConfiguration.of(TableId destinationTable, FormatOptions format)"
  fullName: "com.google.cloud.bigquery.WriteChannelConfiguration.of(TableId destinationTable, FormatOptions format)"
  overload: "com.google.cloud.bigquery.WriteChannelConfiguration.of*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns a BigQuery Load Configuration for the given destination table and format."
  syntax:
    content: "public static WriteChannelConfiguration of(TableId destinationTable, FormatOptions format)"
    parameters:
    - id: "destinationTable"
      type: "com.google.cloud.bigquery.TableId"
    - id: "format"
      type: "com.google.cloud.bigquery.FormatOptions"
    return:
      type: "com.google.cloud.bigquery.WriteChannelConfiguration"
- uid: "com.google.cloud.bigquery.WriteChannelConfiguration.toBuilder()"
  id: "toBuilder()"
  parent: "com.google.cloud.bigquery.WriteChannelConfiguration"
  langs:
  - "java"
  name: "toBuilder()"
  nameWithType: "WriteChannelConfiguration.toBuilder()"
  fullName: "com.google.cloud.bigquery.WriteChannelConfiguration.toBuilder()"
  overload: "com.google.cloud.bigquery.WriteChannelConfiguration.toBuilder*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns a builder for the load configuration object."
  syntax:
    content: "public WriteChannelConfiguration.Builder toBuilder()"
    return:
      type: "com.google.cloud.bigquery.WriteChannelConfiguration.Builder"
- uid: "com.google.cloud.bigquery.WriteChannelConfiguration.toString()"
  id: "toString()"
  parent: "com.google.cloud.bigquery.WriteChannelConfiguration"
  langs:
  - "java"
  name: "toString()"
  nameWithType: "WriteChannelConfiguration.toString()"
  fullName: "com.google.cloud.bigquery.WriteChannelConfiguration.toString()"
  overload: "com.google.cloud.bigquery.WriteChannelConfiguration.toString*"
  overridden: "java.lang.Object.toString()"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public String toString()"
    return:
      type: "java.lang.String"
references:
- uid: "com.google.cloud.bigquery.WriteChannelConfiguration.Builder"
  name: "WriteChannelConfiguration.Builder"
  nameWithType: "WriteChannelConfiguration.Builder"
  fullName: "com.google.cloud.bigquery.WriteChannelConfiguration.Builder"
- uid: "com.google.cloud.bigquery.WriteChannelConfiguration.WriteChannelConfiguration*"
  name: "WriteChannelConfiguration"
  nameWithType: "WriteChannelConfiguration.WriteChannelConfiguration"
  fullName: "com.google.cloud.bigquery.WriteChannelConfiguration.WriteChannelConfiguration"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.TableId"
  name: "TableId"
  nameWithType: "TableId"
  fullName: "com.google.cloud.bigquery.TableId"
- uid: "com.google.cloud.bigquery.WriteChannelConfiguration.getDestinationTable*"
  name: "getDestinationTable"
  nameWithType: "WriteChannelConfiguration.getDestinationTable"
  fullName: "com.google.cloud.bigquery.WriteChannelConfiguration.getDestinationTable"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.EncryptionConfiguration"
  name: "EncryptionConfiguration"
  nameWithType: "EncryptionConfiguration"
  fullName: "com.google.cloud.bigquery.EncryptionConfiguration"
- uid: "com.google.cloud.bigquery.WriteChannelConfiguration.getDestinationEncryptionConfiguration*"
  name: "getDestinationEncryptionConfiguration"
  nameWithType: "WriteChannelConfiguration.getDestinationEncryptionConfiguration"
  fullName: "com.google.cloud.bigquery.WriteChannelConfiguration.getDestinationEncryptionConfiguration"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.JobInfo.CreateDisposition"
  name: "JobInfo.CreateDisposition"
  nameWithType: "JobInfo.CreateDisposition"
  fullName: "com.google.cloud.bigquery.JobInfo.CreateDisposition"
- uid: "com.google.cloud.bigquery.WriteChannelConfiguration.getCreateDisposition*"
  name: "getCreateDisposition"
  nameWithType: "WriteChannelConfiguration.getCreateDisposition"
  fullName: "com.google.cloud.bigquery.WriteChannelConfiguration.getCreateDisposition"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.JobInfo.WriteDisposition"
  name: "JobInfo.WriteDisposition"
  nameWithType: "JobInfo.WriteDisposition"
  fullName: "com.google.cloud.bigquery.JobInfo.WriteDisposition"
- uid: "com.google.cloud.bigquery.WriteChannelConfiguration.getWriteDisposition*"
  name: "getWriteDisposition"
  nameWithType: "WriteChannelConfiguration.getWriteDisposition"
  fullName: "com.google.cloud.bigquery.WriteChannelConfiguration.getWriteDisposition"
  package: "com.google.cloud.bigquery"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.google.cloud.bigquery.WriteChannelConfiguration.getNullMarker*"
  name: "getNullMarker"
  nameWithType: "WriteChannelConfiguration.getNullMarker"
  fullName: "com.google.cloud.bigquery.WriteChannelConfiguration.getNullMarker"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.CsvOptions"
  name: "CsvOptions"
  nameWithType: "CsvOptions"
  fullName: "com.google.cloud.bigquery.CsvOptions"
- uid: "com.google.cloud.bigquery.WriteChannelConfiguration.getCsvOptions*"
  name: "getCsvOptions"
  nameWithType: "WriteChannelConfiguration.getCsvOptions"
  fullName: "com.google.cloud.bigquery.WriteChannelConfiguration.getCsvOptions"
  package: "com.google.cloud.bigquery"
- uid: "java.lang.Integer"
  spec.java:
  - uid: "java.lang.Integer"
    name: "Integer"
    fullName: "java.lang.Integer"
- uid: "com.google.cloud.bigquery.WriteChannelConfiguration.getMaxBadRecords*"
  name: "getMaxBadRecords"
  nameWithType: "WriteChannelConfiguration.getMaxBadRecords"
  fullName: "com.google.cloud.bigquery.WriteChannelConfiguration.getMaxBadRecords"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.Schema"
  name: "Schema"
  nameWithType: "Schema"
  fullName: "com.google.cloud.bigquery.Schema"
- uid: "com.google.cloud.bigquery.WriteChannelConfiguration.getSchema*"
  name: "getSchema"
  nameWithType: "WriteChannelConfiguration.getSchema"
  fullName: "com.google.cloud.bigquery.WriteChannelConfiguration.getSchema"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.WriteChannelConfiguration.getFormat*"
  name: "getFormat"
  nameWithType: "WriteChannelConfiguration.getFormat"
  fullName: "com.google.cloud.bigquery.WriteChannelConfiguration.getFormat"
  package: "com.google.cloud.bigquery"
- uid: "java.lang.Boolean"
  spec.java:
  - uid: "java.lang.Boolean"
    name: "Boolean"
    fullName: "java.lang.Boolean"
- uid: "com.google.cloud.bigquery.WriteChannelConfiguration.ignoreUnknownValues*"
  name: "ignoreUnknownValues"
  nameWithType: "WriteChannelConfiguration.ignoreUnknownValues"
  fullName: "com.google.cloud.bigquery.WriteChannelConfiguration.ignoreUnknownValues"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.DatastoreBackupOptions"
  name: "DatastoreBackupOptions"
  nameWithType: "DatastoreBackupOptions"
  fullName: "com.google.cloud.bigquery.DatastoreBackupOptions"
- uid: "com.google.cloud.bigquery.WriteChannelConfiguration.getDatastoreBackupOptions*"
  name: "getDatastoreBackupOptions"
  nameWithType: "WriteChannelConfiguration.getDatastoreBackupOptions"
  fullName: "com.google.cloud.bigquery.WriteChannelConfiguration.getDatastoreBackupOptions"
  package: "com.google.cloud.bigquery"
- uid: "java.util.List<com.google.cloud.bigquery.JobInfo.SchemaUpdateOption>"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "com.google.cloud.bigquery.JobInfo.SchemaUpdateOption"
    name: "SchemaUpdateOption"
    fullName: "com.google.cloud.bigquery.JobInfo.SchemaUpdateOption"
  - name: ">"
    fullName: ">"
- uid: "com.google.cloud.bigquery.WriteChannelConfiguration.getSchemaUpdateOptions*"
  name: "getSchemaUpdateOptions"
  nameWithType: "WriteChannelConfiguration.getSchemaUpdateOptions"
  fullName: "com.google.cloud.bigquery.WriteChannelConfiguration.getSchemaUpdateOptions"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.WriteChannelConfiguration.getAutodetect*"
  name: "getAutodetect"
  nameWithType: "WriteChannelConfiguration.getAutodetect"
  fullName: "com.google.cloud.bigquery.WriteChannelConfiguration.getAutodetect"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.TimePartitioning"
  name: "TimePartitioning"
  nameWithType: "TimePartitioning"
  fullName: "com.google.cloud.bigquery.TimePartitioning"
- uid: "com.google.cloud.bigquery.WriteChannelConfiguration.getTimePartitioning*"
  name: "getTimePartitioning"
  nameWithType: "WriteChannelConfiguration.getTimePartitioning"
  fullName: "com.google.cloud.bigquery.WriteChannelConfiguration.getTimePartitioning"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.Clustering"
  name: "Clustering"
  nameWithType: "Clustering"
  fullName: "com.google.cloud.bigquery.Clustering"
- uid: "com.google.cloud.bigquery.WriteChannelConfiguration.getClustering*"
  name: "getClustering"
  nameWithType: "WriteChannelConfiguration.getClustering"
  fullName: "com.google.cloud.bigquery.WriteChannelConfiguration.getClustering"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.WriteChannelConfiguration.getUseAvroLogicalTypes*"
  name: "getUseAvroLogicalTypes"
  nameWithType: "WriteChannelConfiguration.getUseAvroLogicalTypes"
  fullName: "com.google.cloud.bigquery.WriteChannelConfiguration.getUseAvroLogicalTypes"
  package: "com.google.cloud.bigquery"
- uid: "java.util.Map<java.lang.String,java.lang.String>"
  spec.java:
  - uid: "java.util.Map"
    name: "Map"
    fullName: "java.util.Map"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ","
    fullName: ","
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ">"
    fullName: ">"
- uid: "com.google.cloud.bigquery.WriteChannelConfiguration.getLabels*"
  name: "getLabels"
  nameWithType: "WriteChannelConfiguration.getLabels"
  fullName: "com.google.cloud.bigquery.WriteChannelConfiguration.getLabels"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.WriteChannelConfiguration.toBuilder*"
  name: "toBuilder"
  nameWithType: "WriteChannelConfiguration.toBuilder"
  fullName: "com.google.cloud.bigquery.WriteChannelConfiguration.toBuilder"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.WriteChannelConfiguration.toString*"
  name: "toString"
  nameWithType: "WriteChannelConfiguration.toString"
  fullName: "com.google.cloud.bigquery.WriteChannelConfiguration.toString"
  package: "com.google.cloud.bigquery"
- uid: "java.lang.Object"
  spec.java:
  - uid: "java.lang.Object"
    name: "Object"
    fullName: "java.lang.Object"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "com.google.cloud.bigquery.WriteChannelConfiguration.equals*"
  name: "equals"
  nameWithType: "WriteChannelConfiguration.equals"
  fullName: "com.google.cloud.bigquery.WriteChannelConfiguration.equals"
  package: "com.google.cloud.bigquery"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "com.google.cloud.bigquery.WriteChannelConfiguration.hashCode*"
  name: "hashCode"
  nameWithType: "WriteChannelConfiguration.hashCode"
  fullName: "com.google.cloud.bigquery.WriteChannelConfiguration.hashCode"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.WriteChannelConfiguration.newBuilder*"
  name: "newBuilder"
  nameWithType: "WriteChannelConfiguration.newBuilder"
  fullName: "com.google.cloud.bigquery.WriteChannelConfiguration.newBuilder"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.FormatOptions"
  name: "FormatOptions"
  nameWithType: "FormatOptions"
  fullName: "com.google.cloud.bigquery.FormatOptions"
- uid: "com.google.cloud.bigquery.WriteChannelConfiguration.of*"
  name: "of"
  nameWithType: "WriteChannelConfiguration.of"
  fullName: "com.google.cloud.bigquery.WriteChannelConfiguration.of"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.LoadConfiguration"
  name: "LoadConfiguration"
  nameWithType: "LoadConfiguration"
  fullName: "com.google.cloud.bigquery.LoadConfiguration"
- uid: "java.io.Serializable"
  name: "Serializable"
  nameWithType: "Serializable"
  fullName: "java.io.Serializable"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.util.List"
  name: "List"
  nameWithType: "List"
  fullName: "java.util.List"
- uid: "com.google.cloud.bigquery.JobInfo.SchemaUpdateOption"
  name: "JobInfo.SchemaUpdateOption"
  nameWithType: "JobInfo.SchemaUpdateOption"
  fullName: "com.google.cloud.bigquery.JobInfo.SchemaUpdateOption"
- uid: "java.util.Map"
  name: "Map"
  nameWithType: "Map"
  fullName: "java.util.Map"
- uid: "java.lang.String,java.lang.String"
  name: "String,String"
  nameWithType: "String,String"
  fullName: "java.lang.String,java.lang.String"
