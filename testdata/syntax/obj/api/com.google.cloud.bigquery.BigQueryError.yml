### YamlMime:ManagedReference
items:
- uid: "com.google.cloud.bigquery.BigQueryError"
  id: "BigQueryError"
  parent: "com.google.cloud.bigquery"
  children:
  - "com.google.cloud.bigquery.BigQueryError.BigQueryError(java.lang.String,java.lang.String,java.lang.String)"
  - "com.google.cloud.bigquery.BigQueryError.BigQueryError(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
  - "com.google.cloud.bigquery.BigQueryError.equals(java.lang.Object)"
  - "com.google.cloud.bigquery.BigQueryError.getDebugInfo()"
  - "com.google.cloud.bigquery.BigQueryError.getLocation()"
  - "com.google.cloud.bigquery.BigQueryError.getMessage()"
  - "com.google.cloud.bigquery.BigQueryError.getReason()"
  - "com.google.cloud.bigquery.BigQueryError.hashCode()"
  - "com.google.cloud.bigquery.BigQueryError.toString()"
  langs:
  - "java"
  name: "BigQueryError"
  nameWithType: "BigQueryError"
  fullName: "com.google.cloud.bigquery.BigQueryError"
  type: "Class"
  package: "com.google.cloud.bigquery"
  summary: "Google Cloud BigQuery Error. Objects of this class represent errors encountered by the BigQuery service while executing a request. A BigQuery Job that terminated with an error has a non-null <xref uid=\"com.google.cloud.bigquery.JobStatus.getError()\" data-throw-if-not-resolved=\"false\">JobStatus#getError()</xref>. A job can also encounter errors during its execution that do not cause the whole job to fail (see <xref uid=\"com.google.cloud.bigquery.JobStatus.getExecutionErrors()\" data-throw-if-not-resolved=\"false\">JobStatus#getExecutionErrors()</xref>). Similarly, queries and insert all requests can cause BigQuery errors that do not mean the whole operation failed (see <xref uid=\"com.google.cloud.bigquery.JobStatus.getExecutionErrors()\" data-throw-if-not-resolved=\"false\">JobStatus#getExecutionErrors()</xref> and <xref uid=\"com.google.cloud.bigquery.InsertAllResponse.getInsertErrors()\" data-throw-if-not-resolved=\"false\">InsertAllResponse#getInsertErrors()</xref>). When a <xref uid=\"com.google.cloud.bigquery.BigQueryException\" data-throw-if-not-resolved=\"false\">BigQueryException</xref> is thrown the BigQuery Error that caused it, if any, can be accessed with <xref uid=\"com.google.cloud.bigquery.BigQueryException.getError()\" data-throw-if-not-resolved=\"false\">BigQueryException#getError()</xref>."
  syntax:
    content: "public final class BigQueryError implements Serializable"
  inheritance:
  - "java.lang.Object"
  implements:
  - "java.io.Serializable"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.google.cloud.bigquery.BigQueryError.BigQueryError(java.lang.String,java.lang.String,java.lang.String)"
  id: "BigQueryError(java.lang.String,java.lang.String,java.lang.String)"
  parent: "com.google.cloud.bigquery.BigQueryError"
  langs:
  - "java"
  name: "BigQueryError(String reason, String location, String message)"
  nameWithType: "BigQueryError.BigQueryError(String reason, String location, String message)"
  fullName: "com.google.cloud.bigquery.BigQueryError.BigQueryError(String reason, String location, String message)"
  overload: "com.google.cloud.bigquery.BigQueryError.BigQueryError*"
  type: "Constructor"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public BigQueryError(String reason, String location, String message)"
    parameters:
    - id: "reason"
      type: "java.lang.String"
    - id: "location"
      type: "java.lang.String"
    - id: "message"
      type: "java.lang.String"
- uid: "com.google.cloud.bigquery.BigQueryError.BigQueryError(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
  id: "BigQueryError(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
  parent: "com.google.cloud.bigquery.BigQueryError"
  langs:
  - "java"
  name: "BigQueryError(String reason, String location, String message, String debugInfo)"
  nameWithType: "BigQueryError.BigQueryError(String reason, String location, String message, String debugInfo)"
  fullName: "com.google.cloud.bigquery.BigQueryError.BigQueryError(String reason, String location, String message, String debugInfo)"
  overload: "com.google.cloud.bigquery.BigQueryError.BigQueryError*"
  type: "Constructor"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public BigQueryError(String reason, String location, String message, String debugInfo)"
    parameters:
    - id: "reason"
      type: "java.lang.String"
    - id: "location"
      type: "java.lang.String"
    - id: "message"
      type: "java.lang.String"
    - id: "debugInfo"
      type: "java.lang.String"
- uid: "com.google.cloud.bigquery.BigQueryError.equals(java.lang.Object)"
  id: "equals(java.lang.Object)"
  parent: "com.google.cloud.bigquery.BigQueryError"
  langs:
  - "java"
  name: "equals(Object obj)"
  nameWithType: "BigQueryError.equals(Object obj)"
  fullName: "com.google.cloud.bigquery.BigQueryError.equals(Object obj)"
  overload: "com.google.cloud.bigquery.BigQueryError.equals*"
  overridden: "java.lang.Object.equals(java.lang.Object)"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public boolean equals(Object obj)"
    parameters:
    - id: "obj"
      type: "java.lang.Object"
    return:
      type: "boolean"
- uid: "com.google.cloud.bigquery.BigQueryError.getDebugInfo()"
  id: "getDebugInfo()"
  parent: "com.google.cloud.bigquery.BigQueryError"
  langs:
  - "java"
  name: "getDebugInfo()"
  nameWithType: "BigQueryError.getDebugInfo()"
  fullName: "com.google.cloud.bigquery.BigQueryError.getDebugInfo()"
  overload: "com.google.cloud.bigquery.BigQueryError.getDebugInfo*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public String getDebugInfo()"
    return:
      type: "java.lang.String"
- uid: "com.google.cloud.bigquery.BigQueryError.getLocation()"
  id: "getLocation()"
  parent: "com.google.cloud.bigquery.BigQueryError"
  langs:
  - "java"
  name: "getLocation()"
  nameWithType: "BigQueryError.getLocation()"
  fullName: "com.google.cloud.bigquery.BigQueryError.getLocation()"
  overload: "com.google.cloud.bigquery.BigQueryError.getLocation*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns where the error occurred, if present."
  syntax:
    content: "public String getLocation()"
    return:
      type: "java.lang.String"
- uid: "com.google.cloud.bigquery.BigQueryError.getMessage()"
  id: "getMessage()"
  parent: "com.google.cloud.bigquery.BigQueryError"
  langs:
  - "java"
  name: "getMessage()"
  nameWithType: "BigQueryError.getMessage()"
  fullName: "com.google.cloud.bigquery.BigQueryError.getMessage()"
  overload: "com.google.cloud.bigquery.BigQueryError.getMessage*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns a human-readable description of the error."
  syntax:
    content: "public String getMessage()"
    return:
      type: "java.lang.String"
- uid: "com.google.cloud.bigquery.BigQueryError.getReason()"
  id: "getReason()"
  parent: "com.google.cloud.bigquery.BigQueryError"
  langs:
  - "java"
  name: "getReason()"
  nameWithType: "BigQueryError.getReason()"
  fullName: "com.google.cloud.bigquery.BigQueryError.getReason()"
  overload: "com.google.cloud.bigquery.BigQueryError.getReason*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns short error code that summarizes the error."
  syntax:
    content: "public String getReason()"
    return:
      type: "java.lang.String"
- uid: "com.google.cloud.bigquery.BigQueryError.hashCode()"
  id: "hashCode()"
  parent: "com.google.cloud.bigquery.BigQueryError"
  langs:
  - "java"
  name: "hashCode()"
  nameWithType: "BigQueryError.hashCode()"
  fullName: "com.google.cloud.bigquery.BigQueryError.hashCode()"
  overload: "com.google.cloud.bigquery.BigQueryError.hashCode*"
  overridden: "java.lang.Object.hashCode()"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public int hashCode()"
    return:
      type: "int"
- uid: "com.google.cloud.bigquery.BigQueryError.toString()"
  id: "toString()"
  parent: "com.google.cloud.bigquery.BigQueryError"
  langs:
  - "java"
  name: "toString()"
  nameWithType: "BigQueryError.toString()"
  fullName: "com.google.cloud.bigquery.BigQueryError.toString()"
  overload: "com.google.cloud.bigquery.BigQueryError.toString*"
  overridden: "java.lang.Object.toString()"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public String toString()"
    return:
      type: "java.lang.String"
references:
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.google.cloud.bigquery.BigQueryError.BigQueryError*"
  name: "BigQueryError"
  nameWithType: "BigQueryError.BigQueryError"
  fullName: "com.google.cloud.bigquery.BigQueryError.BigQueryError"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.BigQueryError.getReason*"
  name: "getReason"
  nameWithType: "BigQueryError.getReason"
  fullName: "com.google.cloud.bigquery.BigQueryError.getReason"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.BigQueryError.getLocation*"
  name: "getLocation"
  nameWithType: "BigQueryError.getLocation"
  fullName: "com.google.cloud.bigquery.BigQueryError.getLocation"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.BigQueryError.getDebugInfo*"
  name: "getDebugInfo"
  nameWithType: "BigQueryError.getDebugInfo"
  fullName: "com.google.cloud.bigquery.BigQueryError.getDebugInfo"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.BigQueryError.getMessage*"
  name: "getMessage"
  nameWithType: "BigQueryError.getMessage"
  fullName: "com.google.cloud.bigquery.BigQueryError.getMessage"
  package: "com.google.cloud.bigquery"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "com.google.cloud.bigquery.BigQueryError.hashCode*"
  name: "hashCode"
  nameWithType: "BigQueryError.hashCode"
  fullName: "com.google.cloud.bigquery.BigQueryError.hashCode"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.BigQueryError.toString*"
  name: "toString"
  nameWithType: "BigQueryError.toString"
  fullName: "com.google.cloud.bigquery.BigQueryError.toString"
  package: "com.google.cloud.bigquery"
- uid: "java.lang.Object"
  spec.java:
  - uid: "java.lang.Object"
    name: "Object"
    fullName: "java.lang.Object"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "com.google.cloud.bigquery.BigQueryError.equals*"
  name: "equals"
  nameWithType: "BigQueryError.equals"
  fullName: "com.google.cloud.bigquery.BigQueryError.equals"
  package: "com.google.cloud.bigquery"
- uid: "java.io.Serializable"
  name: "Serializable"
  nameWithType: "Serializable"
  fullName: "java.io.Serializable"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
