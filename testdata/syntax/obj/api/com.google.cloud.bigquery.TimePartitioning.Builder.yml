### YamlMime:ManagedReference
items:
- uid: "com.google.cloud.bigquery.TimePartitioning.Builder"
  id: "Builder"
  parent: "com.google.cloud.bigquery"
  children:
  - "com.google.cloud.bigquery.TimePartitioning.Builder.Builder()"
  - "com.google.cloud.bigquery.TimePartitioning.Builder.build()"
  - "com.google.cloud.bigquery.TimePartitioning.Builder.setExpirationMs(java.lang.Long)"
  - "com.google.cloud.bigquery.TimePartitioning.Builder.setField(java.lang.String)"
  - "com.google.cloud.bigquery.TimePartitioning.Builder.setRequirePartitionFilter(java.lang.Boolean)"
  langs:
  - "java"
  name: "TimePartitioning.Builder"
  nameWithType: "TimePartitioning.Builder"
  fullName: "com.google.cloud.bigquery.TimePartitioning.Builder"
  type: "Class"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public abstract static class TimePartitioning.Builder"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.google.cloud.bigquery.TimePartitioning.Builder.Builder()"
  id: "Builder()"
  parent: "com.google.cloud.bigquery.TimePartitioning.Builder"
  langs:
  - "java"
  name: "Builder()"
  nameWithType: "TimePartitioning.Builder.Builder()"
  fullName: "com.google.cloud.bigquery.TimePartitioning.Builder.Builder()"
  overload: "com.google.cloud.bigquery.TimePartitioning.Builder.Builder*"
  type: "Constructor"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public Builder()"
- uid: "com.google.cloud.bigquery.TimePartitioning.Builder.build()"
  id: "build()"
  parent: "com.google.cloud.bigquery.TimePartitioning.Builder"
  langs:
  - "java"
  name: "build()"
  nameWithType: "TimePartitioning.Builder.build()"
  fullName: "com.google.cloud.bigquery.TimePartitioning.Builder.build()"
  overload: "com.google.cloud.bigquery.TimePartitioning.Builder.build*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public abstract TimePartitioning build()"
    return:
      type: "com.google.cloud.bigquery.TimePartitioning"
- uid: "com.google.cloud.bigquery.TimePartitioning.Builder.setExpirationMs(java.lang.Long)"
  id: "setExpirationMs(java.lang.Long)"
  parent: "com.google.cloud.bigquery.TimePartitioning.Builder"
  langs:
  - "java"
  name: "setExpirationMs(Long expirationMs)"
  nameWithType: "TimePartitioning.Builder.setExpirationMs(Long expirationMs)"
  fullName: "com.google.cloud.bigquery.TimePartitioning.Builder.setExpirationMs(Long expirationMs)"
  overload: "com.google.cloud.bigquery.TimePartitioning.Builder.setExpirationMs*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public abstract TimePartitioning.Builder setExpirationMs(Long expirationMs)"
    parameters:
    - id: "expirationMs"
      type: "java.lang.Long"
    return:
      type: "com.google.cloud.bigquery.TimePartitioning.Builder"
- uid: "com.google.cloud.bigquery.TimePartitioning.Builder.setField(java.lang.String)"
  id: "setField(java.lang.String)"
  parent: "com.google.cloud.bigquery.TimePartitioning.Builder"
  langs:
  - "java"
  name: "setField(String field)"
  nameWithType: "TimePartitioning.Builder.setField(String field)"
  fullName: "com.google.cloud.bigquery.TimePartitioning.Builder.setField(String field)"
  overload: "com.google.cloud.bigquery.TimePartitioning.Builder.setField*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public abstract TimePartitioning.Builder setField(String field)"
    parameters:
    - id: "field"
      type: "java.lang.String"
    return:
      type: "com.google.cloud.bigquery.TimePartitioning.Builder"
- uid: "com.google.cloud.bigquery.TimePartitioning.Builder.setRequirePartitionFilter(java.lang.Boolean)"
  id: "setRequirePartitionFilter(java.lang.Boolean)"
  parent: "com.google.cloud.bigquery.TimePartitioning.Builder"
  langs:
  - "java"
  name: "setRequirePartitionFilter(Boolean requirePartitionFilter)"
  nameWithType: "TimePartitioning.Builder.setRequirePartitionFilter(Boolean requirePartitionFilter)"
  fullName: "com.google.cloud.bigquery.TimePartitioning.Builder.setRequirePartitionFilter(Boolean requirePartitionFilter)"
  overload: "com.google.cloud.bigquery.TimePartitioning.Builder.setRequirePartitionFilter*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public abstract TimePartitioning.Builder setRequirePartitionFilter(Boolean requirePartitionFilter)"
    parameters:
    - id: "requirePartitionFilter"
      type: "java.lang.Boolean"
    return:
      type: "com.google.cloud.bigquery.TimePartitioning.Builder"
references:
- uid: "com.google.cloud.bigquery.TimePartitioning.Builder.Builder*"
  name: "Builder"
  nameWithType: "TimePartitioning.Builder.Builder"
  fullName: "com.google.cloud.bigquery.TimePartitioning.Builder.Builder"
  package: "com.google.cloud.bigquery"
- uid: "java.lang.Long"
  spec.java:
  - uid: "java.lang.Long"
    name: "Long"
    fullName: "java.lang.Long"
- uid: "com.google.cloud.bigquery.TimePartitioning.Builder.setExpirationMs*"
  name: "setExpirationMs"
  nameWithType: "TimePartitioning.Builder.setExpirationMs"
  fullName: "com.google.cloud.bigquery.TimePartitioning.Builder.setExpirationMs"
  package: "com.google.cloud.bigquery"
- uid: "java.lang.Boolean"
  spec.java:
  - uid: "java.lang.Boolean"
    name: "Boolean"
    fullName: "java.lang.Boolean"
- uid: "com.google.cloud.bigquery.TimePartitioning.Builder.setRequirePartitionFilter*"
  name: "setRequirePartitionFilter"
  nameWithType: "TimePartitioning.Builder.setRequirePartitionFilter"
  fullName: "com.google.cloud.bigquery.TimePartitioning.Builder.setRequirePartitionFilter"
  package: "com.google.cloud.bigquery"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.google.cloud.bigquery.TimePartitioning.Builder.setField*"
  name: "setField"
  nameWithType: "TimePartitioning.Builder.setField"
  fullName: "com.google.cloud.bigquery.TimePartitioning.Builder.setField"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.TimePartitioning"
  name: "TimePartitioning"
  nameWithType: "TimePartitioning"
  fullName: "com.google.cloud.bigquery.TimePartitioning"
- uid: "com.google.cloud.bigquery.TimePartitioning.Builder.build*"
  name: "build"
  nameWithType: "TimePartitioning.Builder.build"
  fullName: "com.google.cloud.bigquery.TimePartitioning.Builder.build"
  package: "com.google.cloud.bigquery"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
