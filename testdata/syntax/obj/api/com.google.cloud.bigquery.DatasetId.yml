### YamlMime:ManagedReference
items:
- uid: "com.google.cloud.bigquery.DatasetId"
  id: "DatasetId"
  parent: "com.google.cloud.bigquery"
  children:
  - "com.google.cloud.bigquery.DatasetId.equals(java.lang.Object)"
  - "com.google.cloud.bigquery.DatasetId.getDataset()"
  - "com.google.cloud.bigquery.DatasetId.getProject()"
  - "com.google.cloud.bigquery.DatasetId.hashCode()"
  - "com.google.cloud.bigquery.DatasetId.of(java.lang.String)"
  - "com.google.cloud.bigquery.DatasetId.of(java.lang.String,java.lang.String)"
  - "com.google.cloud.bigquery.DatasetId.toString()"
  langs:
  - "java"
  name: "DatasetId"
  nameWithType: "DatasetId"
  fullName: "com.google.cloud.bigquery.DatasetId"
  type: "Class"
  package: "com.google.cloud.bigquery"
  summary: "Google BigQuery Dataset identity."
  syntax:
    content: "public final class DatasetId implements Serializable"
  inheritance:
  - "java.lang.Object"
  implements:
  - "java.io.Serializable"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.google.cloud.bigquery.DatasetId.DatasetId(java.lang.String,java.lang.String)"
  id: "DatasetId(java.lang.String,java.lang.String)"
  parent: "com.google.cloud.bigquery.DatasetId"
  langs:
  - "java"
  name: "DatasetId(String project, String dataset)"
  nameWithType: "DatasetId.DatasetId(String project, String dataset)"
  fullName: "com.google.cloud.bigquery.DatasetId.DatasetId(String project, String dataset)"
  overload: "com.google.cloud.bigquery.DatasetId.DatasetId*"
  type: "Constructor"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "private DatasetId(String project, String dataset)"
    parameters:
    - id: "project"
      type: "java.lang.String"
    - id: "dataset"
      type: "java.lang.String"
- uid: "com.google.cloud.bigquery.DatasetId.equals(java.lang.Object)"
  id: "equals(java.lang.Object)"
  parent: "com.google.cloud.bigquery.DatasetId"
  langs:
  - "java"
  name: "equals(Object obj)"
  nameWithType: "DatasetId.equals(Object obj)"
  fullName: "com.google.cloud.bigquery.DatasetId.equals(Object obj)"
  overload: "com.google.cloud.bigquery.DatasetId.equals*"
  overridden: "java.lang.Object.equals(java.lang.Object)"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public boolean equals(Object obj)"
    parameters:
    - id: "obj"
      type: "java.lang.Object"
    return:
      type: "boolean"
- uid: "com.google.cloud.bigquery.DatasetId.getDataset()"
  id: "getDataset()"
  parent: "com.google.cloud.bigquery.DatasetId"
  langs:
  - "java"
  name: "getDataset()"
  nameWithType: "DatasetId.getDataset()"
  fullName: "com.google.cloud.bigquery.DatasetId.getDataset()"
  overload: "com.google.cloud.bigquery.DatasetId.getDataset*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns dataset's user-defined id."
  syntax:
    content: "public String getDataset()"
    return:
      type: "java.lang.String"
- uid: "com.google.cloud.bigquery.DatasetId.getProject()"
  id: "getProject()"
  parent: "com.google.cloud.bigquery.DatasetId"
  langs:
  - "java"
  name: "getProject()"
  nameWithType: "DatasetId.getProject()"
  fullName: "com.google.cloud.bigquery.DatasetId.getProject()"
  overload: "com.google.cloud.bigquery.DatasetId.getProject*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns project's user-defined id."
  syntax:
    content: "public String getProject()"
    return:
      type: "java.lang.String"
- uid: "com.google.cloud.bigquery.DatasetId.hashCode()"
  id: "hashCode()"
  parent: "com.google.cloud.bigquery.DatasetId"
  langs:
  - "java"
  name: "hashCode()"
  nameWithType: "DatasetId.hashCode()"
  fullName: "com.google.cloud.bigquery.DatasetId.hashCode()"
  overload: "com.google.cloud.bigquery.DatasetId.hashCode*"
  overridden: "java.lang.Object.hashCode()"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public int hashCode()"
    return:
      type: "int"
- uid: "com.google.cloud.bigquery.DatasetId.of(java.lang.String)"
  id: "of(java.lang.String)"
  parent: "com.google.cloud.bigquery.DatasetId"
  langs:
  - "java"
  name: "of(String dataset)"
  nameWithType: "DatasetId.of(String dataset)"
  fullName: "com.google.cloud.bigquery.DatasetId.of(String dataset)"
  overload: "com.google.cloud.bigquery.DatasetId.of*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Creates a dataset identity given only its user-defined id."
  syntax:
    content: "public static DatasetId of(String dataset)"
    parameters:
    - id: "dataset"
      type: "java.lang.String"
    return:
      type: "com.google.cloud.bigquery.DatasetId"
- uid: "com.google.cloud.bigquery.DatasetId.of(java.lang.String,java.lang.String)"
  id: "of(java.lang.String,java.lang.String)"
  parent: "com.google.cloud.bigquery.DatasetId"
  langs:
  - "java"
  name: "of(String project, String dataset)"
  nameWithType: "DatasetId.of(String project, String dataset)"
  fullName: "com.google.cloud.bigquery.DatasetId.of(String project, String dataset)"
  overload: "com.google.cloud.bigquery.DatasetId.of*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Creates a dataset identity given project's and dataset's user-defined ids."
  syntax:
    content: "public static DatasetId of(String project, String dataset)"
    parameters:
    - id: "project"
      type: "java.lang.String"
    - id: "dataset"
      type: "java.lang.String"
    return:
      type: "com.google.cloud.bigquery.DatasetId"
- uid: "com.google.cloud.bigquery.DatasetId.toString()"
  id: "toString()"
  parent: "com.google.cloud.bigquery.DatasetId"
  langs:
  - "java"
  name: "toString()"
  nameWithType: "DatasetId.toString()"
  fullName: "com.google.cloud.bigquery.DatasetId.toString()"
  overload: "com.google.cloud.bigquery.DatasetId.toString*"
  overridden: "java.lang.Object.toString()"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public String toString()"
    return:
      type: "java.lang.String"
references:
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.google.cloud.bigquery.DatasetId.DatasetId*"
  name: "DatasetId"
  nameWithType: "DatasetId.DatasetId"
  fullName: "com.google.cloud.bigquery.DatasetId.DatasetId"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.DatasetId.getProject*"
  name: "getProject"
  nameWithType: "DatasetId.getProject"
  fullName: "com.google.cloud.bigquery.DatasetId.getProject"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.DatasetId.getDataset*"
  name: "getDataset"
  nameWithType: "DatasetId.getDataset"
  fullName: "com.google.cloud.bigquery.DatasetId.getDataset"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.DatasetId.of*"
  name: "of"
  nameWithType: "DatasetId.of"
  fullName: "com.google.cloud.bigquery.DatasetId.of"
  package: "com.google.cloud.bigquery"
- uid: "java.lang.Object"
  spec.java:
  - uid: "java.lang.Object"
    name: "Object"
    fullName: "java.lang.Object"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "com.google.cloud.bigquery.DatasetId.equals*"
  name: "equals"
  nameWithType: "DatasetId.equals"
  fullName: "com.google.cloud.bigquery.DatasetId.equals"
  package: "com.google.cloud.bigquery"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "com.google.cloud.bigquery.DatasetId.hashCode*"
  name: "hashCode"
  nameWithType: "DatasetId.hashCode"
  fullName: "com.google.cloud.bigquery.DatasetId.hashCode"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.DatasetId.toString*"
  name: "toString"
  nameWithType: "DatasetId.toString"
  fullName: "com.google.cloud.bigquery.DatasetId.toString"
  package: "com.google.cloud.bigquery"
- uid: "java.io.Serializable"
  name: "Serializable"
  nameWithType: "Serializable"
  fullName: "java.io.Serializable"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
