### YamlMime:ManagedReference
items:
- uid: "com.google.cloud.bigquery.JobConfiguration.Type"
  id: "Type"
  parent: "com.google.cloud.bigquery"
  children:
  - "com.google.cloud.bigquery.JobConfiguration.Type.COPY"
  - "com.google.cloud.bigquery.JobConfiguration.Type.EXTRACT"
  - "com.google.cloud.bigquery.JobConfiguration.Type.LOAD"
  - "com.google.cloud.bigquery.JobConfiguration.Type.QUERY"
  - "com.google.cloud.bigquery.JobConfiguration.Type.valueOf(java.lang.String)"
  - "com.google.cloud.bigquery.JobConfiguration.Type.values()"
  langs:
  - "java"
  name: "JobConfiguration.Type"
  nameWithType: "JobConfiguration.Type"
  fullName: "com.google.cloud.bigquery.JobConfiguration.Type"
  type: "Enum"
  package: "com.google.cloud.bigquery"
  summary: "Type of a BigQuery Job."
  syntax:
    content: "public enum JobConfiguration.Type extends Enum<JobConfiguration.Type>"
  inheritance:
  - "java.lang.Object"
  - "java.lang.Enum"
  inheritedMembers:
  - "java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)"
  - "java.lang.Enum.clone()"
  - "java.lang.Enum.compareTo(E)"
  - "java.lang.Enum.equals(java.lang.Object)"
  - "java.lang.Enum.finalize()"
  - "java.lang.Enum.getDeclaringClass()"
  - "java.lang.Enum.hashCode()"
  - "java.lang.Enum.name()"
  - "java.lang.Enum.ordinal()"
  - "java.lang.Enum.toString()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.google.cloud.bigquery.JobConfiguration.Type.COPY"
  id: "COPY"
  parent: "com.google.cloud.bigquery.JobConfiguration.Type"
  langs:
  - "java"
  name: "COPY"
  nameWithType: "JobConfiguration.Type.COPY"
  fullName: "com.google.cloud.bigquery.JobConfiguration.Type.COPY"
  type: "Field"
  package: "com.google.cloud.bigquery"
  summary: "A Copy Job copies an existing table to another new or existing table. Instances of `JobConfiguration` for this type are implemented by <xref uid=\"com.google.cloud.bigquery.CopyJobConfiguration\" data-throw-if-not-resolved=\"false\">CopyJobConfiguration</xref>."
  syntax:
    content: "public static final JobConfiguration.Type COPY"
    return:
      type: "com.google.cloud.bigquery.JobConfiguration.Type"
- uid: "com.google.cloud.bigquery.JobConfiguration.Type.EXTRACT"
  id: "EXTRACT"
  parent: "com.google.cloud.bigquery.JobConfiguration.Type"
  langs:
  - "java"
  name: "EXTRACT"
  nameWithType: "JobConfiguration.Type.EXTRACT"
  fullName: "com.google.cloud.bigquery.JobConfiguration.Type.EXTRACT"
  type: "Field"
  package: "com.google.cloud.bigquery"
  summary: "An Extract Job exports a BigQuery table to Google Cloud Storage. Instances of `JobConfiguration` for this type are implemented by <xref uid=\"com.google.cloud.bigquery.ExtractJobConfiguration\" data-throw-if-not-resolved=\"false\">ExtractJobConfiguration</xref>."
  syntax:
    content: "public static final JobConfiguration.Type EXTRACT"
    return:
      type: "com.google.cloud.bigquery.JobConfiguration.Type"
- uid: "com.google.cloud.bigquery.JobConfiguration.Type.LOAD"
  id: "LOAD"
  parent: "com.google.cloud.bigquery.JobConfiguration.Type"
  langs:
  - "java"
  name: "LOAD"
  nameWithType: "JobConfiguration.Type.LOAD"
  fullName: "com.google.cloud.bigquery.JobConfiguration.Type.LOAD"
  type: "Field"
  package: "com.google.cloud.bigquery"
  summary: "A Load Job loads data from one of several formats into a table. Instances of `JobConfiguration` for this type are implemented by <xref uid=\"com.google.cloud.bigquery.LoadJobConfiguration\" data-throw-if-not-resolved=\"false\">LoadJobConfiguration</xref>."
  syntax:
    content: "public static final JobConfiguration.Type LOAD"
    return:
      type: "com.google.cloud.bigquery.JobConfiguration.Type"
- uid: "com.google.cloud.bigquery.JobConfiguration.Type.QUERY"
  id: "QUERY"
  parent: "com.google.cloud.bigquery.JobConfiguration.Type"
  langs:
  - "java"
  name: "QUERY"
  nameWithType: "JobConfiguration.Type.QUERY"
  fullName: "com.google.cloud.bigquery.JobConfiguration.Type.QUERY"
  type: "Field"
  package: "com.google.cloud.bigquery"
  summary: "A Query Job runs a query against BigQuery data. Instances of `JobConfiguration` for this type are implemented by <xref uid=\"com.google.cloud.bigquery.QueryJobConfiguration\" data-throw-if-not-resolved=\"false\">QueryJobConfiguration</xref>."
  syntax:
    content: "public static final JobConfiguration.Type QUERY"
    return:
      type: "com.google.cloud.bigquery.JobConfiguration.Type"
- uid: "com.google.cloud.bigquery.JobConfiguration.Type.Type()"
  id: "Type()"
  parent: "com.google.cloud.bigquery.JobConfiguration.Type"
  langs:
  - "java"
  name: "Type()"
  nameWithType: "JobConfiguration.Type.Type()"
  fullName: "com.google.cloud.bigquery.JobConfiguration.Type.Type()"
  overload: "com.google.cloud.bigquery.JobConfiguration.Type.Type*"
  type: "Constructor"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "private Type()"
- uid: "com.google.cloud.bigquery.JobConfiguration.Type.valueOf(java.lang.String)"
  id: "valueOf(java.lang.String)"
  parent: "com.google.cloud.bigquery.JobConfiguration.Type"
  langs:
  - "java"
  name: "valueOf(String name)"
  nameWithType: "JobConfiguration.Type.valueOf(String name)"
  fullName: "com.google.cloud.bigquery.JobConfiguration.Type.valueOf(String name)"
  overload: "com.google.cloud.bigquery.JobConfiguration.Type.valueOf*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public static JobConfiguration.Type valueOf(String name)"
    parameters:
    - id: "name"
      type: "java.lang.String"
    return:
      type: "com.google.cloud.bigquery.JobConfiguration.Type"
- uid: "com.google.cloud.bigquery.JobConfiguration.Type.values()"
  id: "values()"
  parent: "com.google.cloud.bigquery.JobConfiguration.Type"
  langs:
  - "java"
  name: "values()"
  nameWithType: "JobConfiguration.Type.values()"
  fullName: "com.google.cloud.bigquery.JobConfiguration.Type.values()"
  overload: "com.google.cloud.bigquery.JobConfiguration.Type.values*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public static JobConfiguration.Type[] values()"
    return:
      type: "com.google.cloud.bigquery.JobConfiguration.Type[]"
references:
- uid: "com.google.cloud.bigquery.JobConfiguration.Type.Type*"
  name: "Type"
  nameWithType: "JobConfiguration.Type.Type"
  fullName: "com.google.cloud.bigquery.JobConfiguration.Type.Type"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.JobConfiguration.Type[]"
  spec.java:
  - uid: "com.google.cloud.bigquery.JobConfiguration.Type"
    name: "Type"
    fullName: "com.google.cloud.bigquery.JobConfiguration.Type"
  - name: "[]"
    fullName: "[]"
- uid: "com.google.cloud.bigquery.JobConfiguration.Type.values*"
  name: "values"
  nameWithType: "JobConfiguration.Type.values"
  fullName: "com.google.cloud.bigquery.JobConfiguration.Type.values"
  package: "com.google.cloud.bigquery"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.google.cloud.bigquery.JobConfiguration.Type.valueOf*"
  name: "valueOf"
  nameWithType: "JobConfiguration.Type.valueOf"
  fullName: "com.google.cloud.bigquery.JobConfiguration.Type.valueOf"
  package: "com.google.cloud.bigquery"
- uid: "java.lang.Enum<com.google.cloud.bigquery.JobConfiguration.Type>"
  name: "Enum<JobConfiguration.Type>"
  nameWithType: "Enum<JobConfiguration.Type>"
  fullName: "java.lang.Enum<com.google.cloud.bigquery.JobConfiguration.Type>"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Enum.toString()"
  name: "Enum.toString()"
  nameWithType: "Enum.toString()"
  fullName: "java.lang.Enum.toString()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Enum.clone()"
  name: "Enum.clone()"
  nameWithType: "Enum.clone()"
  fullName: "java.lang.Enum.clone()"
- uid: "java.lang.Enum.finalize()"
  name: "Enum.finalize()"
  nameWithType: "Enum.finalize()"
  fullName: "java.lang.Enum.finalize()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Enum.compareTo(E)"
  name: "Enum.compareTo(E)"
  nameWithType: "Enum.compareTo(E)"
  fullName: "java.lang.Enum.compareTo(E)"
- uid: "java.lang.Enum.name()"
  name: "Enum.name()"
  nameWithType: "Enum.name()"
  fullName: "java.lang.Enum.name()"
- uid: "java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)"
  name: "Enum.<T>valueOf(Class<T>,String)"
  nameWithType: "Enum.<T>valueOf(Class<T>,String)"
  fullName: "java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Enum.getDeclaringClass()"
  name: "Enum.getDeclaringClass()"
  nameWithType: "Enum.getDeclaringClass()"
  fullName: "java.lang.Enum.getDeclaringClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Enum.ordinal()"
  name: "Enum.ordinal()"
  nameWithType: "Enum.ordinal()"
  fullName: "java.lang.Enum.ordinal()"
- uid: "java.lang.Enum.hashCode()"
  name: "Enum.hashCode()"
  nameWithType: "Enum.hashCode()"
  fullName: "java.lang.Enum.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Enum.equals(java.lang.Object)"
  name: "Enum.equals(Object)"
  nameWithType: "Enum.equals(Object)"
  fullName: "java.lang.Enum.equals(java.lang.Object)"
- uid: "java.lang.Enum"
  name: "Enum"
  nameWithType: "Enum"
  fullName: "java.lang.Enum"
- uid: "java.lang.Enum."
  name: "Enum."
  nameWithType: "Enum."
  fullName: "java.lang.Enum."
- uid: "T>,java.lang.String)"
  name: "T>,String)"
  nameWithType: "T>,String)"
  fullName: "T>,java.lang.String)"
- uid: "T>valueOf(java.lang.Class"
  name: "T>valueOf(Class"
  nameWithType: "T>valueOf(Class"
  fullName: "T>valueOf(java.lang.Class"
