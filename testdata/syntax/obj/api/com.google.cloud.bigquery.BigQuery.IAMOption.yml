### YamlMime:ManagedReference
items:
- uid: "com.google.cloud.bigquery.BigQuery.IAMOption"
  id: "IAMOption"
  parent: "com.google.cloud.bigquery"
  children:
  - "com.google.cloud.bigquery.BigQuery.IAMOption.requestedPolicyVersion(long)"
  langs:
  - "java"
  name: "BigQuery.IAMOption"
  nameWithType: "BigQuery.IAMOption"
  fullName: "com.google.cloud.bigquery.BigQuery.IAMOption"
  type: "Class"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public static class BigQuery.IAMOption extends Option"
  inheritance:
  - "java.lang.Object"
  - "com.google.cloud.bigquery.Option"
  inheritedMembers:
  - "com.google.cloud.bigquery.Option.equals(java.lang.Object)"
  - "com.google.cloud.bigquery.Option.hashCode()"
  - "com.google.cloud.bigquery.Option.toString()"
  - "java.lang.Object.clone()"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.google.cloud.bigquery.BigQuery.IAMOption.IAMOption(com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,java.lang.Object)"
  id: "IAMOption(com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,java.lang.Object)"
  parent: "com.google.cloud.bigquery.BigQuery.IAMOption"
  langs:
  - "java"
  name: "IAMOption(BigQueryRpc.Option option, Object value)"
  nameWithType: "BigQuery.IAMOption.IAMOption(BigQueryRpc.Option option, Object value)"
  fullName: "com.google.cloud.bigquery.BigQuery.IAMOption.IAMOption(BigQueryRpc.Option option, Object value)"
  overload: "com.google.cloud.bigquery.BigQuery.IAMOption.IAMOption*"
  type: "Constructor"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "private IAMOption(BigQueryRpc.Option option, Object value)"
    parameters:
    - id: "option"
      type: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option"
    - id: "value"
      type: "java.lang.Object"
- uid: "com.google.cloud.bigquery.BigQuery.IAMOption.requestedPolicyVersion(long)"
  id: "requestedPolicyVersion(long)"
  parent: "com.google.cloud.bigquery.BigQuery.IAMOption"
  langs:
  - "java"
  name: "requestedPolicyVersion(long version)"
  nameWithType: "BigQuery.IAMOption.requestedPolicyVersion(long version)"
  fullName: "com.google.cloud.bigquery.BigQuery.IAMOption.requestedPolicyVersion(long version)"
  overload: "com.google.cloud.bigquery.BigQuery.IAMOption.requestedPolicyVersion*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public static BigQuery.IAMOption requestedPolicyVersion(long version)"
    parameters:
    - id: "version"
      type: "long"
    return:
      type: "com.google.cloud.bigquery.BigQuery.IAMOption"
references:
- uid: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option"
  name: "BigQueryRpc.Option"
  nameWithType: "BigQueryRpc.Option"
  fullName: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option"
- uid: "java.lang.Object"
  spec.java:
  - uid: "java.lang.Object"
    name: "Object"
    fullName: "java.lang.Object"
- uid: "com.google.cloud.bigquery.BigQuery.IAMOption.IAMOption*"
  name: "IAMOption"
  nameWithType: "BigQuery.IAMOption.IAMOption"
  fullName: "com.google.cloud.bigquery.BigQuery.IAMOption.IAMOption"
  package: "com.google.cloud.bigquery"
- uid: "long"
  spec.java:
  - uid: "long"
    name: "long"
    fullName: "long"
- uid: "com.google.cloud.bigquery.BigQuery.IAMOption.requestedPolicyVersion*"
  name: "requestedPolicyVersion"
  nameWithType: "BigQuery.IAMOption.requestedPolicyVersion"
  fullName: "com.google.cloud.bigquery.BigQuery.IAMOption.requestedPolicyVersion"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.Option"
  name: "Option"
  nameWithType: "Option"
  fullName: "com.google.cloud.bigquery.Option"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "com.google.cloud.bigquery.Option.equals(java.lang.Object)"
  name: "Option.equals(Object)"
  nameWithType: "Option.equals(Object)"
  fullName: "com.google.cloud.bigquery.Option.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "com.google.cloud.bigquery.Option.toString()"
  name: "Option.toString()"
  nameWithType: "Option.toString()"
  fullName: "com.google.cloud.bigquery.Option.toString()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "com.google.cloud.bigquery.Option.hashCode()"
  name: "Option.hashCode()"
  nameWithType: "Option.hashCode()"
  fullName: "com.google.cloud.bigquery.Option.hashCode()"
