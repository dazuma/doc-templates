### YamlMime:ManagedReference
items:
- uid: Google.Cloud.Spanner.V1.KeyRange
  commentId: T:Google.Cloud.Spanner.V1.KeyRange
  id: KeyRange
  parent: Google.Cloud.Spanner.V1
  children:
  - Google.Cloud.Spanner.V1.KeyRange.#ctor
  - Google.Cloud.Spanner.V1.KeyRange.#ctor(Google.Cloud.Spanner.V1.KeyRange)
  - Google.Cloud.Spanner.V1.KeyRange.EndClosed
  - Google.Cloud.Spanner.V1.KeyRange.EndKeyTypeCase
  - Google.Cloud.Spanner.V1.KeyRange.EndOpen
  - Google.Cloud.Spanner.V1.KeyRange.StartClosed
  - Google.Cloud.Spanner.V1.KeyRange.StartKeyTypeCase
  - Google.Cloud.Spanner.V1.KeyRange.StartOpen
  langs:
  - csharp
  - vb
  name: KeyRange
  nameWithType: KeyRange
  fullName: Google.Cloud.Spanner.V1.KeyRange
  type: Class
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Keys.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: KeyRange
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Keys.cs
    startLine: 142
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nKeyRange represents a range of rows in a table or index.\n\nA range has a start key and an end key. These keys can be open or\nclosed, indicating if the range includes rows with that key.\n\nKeys are represented by lists, where the ith value in the list\ncorresponds to the ith component of the table or index primary key.\nIndividual values are encoded as described\n[here][google.spanner.v1.TypeCode].\n\nFor example, consider the following table definition:\n\nCREATE TABLE UserEvents (\n UserName STRING(MAX),\n EventDate STRING(10)\n) PRIMARY KEY(UserName, EventDate);\n\nThe following keys name rows in this table:\n\n[&quot;Bob&quot;, &quot;2014-09-23&quot;]\n[&quot;Alfred&quot;, &quot;2015-06-12&quot;]\n\nSince the `UserEvents` table&apos;s `PRIMARY KEY` clause names two\ncolumns, each `UserEvents` key has two elements; the first is the\n`UserName`, and the second is the `EventDate`.\n\nKey ranges with multiple components are interpreted\nlexicographically by component using the table or index key&apos;s declared\nsort order. For example, the following range returns all events for\nuser `&quot;Bob&quot;` that occurred in the year 2015:\n\n&quot;start_closed&quot;: [&quot;Bob&quot;, &quot;2015-01-01&quot;]\n&quot;end_closed&quot;: [&quot;Bob&quot;, &quot;2015-12-31&quot;]\n\nStart and end keys can omit trailing key components. This affects the\ninclusion and exclusion of rows that exactly match the provided key\ncomponents: if the key is closed, then rows that exactly match the\nprovided components are included; if the key is open, then rows\nthat exactly match are not included.\n\nFor example, the following range includes all events for `&quot;Bob&quot;` that\noccurred during and after the year 2000:\n\n&quot;start_closed&quot;: [&quot;Bob&quot;, &quot;2000-01-01&quot;]\n&quot;end_closed&quot;: [&quot;Bob&quot;]\n\nThe next example retrieves all events for `&quot;Bob&quot;`:\n\n&quot;start_closed&quot;: [&quot;Bob&quot;]\n&quot;end_closed&quot;: [&quot;Bob&quot;]\n\nTo retrieve events before the year 2000:\n\n&quot;start_closed&quot;: [&quot;Bob&quot;]\n&quot;end_open&quot;: [&quot;Bob&quot;, &quot;2000-01-01&quot;]\n\nThe following range includes all rows in the table:\n\n&quot;start_closed&quot;: []\n&quot;end_closed&quot;: []\n\nThis range returns all users whose `UserName` begins with any\ncharacter from A to C:\n\n&quot;start_closed&quot;: [&quot;A&quot;]\n&quot;end_open&quot;: [&quot;D&quot;]\n\nThis range returns all users whose `UserName` begins with B:\n\n&quot;start_closed&quot;: [&quot;B&quot;]\n&quot;end_open&quot;: [&quot;C&quot;]\n\nKey ranges honor column sort order. For example, suppose a table is\ndefined as follows:\n\nCREATE TABLE DescendingSortedTable {\n Key INT64,\n ...\n) PRIMARY KEY(Key DESC);\n\nThe following range retrieves all rows with key values between 1\nand 100 inclusive:\n\n&quot;start_closed&quot;: [&quot;100&quot;]\n&quot;end_closed&quot;: [&quot;1&quot;]\n\nNote that 100 is passed as the start, and 1 is passed as the end,\nbecause `Key` is a descending column in the schema.\n"
  example: []
  syntax:
    content: 'public sealed class KeyRange : IMessage<KeyRange>, IEquatable<KeyRange>, IDeepCloneable<KeyRange>, IBufferMessage, IMessage'
    content.vb: >-
      Public NotInheritable Class KeyRange
          Implements IMessage(Of KeyRange), IEquatable(Of KeyRange), IDeepCloneable(Of KeyRange), IBufferMessage, IMessage
  inheritance:
  - System.Object
  implements:
  - Google.Protobuf.IMessage{Google.Cloud.Spanner.V1.KeyRange}
  - System.IEquatable{Google.Cloud.Spanner.V1.KeyRange}
  - Google.Protobuf.IDeepCloneable{Google.Cloud.Spanner.V1.KeyRange}
  - Google.Protobuf.IBufferMessage
  - Google.Protobuf.IMessage
  inheritedMembers:
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Google.Cloud.Spanner.V1.KeyRange.#ctor
  commentId: M:Google.Cloud.Spanner.V1.KeyRange.#ctor
  id: '#ctor'
  parent: Google.Cloud.Spanner.V1.KeyRange
  langs:
  - csharp
  - vb
  name: KeyRange()
  nameWithType: KeyRange.KeyRange()
  fullName: Google.Cloud.Spanner.V1.KeyRange.KeyRange()
  type: Constructor
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Keys.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: .ctor
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Keys.cs
    startLine: 162
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  syntax:
    content: public KeyRange()
    content.vb: Public Sub New
  overload: Google.Cloud.Spanner.V1.KeyRange.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Cloud.Spanner.V1.KeyRange.#ctor(Google.Cloud.Spanner.V1.KeyRange)
  commentId: M:Google.Cloud.Spanner.V1.KeyRange.#ctor(Google.Cloud.Spanner.V1.KeyRange)
  id: '#ctor(Google.Cloud.Spanner.V1.KeyRange)'
  parent: Google.Cloud.Spanner.V1.KeyRange
  langs:
  - csharp
  - vb
  name: KeyRange(KeyRange)
  nameWithType: KeyRange.KeyRange(KeyRange)
  fullName: Google.Cloud.Spanner.V1.KeyRange.KeyRange(Google.Cloud.Spanner.V1.KeyRange)
  type: Constructor
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Keys.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: .ctor
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Keys.cs
    startLine: 169
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  syntax:
    content: public KeyRange(KeyRange other)
    parameters:
    - id: other
      type: Google.Cloud.Spanner.V1.KeyRange
    content.vb: Public Sub New(other As KeyRange)
  overload: Google.Cloud.Spanner.V1.KeyRange.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Cloud.Spanner.V1.KeyRange.StartClosed
  commentId: P:Google.Cloud.Spanner.V1.KeyRange.StartClosed
  id: StartClosed
  parent: Google.Cloud.Spanner.V1.KeyRange
  langs:
  - csharp
  - vb
  name: StartClosed
  nameWithType: KeyRange.StartClosed
  fullName: Google.Cloud.Spanner.V1.KeyRange.StartClosed
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Keys.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: StartClosed
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Keys.cs
    startLine: 203
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nIf the start is closed, then the range includes all rows whose\nfirst `len(start_closed)` key columns exactly match `start_closed`.\n"
  example: []
  syntax:
    content: public ListValue StartClosed { get; set; }
    parameters: []
    return:
      type: Google.Protobuf.WellKnownTypes.ListValue
    content.vb: Public Property StartClosed As ListValue
  overload: Google.Cloud.Spanner.V1.KeyRange.StartClosed*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Cloud.Spanner.V1.KeyRange.StartOpen
  commentId: P:Google.Cloud.Spanner.V1.KeyRange.StartOpen
  id: StartOpen
  parent: Google.Cloud.Spanner.V1.KeyRange
  langs:
  - csharp
  - vb
  name: StartOpen
  nameWithType: KeyRange.StartOpen
  fullName: Google.Cloud.Spanner.V1.KeyRange.StartOpen
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Keys.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: StartOpen
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Keys.cs
    startLine: 218
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nIf the start is open, then the range excludes rows whose first\n`len(start_open)` key columns exactly match `start_open`.\n"
  example: []
  syntax:
    content: public ListValue StartOpen { get; set; }
    parameters: []
    return:
      type: Google.Protobuf.WellKnownTypes.ListValue
    content.vb: Public Property StartOpen As ListValue
  overload: Google.Cloud.Spanner.V1.KeyRange.StartOpen*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Cloud.Spanner.V1.KeyRange.EndClosed
  commentId: P:Google.Cloud.Spanner.V1.KeyRange.EndClosed
  id: EndClosed
  parent: Google.Cloud.Spanner.V1.KeyRange
  langs:
  - csharp
  - vb
  name: EndClosed
  nameWithType: KeyRange.EndClosed
  fullName: Google.Cloud.Spanner.V1.KeyRange.EndClosed
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Keys.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: EndClosed
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Keys.cs
    startLine: 233
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nIf the end is closed, then the range includes all rows whose\nfirst `len(end_closed)` key columns exactly match `end_closed`.\n"
  example: []
  syntax:
    content: public ListValue EndClosed { get; set; }
    parameters: []
    return:
      type: Google.Protobuf.WellKnownTypes.ListValue
    content.vb: Public Property EndClosed As ListValue
  overload: Google.Cloud.Spanner.V1.KeyRange.EndClosed*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Cloud.Spanner.V1.KeyRange.EndOpen
  commentId: P:Google.Cloud.Spanner.V1.KeyRange.EndOpen
  id: EndOpen
  parent: Google.Cloud.Spanner.V1.KeyRange
  langs:
  - csharp
  - vb
  name: EndOpen
  nameWithType: KeyRange.EndOpen
  fullName: Google.Cloud.Spanner.V1.KeyRange.EndOpen
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Keys.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: EndOpen
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Keys.cs
    startLine: 248
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nIf the end is open, then the range excludes rows whose first\n`len(end_open)` key columns exactly match `end_open`.\n"
  example: []
  syntax:
    content: public ListValue EndOpen { get; set; }
    parameters: []
    return:
      type: Google.Protobuf.WellKnownTypes.ListValue
    content.vb: Public Property EndOpen As ListValue
  overload: Google.Cloud.Spanner.V1.KeyRange.EndOpen*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Cloud.Spanner.V1.KeyRange.StartKeyTypeCase
  commentId: P:Google.Cloud.Spanner.V1.KeyRange.StartKeyTypeCase
  id: StartKeyTypeCase
  parent: Google.Cloud.Spanner.V1.KeyRange
  langs:
  - csharp
  - vb
  name: StartKeyTypeCase
  nameWithType: KeyRange.StartKeyTypeCase
  fullName: Google.Cloud.Spanner.V1.KeyRange.StartKeyTypeCase
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Keys.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: StartKeyTypeCase
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Keys.cs
    startLine: 265
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  syntax:
    content: public KeyRange.StartKeyTypeOneofCase StartKeyTypeCase { get; }
    parameters: []
    return:
      type: Google.Cloud.Spanner.V1.KeyRange.StartKeyTypeOneofCase
    content.vb: Public ReadOnly Property StartKeyTypeCase As KeyRange.StartKeyTypeOneofCase
  overload: Google.Cloud.Spanner.V1.KeyRange.StartKeyTypeCase*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Cloud.Spanner.V1.KeyRange.EndKeyTypeCase
  commentId: P:Google.Cloud.Spanner.V1.KeyRange.EndKeyTypeCase
  id: EndKeyTypeCase
  parent: Google.Cloud.Spanner.V1.KeyRange
  langs:
  - csharp
  - vb
  name: EndKeyTypeCase
  nameWithType: KeyRange.EndKeyTypeCase
  fullName: Google.Cloud.Spanner.V1.KeyRange.EndKeyTypeCase
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Keys.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: EndKeyTypeCase
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Keys.cs
    startLine: 284
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  syntax:
    content: public KeyRange.EndKeyTypeOneofCase EndKeyTypeCase { get; }
    parameters: []
    return:
      type: Google.Cloud.Spanner.V1.KeyRange.EndKeyTypeOneofCase
    content.vb: Public ReadOnly Property EndKeyTypeCase As KeyRange.EndKeyTypeOneofCase
  overload: Google.Cloud.Spanner.V1.KeyRange.EndKeyTypeCase*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Google.Cloud.Spanner.V1
  commentId: N:Google.Cloud.Spanner.V1
  name: Google.Cloud.Spanner.V1
  nameWithType: Google.Cloud.Spanner.V1
  fullName: Google.Cloud.Spanner.V1
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Google.Protobuf.IMessage{Google.Cloud.Spanner.V1.KeyRange}
  commentId: T:Google.Protobuf.IMessage{Google.Cloud.Spanner.V1.KeyRange}
  parent: Google.Protobuf
  definition: Google.Protobuf.IMessage`1
  name: IMessage<KeyRange>
  nameWithType: IMessage<KeyRange>
  fullName: Google.Protobuf.IMessage<Google.Cloud.Spanner.V1.KeyRange>
  nameWithType.vb: IMessage(Of KeyRange)
  fullName.vb: Google.Protobuf.IMessage(Of Google.Cloud.Spanner.V1.KeyRange)
  name.vb: IMessage(Of KeyRange)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Spanner.V1.KeyRange
    name: KeyRange
    nameWithType: KeyRange
    fullName: Google.Cloud.Spanner.V1.KeyRange
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Spanner.V1.KeyRange
    name: KeyRange
    nameWithType: KeyRange
    fullName: Google.Cloud.Spanner.V1.KeyRange
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable{Google.Cloud.Spanner.V1.KeyRange}
  commentId: T:System.IEquatable{Google.Cloud.Spanner.V1.KeyRange}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<KeyRange>
  nameWithType: IEquatable<KeyRange>
  fullName: System.IEquatable<Google.Cloud.Spanner.V1.KeyRange>
  nameWithType.vb: IEquatable(Of KeyRange)
  fullName.vb: System.IEquatable(Of Google.Cloud.Spanner.V1.KeyRange)
  name.vb: IEquatable(Of KeyRange)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Spanner.V1.KeyRange
    name: KeyRange
    nameWithType: KeyRange
    fullName: Google.Cloud.Spanner.V1.KeyRange
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Spanner.V1.KeyRange
    name: KeyRange
    nameWithType: KeyRange
    fullName: Google.Cloud.Spanner.V1.KeyRange
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IDeepCloneable{Google.Cloud.Spanner.V1.KeyRange}
  commentId: T:Google.Protobuf.IDeepCloneable{Google.Cloud.Spanner.V1.KeyRange}
  parent: Google.Protobuf
  definition: Google.Protobuf.IDeepCloneable`1
  name: IDeepCloneable<KeyRange>
  nameWithType: IDeepCloneable<KeyRange>
  fullName: Google.Protobuf.IDeepCloneable<Google.Cloud.Spanner.V1.KeyRange>
  nameWithType.vb: IDeepCloneable(Of KeyRange)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of Google.Cloud.Spanner.V1.KeyRange)
  name.vb: IDeepCloneable(Of KeyRange)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Spanner.V1.KeyRange
    name: KeyRange
    nameWithType: KeyRange
    fullName: Google.Cloud.Spanner.V1.KeyRange
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Spanner.V1.KeyRange
    name: KeyRange
    nameWithType: KeyRange
    fullName: Google.Cloud.Spanner.V1.KeyRange
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IBufferMessage
  commentId: T:Google.Protobuf.IBufferMessage
  parent: Google.Protobuf
  isExternal: true
  name: IBufferMessage
  nameWithType: IBufferMessage
  fullName: Google.Protobuf.IBufferMessage
- uid: Google.Protobuf.IMessage
  commentId: T:Google.Protobuf.IMessage
  parent: Google.Protobuf
  isExternal: true
  name: IMessage
  nameWithType: IMessage
  fullName: Google.Protobuf.IMessage
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Protobuf.IMessage`1
  commentId: T:Google.Protobuf.IMessage`1
  isExternal: true
  name: IMessage<T>
  nameWithType: IMessage<T>
  fullName: Google.Protobuf.IMessage<T>
  nameWithType.vb: IMessage(Of T)
  fullName.vb: Google.Protobuf.IMessage(Of T)
  name.vb: IMessage(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf
  commentId: N:Google.Protobuf
  isExternal: true
  name: Google.Protobuf
  nameWithType: Google.Protobuf
  fullName: Google.Protobuf
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IDeepCloneable`1
  commentId: T:Google.Protobuf.IDeepCloneable`1
  isExternal: true
  name: IDeepCloneable<T>
  nameWithType: IDeepCloneable<T>
  fullName: Google.Protobuf.IDeepCloneable<T>
  nameWithType.vb: IDeepCloneable(Of T)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of T)
  name.vb: IDeepCloneable(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Cloud.Spanner.V1.KeyRange.#ctor*
  commentId: Overload:Google.Cloud.Spanner.V1.KeyRange.#ctor
  name: KeyRange
  nameWithType: KeyRange.KeyRange
  fullName: Google.Cloud.Spanner.V1.KeyRange.KeyRange
- uid: Google.Cloud.Spanner.V1.KeyRange
  commentId: T:Google.Cloud.Spanner.V1.KeyRange
  parent: Google.Cloud.Spanner.V1
  name: KeyRange
  nameWithType: KeyRange
  fullName: Google.Cloud.Spanner.V1.KeyRange
- uid: Google.Cloud.Spanner.V1.KeyRange.StartClosed*
  commentId: Overload:Google.Cloud.Spanner.V1.KeyRange.StartClosed
  name: StartClosed
  nameWithType: KeyRange.StartClosed
  fullName: Google.Cloud.Spanner.V1.KeyRange.StartClosed
- uid: Google.Protobuf.WellKnownTypes.ListValue
  commentId: T:Google.Protobuf.WellKnownTypes.ListValue
  parent: Google.Protobuf.WellKnownTypes
  isExternal: true
  name: ListValue
  nameWithType: ListValue
  fullName: Google.Protobuf.WellKnownTypes.ListValue
- uid: Google.Protobuf.WellKnownTypes
  commentId: N:Google.Protobuf.WellKnownTypes
  isExternal: true
  name: Google.Protobuf.WellKnownTypes
  nameWithType: Google.Protobuf.WellKnownTypes
  fullName: Google.Protobuf.WellKnownTypes
- uid: Google.Cloud.Spanner.V1.KeyRange.StartOpen*
  commentId: Overload:Google.Cloud.Spanner.V1.KeyRange.StartOpen
  name: StartOpen
  nameWithType: KeyRange.StartOpen
  fullName: Google.Cloud.Spanner.V1.KeyRange.StartOpen
- uid: Google.Cloud.Spanner.V1.KeyRange.EndClosed*
  commentId: Overload:Google.Cloud.Spanner.V1.KeyRange.EndClosed
  name: EndClosed
  nameWithType: KeyRange.EndClosed
  fullName: Google.Cloud.Spanner.V1.KeyRange.EndClosed
- uid: Google.Cloud.Spanner.V1.KeyRange.EndOpen*
  commentId: Overload:Google.Cloud.Spanner.V1.KeyRange.EndOpen
  name: EndOpen
  nameWithType: KeyRange.EndOpen
  fullName: Google.Cloud.Spanner.V1.KeyRange.EndOpen
- uid: Google.Cloud.Spanner.V1.KeyRange.StartKeyTypeCase*
  commentId: Overload:Google.Cloud.Spanner.V1.KeyRange.StartKeyTypeCase
  name: StartKeyTypeCase
  nameWithType: KeyRange.StartKeyTypeCase
  fullName: Google.Cloud.Spanner.V1.KeyRange.StartKeyTypeCase
- uid: Google.Cloud.Spanner.V1.KeyRange.StartKeyTypeOneofCase
  commentId: T:Google.Cloud.Spanner.V1.KeyRange.StartKeyTypeOneofCase
  parent: Google.Cloud.Spanner.V1
  name: KeyRange.StartKeyTypeOneofCase
  nameWithType: KeyRange.StartKeyTypeOneofCase
  fullName: Google.Cloud.Spanner.V1.KeyRange.StartKeyTypeOneofCase
- uid: Google.Cloud.Spanner.V1.KeyRange.EndKeyTypeCase*
  commentId: Overload:Google.Cloud.Spanner.V1.KeyRange.EndKeyTypeCase
  name: EndKeyTypeCase
  nameWithType: KeyRange.EndKeyTypeCase
  fullName: Google.Cloud.Spanner.V1.KeyRange.EndKeyTypeCase
- uid: Google.Cloud.Spanner.V1.KeyRange.EndKeyTypeOneofCase
  commentId: T:Google.Cloud.Spanner.V1.KeyRange.EndKeyTypeOneofCase
  parent: Google.Cloud.Spanner.V1
  name: KeyRange.EndKeyTypeOneofCase
  nameWithType: KeyRange.EndKeyTypeOneofCase
  fullName: Google.Cloud.Spanner.V1.KeyRange.EndKeyTypeOneofCase
