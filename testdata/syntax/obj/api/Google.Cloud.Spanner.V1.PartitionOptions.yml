### YamlMime:ManagedReference
items:
- uid: Google.Cloud.Spanner.V1.PartitionOptions
  commentId: T:Google.Cloud.Spanner.V1.PartitionOptions
  id: PartitionOptions
  parent: Google.Cloud.Spanner.V1
  children:
  - Google.Cloud.Spanner.V1.PartitionOptions.#ctor
  - Google.Cloud.Spanner.V1.PartitionOptions.#ctor(Google.Cloud.Spanner.V1.PartitionOptions)
  - Google.Cloud.Spanner.V1.PartitionOptions.MaxPartitions
  - Google.Cloud.Spanner.V1.PartitionOptions.PartitionSizeBytes
  langs:
  - csharp
  - vb
  name: PartitionOptions
  nameWithType: PartitionOptions
  fullName: Google.Cloud.Spanner.V1.PartitionOptions
  type: Class
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Spanner.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: PartitionOptions
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Spanner.cs
    startLine: 3732
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nOptions for a PartitionQueryRequest and\nPartitionReadRequest.\n"
  example: []
  syntax:
    content: 'public sealed class PartitionOptions : IMessage<PartitionOptions>, IEquatable<PartitionOptions>, IDeepCloneable<PartitionOptions>, IBufferMessage, IMessage'
    content.vb: >-
      Public NotInheritable Class PartitionOptions
          Implements IMessage(Of PartitionOptions), IEquatable(Of PartitionOptions), IDeepCloneable(Of PartitionOptions), IBufferMessage, IMessage
  inheritance:
  - System.Object
  implements:
  - Google.Protobuf.IMessage{Google.Cloud.Spanner.V1.PartitionOptions}
  - System.IEquatable{Google.Cloud.Spanner.V1.PartitionOptions}
  - Google.Protobuf.IDeepCloneable{Google.Cloud.Spanner.V1.PartitionOptions}
  - Google.Protobuf.IBufferMessage
  - Google.Protobuf.IMessage
  inheritedMembers:
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Google.Cloud.Spanner.V1.PartitionOptions.#ctor
  commentId: M:Google.Cloud.Spanner.V1.PartitionOptions.#ctor
  id: '#ctor'
  parent: Google.Cloud.Spanner.V1.PartitionOptions
  langs:
  - csharp
  - vb
  name: PartitionOptions()
  nameWithType: PartitionOptions.PartitionOptions()
  fullName: Google.Cloud.Spanner.V1.PartitionOptions.PartitionOptions()
  type: Constructor
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Spanner.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: .ctor
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Spanner.cs
    startLine: 3752
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  syntax:
    content: public PartitionOptions()
    content.vb: Public Sub New
  overload: Google.Cloud.Spanner.V1.PartitionOptions.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Cloud.Spanner.V1.PartitionOptions.#ctor(Google.Cloud.Spanner.V1.PartitionOptions)
  commentId: M:Google.Cloud.Spanner.V1.PartitionOptions.#ctor(Google.Cloud.Spanner.V1.PartitionOptions)
  id: '#ctor(Google.Cloud.Spanner.V1.PartitionOptions)'
  parent: Google.Cloud.Spanner.V1.PartitionOptions
  langs:
  - csharp
  - vb
  name: PartitionOptions(PartitionOptions)
  nameWithType: PartitionOptions.PartitionOptions(PartitionOptions)
  fullName: Google.Cloud.Spanner.V1.PartitionOptions.PartitionOptions(Google.Cloud.Spanner.V1.PartitionOptions)
  type: Constructor
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Spanner.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: .ctor
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Spanner.cs
    startLine: 3759
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  syntax:
    content: public PartitionOptions(PartitionOptions other)
    parameters:
    - id: other
      type: Google.Cloud.Spanner.V1.PartitionOptions
    content.vb: Public Sub New(other As PartitionOptions)
  overload: Google.Cloud.Spanner.V1.PartitionOptions.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Cloud.Spanner.V1.PartitionOptions.PartitionSizeBytes
  commentId: P:Google.Cloud.Spanner.V1.PartitionOptions.PartitionSizeBytes
  id: PartitionSizeBytes
  parent: Google.Cloud.Spanner.V1.PartitionOptions
  langs:
  - csharp
  - vb
  name: PartitionSizeBytes
  nameWithType: PartitionOptions.PartitionSizeBytes
  fullName: Google.Cloud.Spanner.V1.PartitionOptions.PartitionSizeBytes
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Spanner.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: PartitionSizeBytes
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Spanner.cs
    startLine: 3782
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\n**Note:** This hint is currently ignored by PartitionQuery and\nPartitionRead requests.\n\nThe desired data size for each partition generated.  The default for this\noption is currently 1 GiB.  This is only a hint. The actual size of each\npartition may be smaller or larger than this size request.\n"
  example: []
  syntax:
    content: public long PartitionSizeBytes { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property PartitionSizeBytes As Long
  overload: Google.Cloud.Spanner.V1.PartitionOptions.PartitionSizeBytes*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Cloud.Spanner.V1.PartitionOptions.MaxPartitions
  commentId: P:Google.Cloud.Spanner.V1.PartitionOptions.MaxPartitions
  id: MaxPartitions
  parent: Google.Cloud.Spanner.V1.PartitionOptions
  langs:
  - csharp
  - vb
  name: MaxPartitions
  nameWithType: PartitionOptions.MaxPartitions
  fullName: Google.Cloud.Spanner.V1.PartitionOptions.MaxPartitions
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Spanner.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: MaxPartitions
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Spanner.cs
    startLine: 3803
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\n**Note:** This hint is currently ignored by PartitionQuery and\nPartitionRead requests.\n\nThe desired maximum number of partitions to return.  For example, this may\nbe set to the number of workers available.  The default for this option\nis currently 10,000. The maximum value is currently 200,000.  This is only\na hint.  The actual number of partitions returned may be smaller or larger\nthan this maximum count request.\n"
  example: []
  syntax:
    content: public long MaxPartitions { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property MaxPartitions As Long
  overload: Google.Cloud.Spanner.V1.PartitionOptions.MaxPartitions*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Google.Cloud.Spanner.V1
  commentId: N:Google.Cloud.Spanner.V1
  name: Google.Cloud.Spanner.V1
  nameWithType: Google.Cloud.Spanner.V1
  fullName: Google.Cloud.Spanner.V1
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Google.Protobuf.IMessage{Google.Cloud.Spanner.V1.PartitionOptions}
  commentId: T:Google.Protobuf.IMessage{Google.Cloud.Spanner.V1.PartitionOptions}
  parent: Google.Protobuf
  definition: Google.Protobuf.IMessage`1
  name: IMessage<PartitionOptions>
  nameWithType: IMessage<PartitionOptions>
  fullName: Google.Protobuf.IMessage<Google.Cloud.Spanner.V1.PartitionOptions>
  nameWithType.vb: IMessage(Of PartitionOptions)
  fullName.vb: Google.Protobuf.IMessage(Of Google.Cloud.Spanner.V1.PartitionOptions)
  name.vb: IMessage(Of PartitionOptions)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Spanner.V1.PartitionOptions
    name: PartitionOptions
    nameWithType: PartitionOptions
    fullName: Google.Cloud.Spanner.V1.PartitionOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Spanner.V1.PartitionOptions
    name: PartitionOptions
    nameWithType: PartitionOptions
    fullName: Google.Cloud.Spanner.V1.PartitionOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable{Google.Cloud.Spanner.V1.PartitionOptions}
  commentId: T:System.IEquatable{Google.Cloud.Spanner.V1.PartitionOptions}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<PartitionOptions>
  nameWithType: IEquatable<PartitionOptions>
  fullName: System.IEquatable<Google.Cloud.Spanner.V1.PartitionOptions>
  nameWithType.vb: IEquatable(Of PartitionOptions)
  fullName.vb: System.IEquatable(Of Google.Cloud.Spanner.V1.PartitionOptions)
  name.vb: IEquatable(Of PartitionOptions)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Spanner.V1.PartitionOptions
    name: PartitionOptions
    nameWithType: PartitionOptions
    fullName: Google.Cloud.Spanner.V1.PartitionOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Spanner.V1.PartitionOptions
    name: PartitionOptions
    nameWithType: PartitionOptions
    fullName: Google.Cloud.Spanner.V1.PartitionOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IDeepCloneable{Google.Cloud.Spanner.V1.PartitionOptions}
  commentId: T:Google.Protobuf.IDeepCloneable{Google.Cloud.Spanner.V1.PartitionOptions}
  parent: Google.Protobuf
  definition: Google.Protobuf.IDeepCloneable`1
  name: IDeepCloneable<PartitionOptions>
  nameWithType: IDeepCloneable<PartitionOptions>
  fullName: Google.Protobuf.IDeepCloneable<Google.Cloud.Spanner.V1.PartitionOptions>
  nameWithType.vb: IDeepCloneable(Of PartitionOptions)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of Google.Cloud.Spanner.V1.PartitionOptions)
  name.vb: IDeepCloneable(Of PartitionOptions)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Spanner.V1.PartitionOptions
    name: PartitionOptions
    nameWithType: PartitionOptions
    fullName: Google.Cloud.Spanner.V1.PartitionOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Spanner.V1.PartitionOptions
    name: PartitionOptions
    nameWithType: PartitionOptions
    fullName: Google.Cloud.Spanner.V1.PartitionOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IBufferMessage
  commentId: T:Google.Protobuf.IBufferMessage
  parent: Google.Protobuf
  isExternal: true
  name: IBufferMessage
  nameWithType: IBufferMessage
  fullName: Google.Protobuf.IBufferMessage
- uid: Google.Protobuf.IMessage
  commentId: T:Google.Protobuf.IMessage
  parent: Google.Protobuf
  isExternal: true
  name: IMessage
  nameWithType: IMessage
  fullName: Google.Protobuf.IMessage
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Protobuf.IMessage`1
  commentId: T:Google.Protobuf.IMessage`1
  isExternal: true
  name: IMessage<T>
  nameWithType: IMessage<T>
  fullName: Google.Protobuf.IMessage<T>
  nameWithType.vb: IMessage(Of T)
  fullName.vb: Google.Protobuf.IMessage(Of T)
  name.vb: IMessage(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf
  commentId: N:Google.Protobuf
  isExternal: true
  name: Google.Protobuf
  nameWithType: Google.Protobuf
  fullName: Google.Protobuf
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IDeepCloneable`1
  commentId: T:Google.Protobuf.IDeepCloneable`1
  isExternal: true
  name: IDeepCloneable<T>
  nameWithType: IDeepCloneable<T>
  fullName: Google.Protobuf.IDeepCloneable<T>
  nameWithType.vb: IDeepCloneable(Of T)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of T)
  name.vb: IDeepCloneable(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Cloud.Spanner.V1.PartitionOptions.#ctor*
  commentId: Overload:Google.Cloud.Spanner.V1.PartitionOptions.#ctor
  name: PartitionOptions
  nameWithType: PartitionOptions.PartitionOptions
  fullName: Google.Cloud.Spanner.V1.PartitionOptions.PartitionOptions
- uid: Google.Cloud.Spanner.V1.PartitionOptions
  commentId: T:Google.Cloud.Spanner.V1.PartitionOptions
  parent: Google.Cloud.Spanner.V1
  name: PartitionOptions
  nameWithType: PartitionOptions
  fullName: Google.Cloud.Spanner.V1.PartitionOptions
- uid: Google.Cloud.Spanner.V1.PartitionOptions.PartitionSizeBytes*
  commentId: Overload:Google.Cloud.Spanner.V1.PartitionOptions.PartitionSizeBytes
  name: PartitionSizeBytes
  nameWithType: PartitionOptions.PartitionSizeBytes
  fullName: Google.Cloud.Spanner.V1.PartitionOptions.PartitionSizeBytes
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Google.Cloud.Spanner.V1.PartitionOptions.MaxPartitions*
  commentId: Overload:Google.Cloud.Spanner.V1.PartitionOptions.MaxPartitions
  name: MaxPartitions
  nameWithType: PartitionOptions.MaxPartitions
  fullName: Google.Cloud.Spanner.V1.PartitionOptions.MaxPartitions
