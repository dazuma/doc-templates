### YamlMime:ManagedReference
items:
- uid: "com.google.cloud.bigquery.DatasetInfo.Builder"
  id: "Builder"
  parent: "com.google.cloud.bigquery"
  children:
  - "com.google.cloud.bigquery.DatasetInfo.Builder.Builder()"
  - "com.google.cloud.bigquery.DatasetInfo.Builder.build()"
  - "com.google.cloud.bigquery.DatasetInfo.Builder.setAcl(java.util.List<com.google.cloud.bigquery.Acl>)"
  - "com.google.cloud.bigquery.DatasetInfo.Builder.setDatasetId(com.google.cloud.bigquery.DatasetId)"
  - "com.google.cloud.bigquery.DatasetInfo.Builder.setDefaultEncryptionConfiguration(com.google.cloud.bigquery.EncryptionConfiguration)"
  - "com.google.cloud.bigquery.DatasetInfo.Builder.setDefaultPartitionExpirationMs(java.lang.Long)"
  - "com.google.cloud.bigquery.DatasetInfo.Builder.setDefaultTableLifetime(java.lang.Long)"
  - "com.google.cloud.bigquery.DatasetInfo.Builder.setDescription(java.lang.String)"
  - "com.google.cloud.bigquery.DatasetInfo.Builder.setFriendlyName(java.lang.String)"
  - "com.google.cloud.bigquery.DatasetInfo.Builder.setLabels(java.util.Map<java.lang.String,java.lang.String>)"
  - "com.google.cloud.bigquery.DatasetInfo.Builder.setLocation(java.lang.String)"
  langs:
  - "java"
  name: "DatasetInfo.Builder"
  nameWithType: "DatasetInfo.Builder"
  fullName: "com.google.cloud.bigquery.DatasetInfo.Builder"
  type: "Class"
  package: "com.google.cloud.bigquery"
  summary: "A builder for `DatasetInfo` objects."
  syntax:
    content: "public abstract static class DatasetInfo.Builder"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.google.cloud.bigquery.DatasetInfo.Builder.Builder()"
  id: "Builder()"
  parent: "com.google.cloud.bigquery.DatasetInfo.Builder"
  langs:
  - "java"
  name: "Builder()"
  nameWithType: "DatasetInfo.Builder.Builder()"
  fullName: "com.google.cloud.bigquery.DatasetInfo.Builder.Builder()"
  overload: "com.google.cloud.bigquery.DatasetInfo.Builder.Builder*"
  type: "Constructor"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public Builder()"
- uid: "com.google.cloud.bigquery.DatasetInfo.Builder.build()"
  id: "build()"
  parent: "com.google.cloud.bigquery.DatasetInfo.Builder"
  langs:
  - "java"
  name: "build()"
  nameWithType: "DatasetInfo.Builder.build()"
  fullName: "com.google.cloud.bigquery.DatasetInfo.Builder.build()"
  overload: "com.google.cloud.bigquery.DatasetInfo.Builder.build*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Creates a `DatasetInfo` object."
  syntax:
    content: "public abstract DatasetInfo build()"
    return:
      type: "com.google.cloud.bigquery.DatasetInfo"
- uid: "com.google.cloud.bigquery.DatasetInfo.Builder.setAcl(java.util.List<com.google.cloud.bigquery.Acl>)"
  id: "setAcl(java.util.List<com.google.cloud.bigquery.Acl>)"
  parent: "com.google.cloud.bigquery.DatasetInfo.Builder"
  langs:
  - "java"
  name: "setAcl(List<Acl> acl)"
  nameWithType: "DatasetInfo.Builder.setAcl(List<Acl> acl)"
  fullName: "com.google.cloud.bigquery.DatasetInfo.Builder.setAcl(List<Acl> acl)"
  overload: "com.google.cloud.bigquery.DatasetInfo.Builder.setAcl*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Sets the dataset's access control configuration."
  syntax:
    content: "public abstract DatasetInfo.Builder setAcl(List<Acl> acl)"
    parameters:
    - id: "acl"
      type: "java.util.List<com.google.cloud.bigquery.Acl>"
    return:
      type: "com.google.cloud.bigquery.DatasetInfo.Builder"
- uid: "com.google.cloud.bigquery.DatasetInfo.Builder.setDatasetId(com.google.cloud.bigquery.DatasetId)"
  id: "setDatasetId(com.google.cloud.bigquery.DatasetId)"
  parent: "com.google.cloud.bigquery.DatasetInfo.Builder"
  langs:
  - "java"
  name: "setDatasetId(DatasetId datasetId)"
  nameWithType: "DatasetInfo.Builder.setDatasetId(DatasetId datasetId)"
  fullName: "com.google.cloud.bigquery.DatasetInfo.Builder.setDatasetId(DatasetId datasetId)"
  overload: "com.google.cloud.bigquery.DatasetInfo.Builder.setDatasetId*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Sets the dataset identity."
  syntax:
    content: "public abstract DatasetInfo.Builder setDatasetId(DatasetId datasetId)"
    parameters:
    - id: "datasetId"
      type: "com.google.cloud.bigquery.DatasetId"
    return:
      type: "com.google.cloud.bigquery.DatasetInfo.Builder"
- uid: "com.google.cloud.bigquery.DatasetInfo.Builder.setDefaultEncryptionConfiguration(com.google.cloud.bigquery.EncryptionConfiguration)"
  id: "setDefaultEncryptionConfiguration(com.google.cloud.bigquery.EncryptionConfiguration)"
  parent: "com.google.cloud.bigquery.DatasetInfo.Builder"
  langs:
  - "java"
  name: "setDefaultEncryptionConfiguration(EncryptionConfiguration defaultEncryptionConfiguration)"
  nameWithType: "DatasetInfo.Builder.setDefaultEncryptionConfiguration(EncryptionConfiguration defaultEncryptionConfiguration)"
  fullName: "com.google.cloud.bigquery.DatasetInfo.Builder.setDefaultEncryptionConfiguration(EncryptionConfiguration defaultEncryptionConfiguration)"
  overload: "com.google.cloud.bigquery.DatasetInfo.Builder.setDefaultEncryptionConfiguration*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "The default encryption key for all tables in the dataset. Once this property is set, all newly-created partitioned tables in the dataset will have encryption key set to this value, unless table creation request (or query) overrides the key."
  syntax:
    content: "public abstract DatasetInfo.Builder setDefaultEncryptionConfiguration(EncryptionConfiguration defaultEncryptionConfiguration)"
    parameters:
    - id: "defaultEncryptionConfiguration"
      type: "com.google.cloud.bigquery.EncryptionConfiguration"
    return:
      type: "com.google.cloud.bigquery.DatasetInfo.Builder"
- uid: "com.google.cloud.bigquery.DatasetInfo.Builder.setDefaultPartitionExpirationMs(java.lang.Long)"
  id: "setDefaultPartitionExpirationMs(java.lang.Long)"
  parent: "com.google.cloud.bigquery.DatasetInfo.Builder"
  langs:
  - "java"
  name: "setDefaultPartitionExpirationMs(Long defaultPartitionExpirationMs)"
  nameWithType: "DatasetInfo.Builder.setDefaultPartitionExpirationMs(Long defaultPartitionExpirationMs)"
  fullName: "com.google.cloud.bigquery.DatasetInfo.Builder.setDefaultPartitionExpirationMs(Long defaultPartitionExpirationMs)"
  overload: "com.google.cloud.bigquery.DatasetInfo.Builder.setDefaultPartitionExpirationMs*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "\\[Optional\\] The default partition expiration time for all partitioned tables in the dataset, in milliseconds. Once this property is set, all newly-created partitioned tables in the dataset will has an expirationMs property in the timePartitioning settings set to this value. Changing the value only affect new tables, not existing ones. The storage in a partition will have an expiration time of its partition time plus this value. Setting this property overrides the use of defaultTableExpirationMs for partitioned tables: only one of defaultTableExpirationMs and defaultPartitionExpirationMs will be used for any new partitioned table. If you provide an explicit timePartitioning.expirationMs when creating or updating a partitioned table, that value takes precedence over the default partition expiration time indicated by this property. The value may be `null`."
  syntax:
    content: "public abstract DatasetInfo.Builder setDefaultPartitionExpirationMs(Long defaultPartitionExpirationMs)"
    parameters:
    - id: "defaultPartitionExpirationMs"
      type: "java.lang.Long"
    return:
      type: "com.google.cloud.bigquery.DatasetInfo.Builder"
- uid: "com.google.cloud.bigquery.DatasetInfo.Builder.setDefaultTableLifetime(java.lang.Long)"
  id: "setDefaultTableLifetime(java.lang.Long)"
  parent: "com.google.cloud.bigquery.DatasetInfo.Builder"
  langs:
  - "java"
  name: "setDefaultTableLifetime(Long defaultTableLifetime)"
  nameWithType: "DatasetInfo.Builder.setDefaultTableLifetime(Long defaultTableLifetime)"
  fullName: "com.google.cloud.bigquery.DatasetInfo.Builder.setDefaultTableLifetime(Long defaultTableLifetime)"
  overload: "com.google.cloud.bigquery.DatasetInfo.Builder.setDefaultTableLifetime*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Sets the default lifetime of all tables in the dataset, in milliseconds. The minimum value is 3600000 milliseconds (one hour). Once this property is set, all newly-created tables in the dataset will have an expirationTime property set to the creation time plus the value in this property, and changing the value will only affect new tables, not existing ones. When the expirationTime for a given table is reached, that table will be deleted automatically. If a table's expirationTime is modified or removed before the table expires, or if you provide an explicit expirationTime when creating a table, that value takes precedence over the default expiration time indicated by this property. This property is experimental and might be subject to change or removed."
  syntax:
    content: "public abstract DatasetInfo.Builder setDefaultTableLifetime(Long defaultTableLifetime)"
    parameters:
    - id: "defaultTableLifetime"
      type: "java.lang.Long"
    return:
      type: "com.google.cloud.bigquery.DatasetInfo.Builder"
- uid: "com.google.cloud.bigquery.DatasetInfo.Builder.setDescription(java.lang.String)"
  id: "setDescription(java.lang.String)"
  parent: "com.google.cloud.bigquery.DatasetInfo.Builder"
  langs:
  - "java"
  name: "setDescription(String description)"
  nameWithType: "DatasetInfo.Builder.setDescription(String description)"
  fullName: "com.google.cloud.bigquery.DatasetInfo.Builder.setDescription(String description)"
  overload: "com.google.cloud.bigquery.DatasetInfo.Builder.setDescription*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Sets a user-friendly description for the dataset."
  syntax:
    content: "public abstract DatasetInfo.Builder setDescription(String description)"
    parameters:
    - id: "description"
      type: "java.lang.String"
    return:
      type: "com.google.cloud.bigquery.DatasetInfo.Builder"
- uid: "com.google.cloud.bigquery.DatasetInfo.Builder.setFriendlyName(java.lang.String)"
  id: "setFriendlyName(java.lang.String)"
  parent: "com.google.cloud.bigquery.DatasetInfo.Builder"
  langs:
  - "java"
  name: "setFriendlyName(String friendlyName)"
  nameWithType: "DatasetInfo.Builder.setFriendlyName(String friendlyName)"
  fullName: "com.google.cloud.bigquery.DatasetInfo.Builder.setFriendlyName(String friendlyName)"
  overload: "com.google.cloud.bigquery.DatasetInfo.Builder.setFriendlyName*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Sets a user-friendly name for the dataset."
  syntax:
    content: "public abstract DatasetInfo.Builder setFriendlyName(String friendlyName)"
    parameters:
    - id: "friendlyName"
      type: "java.lang.String"
    return:
      type: "com.google.cloud.bigquery.DatasetInfo.Builder"
- uid: "com.google.cloud.bigquery.DatasetInfo.Builder.setLabels(java.util.Map<java.lang.String,java.lang.String>)"
  id: "setLabels(java.util.Map<java.lang.String,java.lang.String>)"
  parent: "com.google.cloud.bigquery.DatasetInfo.Builder"
  langs:
  - "java"
  name: "setLabels(Map<String,String> labels)"
  nameWithType: "DatasetInfo.Builder.setLabels(Map<String,String> labels)"
  fullName: "com.google.cloud.bigquery.DatasetInfo.Builder.setLabels(Map<String,String> labels)"
  overload: "com.google.cloud.bigquery.DatasetInfo.Builder.setLabels*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public abstract DatasetInfo.Builder setLabels(Map<String,String> labels)"
    parameters:
    - id: "labels"
      type: "java.util.Map<java.lang.String,java.lang.String>"
    return:
      type: "com.google.cloud.bigquery.DatasetInfo.Builder"
- uid: "com.google.cloud.bigquery.DatasetInfo.Builder.setLocation(java.lang.String)"
  id: "setLocation(java.lang.String)"
  parent: "com.google.cloud.bigquery.DatasetInfo.Builder"
  langs:
  - "java"
  name: "setLocation(String location)"
  nameWithType: "DatasetInfo.Builder.setLocation(String location)"
  fullName: "com.google.cloud.bigquery.DatasetInfo.Builder.setLocation(String location)"
  overload: "com.google.cloud.bigquery.DatasetInfo.Builder.setLocation*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Sets the geographic location where the dataset should reside. This property is experimental and might be subject to change or removed."
  syntax:
    content: "public abstract DatasetInfo.Builder setLocation(String location)"
    parameters:
    - id: "location"
      type: "java.lang.String"
    return:
      type: "com.google.cloud.bigquery.DatasetInfo.Builder"
references:
- uid: "com.google.cloud.bigquery.DatasetInfo.Builder.Builder*"
  name: "Builder"
  nameWithType: "DatasetInfo.Builder.Builder"
  fullName: "com.google.cloud.bigquery.DatasetInfo.Builder.Builder"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.DatasetId"
  name: "DatasetId"
  nameWithType: "DatasetId"
  fullName: "com.google.cloud.bigquery.DatasetId"
- uid: "com.google.cloud.bigquery.DatasetInfo.Builder.setDatasetId*"
  name: "setDatasetId"
  nameWithType: "DatasetInfo.Builder.setDatasetId"
  fullName: "com.google.cloud.bigquery.DatasetInfo.Builder.setDatasetId"
  package: "com.google.cloud.bigquery"
- uid: "java.util.List<com.google.cloud.bigquery.Acl>"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "com.google.cloud.bigquery.Acl"
    name: "Acl"
    fullName: "com.google.cloud.bigquery.Acl"
  - name: ">"
    fullName: ">"
- uid: "com.google.cloud.bigquery.DatasetInfo.Builder.setAcl*"
  name: "setAcl"
  nameWithType: "DatasetInfo.Builder.setAcl"
  fullName: "com.google.cloud.bigquery.DatasetInfo.Builder.setAcl"
  package: "com.google.cloud.bigquery"
- uid: "java.lang.Long"
  spec.java:
  - uid: "java.lang.Long"
    name: "Long"
    fullName: "java.lang.Long"
- uid: "com.google.cloud.bigquery.DatasetInfo.Builder.setDefaultTableLifetime*"
  name: "setDefaultTableLifetime"
  nameWithType: "DatasetInfo.Builder.setDefaultTableLifetime"
  fullName: "com.google.cloud.bigquery.DatasetInfo.Builder.setDefaultTableLifetime"
  package: "com.google.cloud.bigquery"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.google.cloud.bigquery.DatasetInfo.Builder.setDescription*"
  name: "setDescription"
  nameWithType: "DatasetInfo.Builder.setDescription"
  fullName: "com.google.cloud.bigquery.DatasetInfo.Builder.setDescription"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.DatasetInfo.Builder.setFriendlyName*"
  name: "setFriendlyName"
  nameWithType: "DatasetInfo.Builder.setFriendlyName"
  fullName: "com.google.cloud.bigquery.DatasetInfo.Builder.setFriendlyName"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.DatasetInfo.Builder.setLocation*"
  name: "setLocation"
  nameWithType: "DatasetInfo.Builder.setLocation"
  fullName: "com.google.cloud.bigquery.DatasetInfo.Builder.setLocation"
  package: "com.google.cloud.bigquery"
- uid: "java.util.Map<java.lang.String,java.lang.String>"
  spec.java:
  - uid: "java.util.Map"
    name: "Map"
    fullName: "java.util.Map"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ","
    fullName: ","
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ">"
    fullName: ">"
- uid: "com.google.cloud.bigquery.DatasetInfo.Builder.setLabels*"
  name: "setLabels"
  nameWithType: "DatasetInfo.Builder.setLabels"
  fullName: "com.google.cloud.bigquery.DatasetInfo.Builder.setLabels"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.EncryptionConfiguration"
  name: "EncryptionConfiguration"
  nameWithType: "EncryptionConfiguration"
  fullName: "com.google.cloud.bigquery.EncryptionConfiguration"
- uid: "com.google.cloud.bigquery.DatasetInfo.Builder.setDefaultEncryptionConfiguration*"
  name: "setDefaultEncryptionConfiguration"
  nameWithType: "DatasetInfo.Builder.setDefaultEncryptionConfiguration"
  fullName: "com.google.cloud.bigquery.DatasetInfo.Builder.setDefaultEncryptionConfiguration"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.DatasetInfo.Builder.setDefaultPartitionExpirationMs*"
  name: "setDefaultPartitionExpirationMs"
  nameWithType: "DatasetInfo.Builder.setDefaultPartitionExpirationMs"
  fullName: "com.google.cloud.bigquery.DatasetInfo.Builder.setDefaultPartitionExpirationMs"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.DatasetInfo"
  name: "DatasetInfo"
  nameWithType: "DatasetInfo"
  fullName: "com.google.cloud.bigquery.DatasetInfo"
- uid: "com.google.cloud.bigquery.DatasetInfo.Builder.build*"
  name: "build"
  nameWithType: "DatasetInfo.Builder.build"
  fullName: "com.google.cloud.bigquery.DatasetInfo.Builder.build"
  package: "com.google.cloud.bigquery"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.util.List"
  name: "List"
  nameWithType: "List"
  fullName: "java.util.List"
- uid: "com.google.cloud.bigquery.Acl"
  name: "Acl"
  nameWithType: "Acl"
  fullName: "com.google.cloud.bigquery.Acl"
- uid: "java.util.Map"
  name: "Map"
  nameWithType: "Map"
  fullName: "java.util.Map"
- uid: "java.lang.String,java.lang.String"
  name: "String,String"
  nameWithType: "String,String"
  fullName: "java.lang.String,java.lang.String"
