### YamlMime:ManagedReference
items:
- uid: "com.google.cloud.bigquery.RangePartitioning.Range"
  id: "Range"
  parent: "com.google.cloud.bigquery"
  children:
  - "com.google.cloud.bigquery.RangePartitioning.Range.Builder"
  - "com.google.cloud.bigquery.RangePartitioning.Range.equals(java.lang.Object)"
  - "com.google.cloud.bigquery.RangePartitioning.Range.getEnd()"
  - "com.google.cloud.bigquery.RangePartitioning.Range.getInterval()"
  - "com.google.cloud.bigquery.RangePartitioning.Range.getStart()"
  - "com.google.cloud.bigquery.RangePartitioning.Range.hashCode()"
  - "com.google.cloud.bigquery.RangePartitioning.Range.newBuilder()"
  - "com.google.cloud.bigquery.RangePartitioning.Range.toString()"
  langs:
  - "java"
  name: "RangePartitioning.Range"
  nameWithType: "RangePartitioning.Range"
  fullName: "com.google.cloud.bigquery.RangePartitioning.Range"
  type: "Class"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public static final class RangePartitioning.Range implements Serializable"
  inheritance:
  - "java.lang.Object"
  implements:
  - "java.io.Serializable"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.google.cloud.bigquery.RangePartitioning.Range.Range(com.google.api.services.bigquery.model.RangePartitioning.Range)"
  id: "Range(com.google.api.services.bigquery.model.RangePartitioning.Range)"
  parent: "com.google.cloud.bigquery.RangePartitioning.Range"
  langs:
  - "java"
  name: "Range(RangePartitioning.Range range)"
  nameWithType: "RangePartitioning.Range.Range(RangePartitioning.Range range)"
  fullName: "com.google.cloud.bigquery.RangePartitioning.Range.Range(RangePartitioning.Range range)"
  overload: "com.google.cloud.bigquery.RangePartitioning.Range.Range*"
  type: "Constructor"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "private Range(RangePartitioning.Range range)"
    parameters:
    - id: "range"
      type: "com.google.api.services.bigquery.model.RangePartitioning.Range"
- uid: "com.google.cloud.bigquery.RangePartitioning.Range.Range(com.google.cloud.bigquery.RangePartitioning.Range.Builder)"
  id: "Range(com.google.cloud.bigquery.RangePartitioning.Range.Builder)"
  parent: "com.google.cloud.bigquery.RangePartitioning.Range"
  langs:
  - "java"
  name: "Range(RangePartitioning.Range.Builder builder)"
  nameWithType: "RangePartitioning.Range.Range(RangePartitioning.Range.Builder builder)"
  fullName: "com.google.cloud.bigquery.RangePartitioning.Range.Range(RangePartitioning.Range.Builder builder)"
  overload: "com.google.cloud.bigquery.RangePartitioning.Range.Range*"
  type: "Constructor"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "private Range(RangePartitioning.Range.Builder builder)"
    parameters:
    - id: "builder"
      type: "com.google.cloud.bigquery.RangePartitioning.Range.Builder"
- uid: "com.google.cloud.bigquery.RangePartitioning.Range.equals(java.lang.Object)"
  id: "equals(java.lang.Object)"
  parent: "com.google.cloud.bigquery.RangePartitioning.Range"
  langs:
  - "java"
  name: "equals(Object obj)"
  nameWithType: "RangePartitioning.Range.equals(Object obj)"
  fullName: "com.google.cloud.bigquery.RangePartitioning.Range.equals(Object obj)"
  overload: "com.google.cloud.bigquery.RangePartitioning.Range.equals*"
  overridden: "java.lang.Object.equals(java.lang.Object)"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public boolean equals(Object obj)"
    parameters:
    - id: "obj"
      type: "java.lang.Object"
    return:
      type: "boolean"
- uid: "com.google.cloud.bigquery.RangePartitioning.Range.getEnd()"
  id: "getEnd()"
  parent: "com.google.cloud.bigquery.RangePartitioning.Range"
  langs:
  - "java"
  name: "getEnd()"
  nameWithType: "RangePartitioning.Range.getEnd()"
  fullName: "com.google.cloud.bigquery.RangePartitioning.Range.getEnd()"
  overload: "com.google.cloud.bigquery.RangePartitioning.Range.getEnd*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns the end of range partitioning."
  syntax:
    content: "public Long getEnd()"
    return:
      type: "java.lang.Long"
- uid: "com.google.cloud.bigquery.RangePartitioning.Range.getInterval()"
  id: "getInterval()"
  parent: "com.google.cloud.bigquery.RangePartitioning.Range"
  langs:
  - "java"
  name: "getInterval()"
  nameWithType: "RangePartitioning.Range.getInterval()"
  fullName: "com.google.cloud.bigquery.RangePartitioning.Range.getInterval()"
  overload: "com.google.cloud.bigquery.RangePartitioning.Range.getInterval*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns the width of each interval."
  syntax:
    content: "public Long getInterval()"
    return:
      type: "java.lang.Long"
- uid: "com.google.cloud.bigquery.RangePartitioning.Range.getStart()"
  id: "getStart()"
  parent: "com.google.cloud.bigquery.RangePartitioning.Range"
  langs:
  - "java"
  name: "getStart()"
  nameWithType: "RangePartitioning.Range.getStart()"
  fullName: "com.google.cloud.bigquery.RangePartitioning.Range.getStart()"
  overload: "com.google.cloud.bigquery.RangePartitioning.Range.getStart*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns the start of range partitioning."
  syntax:
    content: "public Long getStart()"
    return:
      type: "java.lang.Long"
- uid: "com.google.cloud.bigquery.RangePartitioning.Range.hashCode()"
  id: "hashCode()"
  parent: "com.google.cloud.bigquery.RangePartitioning.Range"
  langs:
  - "java"
  name: "hashCode()"
  nameWithType: "RangePartitioning.Range.hashCode()"
  fullName: "com.google.cloud.bigquery.RangePartitioning.Range.hashCode()"
  overload: "com.google.cloud.bigquery.RangePartitioning.Range.hashCode*"
  overridden: "java.lang.Object.hashCode()"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public int hashCode()"
    return:
      type: "int"
- uid: "com.google.cloud.bigquery.RangePartitioning.Range.newBuilder()"
  id: "newBuilder()"
  parent: "com.google.cloud.bigquery.RangePartitioning.Range"
  langs:
  - "java"
  name: "newBuilder()"
  nameWithType: "RangePartitioning.Range.newBuilder()"
  fullName: "com.google.cloud.bigquery.RangePartitioning.Range.newBuilder()"
  overload: "com.google.cloud.bigquery.RangePartitioning.Range.newBuilder*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns a builder for a Range object."
  syntax:
    content: "public static RangePartitioning.Range.Builder newBuilder()"
    return:
      type: "com.google.cloud.bigquery.RangePartitioning.Range.Builder"
- uid: "com.google.cloud.bigquery.RangePartitioning.Range.toString()"
  id: "toString()"
  parent: "com.google.cloud.bigquery.RangePartitioning.Range"
  langs:
  - "java"
  name: "toString()"
  nameWithType: "RangePartitioning.Range.toString()"
  fullName: "com.google.cloud.bigquery.RangePartitioning.Range.toString()"
  overload: "com.google.cloud.bigquery.RangePartitioning.Range.toString*"
  overridden: "java.lang.Object.toString()"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public String toString()"
    return:
      type: "java.lang.String"
references:
- uid: "com.google.cloud.bigquery.RangePartitioning.Range.Builder"
  name: "RangePartitioning.Range.Builder"
  nameWithType: "RangePartitioning.Range.Builder"
  fullName: "com.google.cloud.bigquery.RangePartitioning.Range.Builder"
- uid: "com.google.cloud.bigquery.RangePartitioning.Range.Range*"
  name: "Range"
  nameWithType: "RangePartitioning.Range.Range"
  fullName: "com.google.cloud.bigquery.RangePartitioning.Range.Range"
  package: "com.google.cloud.bigquery"
- uid: "com.google.api.services.bigquery.model.RangePartitioning.Range"
  spec.java:
  - uid: "com.google.api.services.bigquery.model.RangePartitioning.Range"
    name: "Range"
    fullName: "com.google.api.services.bigquery.model.RangePartitioning.Range"
- uid: "java.lang.Long"
  spec.java:
  - uid: "java.lang.Long"
    name: "Long"
    fullName: "java.lang.Long"
- uid: "com.google.cloud.bigquery.RangePartitioning.Range.getEnd*"
  name: "getEnd"
  nameWithType: "RangePartitioning.Range.getEnd"
  fullName: "com.google.cloud.bigquery.RangePartitioning.Range.getEnd"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.RangePartitioning.Range.getInterval*"
  name: "getInterval"
  nameWithType: "RangePartitioning.Range.getInterval"
  fullName: "com.google.cloud.bigquery.RangePartitioning.Range.getInterval"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.RangePartitioning.Range.getStart*"
  name: "getStart"
  nameWithType: "RangePartitioning.Range.getStart"
  fullName: "com.google.cloud.bigquery.RangePartitioning.Range.getStart"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.RangePartitioning.Range.newBuilder*"
  name: "newBuilder"
  nameWithType: "RangePartitioning.Range.newBuilder"
  fullName: "com.google.cloud.bigquery.RangePartitioning.Range.newBuilder"
  package: "com.google.cloud.bigquery"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.google.cloud.bigquery.RangePartitioning.Range.toString*"
  name: "toString"
  nameWithType: "RangePartitioning.Range.toString"
  fullName: "com.google.cloud.bigquery.RangePartitioning.Range.toString"
  package: "com.google.cloud.bigquery"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "com.google.cloud.bigquery.RangePartitioning.Range.hashCode*"
  name: "hashCode"
  nameWithType: "RangePartitioning.Range.hashCode"
  fullName: "com.google.cloud.bigquery.RangePartitioning.Range.hashCode"
  package: "com.google.cloud.bigquery"
- uid: "java.lang.Object"
  spec.java:
  - uid: "java.lang.Object"
    name: "Object"
    fullName: "java.lang.Object"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "com.google.cloud.bigquery.RangePartitioning.Range.equals*"
  name: "equals"
  nameWithType: "RangePartitioning.Range.equals"
  fullName: "com.google.cloud.bigquery.RangePartitioning.Range.equals"
  package: "com.google.cloud.bigquery"
- uid: "java.io.Serializable"
  name: "Serializable"
  nameWithType: "Serializable"
  fullName: "java.io.Serializable"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
