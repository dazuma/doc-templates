### YamlMime:ManagedReference
items:
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerBase
  commentId: T:Google.Cloud.Spanner.V1.Spanner.SpannerBase
  id: Spanner.SpannerBase
  parent: Google.Cloud.Spanner.V1
  children:
  - Google.Cloud.Spanner.V1.Spanner.SpannerBase.BatchCreateSessions(Google.Cloud.Spanner.V1.BatchCreateSessionsRequest,Grpc.Core.ServerCallContext)
  - Google.Cloud.Spanner.V1.Spanner.SpannerBase.BeginTransaction(Google.Cloud.Spanner.V1.BeginTransactionRequest,Grpc.Core.ServerCallContext)
  - Google.Cloud.Spanner.V1.Spanner.SpannerBase.Commit(Google.Cloud.Spanner.V1.CommitRequest,Grpc.Core.ServerCallContext)
  - Google.Cloud.Spanner.V1.Spanner.SpannerBase.CreateSession(Google.Cloud.Spanner.V1.CreateSessionRequest,Grpc.Core.ServerCallContext)
  - Google.Cloud.Spanner.V1.Spanner.SpannerBase.DeleteSession(Google.Cloud.Spanner.V1.DeleteSessionRequest,Grpc.Core.ServerCallContext)
  - Google.Cloud.Spanner.V1.Spanner.SpannerBase.ExecuteBatchDml(Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest,Grpc.Core.ServerCallContext)
  - Google.Cloud.Spanner.V1.Spanner.SpannerBase.ExecuteSql(Google.Cloud.Spanner.V1.ExecuteSqlRequest,Grpc.Core.ServerCallContext)
  - Google.Cloud.Spanner.V1.Spanner.SpannerBase.ExecuteStreamingSql(Google.Cloud.Spanner.V1.ExecuteSqlRequest,Grpc.Core.IServerStreamWriter{Google.Cloud.Spanner.V1.PartialResultSet},Grpc.Core.ServerCallContext)
  - Google.Cloud.Spanner.V1.Spanner.SpannerBase.GetSession(Google.Cloud.Spanner.V1.GetSessionRequest,Grpc.Core.ServerCallContext)
  - Google.Cloud.Spanner.V1.Spanner.SpannerBase.ListSessions(Google.Cloud.Spanner.V1.ListSessionsRequest,Grpc.Core.ServerCallContext)
  - Google.Cloud.Spanner.V1.Spanner.SpannerBase.PartitionQuery(Google.Cloud.Spanner.V1.PartitionQueryRequest,Grpc.Core.ServerCallContext)
  - Google.Cloud.Spanner.V1.Spanner.SpannerBase.PartitionRead(Google.Cloud.Spanner.V1.PartitionReadRequest,Grpc.Core.ServerCallContext)
  - Google.Cloud.Spanner.V1.Spanner.SpannerBase.Read(Google.Cloud.Spanner.V1.ReadRequest,Grpc.Core.ServerCallContext)
  - Google.Cloud.Spanner.V1.Spanner.SpannerBase.Rollback(Google.Cloud.Spanner.V1.RollbackRequest,Grpc.Core.ServerCallContext)
  - Google.Cloud.Spanner.V1.Spanner.SpannerBase.StreamingRead(Google.Cloud.Spanner.V1.ReadRequest,Grpc.Core.IServerStreamWriter{Google.Cloud.Spanner.V1.PartialResultSet},Grpc.Core.ServerCallContext)
  langs:
  - csharp
  - vb
  name: Spanner.SpannerBase
  nameWithType: Spanner.SpannerBase
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerBase
  type: Class
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: SpannerBase
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
    startLine: 171
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: Base class for server-side implementations of Spanner
  example: []
  syntax:
    content: >-
      [BindServiceMethod(typeof(Spanner), "BindService")]

      public abstract class SpannerBase
    content.vb: >-
      <BindServiceMethod(GetType(Spanner), "BindService")>

      Public MustInherit Class SpannerBase
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  attributes:
  - type: Grpc.Core.BindServiceMethodAttribute
    ctor: Grpc.Core.BindServiceMethodAttribute.#ctor(System.Type,System.String)
    arguments:
    - type: System.Type
      value: Google.Cloud.Spanner.V1.Spanner
    - type: System.String
      value: BindService
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerBase.CreateSession(Google.Cloud.Spanner.V1.CreateSessionRequest,Grpc.Core.ServerCallContext)
  commentId: M:Google.Cloud.Spanner.V1.Spanner.SpannerBase.CreateSession(Google.Cloud.Spanner.V1.CreateSessionRequest,Grpc.Core.ServerCallContext)
  id: CreateSession(Google.Cloud.Spanner.V1.CreateSessionRequest,Grpc.Core.ServerCallContext)
  parent: Google.Cloud.Spanner.V1.Spanner.SpannerBase
  langs:
  - csharp
  - vb
  name: CreateSession(CreateSessionRequest, ServerCallContext)
  nameWithType: Spanner.SpannerBase.CreateSession(CreateSessionRequest, ServerCallContext)
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerBase.CreateSession(Google.Cloud.Spanner.V1.CreateSessionRequest, Grpc.Core.ServerCallContext)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: CreateSession
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
    startLine: 198
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nCreates a new session. A session can be used to perform\ntransactions that read and/or modify data in a Cloud Spanner database.\nSessions are meant to be reused for many consecutive\ntransactions.\n\nSessions can only execute one transaction at a time. To execute\nmultiple concurrent read-write/write-only transactions, create\nmultiple sessions. Note that standalone reads and queries use a\ntransaction internally, and count toward the one transaction\nlimit.\n\nActive sessions use additional server resources, so it is a good idea to\ndelete idle and unneeded sessions.\nAside from explicit deletes, Cloud Spanner may delete sessions for which no\noperations are sent for more than an hour. If a session is deleted,\nrequests to it return `NOT_FOUND`.\n\nIdle sessions can be kept alive by sending a trivial SQL query\nperiodically, e.g., `&quot;SELECT 1&quot;`.\n"
  example: []
  syntax:
    content: public virtual Task<Session> CreateSession(CreateSessionRequest request, ServerCallContext context)
    parameters:
    - id: request
      type: Google.Cloud.Spanner.V1.CreateSessionRequest
      description: The request received from the client.
    - id: context
      type: Grpc.Core.ServerCallContext
      description: The context of the server-side call handler being invoked.
    return:
      type: System.Threading.Tasks.Task{Google.Cloud.Spanner.V1.Session}
      description: The response to send back to the client (wrapped by a task).
    content.vb: Public Overridable Function CreateSession(request As CreateSessionRequest, context As ServerCallContext) As Task(Of Session)
  overload: Google.Cloud.Spanner.V1.Spanner.SpannerBase.CreateSession*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerBase.BatchCreateSessions(Google.Cloud.Spanner.V1.BatchCreateSessionsRequest,Grpc.Core.ServerCallContext)
  commentId: M:Google.Cloud.Spanner.V1.Spanner.SpannerBase.BatchCreateSessions(Google.Cloud.Spanner.V1.BatchCreateSessionsRequest,Grpc.Core.ServerCallContext)
  id: BatchCreateSessions(Google.Cloud.Spanner.V1.BatchCreateSessionsRequest,Grpc.Core.ServerCallContext)
  parent: Google.Cloud.Spanner.V1.Spanner.SpannerBase
  langs:
  - csharp
  - vb
  name: BatchCreateSessions(BatchCreateSessionsRequest, ServerCallContext)
  nameWithType: Spanner.SpannerBase.BatchCreateSessions(BatchCreateSessionsRequest, ServerCallContext)
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerBase.BatchCreateSessions(Google.Cloud.Spanner.V1.BatchCreateSessionsRequest, Grpc.Core.ServerCallContext)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: BatchCreateSessions
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
    startLine: 212
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nCreates multiple new sessions.\n\nThis API can be used to initialize a session cache on the clients.\nSee https://goo.gl/TgSFN2 for best practices on session cache management.\n"
  example: []
  syntax:
    content: public virtual Task<BatchCreateSessionsResponse> BatchCreateSessions(BatchCreateSessionsRequest request, ServerCallContext context)
    parameters:
    - id: request
      type: Google.Cloud.Spanner.V1.BatchCreateSessionsRequest
      description: The request received from the client.
    - id: context
      type: Grpc.Core.ServerCallContext
      description: The context of the server-side call handler being invoked.
    return:
      type: System.Threading.Tasks.Task{Google.Cloud.Spanner.V1.BatchCreateSessionsResponse}
      description: The response to send back to the client (wrapped by a task).
    content.vb: Public Overridable Function BatchCreateSessions(request As BatchCreateSessionsRequest, context As ServerCallContext) As Task(Of BatchCreateSessionsResponse)
  overload: Google.Cloud.Spanner.V1.Spanner.SpannerBase.BatchCreateSessions*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerBase.GetSession(Google.Cloud.Spanner.V1.GetSessionRequest,Grpc.Core.ServerCallContext)
  commentId: M:Google.Cloud.Spanner.V1.Spanner.SpannerBase.GetSession(Google.Cloud.Spanner.V1.GetSessionRequest,Grpc.Core.ServerCallContext)
  id: GetSession(Google.Cloud.Spanner.V1.GetSessionRequest,Grpc.Core.ServerCallContext)
  parent: Google.Cloud.Spanner.V1.Spanner.SpannerBase
  langs:
  - csharp
  - vb
  name: GetSession(GetSessionRequest, ServerCallContext)
  nameWithType: Spanner.SpannerBase.GetSession(GetSessionRequest, ServerCallContext)
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerBase.GetSession(Google.Cloud.Spanner.V1.GetSessionRequest, Grpc.Core.ServerCallContext)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: GetSession
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
    startLine: 225
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nGets a session. Returns `NOT_FOUND` if the session does not exist.\nThis is mainly useful for determining whether a session is still\nalive.\n"
  example: []
  syntax:
    content: public virtual Task<Session> GetSession(GetSessionRequest request, ServerCallContext context)
    parameters:
    - id: request
      type: Google.Cloud.Spanner.V1.GetSessionRequest
      description: The request received from the client.
    - id: context
      type: Grpc.Core.ServerCallContext
      description: The context of the server-side call handler being invoked.
    return:
      type: System.Threading.Tasks.Task{Google.Cloud.Spanner.V1.Session}
      description: The response to send back to the client (wrapped by a task).
    content.vb: Public Overridable Function GetSession(request As GetSessionRequest, context As ServerCallContext) As Task(Of Session)
  overload: Google.Cloud.Spanner.V1.Spanner.SpannerBase.GetSession*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerBase.ListSessions(Google.Cloud.Spanner.V1.ListSessionsRequest,Grpc.Core.ServerCallContext)
  commentId: M:Google.Cloud.Spanner.V1.Spanner.SpannerBase.ListSessions(Google.Cloud.Spanner.V1.ListSessionsRequest,Grpc.Core.ServerCallContext)
  id: ListSessions(Google.Cloud.Spanner.V1.ListSessionsRequest,Grpc.Core.ServerCallContext)
  parent: Google.Cloud.Spanner.V1.Spanner.SpannerBase
  langs:
  - csharp
  - vb
  name: ListSessions(ListSessionsRequest, ServerCallContext)
  nameWithType: Spanner.SpannerBase.ListSessions(ListSessionsRequest, ServerCallContext)
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerBase.ListSessions(Google.Cloud.Spanner.V1.ListSessionsRequest, Grpc.Core.ServerCallContext)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: ListSessions
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
    startLine: 236
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nLists all sessions in a given database.\n"
  example: []
  syntax:
    content: public virtual Task<ListSessionsResponse> ListSessions(ListSessionsRequest request, ServerCallContext context)
    parameters:
    - id: request
      type: Google.Cloud.Spanner.V1.ListSessionsRequest
      description: The request received from the client.
    - id: context
      type: Grpc.Core.ServerCallContext
      description: The context of the server-side call handler being invoked.
    return:
      type: System.Threading.Tasks.Task{Google.Cloud.Spanner.V1.ListSessionsResponse}
      description: The response to send back to the client (wrapped by a task).
    content.vb: Public Overridable Function ListSessions(request As ListSessionsRequest, context As ServerCallContext) As Task(Of ListSessionsResponse)
  overload: Google.Cloud.Spanner.V1.Spanner.SpannerBase.ListSessions*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerBase.DeleteSession(Google.Cloud.Spanner.V1.DeleteSessionRequest,Grpc.Core.ServerCallContext)
  commentId: M:Google.Cloud.Spanner.V1.Spanner.SpannerBase.DeleteSession(Google.Cloud.Spanner.V1.DeleteSessionRequest,Grpc.Core.ServerCallContext)
  id: DeleteSession(Google.Cloud.Spanner.V1.DeleteSessionRequest,Grpc.Core.ServerCallContext)
  parent: Google.Cloud.Spanner.V1.Spanner.SpannerBase
  langs:
  - csharp
  - vb
  name: DeleteSession(DeleteSessionRequest, ServerCallContext)
  nameWithType: Spanner.SpannerBase.DeleteSession(DeleteSessionRequest, ServerCallContext)
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerBase.DeleteSession(Google.Cloud.Spanner.V1.DeleteSessionRequest, Grpc.Core.ServerCallContext)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: DeleteSession
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
    startLine: 249
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nEnds a session, releasing server resources associated with it. This will\nasynchronously trigger cancellation of any operations that are running with\nthis session.\n"
  example: []
  syntax:
    content: public virtual Task<Empty> DeleteSession(DeleteSessionRequest request, ServerCallContext context)
    parameters:
    - id: request
      type: Google.Cloud.Spanner.V1.DeleteSessionRequest
      description: The request received from the client.
    - id: context
      type: Grpc.Core.ServerCallContext
      description: The context of the server-side call handler being invoked.
    return:
      type: System.Threading.Tasks.Task{Google.Protobuf.WellKnownTypes.Empty}
      description: The response to send back to the client (wrapped by a task).
    content.vb: Public Overridable Function DeleteSession(request As DeleteSessionRequest, context As ServerCallContext) As Task(Of Empty)
  overload: Google.Cloud.Spanner.V1.Spanner.SpannerBase.DeleteSession*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerBase.ExecuteSql(Google.Cloud.Spanner.V1.ExecuteSqlRequest,Grpc.Core.ServerCallContext)
  commentId: M:Google.Cloud.Spanner.V1.Spanner.SpannerBase.ExecuteSql(Google.Cloud.Spanner.V1.ExecuteSqlRequest,Grpc.Core.ServerCallContext)
  id: ExecuteSql(Google.Cloud.Spanner.V1.ExecuteSqlRequest,Grpc.Core.ServerCallContext)
  parent: Google.Cloud.Spanner.V1.Spanner.SpannerBase
  langs:
  - csharp
  - vb
  name: ExecuteSql(ExecuteSqlRequest, ServerCallContext)
  nameWithType: Spanner.SpannerBase.ExecuteSql(ExecuteSqlRequest, ServerCallContext)
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerBase.ExecuteSql(Google.Cloud.Spanner.V1.ExecuteSqlRequest, Grpc.Core.ServerCallContext)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: ExecuteSql
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
    startLine: 270
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nExecutes an SQL statement, returning all results in a single reply. This\nmethod cannot be used to return a result set larger than 10 MiB;\nif the query yields more data than that, the query fails with\na `FAILED_PRECONDITION` error.\n\nOperations inside read-write transactions might return `ABORTED`. If\nthis occurs, the application should restart the transaction from\nthe beginning. See [Transaction][google.spanner.v1.Transaction] for more details.\n\nLarger result sets can be fetched in streaming fashion by calling\n[ExecuteStreamingSql][google.spanner.v1.Spanner.ExecuteStreamingSql] instead.\n"
  example: []
  syntax:
    content: public virtual Task<ResultSet> ExecuteSql(ExecuteSqlRequest request, ServerCallContext context)
    parameters:
    - id: request
      type: Google.Cloud.Spanner.V1.ExecuteSqlRequest
      description: The request received from the client.
    - id: context
      type: Grpc.Core.ServerCallContext
      description: The context of the server-side call handler being invoked.
    return:
      type: System.Threading.Tasks.Task{Google.Cloud.Spanner.V1.ResultSet}
      description: The response to send back to the client (wrapped by a task).
    content.vb: Public Overridable Function ExecuteSql(request As ExecuteSqlRequest, context As ServerCallContext) As Task(Of ResultSet)
  overload: Google.Cloud.Spanner.V1.Spanner.SpannerBase.ExecuteSql*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerBase.ExecuteStreamingSql(Google.Cloud.Spanner.V1.ExecuteSqlRequest,Grpc.Core.IServerStreamWriter{Google.Cloud.Spanner.V1.PartialResultSet},Grpc.Core.ServerCallContext)
  commentId: M:Google.Cloud.Spanner.V1.Spanner.SpannerBase.ExecuteStreamingSql(Google.Cloud.Spanner.V1.ExecuteSqlRequest,Grpc.Core.IServerStreamWriter{Google.Cloud.Spanner.V1.PartialResultSet},Grpc.Core.ServerCallContext)
  id: ExecuteStreamingSql(Google.Cloud.Spanner.V1.ExecuteSqlRequest,Grpc.Core.IServerStreamWriter{Google.Cloud.Spanner.V1.PartialResultSet},Grpc.Core.ServerCallContext)
  parent: Google.Cloud.Spanner.V1.Spanner.SpannerBase
  langs:
  - csharp
  - vb
  name: ExecuteStreamingSql(ExecuteSqlRequest, IServerStreamWriter<PartialResultSet>, ServerCallContext)
  nameWithType: Spanner.SpannerBase.ExecuteStreamingSql(ExecuteSqlRequest, IServerStreamWriter<PartialResultSet>, ServerCallContext)
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerBase.ExecuteStreamingSql(Google.Cloud.Spanner.V1.ExecuteSqlRequest, Grpc.Core.IServerStreamWriter<Google.Cloud.Spanner.V1.PartialResultSet>, Grpc.Core.ServerCallContext)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: ExecuteStreamingSql
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
    startLine: 286
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nLike [ExecuteSql][google.spanner.v1.Spanner.ExecuteSql], except returns the result\nset as a stream. Unlike [ExecuteSql][google.spanner.v1.Spanner.ExecuteSql], there\nis no limit on the size of the returned result set. However, no\nindividual row in the result set can exceed 100 MiB, and no\ncolumn value can exceed 10 MiB.\n"
  example: []
  syntax:
    content: public virtual Task ExecuteStreamingSql(ExecuteSqlRequest request, IServerStreamWriter<PartialResultSet> responseStream, ServerCallContext context)
    parameters:
    - id: request
      type: Google.Cloud.Spanner.V1.ExecuteSqlRequest
      description: The request received from the client.
    - id: responseStream
      type: Grpc.Core.IServerStreamWriter{Google.Cloud.Spanner.V1.PartialResultSet}
      description: Used for sending responses back to the client.
    - id: context
      type: Grpc.Core.ServerCallContext
      description: The context of the server-side call handler being invoked.
    return:
      type: System.Threading.Tasks.Task
      description: A task indicating completion of the handler.
    content.vb: Public Overridable Function ExecuteStreamingSql(request As ExecuteSqlRequest, responseStream As IServerStreamWriter(Of PartialResultSet), context As ServerCallContext) As Task
  overload: Google.Cloud.Spanner.V1.Spanner.SpannerBase.ExecuteStreamingSql*
  nameWithType.vb: Spanner.SpannerBase.ExecuteStreamingSql(ExecuteSqlRequest, IServerStreamWriter(Of PartialResultSet), ServerCallContext)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Google.Cloud.Spanner.V1.Spanner.SpannerBase.ExecuteStreamingSql(Google.Cloud.Spanner.V1.ExecuteSqlRequest, Grpc.Core.IServerStreamWriter(Of Google.Cloud.Spanner.V1.PartialResultSet), Grpc.Core.ServerCallContext)
  name.vb: ExecuteStreamingSql(ExecuteSqlRequest, IServerStreamWriter(Of PartialResultSet), ServerCallContext)
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerBase.ExecuteBatchDml(Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest,Grpc.Core.ServerCallContext)
  commentId: M:Google.Cloud.Spanner.V1.Spanner.SpannerBase.ExecuteBatchDml(Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest,Grpc.Core.ServerCallContext)
  id: ExecuteBatchDml(Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest,Grpc.Core.ServerCallContext)
  parent: Google.Cloud.Spanner.V1.Spanner.SpannerBase
  langs:
  - csharp
  - vb
  name: ExecuteBatchDml(ExecuteBatchDmlRequest, ServerCallContext)
  nameWithType: Spanner.SpannerBase.ExecuteBatchDml(ExecuteBatchDmlRequest, ServerCallContext)
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerBase.ExecuteBatchDml(Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest, Grpc.Core.ServerCallContext)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: ExecuteBatchDml
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
    startLine: 307
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nExecutes a batch of SQL DML statements. This method allows many statements\nto be run with lower latency than submitting them sequentially with\n[ExecuteSql][google.spanner.v1.Spanner.ExecuteSql].\n\nStatements are executed in sequential order. A request can succeed even if\na statement fails. The [ExecuteBatchDmlResponse.status][google.spanner.v1.ExecuteBatchDmlResponse.status] field in the\nresponse provides information about the statement that failed. Clients must\ninspect this field to determine whether an error occurred.\n\nExecution stops after the first failed statement; the remaining statements\nare not executed.\n"
  example: []
  syntax:
    content: public virtual Task<ExecuteBatchDmlResponse> ExecuteBatchDml(ExecuteBatchDmlRequest request, ServerCallContext context)
    parameters:
    - id: request
      type: Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest
      description: The request received from the client.
    - id: context
      type: Grpc.Core.ServerCallContext
      description: The context of the server-side call handler being invoked.
    return:
      type: System.Threading.Tasks.Task{Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse}
      description: The response to send back to the client (wrapped by a task).
    content.vb: Public Overridable Function ExecuteBatchDml(request As ExecuteBatchDmlRequest, context As ServerCallContext) As Task(Of ExecuteBatchDmlResponse)
  overload: Google.Cloud.Spanner.V1.Spanner.SpannerBase.ExecuteBatchDml*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerBase.Read(Google.Cloud.Spanner.V1.ReadRequest,Grpc.Core.ServerCallContext)
  commentId: M:Google.Cloud.Spanner.V1.Spanner.SpannerBase.Read(Google.Cloud.Spanner.V1.ReadRequest,Grpc.Core.ServerCallContext)
  id: Read(Google.Cloud.Spanner.V1.ReadRequest,Grpc.Core.ServerCallContext)
  parent: Google.Cloud.Spanner.V1.Spanner.SpannerBase
  langs:
  - csharp
  - vb
  name: Read(ReadRequest, ServerCallContext)
  nameWithType: Spanner.SpannerBase.Read(ReadRequest, ServerCallContext)
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerBase.Read(Google.Cloud.Spanner.V1.ReadRequest, Grpc.Core.ServerCallContext)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: Read
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
    startLine: 330
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nReads rows from the database using key lookups and scans, as a\nsimple key/value style alternative to\n[ExecuteSql][google.spanner.v1.Spanner.ExecuteSql].  This method cannot be used to\nreturn a result set larger than 10 MiB; if the read matches more\ndata than that, the read fails with a `FAILED_PRECONDITION`\nerror.\n\nReads inside read-write transactions might return `ABORTED`. If\nthis occurs, the application should restart the transaction from\nthe beginning. See [Transaction][google.spanner.v1.Transaction] for more details.\n\nLarger result sets can be yielded in streaming fashion by calling\n[StreamingRead][google.spanner.v1.Spanner.StreamingRead] instead.\n"
  example: []
  syntax:
    content: public virtual Task<ResultSet> Read(ReadRequest request, ServerCallContext context)
    parameters:
    - id: request
      type: Google.Cloud.Spanner.V1.ReadRequest
      description: The request received from the client.
    - id: context
      type: Grpc.Core.ServerCallContext
      description: The context of the server-side call handler being invoked.
    return:
      type: System.Threading.Tasks.Task{Google.Cloud.Spanner.V1.ResultSet}
      description: The response to send back to the client (wrapped by a task).
    content.vb: Public Overridable Function Read(request As ReadRequest, context As ServerCallContext) As Task(Of ResultSet)
  overload: Google.Cloud.Spanner.V1.Spanner.SpannerBase.Read*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerBase.StreamingRead(Google.Cloud.Spanner.V1.ReadRequest,Grpc.Core.IServerStreamWriter{Google.Cloud.Spanner.V1.PartialResultSet},Grpc.Core.ServerCallContext)
  commentId: M:Google.Cloud.Spanner.V1.Spanner.SpannerBase.StreamingRead(Google.Cloud.Spanner.V1.ReadRequest,Grpc.Core.IServerStreamWriter{Google.Cloud.Spanner.V1.PartialResultSet},Grpc.Core.ServerCallContext)
  id: StreamingRead(Google.Cloud.Spanner.V1.ReadRequest,Grpc.Core.IServerStreamWriter{Google.Cloud.Spanner.V1.PartialResultSet},Grpc.Core.ServerCallContext)
  parent: Google.Cloud.Spanner.V1.Spanner.SpannerBase
  langs:
  - csharp
  - vb
  name: StreamingRead(ReadRequest, IServerStreamWriter<PartialResultSet>, ServerCallContext)
  nameWithType: Spanner.SpannerBase.StreamingRead(ReadRequest, IServerStreamWriter<PartialResultSet>, ServerCallContext)
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerBase.StreamingRead(Google.Cloud.Spanner.V1.ReadRequest, Grpc.Core.IServerStreamWriter<Google.Cloud.Spanner.V1.PartialResultSet>, Grpc.Core.ServerCallContext)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: StreamingRead
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
    startLine: 346
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nLike [Read][google.spanner.v1.Spanner.Read], except returns the result set as a\nstream. Unlike [Read][google.spanner.v1.Spanner.Read], there is no limit on the\nsize of the returned result set. However, no individual row in\nthe result set can exceed 100 MiB, and no column value can exceed\n10 MiB.\n"
  example: []
  syntax:
    content: public virtual Task StreamingRead(ReadRequest request, IServerStreamWriter<PartialResultSet> responseStream, ServerCallContext context)
    parameters:
    - id: request
      type: Google.Cloud.Spanner.V1.ReadRequest
      description: The request received from the client.
    - id: responseStream
      type: Grpc.Core.IServerStreamWriter{Google.Cloud.Spanner.V1.PartialResultSet}
      description: Used for sending responses back to the client.
    - id: context
      type: Grpc.Core.ServerCallContext
      description: The context of the server-side call handler being invoked.
    return:
      type: System.Threading.Tasks.Task
      description: A task indicating completion of the handler.
    content.vb: Public Overridable Function StreamingRead(request As ReadRequest, responseStream As IServerStreamWriter(Of PartialResultSet), context As ServerCallContext) As Task
  overload: Google.Cloud.Spanner.V1.Spanner.SpannerBase.StreamingRead*
  nameWithType.vb: Spanner.SpannerBase.StreamingRead(ReadRequest, IServerStreamWriter(Of PartialResultSet), ServerCallContext)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Google.Cloud.Spanner.V1.Spanner.SpannerBase.StreamingRead(Google.Cloud.Spanner.V1.ReadRequest, Grpc.Core.IServerStreamWriter(Of Google.Cloud.Spanner.V1.PartialResultSet), Grpc.Core.ServerCallContext)
  name.vb: StreamingRead(ReadRequest, IServerStreamWriter(Of PartialResultSet), ServerCallContext)
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerBase.BeginTransaction(Google.Cloud.Spanner.V1.BeginTransactionRequest,Grpc.Core.ServerCallContext)
  commentId: M:Google.Cloud.Spanner.V1.Spanner.SpannerBase.BeginTransaction(Google.Cloud.Spanner.V1.BeginTransactionRequest,Grpc.Core.ServerCallContext)
  id: BeginTransaction(Google.Cloud.Spanner.V1.BeginTransactionRequest,Grpc.Core.ServerCallContext)
  parent: Google.Cloud.Spanner.V1.Spanner.SpannerBase
  langs:
  - csharp
  - vb
  name: BeginTransaction(BeginTransactionRequest, ServerCallContext)
  nameWithType: Spanner.SpannerBase.BeginTransaction(BeginTransactionRequest, ServerCallContext)
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerBase.BeginTransaction(Google.Cloud.Spanner.V1.BeginTransactionRequest, Grpc.Core.ServerCallContext)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: BeginTransaction
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
    startLine: 360
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nBegins a new transaction. This step can often be skipped:\n[Read][google.spanner.v1.Spanner.Read], [ExecuteSql][google.spanner.v1.Spanner.ExecuteSql] and\n[Commit][google.spanner.v1.Spanner.Commit] can begin a new transaction as a\nside-effect.\n"
  example: []
  syntax:
    content: public virtual Task<Transaction> BeginTransaction(BeginTransactionRequest request, ServerCallContext context)
    parameters:
    - id: request
      type: Google.Cloud.Spanner.V1.BeginTransactionRequest
      description: The request received from the client.
    - id: context
      type: Grpc.Core.ServerCallContext
      description: The context of the server-side call handler being invoked.
    return:
      type: System.Threading.Tasks.Task{Google.Cloud.Spanner.V1.Transaction}
      description: The response to send back to the client (wrapped by a task).
    content.vb: Public Overridable Function BeginTransaction(request As BeginTransactionRequest, context As ServerCallContext) As Task(Of Transaction)
  overload: Google.Cloud.Spanner.V1.Spanner.SpannerBase.BeginTransaction*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerBase.Commit(Google.Cloud.Spanner.V1.CommitRequest,Grpc.Core.ServerCallContext)
  commentId: M:Google.Cloud.Spanner.V1.Spanner.SpannerBase.Commit(Google.Cloud.Spanner.V1.CommitRequest,Grpc.Core.ServerCallContext)
  id: Commit(Google.Cloud.Spanner.V1.CommitRequest,Grpc.Core.ServerCallContext)
  parent: Google.Cloud.Spanner.V1.Spanner.SpannerBase
  langs:
  - csharp
  - vb
  name: Commit(CommitRequest, ServerCallContext)
  nameWithType: Spanner.SpannerBase.Commit(CommitRequest, ServerCallContext)
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerBase.Commit(Google.Cloud.Spanner.V1.CommitRequest, Grpc.Core.ServerCallContext)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: Commit
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
    startLine: 384
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nCommits a transaction. The request includes the mutations to be\napplied to rows in the database.\n\n`Commit` might return an `ABORTED` error. This can occur at any time;\ncommonly, the cause is conflicts with concurrent\ntransactions. However, it can also happen for a variety of other\nreasons. If `Commit` returns `ABORTED`, the caller should re-attempt\nthe transaction from the beginning, re-using the same session.\n\nOn very rare occasions, `Commit` might return `UNKNOWN`. This can happen,\nfor example, if the client job experiences a 1+ hour networking failure.\nAt that point, Cloud Spanner has lost track of the transaction outcome and\nwe recommend that you perform another read from the database to see the\nstate of things as they are now.\n"
  example: []
  syntax:
    content: public virtual Task<CommitResponse> Commit(CommitRequest request, ServerCallContext context)
    parameters:
    - id: request
      type: Google.Cloud.Spanner.V1.CommitRequest
      description: The request received from the client.
    - id: context
      type: Grpc.Core.ServerCallContext
      description: The context of the server-side call handler being invoked.
    return:
      type: System.Threading.Tasks.Task{Google.Cloud.Spanner.V1.CommitResponse}
      description: The response to send back to the client (wrapped by a task).
    content.vb: Public Overridable Function Commit(request As CommitRequest, context As ServerCallContext) As Task(Of CommitResponse)
  overload: Google.Cloud.Spanner.V1.Spanner.SpannerBase.Commit*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerBase.Rollback(Google.Cloud.Spanner.V1.RollbackRequest,Grpc.Core.ServerCallContext)
  commentId: M:Google.Cloud.Spanner.V1.Spanner.SpannerBase.Rollback(Google.Cloud.Spanner.V1.RollbackRequest,Grpc.Core.ServerCallContext)
  id: Rollback(Google.Cloud.Spanner.V1.RollbackRequest,Grpc.Core.ServerCallContext)
  parent: Google.Cloud.Spanner.V1.Spanner.SpannerBase
  langs:
  - csharp
  - vb
  name: Rollback(RollbackRequest, ServerCallContext)
  nameWithType: Spanner.SpannerBase.Rollback(RollbackRequest, ServerCallContext)
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerBase.Rollback(Google.Cloud.Spanner.V1.RollbackRequest, Grpc.Core.ServerCallContext)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: Rollback
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
    startLine: 402
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nRolls back a transaction, releasing any locks it holds. It is a good\nidea to call this for any transaction that includes one or more\n[Read][google.spanner.v1.Spanner.Read] or [ExecuteSql][google.spanner.v1.Spanner.ExecuteSql] requests and\nultimately decides not to commit.\n\n`Rollback` returns `OK` if it successfully aborts the transaction, the\ntransaction was already aborted, or the transaction is not\nfound. `Rollback` never returns `ABORTED`.\n"
  example: []
  syntax:
    content: public virtual Task<Empty> Rollback(RollbackRequest request, ServerCallContext context)
    parameters:
    - id: request
      type: Google.Cloud.Spanner.V1.RollbackRequest
      description: The request received from the client.
    - id: context
      type: Grpc.Core.ServerCallContext
      description: The context of the server-side call handler being invoked.
    return:
      type: System.Threading.Tasks.Task{Google.Protobuf.WellKnownTypes.Empty}
      description: The response to send back to the client (wrapped by a task).
    content.vb: Public Overridable Function Rollback(request As RollbackRequest, context As ServerCallContext) As Task(Of Empty)
  overload: Google.Cloud.Spanner.V1.Spanner.SpannerBase.Rollback*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerBase.PartitionQuery(Google.Cloud.Spanner.V1.PartitionQueryRequest,Grpc.Core.ServerCallContext)
  commentId: M:Google.Cloud.Spanner.V1.Spanner.SpannerBase.PartitionQuery(Google.Cloud.Spanner.V1.PartitionQueryRequest,Grpc.Core.ServerCallContext)
  id: PartitionQuery(Google.Cloud.Spanner.V1.PartitionQueryRequest,Grpc.Core.ServerCallContext)
  parent: Google.Cloud.Spanner.V1.Spanner.SpannerBase
  langs:
  - csharp
  - vb
  name: PartitionQuery(PartitionQueryRequest, ServerCallContext)
  nameWithType: Spanner.SpannerBase.PartitionQuery(PartitionQueryRequest, ServerCallContext)
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerBase.PartitionQuery(Google.Cloud.Spanner.V1.PartitionQueryRequest, Grpc.Core.ServerCallContext)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: PartitionQuery
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
    startLine: 423
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nCreates a set of partition tokens that can be used to execute a query\noperation in parallel.  Each of the returned partition tokens can be used\nby [ExecuteStreamingSql][google.spanner.v1.Spanner.ExecuteStreamingSql] to specify a subset\nof the query result to read.  The same session and read-only transaction\nmust be used by the PartitionQueryRequest used to create the\npartition tokens and the ExecuteSqlRequests that use the partition tokens.\n\nPartition tokens become invalid when the session used to create them\nis deleted, is idle for too long, begins a new transaction, or becomes too\nold.  When any of these happen, it is not possible to resume the query, and\nthe whole operation must be restarted from the beginning.\n"
  example: []
  syntax:
    content: public virtual Task<PartitionResponse> PartitionQuery(PartitionQueryRequest request, ServerCallContext context)
    parameters:
    - id: request
      type: Google.Cloud.Spanner.V1.PartitionQueryRequest
      description: The request received from the client.
    - id: context
      type: Grpc.Core.ServerCallContext
      description: The context of the server-side call handler being invoked.
    return:
      type: System.Threading.Tasks.Task{Google.Cloud.Spanner.V1.PartitionResponse}
      description: The response to send back to the client (wrapped by a task).
    content.vb: Public Overridable Function PartitionQuery(request As PartitionQueryRequest, context As ServerCallContext) As Task(Of PartitionResponse)
  overload: Google.Cloud.Spanner.V1.Spanner.SpannerBase.PartitionQuery*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerBase.PartitionRead(Google.Cloud.Spanner.V1.PartitionReadRequest,Grpc.Core.ServerCallContext)
  commentId: M:Google.Cloud.Spanner.V1.Spanner.SpannerBase.PartitionRead(Google.Cloud.Spanner.V1.PartitionReadRequest,Grpc.Core.ServerCallContext)
  id: PartitionRead(Google.Cloud.Spanner.V1.PartitionReadRequest,Grpc.Core.ServerCallContext)
  parent: Google.Cloud.Spanner.V1.Spanner.SpannerBase
  langs:
  - csharp
  - vb
  name: PartitionRead(PartitionReadRequest, ServerCallContext)
  nameWithType: Spanner.SpannerBase.PartitionRead(PartitionReadRequest, ServerCallContext)
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerBase.PartitionRead(Google.Cloud.Spanner.V1.PartitionReadRequest, Grpc.Core.ServerCallContext)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: PartitionRead
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerGrpc.cs
    startLine: 446
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nCreates a set of partition tokens that can be used to execute a read\noperation in parallel.  Each of the returned partition tokens can be used\nby [StreamingRead][google.spanner.v1.Spanner.StreamingRead] to specify a subset of the read\nresult to read.  The same session and read-only transaction must be used by\nthe PartitionReadRequest used to create the partition tokens and the\nReadRequests that use the partition tokens.  There are no ordering\nguarantees on rows returned among the returned partition tokens, or even\nwithin each individual StreamingRead call issued with a partition_token.\n\nPartition tokens become invalid when the session used to create them\nis deleted, is idle for too long, begins a new transaction, or becomes too\nold.  When any of these happen, it is not possible to resume the read, and\nthe whole operation must be restarted from the beginning.\n"
  example: []
  syntax:
    content: public virtual Task<PartitionResponse> PartitionRead(PartitionReadRequest request, ServerCallContext context)
    parameters:
    - id: request
      type: Google.Cloud.Spanner.V1.PartitionReadRequest
      description: The request received from the client.
    - id: context
      type: Grpc.Core.ServerCallContext
      description: The context of the server-side call handler being invoked.
    return:
      type: System.Threading.Tasks.Task{Google.Cloud.Spanner.V1.PartitionResponse}
      description: The response to send back to the client (wrapped by a task).
    content.vb: Public Overridable Function PartitionRead(request As PartitionReadRequest, context As ServerCallContext) As Task(Of PartitionResponse)
  overload: Google.Cloud.Spanner.V1.Spanner.SpannerBase.PartitionRead*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Google.Cloud.Spanner.V1
  commentId: N:Google.Cloud.Spanner.V1
  name: Google.Cloud.Spanner.V1
  nameWithType: Google.Cloud.Spanner.V1
  fullName: Google.Cloud.Spanner.V1
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerBase.CreateSession*
  commentId: Overload:Google.Cloud.Spanner.V1.Spanner.SpannerBase.CreateSession
  name: CreateSession
  nameWithType: Spanner.SpannerBase.CreateSession
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerBase.CreateSession
- uid: Google.Cloud.Spanner.V1.CreateSessionRequest
  commentId: T:Google.Cloud.Spanner.V1.CreateSessionRequest
  parent: Google.Cloud.Spanner.V1
  name: CreateSessionRequest
  nameWithType: CreateSessionRequest
  fullName: Google.Cloud.Spanner.V1.CreateSessionRequest
- uid: Grpc.Core.ServerCallContext
  commentId: T:Grpc.Core.ServerCallContext
  parent: Grpc.Core
  isExternal: true
  name: ServerCallContext
  nameWithType: ServerCallContext
  fullName: Grpc.Core.ServerCallContext
- uid: System.Threading.Tasks.Task{Google.Cloud.Spanner.V1.Session}
  commentId: T:System.Threading.Tasks.Task{Google.Cloud.Spanner.V1.Session}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Session>
  nameWithType: Task<Session>
  fullName: System.Threading.Tasks.Task<Google.Cloud.Spanner.V1.Session>
  nameWithType.vb: Task(Of Session)
  fullName.vb: System.Threading.Tasks.Task(Of Google.Cloud.Spanner.V1.Session)
  name.vb: Task(Of Session)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Spanner.V1.Session
    name: Session
    nameWithType: Session
    fullName: Google.Cloud.Spanner.V1.Session
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Spanner.V1.Session
    name: Session
    nameWithType: Session
    fullName: Google.Cloud.Spanner.V1.Session
  - name: )
    nameWithType: )
    fullName: )
- uid: Grpc.Core
  commentId: N:Grpc.Core
  isExternal: true
  name: Grpc.Core
  nameWithType: Grpc.Core
  fullName: Grpc.Core
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerBase.BatchCreateSessions*
  commentId: Overload:Google.Cloud.Spanner.V1.Spanner.SpannerBase.BatchCreateSessions
  name: BatchCreateSessions
  nameWithType: Spanner.SpannerBase.BatchCreateSessions
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerBase.BatchCreateSessions
- uid: Google.Cloud.Spanner.V1.BatchCreateSessionsRequest
  commentId: T:Google.Cloud.Spanner.V1.BatchCreateSessionsRequest
  parent: Google.Cloud.Spanner.V1
  name: BatchCreateSessionsRequest
  nameWithType: BatchCreateSessionsRequest
  fullName: Google.Cloud.Spanner.V1.BatchCreateSessionsRequest
- uid: System.Threading.Tasks.Task{Google.Cloud.Spanner.V1.BatchCreateSessionsResponse}
  commentId: T:System.Threading.Tasks.Task{Google.Cloud.Spanner.V1.BatchCreateSessionsResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<BatchCreateSessionsResponse>
  nameWithType: Task<BatchCreateSessionsResponse>
  fullName: System.Threading.Tasks.Task<Google.Cloud.Spanner.V1.BatchCreateSessionsResponse>
  nameWithType.vb: Task(Of BatchCreateSessionsResponse)
  fullName.vb: System.Threading.Tasks.Task(Of Google.Cloud.Spanner.V1.BatchCreateSessionsResponse)
  name.vb: Task(Of BatchCreateSessionsResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Spanner.V1.BatchCreateSessionsResponse
    name: BatchCreateSessionsResponse
    nameWithType: BatchCreateSessionsResponse
    fullName: Google.Cloud.Spanner.V1.BatchCreateSessionsResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Spanner.V1.BatchCreateSessionsResponse
    name: BatchCreateSessionsResponse
    nameWithType: BatchCreateSessionsResponse
    fullName: Google.Cloud.Spanner.V1.BatchCreateSessionsResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerBase.GetSession*
  commentId: Overload:Google.Cloud.Spanner.V1.Spanner.SpannerBase.GetSession
  name: GetSession
  nameWithType: Spanner.SpannerBase.GetSession
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerBase.GetSession
- uid: Google.Cloud.Spanner.V1.GetSessionRequest
  commentId: T:Google.Cloud.Spanner.V1.GetSessionRequest
  parent: Google.Cloud.Spanner.V1
  name: GetSessionRequest
  nameWithType: GetSessionRequest
  fullName: Google.Cloud.Spanner.V1.GetSessionRequest
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerBase.ListSessions*
  commentId: Overload:Google.Cloud.Spanner.V1.Spanner.SpannerBase.ListSessions
  name: ListSessions
  nameWithType: Spanner.SpannerBase.ListSessions
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerBase.ListSessions
- uid: Google.Cloud.Spanner.V1.ListSessionsRequest
  commentId: T:Google.Cloud.Spanner.V1.ListSessionsRequest
  parent: Google.Cloud.Spanner.V1
  name: ListSessionsRequest
  nameWithType: ListSessionsRequest
  fullName: Google.Cloud.Spanner.V1.ListSessionsRequest
- uid: System.Threading.Tasks.Task{Google.Cloud.Spanner.V1.ListSessionsResponse}
  commentId: T:System.Threading.Tasks.Task{Google.Cloud.Spanner.V1.ListSessionsResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ListSessionsResponse>
  nameWithType: Task<ListSessionsResponse>
  fullName: System.Threading.Tasks.Task<Google.Cloud.Spanner.V1.ListSessionsResponse>
  nameWithType.vb: Task(Of ListSessionsResponse)
  fullName.vb: System.Threading.Tasks.Task(Of Google.Cloud.Spanner.V1.ListSessionsResponse)
  name.vb: Task(Of ListSessionsResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Spanner.V1.ListSessionsResponse
    name: ListSessionsResponse
    nameWithType: ListSessionsResponse
    fullName: Google.Cloud.Spanner.V1.ListSessionsResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Spanner.V1.ListSessionsResponse
    name: ListSessionsResponse
    nameWithType: ListSessionsResponse
    fullName: Google.Cloud.Spanner.V1.ListSessionsResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerBase.DeleteSession*
  commentId: Overload:Google.Cloud.Spanner.V1.Spanner.SpannerBase.DeleteSession
  name: DeleteSession
  nameWithType: Spanner.SpannerBase.DeleteSession
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerBase.DeleteSession
- uid: Google.Cloud.Spanner.V1.DeleteSessionRequest
  commentId: T:Google.Cloud.Spanner.V1.DeleteSessionRequest
  parent: Google.Cloud.Spanner.V1
  name: DeleteSessionRequest
  nameWithType: DeleteSessionRequest
  fullName: Google.Cloud.Spanner.V1.DeleteSessionRequest
- uid: System.Threading.Tasks.Task{Google.Protobuf.WellKnownTypes.Empty}
  commentId: T:System.Threading.Tasks.Task{Google.Protobuf.WellKnownTypes.Empty}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Empty>
  nameWithType: Task<Empty>
  fullName: System.Threading.Tasks.Task<Google.Protobuf.WellKnownTypes.Empty>
  nameWithType.vb: Task(Of Empty)
  fullName.vb: System.Threading.Tasks.Task(Of Google.Protobuf.WellKnownTypes.Empty)
  name.vb: Task(Of Empty)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Protobuf.WellKnownTypes.Empty
    name: Empty
    nameWithType: Empty
    fullName: Google.Protobuf.WellKnownTypes.Empty
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Protobuf.WellKnownTypes.Empty
    name: Empty
    nameWithType: Empty
    fullName: Google.Protobuf.WellKnownTypes.Empty
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerBase.ExecuteSql*
  commentId: Overload:Google.Cloud.Spanner.V1.Spanner.SpannerBase.ExecuteSql
  name: ExecuteSql
  nameWithType: Spanner.SpannerBase.ExecuteSql
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerBase.ExecuteSql
- uid: Google.Cloud.Spanner.V1.ExecuteSqlRequest
  commentId: T:Google.Cloud.Spanner.V1.ExecuteSqlRequest
  parent: Google.Cloud.Spanner.V1
  name: ExecuteSqlRequest
  nameWithType: ExecuteSqlRequest
  fullName: Google.Cloud.Spanner.V1.ExecuteSqlRequest
- uid: System.Threading.Tasks.Task{Google.Cloud.Spanner.V1.ResultSet}
  commentId: T:System.Threading.Tasks.Task{Google.Cloud.Spanner.V1.ResultSet}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ResultSet>
  nameWithType: Task<ResultSet>
  fullName: System.Threading.Tasks.Task<Google.Cloud.Spanner.V1.ResultSet>
  nameWithType.vb: Task(Of ResultSet)
  fullName.vb: System.Threading.Tasks.Task(Of Google.Cloud.Spanner.V1.ResultSet)
  name.vb: Task(Of ResultSet)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Spanner.V1.ResultSet
    name: ResultSet
    nameWithType: ResultSet
    fullName: Google.Cloud.Spanner.V1.ResultSet
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Spanner.V1.ResultSet
    name: ResultSet
    nameWithType: ResultSet
    fullName: Google.Cloud.Spanner.V1.ResultSet
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerBase.ExecuteStreamingSql*
  commentId: Overload:Google.Cloud.Spanner.V1.Spanner.SpannerBase.ExecuteStreamingSql
  name: ExecuteStreamingSql
  nameWithType: Spanner.SpannerBase.ExecuteStreamingSql
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerBase.ExecuteStreamingSql
- uid: Grpc.Core.IServerStreamWriter{Google.Cloud.Spanner.V1.PartialResultSet}
  commentId: T:Grpc.Core.IServerStreamWriter{Google.Cloud.Spanner.V1.PartialResultSet}
  parent: Grpc.Core
  definition: Grpc.Core.IServerStreamWriter`1
  name: IServerStreamWriter<PartialResultSet>
  nameWithType: IServerStreamWriter<PartialResultSet>
  fullName: Grpc.Core.IServerStreamWriter<Google.Cloud.Spanner.V1.PartialResultSet>
  nameWithType.vb: IServerStreamWriter(Of PartialResultSet)
  fullName.vb: Grpc.Core.IServerStreamWriter(Of Google.Cloud.Spanner.V1.PartialResultSet)
  name.vb: IServerStreamWriter(Of PartialResultSet)
  spec.csharp:
  - uid: Grpc.Core.IServerStreamWriter`1
    name: IServerStreamWriter
    nameWithType: IServerStreamWriter
    fullName: Grpc.Core.IServerStreamWriter
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Spanner.V1.PartialResultSet
    name: PartialResultSet
    nameWithType: PartialResultSet
    fullName: Google.Cloud.Spanner.V1.PartialResultSet
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Grpc.Core.IServerStreamWriter`1
    name: IServerStreamWriter
    nameWithType: IServerStreamWriter
    fullName: Grpc.Core.IServerStreamWriter
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Spanner.V1.PartialResultSet
    name: PartialResultSet
    nameWithType: PartialResultSet
    fullName: Google.Cloud.Spanner.V1.PartialResultSet
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Grpc.Core.IServerStreamWriter`1
  commentId: T:Grpc.Core.IServerStreamWriter`1
  isExternal: true
  name: IServerStreamWriter<T>
  nameWithType: IServerStreamWriter<T>
  fullName: Grpc.Core.IServerStreamWriter<T>
  nameWithType.vb: IServerStreamWriter(Of T)
  fullName.vb: Grpc.Core.IServerStreamWriter(Of T)
  name.vb: IServerStreamWriter(Of T)
  spec.csharp:
  - uid: Grpc.Core.IServerStreamWriter`1
    name: IServerStreamWriter
    nameWithType: IServerStreamWriter
    fullName: Grpc.Core.IServerStreamWriter
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Grpc.Core.IServerStreamWriter`1
    name: IServerStreamWriter
    nameWithType: IServerStreamWriter
    fullName: Grpc.Core.IServerStreamWriter
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerBase.ExecuteBatchDml*
  commentId: Overload:Google.Cloud.Spanner.V1.Spanner.SpannerBase.ExecuteBatchDml
  name: ExecuteBatchDml
  nameWithType: Spanner.SpannerBase.ExecuteBatchDml
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerBase.ExecuteBatchDml
- uid: Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest
  commentId: T:Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest
  parent: Google.Cloud.Spanner.V1
  name: ExecuteBatchDmlRequest
  nameWithType: ExecuteBatchDmlRequest
  fullName: Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest
- uid: System.Threading.Tasks.Task{Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse}
  commentId: T:System.Threading.Tasks.Task{Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ExecuteBatchDmlResponse>
  nameWithType: Task<ExecuteBatchDmlResponse>
  fullName: System.Threading.Tasks.Task<Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse>
  nameWithType.vb: Task(Of ExecuteBatchDmlResponse)
  fullName.vb: System.Threading.Tasks.Task(Of Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse)
  name.vb: Task(Of ExecuteBatchDmlResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse
    name: ExecuteBatchDmlResponse
    nameWithType: ExecuteBatchDmlResponse
    fullName: Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse
    name: ExecuteBatchDmlResponse
    nameWithType: ExecuteBatchDmlResponse
    fullName: Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerBase.Read*
  commentId: Overload:Google.Cloud.Spanner.V1.Spanner.SpannerBase.Read
  name: Read
  nameWithType: Spanner.SpannerBase.Read
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerBase.Read
- uid: Google.Cloud.Spanner.V1.ReadRequest
  commentId: T:Google.Cloud.Spanner.V1.ReadRequest
  parent: Google.Cloud.Spanner.V1
  name: ReadRequest
  nameWithType: ReadRequest
  fullName: Google.Cloud.Spanner.V1.ReadRequest
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerBase.StreamingRead*
  commentId: Overload:Google.Cloud.Spanner.V1.Spanner.SpannerBase.StreamingRead
  name: StreamingRead
  nameWithType: Spanner.SpannerBase.StreamingRead
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerBase.StreamingRead
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerBase.BeginTransaction*
  commentId: Overload:Google.Cloud.Spanner.V1.Spanner.SpannerBase.BeginTransaction
  name: BeginTransaction
  nameWithType: Spanner.SpannerBase.BeginTransaction
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerBase.BeginTransaction
- uid: Google.Cloud.Spanner.V1.BeginTransactionRequest
  commentId: T:Google.Cloud.Spanner.V1.BeginTransactionRequest
  parent: Google.Cloud.Spanner.V1
  name: BeginTransactionRequest
  nameWithType: BeginTransactionRequest
  fullName: Google.Cloud.Spanner.V1.BeginTransactionRequest
- uid: System.Threading.Tasks.Task{Google.Cloud.Spanner.V1.Transaction}
  commentId: T:System.Threading.Tasks.Task{Google.Cloud.Spanner.V1.Transaction}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Transaction>
  nameWithType: Task<Transaction>
  fullName: System.Threading.Tasks.Task<Google.Cloud.Spanner.V1.Transaction>
  nameWithType.vb: Task(Of Transaction)
  fullName.vb: System.Threading.Tasks.Task(Of Google.Cloud.Spanner.V1.Transaction)
  name.vb: Task(Of Transaction)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Spanner.V1.Transaction
    name: Transaction
    nameWithType: Transaction
    fullName: Google.Cloud.Spanner.V1.Transaction
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Spanner.V1.Transaction
    name: Transaction
    nameWithType: Transaction
    fullName: Google.Cloud.Spanner.V1.Transaction
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerBase.Commit*
  commentId: Overload:Google.Cloud.Spanner.V1.Spanner.SpannerBase.Commit
  name: Commit
  nameWithType: Spanner.SpannerBase.Commit
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerBase.Commit
- uid: Google.Cloud.Spanner.V1.CommitRequest
  commentId: T:Google.Cloud.Spanner.V1.CommitRequest
  parent: Google.Cloud.Spanner.V1
  name: CommitRequest
  nameWithType: CommitRequest
  fullName: Google.Cloud.Spanner.V1.CommitRequest
- uid: System.Threading.Tasks.Task{Google.Cloud.Spanner.V1.CommitResponse}
  commentId: T:System.Threading.Tasks.Task{Google.Cloud.Spanner.V1.CommitResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<CommitResponse>
  nameWithType: Task<CommitResponse>
  fullName: System.Threading.Tasks.Task<Google.Cloud.Spanner.V1.CommitResponse>
  nameWithType.vb: Task(Of CommitResponse)
  fullName.vb: System.Threading.Tasks.Task(Of Google.Cloud.Spanner.V1.CommitResponse)
  name.vb: Task(Of CommitResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Spanner.V1.CommitResponse
    name: CommitResponse
    nameWithType: CommitResponse
    fullName: Google.Cloud.Spanner.V1.CommitResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Spanner.V1.CommitResponse
    name: CommitResponse
    nameWithType: CommitResponse
    fullName: Google.Cloud.Spanner.V1.CommitResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerBase.Rollback*
  commentId: Overload:Google.Cloud.Spanner.V1.Spanner.SpannerBase.Rollback
  name: Rollback
  nameWithType: Spanner.SpannerBase.Rollback
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerBase.Rollback
- uid: Google.Cloud.Spanner.V1.RollbackRequest
  commentId: T:Google.Cloud.Spanner.V1.RollbackRequest
  parent: Google.Cloud.Spanner.V1
  name: RollbackRequest
  nameWithType: RollbackRequest
  fullName: Google.Cloud.Spanner.V1.RollbackRequest
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerBase.PartitionQuery*
  commentId: Overload:Google.Cloud.Spanner.V1.Spanner.SpannerBase.PartitionQuery
  name: PartitionQuery
  nameWithType: Spanner.SpannerBase.PartitionQuery
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerBase.PartitionQuery
- uid: Google.Cloud.Spanner.V1.PartitionQueryRequest
  commentId: T:Google.Cloud.Spanner.V1.PartitionQueryRequest
  parent: Google.Cloud.Spanner.V1
  name: PartitionQueryRequest
  nameWithType: PartitionQueryRequest
  fullName: Google.Cloud.Spanner.V1.PartitionQueryRequest
- uid: System.Threading.Tasks.Task{Google.Cloud.Spanner.V1.PartitionResponse}
  commentId: T:System.Threading.Tasks.Task{Google.Cloud.Spanner.V1.PartitionResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<PartitionResponse>
  nameWithType: Task<PartitionResponse>
  fullName: System.Threading.Tasks.Task<Google.Cloud.Spanner.V1.PartitionResponse>
  nameWithType.vb: Task(Of PartitionResponse)
  fullName.vb: System.Threading.Tasks.Task(Of Google.Cloud.Spanner.V1.PartitionResponse)
  name.vb: Task(Of PartitionResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Spanner.V1.PartitionResponse
    name: PartitionResponse
    nameWithType: PartitionResponse
    fullName: Google.Cloud.Spanner.V1.PartitionResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Spanner.V1.PartitionResponse
    name: PartitionResponse
    nameWithType: PartitionResponse
    fullName: Google.Cloud.Spanner.V1.PartitionResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Cloud.Spanner.V1.Spanner.SpannerBase.PartitionRead*
  commentId: Overload:Google.Cloud.Spanner.V1.Spanner.SpannerBase.PartitionRead
  name: PartitionRead
  nameWithType: Spanner.SpannerBase.PartitionRead
  fullName: Google.Cloud.Spanner.V1.Spanner.SpannerBase.PartitionRead
- uid: Google.Cloud.Spanner.V1.PartitionReadRequest
  commentId: T:Google.Cloud.Spanner.V1.PartitionReadRequest
  parent: Google.Cloud.Spanner.V1
  name: PartitionReadRequest
  nameWithType: PartitionReadRequest
  fullName: Google.Cloud.Spanner.V1.PartitionReadRequest
