### YamlMime:ManagedReference
items:
- uid: "com.google.cloud.bigquery.ModelId"
  id: "ModelId"
  parent: "com.google.cloud.bigquery"
  children:
  - "com.google.cloud.bigquery.ModelId.equals(java.lang.Object)"
  - "com.google.cloud.bigquery.ModelId.getDataset()"
  - "com.google.cloud.bigquery.ModelId.getModel()"
  - "com.google.cloud.bigquery.ModelId.getProject()"
  - "com.google.cloud.bigquery.ModelId.hashCode()"
  - "com.google.cloud.bigquery.ModelId.of(java.lang.String,java.lang.String)"
  - "com.google.cloud.bigquery.ModelId.of(java.lang.String,java.lang.String,java.lang.String)"
  - "com.google.cloud.bigquery.ModelId.toString()"
  langs:
  - "java"
  name: "ModelId"
  nameWithType: "ModelId"
  fullName: "com.google.cloud.bigquery.ModelId"
  type: "Class"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public final class ModelId implements Serializable"
  inheritance:
  - "java.lang.Object"
  implements:
  - "java.io.Serializable"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.google.cloud.bigquery.ModelId.ModelId(java.lang.String,java.lang.String,java.lang.String)"
  id: "ModelId(java.lang.String,java.lang.String,java.lang.String)"
  parent: "com.google.cloud.bigquery.ModelId"
  langs:
  - "java"
  name: "ModelId(String project, String dataset, String model)"
  nameWithType: "ModelId.ModelId(String project, String dataset, String model)"
  fullName: "com.google.cloud.bigquery.ModelId.ModelId(String project, String dataset, String model)"
  overload: "com.google.cloud.bigquery.ModelId.ModelId*"
  type: "Constructor"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "private ModelId(String project, String dataset, String model)"
    parameters:
    - id: "project"
      type: "java.lang.String"
    - id: "dataset"
      type: "java.lang.String"
    - id: "model"
      type: "java.lang.String"
- uid: "com.google.cloud.bigquery.ModelId.equals(java.lang.Object)"
  id: "equals(java.lang.Object)"
  parent: "com.google.cloud.bigquery.ModelId"
  langs:
  - "java"
  name: "equals(Object obj)"
  nameWithType: "ModelId.equals(Object obj)"
  fullName: "com.google.cloud.bigquery.ModelId.equals(Object obj)"
  overload: "com.google.cloud.bigquery.ModelId.equals*"
  overridden: "java.lang.Object.equals(java.lang.Object)"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public boolean equals(Object obj)"
    parameters:
    - id: "obj"
      type: "java.lang.Object"
    return:
      type: "boolean"
- uid: "com.google.cloud.bigquery.ModelId.getDataset()"
  id: "getDataset()"
  parent: "com.google.cloud.bigquery.ModelId"
  langs:
  - "java"
  name: "getDataset()"
  nameWithType: "ModelId.getDataset()"
  fullName: "com.google.cloud.bigquery.ModelId.getDataset()"
  overload: "com.google.cloud.bigquery.ModelId.getDataset*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Return corresponding dataset ID for this model. \\*"
  syntax:
    content: "public String getDataset()"
    return:
      type: "java.lang.String"
- uid: "com.google.cloud.bigquery.ModelId.getModel()"
  id: "getModel()"
  parent: "com.google.cloud.bigquery.ModelId"
  langs:
  - "java"
  name: "getModel()"
  nameWithType: "ModelId.getModel()"
  fullName: "com.google.cloud.bigquery.ModelId.getModel()"
  overload: "com.google.cloud.bigquery.ModelId.getModel*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Return corresponding model ID for this model. \\*"
  syntax:
    content: "public String getModel()"
    return:
      type: "java.lang.String"
- uid: "com.google.cloud.bigquery.ModelId.getProject()"
  id: "getProject()"
  parent: "com.google.cloud.bigquery.ModelId"
  langs:
  - "java"
  name: "getProject()"
  nameWithType: "ModelId.getProject()"
  fullName: "com.google.cloud.bigquery.ModelId.getProject()"
  overload: "com.google.cloud.bigquery.ModelId.getProject*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Return corresponding project ID for this model. \\*"
  syntax:
    content: "public String getProject()"
    return:
      type: "java.lang.String"
- uid: "com.google.cloud.bigquery.ModelId.hashCode()"
  id: "hashCode()"
  parent: "com.google.cloud.bigquery.ModelId"
  langs:
  - "java"
  name: "hashCode()"
  nameWithType: "ModelId.hashCode()"
  fullName: "com.google.cloud.bigquery.ModelId.hashCode()"
  overload: "com.google.cloud.bigquery.ModelId.hashCode*"
  overridden: "java.lang.Object.hashCode()"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public int hashCode()"
    return:
      type: "int"
- uid: "com.google.cloud.bigquery.ModelId.of(java.lang.String,java.lang.String)"
  id: "of(java.lang.String,java.lang.String)"
  parent: "com.google.cloud.bigquery.ModelId"
  langs:
  - "java"
  name: "of(String dataset, String model)"
  nameWithType: "ModelId.of(String dataset, String model)"
  fullName: "com.google.cloud.bigquery.ModelId.of(String dataset, String model)"
  overload: "com.google.cloud.bigquery.ModelId.of*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Creates a model identity given dataset and model identifiers. \\*"
  syntax:
    content: "public static ModelId of(String dataset, String model)"
    parameters:
    - id: "dataset"
      type: "java.lang.String"
    - id: "model"
      type: "java.lang.String"
    return:
      type: "com.google.cloud.bigquery.ModelId"
- uid: "com.google.cloud.bigquery.ModelId.of(java.lang.String,java.lang.String,java.lang.String)"
  id: "of(java.lang.String,java.lang.String,java.lang.String)"
  parent: "com.google.cloud.bigquery.ModelId"
  langs:
  - "java"
  name: "of(String project, String dataset, String model)"
  nameWithType: "ModelId.of(String project, String dataset, String model)"
  fullName: "com.google.cloud.bigquery.ModelId.of(String project, String dataset, String model)"
  overload: "com.google.cloud.bigquery.ModelId.of*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Creates a model identity given project, dataset, and model identifiers. \\*"
  syntax:
    content: "public static ModelId of(String project, String dataset, String model)"
    parameters:
    - id: "project"
      type: "java.lang.String"
    - id: "dataset"
      type: "java.lang.String"
    - id: "model"
      type: "java.lang.String"
    return:
      type: "com.google.cloud.bigquery.ModelId"
- uid: "com.google.cloud.bigquery.ModelId.toString()"
  id: "toString()"
  parent: "com.google.cloud.bigquery.ModelId"
  langs:
  - "java"
  name: "toString()"
  nameWithType: "ModelId.toString()"
  fullName: "com.google.cloud.bigquery.ModelId.toString()"
  overload: "com.google.cloud.bigquery.ModelId.toString*"
  overridden: "java.lang.Object.toString()"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public String toString()"
    return:
      type: "java.lang.String"
references:
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.google.cloud.bigquery.ModelId.ModelId*"
  name: "ModelId"
  nameWithType: "ModelId.ModelId"
  fullName: "com.google.cloud.bigquery.ModelId.ModelId"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.ModelId.getProject*"
  name: "getProject"
  nameWithType: "ModelId.getProject"
  fullName: "com.google.cloud.bigquery.ModelId.getProject"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.ModelId.getDataset*"
  name: "getDataset"
  nameWithType: "ModelId.getDataset"
  fullName: "com.google.cloud.bigquery.ModelId.getDataset"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.ModelId.getModel*"
  name: "getModel"
  nameWithType: "ModelId.getModel"
  fullName: "com.google.cloud.bigquery.ModelId.getModel"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.ModelId.of*"
  name: "of"
  nameWithType: "ModelId.of"
  fullName: "com.google.cloud.bigquery.ModelId.of"
  package: "com.google.cloud.bigquery"
- uid: "java.lang.Object"
  spec.java:
  - uid: "java.lang.Object"
    name: "Object"
    fullName: "java.lang.Object"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "com.google.cloud.bigquery.ModelId.equals*"
  name: "equals"
  nameWithType: "ModelId.equals"
  fullName: "com.google.cloud.bigquery.ModelId.equals"
  package: "com.google.cloud.bigquery"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "com.google.cloud.bigquery.ModelId.hashCode*"
  name: "hashCode"
  nameWithType: "ModelId.hashCode"
  fullName: "com.google.cloud.bigquery.ModelId.hashCode"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.ModelId.toString*"
  name: "toString"
  nameWithType: "ModelId.toString"
  fullName: "com.google.cloud.bigquery.ModelId.toString"
  package: "com.google.cloud.bigquery"
- uid: "java.io.Serializable"
  name: "Serializable"
  nameWithType: "Serializable"
  fullName: "java.io.Serializable"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
