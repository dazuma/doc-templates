### YamlMime:ManagedReference
items:
- uid: "com.google.cloud.bigquery.BigQuery.DatasetDeleteOption"
  id: "DatasetDeleteOption"
  parent: "com.google.cloud.bigquery"
  children:
  - "com.google.cloud.bigquery.BigQuery.DatasetDeleteOption.deleteContents()"
  langs:
  - "java"
  name: "BigQuery.DatasetDeleteOption"
  nameWithType: "BigQuery.DatasetDeleteOption"
  fullName: "com.google.cloud.bigquery.BigQuery.DatasetDeleteOption"
  type: "Class"
  package: "com.google.cloud.bigquery"
  summary: "Class for specifying dataset delete options."
  syntax:
    content: "public static class BigQuery.DatasetDeleteOption extends Option"
  inheritance:
  - "java.lang.Object"
  - "com.google.cloud.bigquery.Option"
  inheritedMembers:
  - "com.google.cloud.bigquery.Option.equals(java.lang.Object)"
  - "com.google.cloud.bigquery.Option.hashCode()"
  - "com.google.cloud.bigquery.Option.toString()"
  - "java.lang.Object.clone()"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.google.cloud.bigquery.BigQuery.DatasetDeleteOption.DatasetDeleteOption(com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,java.lang.Object)"
  id: "DatasetDeleteOption(com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,java.lang.Object)"
  parent: "com.google.cloud.bigquery.BigQuery.DatasetDeleteOption"
  langs:
  - "java"
  name: "DatasetDeleteOption(BigQueryRpc.Option option, Object value)"
  nameWithType: "BigQuery.DatasetDeleteOption.DatasetDeleteOption(BigQueryRpc.Option option, Object value)"
  fullName: "com.google.cloud.bigquery.BigQuery.DatasetDeleteOption.DatasetDeleteOption(BigQueryRpc.Option option, Object value)"
  overload: "com.google.cloud.bigquery.BigQuery.DatasetDeleteOption.DatasetDeleteOption*"
  type: "Constructor"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "private DatasetDeleteOption(BigQueryRpc.Option option, Object value)"
    parameters:
    - id: "option"
      type: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option"
    - id: "value"
      type: "java.lang.Object"
- uid: "com.google.cloud.bigquery.BigQuery.DatasetDeleteOption.deleteContents()"
  id: "deleteContents()"
  parent: "com.google.cloud.bigquery.BigQuery.DatasetDeleteOption"
  langs:
  - "java"
  name: "deleteContents()"
  nameWithType: "BigQuery.DatasetDeleteOption.deleteContents()"
  fullName: "com.google.cloud.bigquery.BigQuery.DatasetDeleteOption.deleteContents()"
  overload: "com.google.cloud.bigquery.BigQuery.DatasetDeleteOption.deleteContents*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns an option to delete a dataset even if non-empty. If not provided, attempting to delete a non-empty dataset will result in a <xref uid=\"com.google.cloud.bigquery.BigQueryException\" data-throw-if-not-resolved=\"false\">BigQueryException</xref> being thrown."
  syntax:
    content: "public static BigQuery.DatasetDeleteOption deleteContents()"
    return:
      type: "com.google.cloud.bigquery.BigQuery.DatasetDeleteOption"
references:
- uid: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option"
  name: "BigQueryRpc.Option"
  nameWithType: "BigQueryRpc.Option"
  fullName: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option"
- uid: "java.lang.Object"
  spec.java:
  - uid: "java.lang.Object"
    name: "Object"
    fullName: "java.lang.Object"
- uid: "com.google.cloud.bigquery.BigQuery.DatasetDeleteOption.DatasetDeleteOption*"
  name: "DatasetDeleteOption"
  nameWithType: "BigQuery.DatasetDeleteOption.DatasetDeleteOption"
  fullName: "com.google.cloud.bigquery.BigQuery.DatasetDeleteOption.DatasetDeleteOption"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.BigQuery.DatasetDeleteOption.deleteContents*"
  name: "deleteContents"
  nameWithType: "BigQuery.DatasetDeleteOption.deleteContents"
  fullName: "com.google.cloud.bigquery.BigQuery.DatasetDeleteOption.deleteContents"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.Option"
  name: "Option"
  nameWithType: "Option"
  fullName: "com.google.cloud.bigquery.Option"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "com.google.cloud.bigquery.Option.equals(java.lang.Object)"
  name: "Option.equals(Object)"
  nameWithType: "Option.equals(Object)"
  fullName: "com.google.cloud.bigquery.Option.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "com.google.cloud.bigquery.Option.toString()"
  name: "Option.toString()"
  nameWithType: "Option.toString()"
  fullName: "com.google.cloud.bigquery.Option.toString()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "com.google.cloud.bigquery.Option.hashCode()"
  name: "Option.hashCode()"
  nameWithType: "Option.hashCode()"
  fullName: "com.google.cloud.bigquery.Option.hashCode()"
