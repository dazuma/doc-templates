### YamlMime:ManagedReference
items:
- uid: Google.Cloud.Spanner.V1.PartitionQueryRequest
  commentId: T:Google.Cloud.Spanner.V1.PartitionQueryRequest
  id: PartitionQueryRequest
  parent: Google.Cloud.Spanner.V1
  children:
  - Google.Cloud.Spanner.V1.PartitionQueryRequest.#ctor
  - Google.Cloud.Spanner.V1.PartitionQueryRequest.#ctor(Google.Cloud.Spanner.V1.PartitionQueryRequest)
  - Google.Cloud.Spanner.V1.PartitionQueryRequest.Params
  - Google.Cloud.Spanner.V1.PartitionQueryRequest.ParamTypes
  - Google.Cloud.Spanner.V1.PartitionQueryRequest.PartitionOptions
  - Google.Cloud.Spanner.V1.PartitionQueryRequest.Session
  - Google.Cloud.Spanner.V1.PartitionQueryRequest.SessionAsSessionName
  - Google.Cloud.Spanner.V1.PartitionQueryRequest.Sql
  - Google.Cloud.Spanner.V1.PartitionQueryRequest.Transaction
  langs:
  - csharp
  - vb
  name: PartitionQueryRequest
  nameWithType: PartitionQueryRequest
  fullName: Google.Cloud.Spanner.V1.PartitionQueryRequest
  type: Class
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerResourceNames.g.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: PartitionQueryRequest
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerResourceNames.g.cs
    startLine: 375
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nThe request for [PartitionQuery][google.spanner.v1.Spanner.PartitionQuery]\n"
  example: []
  syntax:
    content: 'public sealed class PartitionQueryRequest : IMessage<PartitionQueryRequest>, IEquatable<PartitionQueryRequest>, IDeepCloneable<PartitionQueryRequest>, IBufferMessage, IMessage'
    content.vb: >-
      Public NotInheritable Class PartitionQueryRequest
          Implements IMessage(Of PartitionQueryRequest), IEquatable(Of PartitionQueryRequest), IDeepCloneable(Of PartitionQueryRequest), IBufferMessage, IMessage
  inheritance:
  - System.Object
  implements:
  - Google.Protobuf.IMessage{Google.Cloud.Spanner.V1.PartitionQueryRequest}
  - System.IEquatable{Google.Cloud.Spanner.V1.PartitionQueryRequest}
  - Google.Protobuf.IDeepCloneable{Google.Cloud.Spanner.V1.PartitionQueryRequest}
  - Google.Protobuf.IBufferMessage
  - Google.Protobuf.IMessage
  inheritedMembers:
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Google.Cloud.Spanner.V1.PartitionQueryRequest.#ctor
  commentId: M:Google.Cloud.Spanner.V1.PartitionQueryRequest.#ctor
  id: '#ctor'
  parent: Google.Cloud.Spanner.V1.PartitionQueryRequest
  langs:
  - csharp
  - vb
  name: PartitionQueryRequest()
  nameWithType: PartitionQueryRequest.PartitionQueryRequest()
  fullName: Google.Cloud.Spanner.V1.PartitionQueryRequest.PartitionQueryRequest()
  type: Constructor
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Spanner.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: .ctor
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Spanner.cs
    startLine: 3981
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  syntax:
    content: public PartitionQueryRequest()
    content.vb: Public Sub New
  overload: Google.Cloud.Spanner.V1.PartitionQueryRequest.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Cloud.Spanner.V1.PartitionQueryRequest.#ctor(Google.Cloud.Spanner.V1.PartitionQueryRequest)
  commentId: M:Google.Cloud.Spanner.V1.PartitionQueryRequest.#ctor(Google.Cloud.Spanner.V1.PartitionQueryRequest)
  id: '#ctor(Google.Cloud.Spanner.V1.PartitionQueryRequest)'
  parent: Google.Cloud.Spanner.V1.PartitionQueryRequest
  langs:
  - csharp
  - vb
  name: PartitionQueryRequest(PartitionQueryRequest)
  nameWithType: PartitionQueryRequest.PartitionQueryRequest(PartitionQueryRequest)
  fullName: Google.Cloud.Spanner.V1.PartitionQueryRequest.PartitionQueryRequest(Google.Cloud.Spanner.V1.PartitionQueryRequest)
  type: Constructor
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Spanner.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: .ctor
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Spanner.cs
    startLine: 3988
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  syntax:
    content: public PartitionQueryRequest(PartitionQueryRequest other)
    parameters:
    - id: other
      type: Google.Cloud.Spanner.V1.PartitionQueryRequest
    content.vb: Public Sub New(other As PartitionQueryRequest)
  overload: Google.Cloud.Spanner.V1.PartitionQueryRequest.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Cloud.Spanner.V1.PartitionQueryRequest.Session
  commentId: P:Google.Cloud.Spanner.V1.PartitionQueryRequest.Session
  id: Session
  parent: Google.Cloud.Spanner.V1.PartitionQueryRequest
  langs:
  - csharp
  - vb
  name: Session
  nameWithType: PartitionQueryRequest.Session
  fullName: Google.Cloud.Spanner.V1.PartitionQueryRequest.Session
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Spanner.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: Session
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Spanner.cs
    startLine: 4010
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nRequired. The session used to create the partitions.\n"
  example: []
  syntax:
    content: public string Session { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Session As String
  overload: Google.Cloud.Spanner.V1.PartitionQueryRequest.Session*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Cloud.Spanner.V1.PartitionQueryRequest.Transaction
  commentId: P:Google.Cloud.Spanner.V1.PartitionQueryRequest.Transaction
  id: Transaction
  parent: Google.Cloud.Spanner.V1.PartitionQueryRequest
  langs:
  - csharp
  - vb
  name: Transaction
  nameWithType: PartitionQueryRequest.Transaction
  fullName: Google.Cloud.Spanner.V1.PartitionQueryRequest.Transaction
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Spanner.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: Transaction
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Spanner.cs
    startLine: 4025
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nRead only snapshot transactions are supported, read/write and single use\ntransactions are not.\n"
  example: []
  syntax:
    content: public TransactionSelector Transaction { get; set; }
    parameters: []
    return:
      type: Google.Cloud.Spanner.V1.TransactionSelector
    content.vb: Public Property Transaction As TransactionSelector
  overload: Google.Cloud.Spanner.V1.PartitionQueryRequest.Transaction*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Cloud.Spanner.V1.PartitionQueryRequest.Sql
  commentId: P:Google.Cloud.Spanner.V1.PartitionQueryRequest.Sql
  id: Sql
  parent: Google.Cloud.Spanner.V1.PartitionQueryRequest
  langs:
  - csharp
  - vb
  name: Sql
  nameWithType: PartitionQueryRequest.Sql
  fullName: Google.Cloud.Spanner.V1.PartitionQueryRequest.Sql
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Spanner.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: Sql
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Spanner.cs
    startLine: 4048
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nRequired. The query request to generate partitions for. The request will fail if\nthe query is not root partitionable. The query plan of a root\npartitionable query has a single distributed union operator. A distributed\nunion operator conceptually divides one or more tables into multiple\nsplits, remotely evaluates a subquery independently on each split, and\nthen unions all results.\n\nThis must not contain DML commands, such as INSERT, UPDATE, or\nDELETE. Use [ExecuteStreamingSql][google.spanner.v1.Spanner.ExecuteStreamingSql] with a\nPartitionedDml transaction for large, partition-friendly DML operations.\n"
  example: []
  syntax:
    content: public string Sql { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Sql As String
  overload: Google.Cloud.Spanner.V1.PartitionQueryRequest.Sql*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Cloud.Spanner.V1.PartitionQueryRequest.Params
  commentId: P:Google.Cloud.Spanner.V1.PartitionQueryRequest.Params
  id: Params
  parent: Google.Cloud.Spanner.V1.PartitionQueryRequest
  langs:
  - csharp
  - vb
  name: Params
  nameWithType: PartitionQueryRequest.Params
  fullName: Google.Cloud.Spanner.V1.PartitionQueryRequest.Params
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Spanner.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: Params
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Spanner.cs
    startLine: 4073
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nParameter names and values that bind to placeholders in the SQL string.\n\nA parameter placeholder consists of the `@` character followed by the\nparameter name (for example, `@firstName`). Parameter names can contain\nletters, numbers, and underscores.\n\nParameters can appear anywhere that a literal value is expected.  The same\nparameter name can be used more than once, for example:\n\n`&quot;WHERE id > @msg_id AND id &lt; @msg_id + 100&quot;`\n\nIt is an error to execute a SQL statement with unbound parameters.\n"
  example: []
  syntax:
    content: public Struct Params { get; set; }
    parameters: []
    return:
      type: Google.Protobuf.WellKnownTypes.Struct
    content.vb: Public Property Params As Struct
  overload: Google.Cloud.Spanner.V1.PartitionQueryRequest.Params*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Cloud.Spanner.V1.PartitionQueryRequest.ParamTypes
  commentId: P:Google.Cloud.Spanner.V1.PartitionQueryRequest.ParamTypes
  id: ParamTypes
  parent: Google.Cloud.Spanner.V1.PartitionQueryRequest
  langs:
  - csharp
  - vb
  name: ParamTypes
  nameWithType: PartitionQueryRequest.ParamTypes
  fullName: Google.Cloud.Spanner.V1.PartitionQueryRequest.ParamTypes
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Spanner.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: ParamTypes
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Spanner.cs
    startLine: 4096
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nIt is not always possible for Cloud Spanner to infer the right SQL type\nfrom a JSON value.  For example, values of type `BYTES` and values\nof type `STRING` both appear in [params][google.spanner.v1.PartitionQueryRequest.params] as JSON strings.\n\nIn these cases, `param_types` can be used to specify the exact\nSQL type for some or all of the SQL query parameters. See the\ndefinition of [Type][google.spanner.v1.Type] for more information\nabout SQL types.\n"
  example: []
  syntax:
    content: public MapField<string, Type> ParamTypes { get; }
    parameters: []
    return:
      type: Google.Protobuf.Collections.MapField{System.String,Google.Cloud.Spanner.V1.Type}
    content.vb: Public ReadOnly Property ParamTypes As MapField(Of String, Type)
  overload: Google.Cloud.Spanner.V1.PartitionQueryRequest.ParamTypes*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Cloud.Spanner.V1.PartitionQueryRequest.PartitionOptions
  commentId: P:Google.Cloud.Spanner.V1.PartitionQueryRequest.PartitionOptions
  id: PartitionOptions
  parent: Google.Cloud.Spanner.V1.PartitionQueryRequest
  langs:
  - csharp
  - vb
  name: PartitionOptions
  nameWithType: PartitionQueryRequest.PartitionOptions
  fullName: Google.Cloud.Spanner.V1.PartitionQueryRequest.PartitionOptions
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Spanner.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: PartitionOptions
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Spanner.cs
    startLine: 4107
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nAdditional options that affect how many partitions are created.\n"
  example: []
  syntax:
    content: public PartitionOptions PartitionOptions { get; set; }
    parameters: []
    return:
      type: Google.Cloud.Spanner.V1.PartitionOptions
    content.vb: Public Property PartitionOptions As PartitionOptions
  overload: Google.Cloud.Spanner.V1.PartitionQueryRequest.PartitionOptions*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Cloud.Spanner.V1.PartitionQueryRequest.SessionAsSessionName
  commentId: P:Google.Cloud.Spanner.V1.PartitionQueryRequest.SessionAsSessionName
  id: SessionAsSessionName
  parent: Google.Cloud.Spanner.V1.PartitionQueryRequest
  langs:
  - csharp
  - vb
  name: SessionAsSessionName
  nameWithType: PartitionQueryRequest.SessionAsSessionName
  fullName: Google.Cloud.Spanner.V1.PartitionQueryRequest.SessionAsSessionName
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerResourceNames.g.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: SessionAsSessionName
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerResourceNames.g.cs
    startLine: 380
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\n<xref href=\"Google.Cloud.Spanner.V1.SessionName\" data-throw-if-not-resolved=\"false\"></xref>-typed view over the <xref href=\"Google.Cloud.Spanner.V1.PartitionQueryRequest.Session\" data-throw-if-not-resolved=\"false\"></xref> resource name property.\n"
  example: []
  syntax:
    content: public SessionName SessionAsSessionName { get; set; }
    parameters: []
    return:
      type: Google.Cloud.Spanner.V1.SessionName
    content.vb: Public Property SessionAsSessionName As SessionName
  overload: Google.Cloud.Spanner.V1.PartitionQueryRequest.SessionAsSessionName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Google.Cloud.Spanner.V1
  commentId: N:Google.Cloud.Spanner.V1
  name: Google.Cloud.Spanner.V1
  nameWithType: Google.Cloud.Spanner.V1
  fullName: Google.Cloud.Spanner.V1
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Google.Protobuf.IMessage{Google.Cloud.Spanner.V1.PartitionQueryRequest}
  commentId: T:Google.Protobuf.IMessage{Google.Cloud.Spanner.V1.PartitionQueryRequest}
  parent: Google.Protobuf
  definition: Google.Protobuf.IMessage`1
  name: IMessage<PartitionQueryRequest>
  nameWithType: IMessage<PartitionQueryRequest>
  fullName: Google.Protobuf.IMessage<Google.Cloud.Spanner.V1.PartitionQueryRequest>
  nameWithType.vb: IMessage(Of PartitionQueryRequest)
  fullName.vb: Google.Protobuf.IMessage(Of Google.Cloud.Spanner.V1.PartitionQueryRequest)
  name.vb: IMessage(Of PartitionQueryRequest)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Spanner.V1.PartitionQueryRequest
    name: PartitionQueryRequest
    nameWithType: PartitionQueryRequest
    fullName: Google.Cloud.Spanner.V1.PartitionQueryRequest
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Spanner.V1.PartitionQueryRequest
    name: PartitionQueryRequest
    nameWithType: PartitionQueryRequest
    fullName: Google.Cloud.Spanner.V1.PartitionQueryRequest
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable{Google.Cloud.Spanner.V1.PartitionQueryRequest}
  commentId: T:System.IEquatable{Google.Cloud.Spanner.V1.PartitionQueryRequest}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<PartitionQueryRequest>
  nameWithType: IEquatable<PartitionQueryRequest>
  fullName: System.IEquatable<Google.Cloud.Spanner.V1.PartitionQueryRequest>
  nameWithType.vb: IEquatable(Of PartitionQueryRequest)
  fullName.vb: System.IEquatable(Of Google.Cloud.Spanner.V1.PartitionQueryRequest)
  name.vb: IEquatable(Of PartitionQueryRequest)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Spanner.V1.PartitionQueryRequest
    name: PartitionQueryRequest
    nameWithType: PartitionQueryRequest
    fullName: Google.Cloud.Spanner.V1.PartitionQueryRequest
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Spanner.V1.PartitionQueryRequest
    name: PartitionQueryRequest
    nameWithType: PartitionQueryRequest
    fullName: Google.Cloud.Spanner.V1.PartitionQueryRequest
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IDeepCloneable{Google.Cloud.Spanner.V1.PartitionQueryRequest}
  commentId: T:Google.Protobuf.IDeepCloneable{Google.Cloud.Spanner.V1.PartitionQueryRequest}
  parent: Google.Protobuf
  definition: Google.Protobuf.IDeepCloneable`1
  name: IDeepCloneable<PartitionQueryRequest>
  nameWithType: IDeepCloneable<PartitionQueryRequest>
  fullName: Google.Protobuf.IDeepCloneable<Google.Cloud.Spanner.V1.PartitionQueryRequest>
  nameWithType.vb: IDeepCloneable(Of PartitionQueryRequest)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of Google.Cloud.Spanner.V1.PartitionQueryRequest)
  name.vb: IDeepCloneable(Of PartitionQueryRequest)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Spanner.V1.PartitionQueryRequest
    name: PartitionQueryRequest
    nameWithType: PartitionQueryRequest
    fullName: Google.Cloud.Spanner.V1.PartitionQueryRequest
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Spanner.V1.PartitionQueryRequest
    name: PartitionQueryRequest
    nameWithType: PartitionQueryRequest
    fullName: Google.Cloud.Spanner.V1.PartitionQueryRequest
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IBufferMessage
  commentId: T:Google.Protobuf.IBufferMessage
  parent: Google.Protobuf
  isExternal: true
  name: IBufferMessage
  nameWithType: IBufferMessage
  fullName: Google.Protobuf.IBufferMessage
- uid: Google.Protobuf.IMessage
  commentId: T:Google.Protobuf.IMessage
  parent: Google.Protobuf
  isExternal: true
  name: IMessage
  nameWithType: IMessage
  fullName: Google.Protobuf.IMessage
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Protobuf.IMessage`1
  commentId: T:Google.Protobuf.IMessage`1
  isExternal: true
  name: IMessage<T>
  nameWithType: IMessage<T>
  fullName: Google.Protobuf.IMessage<T>
  nameWithType.vb: IMessage(Of T)
  fullName.vb: Google.Protobuf.IMessage(Of T)
  name.vb: IMessage(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf
  commentId: N:Google.Protobuf
  isExternal: true
  name: Google.Protobuf
  nameWithType: Google.Protobuf
  fullName: Google.Protobuf
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IDeepCloneable`1
  commentId: T:Google.Protobuf.IDeepCloneable`1
  isExternal: true
  name: IDeepCloneable<T>
  nameWithType: IDeepCloneable<T>
  fullName: Google.Protobuf.IDeepCloneable<T>
  nameWithType.vb: IDeepCloneable(Of T)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of T)
  name.vb: IDeepCloneable(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Cloud.Spanner.V1.PartitionQueryRequest.#ctor*
  commentId: Overload:Google.Cloud.Spanner.V1.PartitionQueryRequest.#ctor
  name: PartitionQueryRequest
  nameWithType: PartitionQueryRequest.PartitionQueryRequest
  fullName: Google.Cloud.Spanner.V1.PartitionQueryRequest.PartitionQueryRequest
- uid: Google.Cloud.Spanner.V1.PartitionQueryRequest
  commentId: T:Google.Cloud.Spanner.V1.PartitionQueryRequest
  parent: Google.Cloud.Spanner.V1
  name: PartitionQueryRequest
  nameWithType: PartitionQueryRequest
  fullName: Google.Cloud.Spanner.V1.PartitionQueryRequest
- uid: Google.Cloud.Spanner.V1.PartitionQueryRequest.Session*
  commentId: Overload:Google.Cloud.Spanner.V1.PartitionQueryRequest.Session
  name: Session
  nameWithType: PartitionQueryRequest.Session
  fullName: Google.Cloud.Spanner.V1.PartitionQueryRequest.Session
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Google.Cloud.Spanner.V1.PartitionQueryRequest.Transaction*
  commentId: Overload:Google.Cloud.Spanner.V1.PartitionQueryRequest.Transaction
  name: Transaction
  nameWithType: PartitionQueryRequest.Transaction
  fullName: Google.Cloud.Spanner.V1.PartitionQueryRequest.Transaction
- uid: Google.Cloud.Spanner.V1.TransactionSelector
  commentId: T:Google.Cloud.Spanner.V1.TransactionSelector
  parent: Google.Cloud.Spanner.V1
  name: TransactionSelector
  nameWithType: TransactionSelector
  fullName: Google.Cloud.Spanner.V1.TransactionSelector
- uid: Google.Cloud.Spanner.V1.PartitionQueryRequest.Sql*
  commentId: Overload:Google.Cloud.Spanner.V1.PartitionQueryRequest.Sql
  name: Sql
  nameWithType: PartitionQueryRequest.Sql
  fullName: Google.Cloud.Spanner.V1.PartitionQueryRequest.Sql
- uid: Google.Cloud.Spanner.V1.PartitionQueryRequest.Params*
  commentId: Overload:Google.Cloud.Spanner.V1.PartitionQueryRequest.Params
  name: Params
  nameWithType: PartitionQueryRequest.Params
  fullName: Google.Cloud.Spanner.V1.PartitionQueryRequest.Params
- uid: Google.Protobuf.WellKnownTypes.Struct
  commentId: T:Google.Protobuf.WellKnownTypes.Struct
  parent: Google.Protobuf.WellKnownTypes
  isExternal: true
  name: Struct
  nameWithType: Struct
  fullName: Google.Protobuf.WellKnownTypes.Struct
- uid: Google.Protobuf.WellKnownTypes
  commentId: N:Google.Protobuf.WellKnownTypes
  isExternal: true
  name: Google.Protobuf.WellKnownTypes
  nameWithType: Google.Protobuf.WellKnownTypes
  fullName: Google.Protobuf.WellKnownTypes
- uid: Google.Cloud.Spanner.V1.PartitionQueryRequest.ParamTypes*
  commentId: Overload:Google.Cloud.Spanner.V1.PartitionQueryRequest.ParamTypes
  name: ParamTypes
  nameWithType: PartitionQueryRequest.ParamTypes
  fullName: Google.Cloud.Spanner.V1.PartitionQueryRequest.ParamTypes
- uid: Google.Protobuf.Collections.MapField{System.String,Google.Cloud.Spanner.V1.Type}
  commentId: T:Google.Protobuf.Collections.MapField{System.String,Google.Cloud.Spanner.V1.Type}
  parent: Google.Protobuf.Collections
  definition: Google.Protobuf.Collections.MapField`2
  name: MapField<String, Type>
  nameWithType: MapField<String, Type>
  fullName: Google.Protobuf.Collections.MapField<System.String, Google.Cloud.Spanner.V1.Type>
  nameWithType.vb: MapField(Of String, Type)
  fullName.vb: Google.Protobuf.Collections.MapField(Of System.String, Google.Cloud.Spanner.V1.Type)
  name.vb: MapField(Of String, Type)
  spec.csharp:
  - uid: Google.Protobuf.Collections.MapField`2
    name: MapField
    nameWithType: MapField
    fullName: Google.Protobuf.Collections.MapField
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Google.Cloud.Spanner.V1.Type
    name: Type
    nameWithType: Type
    fullName: Google.Cloud.Spanner.V1.Type
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.Collections.MapField`2
    name: MapField
    nameWithType: MapField
    fullName: Google.Protobuf.Collections.MapField
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Google.Cloud.Spanner.V1.Type
    name: Type
    nameWithType: Type
    fullName: Google.Cloud.Spanner.V1.Type
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.Collections.MapField`2
  commentId: T:Google.Protobuf.Collections.MapField`2
  isExternal: true
  name: MapField<TKey, TValue>
  nameWithType: MapField<TKey, TValue>
  fullName: Google.Protobuf.Collections.MapField<TKey, TValue>
  nameWithType.vb: MapField(Of TKey, TValue)
  fullName.vb: Google.Protobuf.Collections.MapField(Of TKey, TValue)
  name.vb: MapField(Of TKey, TValue)
  spec.csharp:
  - uid: Google.Protobuf.Collections.MapField`2
    name: MapField
    nameWithType: MapField
    fullName: Google.Protobuf.Collections.MapField
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.Collections.MapField`2
    name: MapField
    nameWithType: MapField
    fullName: Google.Protobuf.Collections.MapField
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.Collections
  commentId: N:Google.Protobuf.Collections
  isExternal: true
  name: Google.Protobuf.Collections
  nameWithType: Google.Protobuf.Collections
  fullName: Google.Protobuf.Collections
- uid: Google.Cloud.Spanner.V1.PartitionQueryRequest.PartitionOptions*
  commentId: Overload:Google.Cloud.Spanner.V1.PartitionQueryRequest.PartitionOptions
  name: PartitionOptions
  nameWithType: PartitionQueryRequest.PartitionOptions
  fullName: Google.Cloud.Spanner.V1.PartitionQueryRequest.PartitionOptions
- uid: Google.Cloud.Spanner.V1.PartitionOptions
  commentId: T:Google.Cloud.Spanner.V1.PartitionOptions
  parent: Google.Cloud.Spanner.V1
  name: PartitionOptions
  nameWithType: PartitionOptions
  fullName: Google.Cloud.Spanner.V1.PartitionOptions
- uid: Google.Cloud.Spanner.V1.SessionName
  commentId: T:Google.Cloud.Spanner.V1.SessionName
  parent: Google.Cloud.Spanner.V1
  name: SessionName
  nameWithType: SessionName
  fullName: Google.Cloud.Spanner.V1.SessionName
- uid: Google.Cloud.Spanner.V1.PartitionQueryRequest.Session
  commentId: P:Google.Cloud.Spanner.V1.PartitionQueryRequest.Session
  isExternal: true
- uid: Google.Cloud.Spanner.V1.PartitionQueryRequest.SessionAsSessionName*
  commentId: Overload:Google.Cloud.Spanner.V1.PartitionQueryRequest.SessionAsSessionName
  name: SessionAsSessionName
  nameWithType: PartitionQueryRequest.SessionAsSessionName
  fullName: Google.Cloud.Spanner.V1.PartitionQueryRequest.SessionAsSessionName
