### YamlMime:ManagedReference
items:
- uid: Google.Cloud.Spanner.V1.SessionPoolOptions
  commentId: T:Google.Cloud.Spanner.V1.SessionPoolOptions
  id: SessionPoolOptions
  parent: Google.Cloud.Spanner.V1
  children:
  - Google.Cloud.Spanner.V1.SessionPoolOptions.#ctor
  - Google.Cloud.Spanner.V1.SessionPoolOptions.CreateSessionMaximumBatchSize
  - Google.Cloud.Spanner.V1.SessionPoolOptions.IdleSessionRefreshDelay
  - Google.Cloud.Spanner.V1.SessionPoolOptions.MaximumActiveSessions
  - Google.Cloud.Spanner.V1.SessionPoolOptions.MaximumConcurrentSessionCreates
  - Google.Cloud.Spanner.V1.SessionPoolOptions.MinimumPooledSessions
  - Google.Cloud.Spanner.V1.SessionPoolOptions.PoolEvictionDelay
  - Google.Cloud.Spanner.V1.SessionPoolOptions.SessionLabels
  - Google.Cloud.Spanner.V1.SessionPoolOptions.Timeout
  - Google.Cloud.Spanner.V1.SessionPoolOptions.WaitOnResourcesExhausted
  - Google.Cloud.Spanner.V1.SessionPoolOptions.WriteSessionsFraction
  langs:
  - csharp
  - vb
  name: SessionPoolOptions
  nameWithType: SessionPoolOptions
  fullName: Google.Cloud.Spanner.V1.SessionPoolOptions
  type: Class
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SessionPoolOptions.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: SessionPoolOptions
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SessionPoolOptions.cs
    startLine: 25
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nOptions for session pools.\n"
  example: []
  syntax:
    content: public sealed class SessionPoolOptions
    content.vb: Public NotInheritable Class SessionPoolOptions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Google.Cloud.Spanner.V1.SessionPoolOptions.#ctor
  commentId: M:Google.Cloud.Spanner.V1.SessionPoolOptions.#ctor
  id: '#ctor'
  parent: Google.Cloud.Spanner.V1.SessionPoolOptions
  langs:
  - csharp
  - vb
  name: SessionPoolOptions()
  nameWithType: SessionPoolOptions.SessionPoolOptions()
  fullName: Google.Cloud.Spanner.V1.SessionPoolOptions.SessionPoolOptions()
  type: Constructor
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SessionPoolOptions.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: .ctor
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SessionPoolOptions.cs
    startLine: 45
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nConstructs a new <xref href=\"Google.Cloud.Spanner.V1.SessionPoolOptions\" data-throw-if-not-resolved=\"false\"></xref> with default values.\n"
  example: []
  syntax:
    content: public SessionPoolOptions()
    content.vb: Public Sub New
  overload: Google.Cloud.Spanner.V1.SessionPoolOptions.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Cloud.Spanner.V1.SessionPoolOptions.MaximumActiveSessions
  commentId: P:Google.Cloud.Spanner.V1.SessionPoolOptions.MaximumActiveSessions
  id: MaximumActiveSessions
  parent: Google.Cloud.Spanner.V1.SessionPoolOptions
  langs:
  - csharp
  - vb
  name: MaximumActiveSessions
  nameWithType: SessionPoolOptions.MaximumActiveSessions
  fullName: Google.Cloud.Spanner.V1.SessionPoolOptions.MaximumActiveSessions
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SessionPoolOptions.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: MaximumActiveSessions
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SessionPoolOptions.cs
    startLine: 56
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nMaximum number of sessions that can be active per database. An active session is one that has been\nacquired but not yet released back to the pool.\n"
  remarks: "\nThis property has a minimum value of 1, and a default value of 400.\n"
  example: []
  syntax:
    content: public int MaximumActiveSessions { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property MaximumActiveSessions As Integer
  overload: Google.Cloud.Spanner.V1.SessionPoolOptions.MaximumActiveSessions*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Cloud.Spanner.V1.SessionPoolOptions.MinimumPooledSessions
  commentId: P:Google.Cloud.Spanner.V1.SessionPoolOptions.MinimumPooledSessions
  id: MinimumPooledSessions
  parent: Google.Cloud.Spanner.V1.SessionPoolOptions
  langs:
  - csharp
  - vb
  name: MinimumPooledSessions
  nameWithType: SessionPoolOptions.MinimumPooledSessions
  fullName: Google.Cloud.Spanner.V1.SessionPoolOptions.MinimumPooledSessions
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SessionPoolOptions.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: MinimumPooledSessions
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SessionPoolOptions.cs
    startLine: 69
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nThe minimum number of sessions to maintain in the pool of available sessions.\nIf the number of pooled sessions falls below this number, more sessions are added automatically.\n"
  remarks: "\nThis property has a minimum value of 0, and a default value of 100.\n"
  example: []
  syntax:
    content: public int MinimumPooledSessions { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property MinimumPooledSessions As Integer
  overload: Google.Cloud.Spanner.V1.SessionPoolOptions.MinimumPooledSessions*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Cloud.Spanner.V1.SessionPoolOptions.IdleSessionRefreshDelay
  commentId: P:Google.Cloud.Spanner.V1.SessionPoolOptions.IdleSessionRefreshDelay
  id: IdleSessionRefreshDelay
  parent: Google.Cloud.Spanner.V1.SessionPoolOptions
  langs:
  - csharp
  - vb
  name: IdleSessionRefreshDelay
  nameWithType: SessionPoolOptions.IdleSessionRefreshDelay
  fullName: Google.Cloud.Spanner.V1.SessionPoolOptions.IdleSessionRefreshDelay
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SessionPoolOptions.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: IdleSessionRefreshDelay
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SessionPoolOptions.cs
    startLine: 93
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nThe amount of time a session must be idle before it is refreshed.\n"
  remarks: "\n<p>\nThis property must always be positive. The default value is 15 minutes.\n</p>\n<p>\nThe exact value used is subject to &quot;jitter&quot; to avoid a lot of sessions being refreshed at the exact same time.\n</p>\n<p>\nA lower value will cause sessions to be refreshed more often, slightly reducing the risk of sessions expiring\nwhile being used, at the cost of performing more refreshes.\n</p>\n<p>\nThis value must be less than the expire timer on the Spanner server which is currently set at 60 minutes.\n</p>\n"
  example: []
  syntax:
    content: public TimeSpan IdleSessionRefreshDelay { get; set; }
    parameters: []
    return:
      type: System.TimeSpan
    content.vb: Public Property IdleSessionRefreshDelay As TimeSpan
  overload: Google.Cloud.Spanner.V1.SessionPoolOptions.IdleSessionRefreshDelay*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Cloud.Spanner.V1.SessionPoolOptions.PoolEvictionDelay
  commentId: P:Google.Cloud.Spanner.V1.SessionPoolOptions.PoolEvictionDelay
  id: PoolEvictionDelay
  parent: Google.Cloud.Spanner.V1.SessionPoolOptions
  langs:
  - csharp
  - vb
  name: PoolEvictionDelay
  nameWithType: SessionPoolOptions.PoolEvictionDelay
  fullName: Google.Cloud.Spanner.V1.SessionPoolOptions.PoolEvictionDelay
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SessionPoolOptions.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: PoolEvictionDelay
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SessionPoolOptions.cs
    startLine: 116
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nThe amount of time before sessions are forcibly evicted from the pool. This is usually in the order of days,\nas sessions can be reused for a long time if they&apos;re suitably refreshed. Deleting long-lasting sessions\ncan help with server-side resource management.\n"
  remarks: "\n<p>\nThis property must always be positive. The default value is 7 days.\n</p>\n<p>\nThe exact value used is subject to &quot;jitter&quot; to avoid a lot of sessions being evicted at the exact same time.\n</p>\n<p>\nA lower value will cause sessions to be evicted more often, delaying operations if no sessions are available\nwhen requested.\n</p>\n"
  example: []
  syntax:
    content: public TimeSpan PoolEvictionDelay { get; set; }
    parameters: []
    return:
      type: System.TimeSpan
    content.vb: Public Property PoolEvictionDelay As TimeSpan
  overload: Google.Cloud.Spanner.V1.SessionPoolOptions.PoolEvictionDelay*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Cloud.Spanner.V1.SessionPoolOptions.WaitOnResourcesExhausted
  commentId: P:Google.Cloud.Spanner.V1.SessionPoolOptions.WaitOnResourcesExhausted
  id: WaitOnResourcesExhausted
  parent: Google.Cloud.Spanner.V1.SessionPoolOptions
  langs:
  - csharp
  - vb
  name: WaitOnResourcesExhausted
  nameWithType: SessionPoolOptions.WaitOnResourcesExhausted
  fullName: Google.Cloud.Spanner.V1.SessionPoolOptions.WaitOnResourcesExhausted
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SessionPoolOptions.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: WaitOnResourcesExhausted
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SessionPoolOptions.cs
    startLine: 128
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nDetermines the behavior of a request for a session when <xref href=\"Google.Cloud.Spanner.V1.SessionPoolOptions.MaximumActiveSessions\" data-throw-if-not-resolved=\"false\"></xref> has been reached.\n"
  remarks: "\nThe default value is <xref href=\"Google.Cloud.Spanner.V1.ResourcesExhaustedBehavior.Block\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public ResourcesExhaustedBehavior WaitOnResourcesExhausted { get; set; }
    parameters: []
    return:
      type: Google.Cloud.Spanner.V1.ResourcesExhaustedBehavior
    content.vb: Public Property WaitOnResourcesExhausted As ResourcesExhaustedBehavior
  overload: Google.Cloud.Spanner.V1.SessionPoolOptions.WaitOnResourcesExhausted*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Cloud.Spanner.V1.SessionPoolOptions.WriteSessionsFraction
  commentId: P:Google.Cloud.Spanner.V1.SessionPoolOptions.WriteSessionsFraction
  id: WriteSessionsFraction
  parent: Google.Cloud.Spanner.V1.SessionPoolOptions
  langs:
  - csharp
  - vb
  name: WriteSessionsFraction
  nameWithType: SessionPoolOptions.WriteSessionsFraction
  fullName: Google.Cloud.Spanner.V1.SessionPoolOptions.WriteSessionsFraction
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SessionPoolOptions.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: WriteSessionsFraction
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SessionPoolOptions.cs
    startLine: 144
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nFraction of sessions to be kept prepared for write transactions.\n"
  remarks: "\n<p>\nThis is an optimisation to avoid the cost of sending a BeginTransaction() rpc. If all such sessions are in use and a\nwrite request comes, we will make the BeginTransaction() rpc inline.\n</p>\n<p>This property must always be in the range 0-1 (inclusive). The default value is 0.2.</p>\n"
  example: []
  syntax:
    content: public double WriteSessionsFraction { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property WriteSessionsFraction As Double
  overload: Google.Cloud.Spanner.V1.SessionPoolOptions.WriteSessionsFraction*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Cloud.Spanner.V1.SessionPoolOptions.Timeout
  commentId: P:Google.Cloud.Spanner.V1.SessionPoolOptions.Timeout
  id: Timeout
  parent: Google.Cloud.Spanner.V1.SessionPoolOptions
  langs:
  - csharp
  - vb
  name: Timeout
  nameWithType: SessionPoolOptions.Timeout
  fullName: Google.Cloud.Spanner.V1.SessionPoolOptions.Timeout
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SessionPoolOptions.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: Timeout
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SessionPoolOptions.cs
    startLine: 159
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nThe total time allowed for a network call to the Cloud Spanner server, including retries. This setting\nis applied to calls to create, refresh and delete sessions, as well as beginning transactions.\n"
  remarks: "\n<p>\nThis value must be positive. The default value is one minute.\n</p>\n"
  example: []
  syntax:
    content: public TimeSpan Timeout { get; set; }
    parameters: []
    return:
      type: System.TimeSpan
    content.vb: Public Property Timeout As TimeSpan
  overload: Google.Cloud.Spanner.V1.SessionPoolOptions.Timeout*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Cloud.Spanner.V1.SessionPoolOptions.CreateSessionMaximumBatchSize
  commentId: P:Google.Cloud.Spanner.V1.SessionPoolOptions.CreateSessionMaximumBatchSize
  id: CreateSessionMaximumBatchSize
  parent: Google.Cloud.Spanner.V1.SessionPoolOptions
  langs:
  - csharp
  - vb
  name: CreateSessionMaximumBatchSize
  nameWithType: SessionPoolOptions.CreateSessionMaximumBatchSize
  fullName: Google.Cloud.Spanner.V1.SessionPoolOptions.CreateSessionMaximumBatchSize
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SessionPoolOptions.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: CreateSessionMaximumBatchSize
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SessionPoolOptions.cs
    startLine: 178
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nThe maximum number of sessions that will be created in a batch.\nSessions created are associated to the gRPC channel they are created on, so\nall sessions created in a batch are associated to the same gRPC channel.\nBatch size should be limited so as not to overload a given channel.\nIf the sessions needing to be created at any given time are more than this value\nthen multiple batches of this size or less will be created.\n"
  remarks: "\n<p>\nThis value must be positive. The default value is 5.\n</p>\n"
  example: []
  syntax:
    content: public int CreateSessionMaximumBatchSize { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property CreateSessionMaximumBatchSize As Integer
  overload: Google.Cloud.Spanner.V1.SessionPoolOptions.CreateSessionMaximumBatchSize*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Cloud.Spanner.V1.SessionPoolOptions.MaximumConcurrentSessionCreates
  commentId: P:Google.Cloud.Spanner.V1.SessionPoolOptions.MaximumConcurrentSessionCreates
  id: MaximumConcurrentSessionCreates
  parent: Google.Cloud.Spanner.V1.SessionPoolOptions
  langs:
  - csharp
  - vb
  name: MaximumConcurrentSessionCreates
  nameWithType: SessionPoolOptions.MaximumConcurrentSessionCreates
  fullName: Google.Cloud.Spanner.V1.SessionPoolOptions.MaximumConcurrentSessionCreates
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SessionPoolOptions.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: MaximumConcurrentSessionCreates
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SessionPoolOptions.cs
    startLine: 192
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nThe maximum number of sessions that will be created concurrently per session pool.\nSpanner has limits on the number of sessions that can be created concurrently without affecting performance.\nThis value is not typically changed.\n"
  example: []
  syntax:
    content: public int MaximumConcurrentSessionCreates { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property MaximumConcurrentSessionCreates As Integer
  overload: Google.Cloud.Spanner.V1.SessionPoolOptions.MaximumConcurrentSessionCreates*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Cloud.Spanner.V1.SessionPoolOptions.SessionLabels
  commentId: P:Google.Cloud.Spanner.V1.SessionPoolOptions.SessionLabels
  id: SessionLabels
  parent: Google.Cloud.Spanner.V1.SessionPoolOptions
  langs:
  - csharp
  - vb
  name: SessionLabels
  nameWithType: SessionPoolOptions.SessionLabels
  fullName: Google.Cloud.Spanner.V1.SessionPoolOptions.SessionLabels
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SessionPoolOptions.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: SessionLabels
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SessionPoolOptions.cs
    startLine: 201
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nLabels to use for any sessions created with this pool.\n"
  example: []
  syntax:
    content: public IDictionary<string, string> SessionLabels { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
    content.vb: Public ReadOnly Property SessionLabels As IDictionary(Of String, String)
  overload: Google.Cloud.Spanner.V1.SessionPoolOptions.SessionLabels*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Google.Cloud.Spanner.V1
  commentId: N:Google.Cloud.Spanner.V1
  name: Google.Cloud.Spanner.V1
  nameWithType: Google.Cloud.Spanner.V1
  fullName: Google.Cloud.Spanner.V1
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Cloud.Spanner.V1.SessionPoolOptions
  commentId: T:Google.Cloud.Spanner.V1.SessionPoolOptions
  parent: Google.Cloud.Spanner.V1
  name: SessionPoolOptions
  nameWithType: SessionPoolOptions
  fullName: Google.Cloud.Spanner.V1.SessionPoolOptions
- uid: Google.Cloud.Spanner.V1.SessionPoolOptions.#ctor*
  commentId: Overload:Google.Cloud.Spanner.V1.SessionPoolOptions.#ctor
  name: SessionPoolOptions
  nameWithType: SessionPoolOptions.SessionPoolOptions
  fullName: Google.Cloud.Spanner.V1.SessionPoolOptions.SessionPoolOptions
- uid: Google.Cloud.Spanner.V1.SessionPoolOptions.MaximumActiveSessions*
  commentId: Overload:Google.Cloud.Spanner.V1.SessionPoolOptions.MaximumActiveSessions
  name: MaximumActiveSessions
  nameWithType: SessionPoolOptions.MaximumActiveSessions
  fullName: Google.Cloud.Spanner.V1.SessionPoolOptions.MaximumActiveSessions
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Google.Cloud.Spanner.V1.SessionPoolOptions.MinimumPooledSessions*
  commentId: Overload:Google.Cloud.Spanner.V1.SessionPoolOptions.MinimumPooledSessions
  name: MinimumPooledSessions
  nameWithType: SessionPoolOptions.MinimumPooledSessions
  fullName: Google.Cloud.Spanner.V1.SessionPoolOptions.MinimumPooledSessions
- uid: Google.Cloud.Spanner.V1.SessionPoolOptions.IdleSessionRefreshDelay*
  commentId: Overload:Google.Cloud.Spanner.V1.SessionPoolOptions.IdleSessionRefreshDelay
  name: IdleSessionRefreshDelay
  nameWithType: SessionPoolOptions.IdleSessionRefreshDelay
  fullName: Google.Cloud.Spanner.V1.SessionPoolOptions.IdleSessionRefreshDelay
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: Google.Cloud.Spanner.V1.SessionPoolOptions.PoolEvictionDelay*
  commentId: Overload:Google.Cloud.Spanner.V1.SessionPoolOptions.PoolEvictionDelay
  name: PoolEvictionDelay
  nameWithType: SessionPoolOptions.PoolEvictionDelay
  fullName: Google.Cloud.Spanner.V1.SessionPoolOptions.PoolEvictionDelay
- uid: Google.Cloud.Spanner.V1.SessionPoolOptions.MaximumActiveSessions
  commentId: P:Google.Cloud.Spanner.V1.SessionPoolOptions.MaximumActiveSessions
  isExternal: true
- uid: Google.Cloud.Spanner.V1.ResourcesExhaustedBehavior.Block
  commentId: F:Google.Cloud.Spanner.V1.ResourcesExhaustedBehavior.Block
  isExternal: true
- uid: Google.Cloud.Spanner.V1.SessionPoolOptions.WaitOnResourcesExhausted*
  commentId: Overload:Google.Cloud.Spanner.V1.SessionPoolOptions.WaitOnResourcesExhausted
  name: WaitOnResourcesExhausted
  nameWithType: SessionPoolOptions.WaitOnResourcesExhausted
  fullName: Google.Cloud.Spanner.V1.SessionPoolOptions.WaitOnResourcesExhausted
- uid: Google.Cloud.Spanner.V1.ResourcesExhaustedBehavior
  commentId: T:Google.Cloud.Spanner.V1.ResourcesExhaustedBehavior
  parent: Google.Cloud.Spanner.V1
  name: ResourcesExhaustedBehavior
  nameWithType: ResourcesExhaustedBehavior
  fullName: Google.Cloud.Spanner.V1.ResourcesExhaustedBehavior
- uid: Google.Cloud.Spanner.V1.SessionPoolOptions.WriteSessionsFraction*
  commentId: Overload:Google.Cloud.Spanner.V1.SessionPoolOptions.WriteSessionsFraction
  name: WriteSessionsFraction
  nameWithType: SessionPoolOptions.WriteSessionsFraction
  fullName: Google.Cloud.Spanner.V1.SessionPoolOptions.WriteSessionsFraction
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: Google.Cloud.Spanner.V1.SessionPoolOptions.Timeout*
  commentId: Overload:Google.Cloud.Spanner.V1.SessionPoolOptions.Timeout
  name: Timeout
  nameWithType: SessionPoolOptions.Timeout
  fullName: Google.Cloud.Spanner.V1.SessionPoolOptions.Timeout
- uid: Google.Cloud.Spanner.V1.SessionPoolOptions.CreateSessionMaximumBatchSize*
  commentId: Overload:Google.Cloud.Spanner.V1.SessionPoolOptions.CreateSessionMaximumBatchSize
  name: CreateSessionMaximumBatchSize
  nameWithType: SessionPoolOptions.CreateSessionMaximumBatchSize
  fullName: Google.Cloud.Spanner.V1.SessionPoolOptions.CreateSessionMaximumBatchSize
- uid: Google.Cloud.Spanner.V1.SessionPoolOptions.MaximumConcurrentSessionCreates*
  commentId: Overload:Google.Cloud.Spanner.V1.SessionPoolOptions.MaximumConcurrentSessionCreates
  name: MaximumConcurrentSessionCreates
  nameWithType: SessionPoolOptions.MaximumConcurrentSessionCreates
  fullName: Google.Cloud.Spanner.V1.SessionPoolOptions.MaximumConcurrentSessionCreates
- uid: Google.Cloud.Spanner.V1.SessionPoolOptions.SessionLabels*
  commentId: Overload:Google.Cloud.Spanner.V1.SessionPoolOptions.SessionLabels
  name: SessionLabels
  nameWithType: SessionPoolOptions.SessionLabels
  fullName: Google.Cloud.Spanner.V1.SessionPoolOptions.SessionLabels
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  nameWithType: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  nameWithType.vb: IDictionary(Of String, String)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
