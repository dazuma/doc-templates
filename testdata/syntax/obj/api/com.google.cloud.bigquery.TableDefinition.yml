### YamlMime:ManagedReference
items:
- uid: "com.google.cloud.bigquery.TableDefinition"
  id: "TableDefinition"
  parent: "com.google.cloud.bigquery"
  children:
  - "com.google.cloud.bigquery.TableDefinition.Builder"
  - "com.google.cloud.bigquery.TableDefinition.TableDefinition()"
  - "com.google.cloud.bigquery.TableDefinition.Type"
  - "com.google.cloud.bigquery.TableDefinition.getSchema()"
  - "com.google.cloud.bigquery.TableDefinition.getType()"
  - "com.google.cloud.bigquery.TableDefinition.toBuilder()"
  langs:
  - "java"
  name: "TableDefinition"
  nameWithType: "TableDefinition"
  fullName: "com.google.cloud.bigquery.TableDefinition"
  type: "Class"
  package: "com.google.cloud.bigquery"
  summary: "Base class for a Google BigQuery table definition."
  syntax:
    content: "public abstract class TableDefinition implements Serializable"
  inheritance:
  - "java.lang.Object"
  implements:
  - "java.io.Serializable"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.google.cloud.bigquery.TableDefinition.TableDefinition()"
  id: "TableDefinition()"
  parent: "com.google.cloud.bigquery.TableDefinition"
  langs:
  - "java"
  name: "TableDefinition()"
  nameWithType: "TableDefinition.TableDefinition()"
  fullName: "com.google.cloud.bigquery.TableDefinition.TableDefinition()"
  overload: "com.google.cloud.bigquery.TableDefinition.TableDefinition*"
  type: "Constructor"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public TableDefinition()"
- uid: "com.google.cloud.bigquery.TableDefinition.getSchema()"
  id: "getSchema()"
  parent: "com.google.cloud.bigquery.TableDefinition"
  langs:
  - "java"
  name: "getSchema()"
  nameWithType: "TableDefinition.getSchema()"
  fullName: "com.google.cloud.bigquery.TableDefinition.getSchema()"
  overload: "com.google.cloud.bigquery.TableDefinition.getSchema*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns the table's schema."
  syntax:
    content: "public abstract Schema getSchema()"
    return:
      type: "com.google.cloud.bigquery.Schema"
- uid: "com.google.cloud.bigquery.TableDefinition.getType()"
  id: "getType()"
  parent: "com.google.cloud.bigquery.TableDefinition"
  langs:
  - "java"
  name: "getType()"
  nameWithType: "TableDefinition.getType()"
  fullName: "com.google.cloud.bigquery.TableDefinition.getType()"
  overload: "com.google.cloud.bigquery.TableDefinition.getType*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns the table's type. If this table is simple table the method returns <xref uid=\"\" data-throw-if-not-resolved=\"false\">Type#TABLE</xref>. If this table is an external table this method returns <xref uid=\"\" data-throw-if-not-resolved=\"false\">Type#EXTERNAL</xref>. If this table is a view table this method returns <xref uid=\"\" data-throw-if-not-resolved=\"false\">Type#VIEW</xref>."
  syntax:
    content: "public abstract TableDefinition.Type getType()"
    return:
      type: "com.google.cloud.bigquery.TableDefinition.Type"
- uid: "com.google.cloud.bigquery.TableDefinition.toBuilder()"
  id: "toBuilder()"
  parent: "com.google.cloud.bigquery.TableDefinition"
  langs:
  - "java"
  name: "toBuilder()"
  nameWithType: "TableDefinition.toBuilder()"
  fullName: "com.google.cloud.bigquery.TableDefinition.toBuilder()"
  overload: "com.google.cloud.bigquery.TableDefinition.toBuilder*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns a builder for the object."
  syntax:
    content: "public abstract TableDefinition.Builder toBuilder()"
    return:
      type: "com.google.cloud.bigquery.TableDefinition.Builder"
references:
- uid: "com.google.cloud.bigquery.TableDefinition.TableDefinition*"
  name: "TableDefinition"
  nameWithType: "TableDefinition.TableDefinition"
  fullName: "com.google.cloud.bigquery.TableDefinition.TableDefinition"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.TableDefinition.Type"
  name: "TableDefinition.Type"
  nameWithType: "TableDefinition.Type"
  fullName: "com.google.cloud.bigquery.TableDefinition.Type"
- uid: "com.google.cloud.bigquery.TableDefinition.getType*"
  name: "getType"
  nameWithType: "TableDefinition.getType"
  fullName: "com.google.cloud.bigquery.TableDefinition.getType"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.Schema"
  name: "Schema"
  nameWithType: "Schema"
  fullName: "com.google.cloud.bigquery.Schema"
- uid: "com.google.cloud.bigquery.TableDefinition.getSchema*"
  name: "getSchema"
  nameWithType: "TableDefinition.getSchema"
  fullName: "com.google.cloud.bigquery.TableDefinition.getSchema"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.TableDefinition.Builder"
  spec.java:
  - uid: "com.google.cloud.bigquery.TableDefinition.Builder"
    name: "Builder"
    fullName: "com.google.cloud.bigquery.TableDefinition.Builder"
- uid: "com.google.cloud.bigquery.TableDefinition.toBuilder*"
  name: "toBuilder"
  nameWithType: "TableDefinition.toBuilder"
  fullName: "com.google.cloud.bigquery.TableDefinition.toBuilder"
  package: "com.google.cloud.bigquery"
- uid: "java.io.Serializable"
  name: "Serializable"
  nameWithType: "Serializable"
  fullName: "java.io.Serializable"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
