### YamlMime:ManagedReference
items:
- uid: "com.google.cloud.bigquery.ModelInfo"
  id: "ModelInfo"
  parent: "com.google.cloud.bigquery"
  children:
  - "com.google.cloud.bigquery.ModelInfo.Builder"
  - "com.google.cloud.bigquery.ModelInfo.equals(java.lang.Object)"
  - "com.google.cloud.bigquery.ModelInfo.getCreationTime()"
  - "com.google.cloud.bigquery.ModelInfo.getDescription()"
  - "com.google.cloud.bigquery.ModelInfo.getEncryptionConfiguration()"
  - "com.google.cloud.bigquery.ModelInfo.getEtag()"
  - "com.google.cloud.bigquery.ModelInfo.getExpirationTime()"
  - "com.google.cloud.bigquery.ModelInfo.getFeatureColumns()"
  - "com.google.cloud.bigquery.ModelInfo.getFriendlyName()"
  - "com.google.cloud.bigquery.ModelInfo.getLabelColumns()"
  - "com.google.cloud.bigquery.ModelInfo.getLabels()"
  - "com.google.cloud.bigquery.ModelInfo.getLastModifiedTime()"
  - "com.google.cloud.bigquery.ModelInfo.getLocation()"
  - "com.google.cloud.bigquery.ModelInfo.getModelId()"
  - "com.google.cloud.bigquery.ModelInfo.getModelType()"
  - "com.google.cloud.bigquery.ModelInfo.getTrainingRuns()"
  - "com.google.cloud.bigquery.ModelInfo.hashCode()"
  - "com.google.cloud.bigquery.ModelInfo.newBuilder(com.google.cloud.bigquery.ModelId)"
  - "com.google.cloud.bigquery.ModelInfo.of(com.google.cloud.bigquery.ModelId)"
  - "com.google.cloud.bigquery.ModelInfo.toBuilder()"
  - "com.google.cloud.bigquery.ModelInfo.toString()"
  langs:
  - "java"
  name: "ModelInfo"
  nameWithType: "ModelInfo"
  fullName: "com.google.cloud.bigquery.ModelInfo"
  type: "Class"
  package: "com.google.cloud.bigquery"
  summary: "Google BigQuery ML model information. Models are not created directly via the API, but by issuing a CREATE MODEL query."
  syntax:
    content: "public class ModelInfo implements Serializable"
  inheritance:
  - "java.lang.Object"
  implements:
  - "java.io.Serializable"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.google.cloud.bigquery.ModelInfo.ModelInfo(com.google.cloud.bigquery.ModelInfo.BuilderImpl)"
  id: "ModelInfo(com.google.cloud.bigquery.ModelInfo.BuilderImpl)"
  parent: "com.google.cloud.bigquery.ModelInfo"
  langs:
  - "java"
  name: "ModelInfo(ModelInfo.BuilderImpl builder)"
  nameWithType: "ModelInfo.ModelInfo(ModelInfo.BuilderImpl builder)"
  fullName: "com.google.cloud.bigquery.ModelInfo.ModelInfo(ModelInfo.BuilderImpl builder)"
  overload: "com.google.cloud.bigquery.ModelInfo.ModelInfo*"
  type: "Constructor"
  package: "com.google.cloud.bigquery"
  syntax:
    content: " ModelInfo(ModelInfo.BuilderImpl builder)"
    parameters:
    - id: "builder"
      type: "com.google.cloud.bigquery.ModelInfo.BuilderImpl"
- uid: "com.google.cloud.bigquery.ModelInfo.equals(java.lang.Object)"
  id: "equals(java.lang.Object)"
  parent: "com.google.cloud.bigquery.ModelInfo"
  langs:
  - "java"
  name: "equals(Object obj)"
  nameWithType: "ModelInfo.equals(Object obj)"
  fullName: "com.google.cloud.bigquery.ModelInfo.equals(Object obj)"
  overload: "com.google.cloud.bigquery.ModelInfo.equals*"
  overridden: "java.lang.Object.equals(java.lang.Object)"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public boolean equals(Object obj)"
    parameters:
    - id: "obj"
      type: "java.lang.Object"
    return:
      type: "boolean"
- uid: "com.google.cloud.bigquery.ModelInfo.getCreationTime()"
  id: "getCreationTime()"
  parent: "com.google.cloud.bigquery.ModelInfo"
  langs:
  - "java"
  name: "getCreationTime()"
  nameWithType: "ModelInfo.getCreationTime()"
  fullName: "com.google.cloud.bigquery.ModelInfo.getCreationTime()"
  overload: "com.google.cloud.bigquery.ModelInfo.getCreationTime*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns the time when this model was created, in milliseconds since the epoch."
  syntax:
    content: "public Long getCreationTime()"
    return:
      type: "java.lang.Long"
- uid: "com.google.cloud.bigquery.ModelInfo.getDescription()"
  id: "getDescription()"
  parent: "com.google.cloud.bigquery.ModelInfo"
  langs:
  - "java"
  name: "getDescription()"
  nameWithType: "ModelInfo.getDescription()"
  fullName: "com.google.cloud.bigquery.ModelInfo.getDescription()"
  overload: "com.google.cloud.bigquery.ModelInfo.getDescription*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns the user description of the model."
  syntax:
    content: "public String getDescription()"
    return:
      type: "java.lang.String"
- uid: "com.google.cloud.bigquery.ModelInfo.getEncryptionConfiguration()"
  id: "getEncryptionConfiguration()"
  parent: "com.google.cloud.bigquery.ModelInfo"
  langs:
  - "java"
  name: "getEncryptionConfiguration()"
  nameWithType: "ModelInfo.getEncryptionConfiguration()"
  fullName: "com.google.cloud.bigquery.ModelInfo.getEncryptionConfiguration()"
  overload: "com.google.cloud.bigquery.ModelInfo.getEncryptionConfiguration*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public EncryptionConfiguration getEncryptionConfiguration()"
    return:
      type: "com.google.cloud.bigquery.EncryptionConfiguration"
- uid: "com.google.cloud.bigquery.ModelInfo.getEtag()"
  id: "getEtag()"
  parent: "com.google.cloud.bigquery.ModelInfo"
  langs:
  - "java"
  name: "getEtag()"
  nameWithType: "ModelInfo.getEtag()"
  fullName: "com.google.cloud.bigquery.ModelInfo.getEtag()"
  overload: "com.google.cloud.bigquery.ModelInfo.getEtag*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns the hash of the model resource."
  syntax:
    content: "public String getEtag()"
    return:
      type: "java.lang.String"
- uid: "com.google.cloud.bigquery.ModelInfo.getExpirationTime()"
  id: "getExpirationTime()"
  parent: "com.google.cloud.bigquery.ModelInfo"
  langs:
  - "java"
  name: "getExpirationTime()"
  nameWithType: "ModelInfo.getExpirationTime()"
  fullName: "com.google.cloud.bigquery.ModelInfo.getExpirationTime()"
  overload: "com.google.cloud.bigquery.ModelInfo.getExpirationTime*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns this this model expires, in milliseconds since the epoch. If not present, the model will persist indefinitely. Expired models will be deleted."
  syntax:
    content: "public Long getExpirationTime()"
    return:
      type: "java.lang.Long"
- uid: "com.google.cloud.bigquery.ModelInfo.getFeatureColumns()"
  id: "getFeatureColumns()"
  parent: "com.google.cloud.bigquery.ModelInfo"
  langs:
  - "java"
  name: "getFeatureColumns()"
  nameWithType: "ModelInfo.getFeatureColumns()"
  fullName: "com.google.cloud.bigquery.ModelInfo.getFeatureColumns()"
  overload: "com.google.cloud.bigquery.ModelInfo.getFeatureColumns*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns information about the feature columns for this model."
  syntax:
    content: "public ImmutableList<StandardSQLField> getFeatureColumns()"
    return:
      type: "com.google.common.collect.ImmutableList<com.google.cloud.bigquery.StandardSQLField>"
- uid: "com.google.cloud.bigquery.ModelInfo.getFriendlyName()"
  id: "getFriendlyName()"
  parent: "com.google.cloud.bigquery.ModelInfo"
  langs:
  - "java"
  name: "getFriendlyName()"
  nameWithType: "ModelInfo.getFriendlyName()"
  fullName: "com.google.cloud.bigquery.ModelInfo.getFriendlyName()"
  overload: "com.google.cloud.bigquery.ModelInfo.getFriendlyName*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns the user-friendly name for the model."
  syntax:
    content: "public String getFriendlyName()"
    return:
      type: "java.lang.String"
- uid: "com.google.cloud.bigquery.ModelInfo.getLabelColumns()"
  id: "getLabelColumns()"
  parent: "com.google.cloud.bigquery.ModelInfo"
  langs:
  - "java"
  name: "getLabelColumns()"
  nameWithType: "ModelInfo.getLabelColumns()"
  fullName: "com.google.cloud.bigquery.ModelInfo.getLabelColumns()"
  overload: "com.google.cloud.bigquery.ModelInfo.getLabelColumns*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns information about the label columns for this model."
  syntax:
    content: "public ImmutableList<StandardSQLField> getLabelColumns()"
    return:
      type: "com.google.common.collect.ImmutableList<com.google.cloud.bigquery.StandardSQLField>"
- uid: "com.google.cloud.bigquery.ModelInfo.getLabels()"
  id: "getLabels()"
  parent: "com.google.cloud.bigquery.ModelInfo"
  langs:
  - "java"
  name: "getLabels()"
  nameWithType: "ModelInfo.getLabels()"
  fullName: "com.google.cloud.bigquery.ModelInfo.getLabels()"
  overload: "com.google.cloud.bigquery.ModelInfo.getLabels*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns a map for labels applied to the model."
  syntax:
    content: "public Map<String,String> getLabels()"
    return:
      type: "java.util.Map<java.lang.String,java.lang.String>"
- uid: "com.google.cloud.bigquery.ModelInfo.getLastModifiedTime()"
  id: "getLastModifiedTime()"
  parent: "com.google.cloud.bigquery.ModelInfo"
  langs:
  - "java"
  name: "getLastModifiedTime()"
  nameWithType: "ModelInfo.getLastModifiedTime()"
  fullName: "com.google.cloud.bigquery.ModelInfo.getLastModifiedTime()"
  overload: "com.google.cloud.bigquery.ModelInfo.getLastModifiedTime*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns the time when this table was last modified, in milliseconds since the epoch."
  syntax:
    content: "public Long getLastModifiedTime()"
    return:
      type: "java.lang.Long"
- uid: "com.google.cloud.bigquery.ModelInfo.getLocation()"
  id: "getLocation()"
  parent: "com.google.cloud.bigquery.ModelInfo"
  langs:
  - "java"
  name: "getLocation()"
  nameWithType: "ModelInfo.getLocation()"
  fullName: "com.google.cloud.bigquery.ModelInfo.getLocation()"
  overload: "com.google.cloud.bigquery.ModelInfo.getLocation*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns a location of the model."
  syntax:
    content: "public String getLocation()"
    return:
      type: "java.lang.String"
- uid: "com.google.cloud.bigquery.ModelInfo.getModelId()"
  id: "getModelId()"
  parent: "com.google.cloud.bigquery.ModelInfo"
  langs:
  - "java"
  name: "getModelId()"
  nameWithType: "ModelInfo.getModelId()"
  fullName: "com.google.cloud.bigquery.ModelInfo.getModelId()"
  overload: "com.google.cloud.bigquery.ModelInfo.getModelId*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns the model identity."
  syntax:
    content: "public ModelId getModelId()"
    return:
      type: "com.google.cloud.bigquery.ModelId"
- uid: "com.google.cloud.bigquery.ModelInfo.getModelType()"
  id: "getModelType()"
  parent: "com.google.cloud.bigquery.ModelInfo"
  langs:
  - "java"
  name: "getModelType()"
  nameWithType: "ModelInfo.getModelType()"
  fullName: "com.google.cloud.bigquery.ModelInfo.getModelType()"
  overload: "com.google.cloud.bigquery.ModelInfo.getModelType*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns the type of the ML model."
  syntax:
    content: "public String getModelType()"
    return:
      type: "java.lang.String"
- uid: "com.google.cloud.bigquery.ModelInfo.getTrainingRuns()"
  id: "getTrainingRuns()"
  parent: "com.google.cloud.bigquery.ModelInfo"
  langs:
  - "java"
  name: "getTrainingRuns()"
  nameWithType: "ModelInfo.getTrainingRuns()"
  fullName: "com.google.cloud.bigquery.ModelInfo.getTrainingRuns()"
  overload: "com.google.cloud.bigquery.ModelInfo.getTrainingRuns*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns metadata about each training run iteration."
  syntax:
    content: "public ImmutableList<TrainingRun> getTrainingRuns()"
    return:
      type: "com.google.common.collect.ImmutableList<com.google.api.services.bigquery.model.TrainingRun>"
- uid: "com.google.cloud.bigquery.ModelInfo.hashCode()"
  id: "hashCode()"
  parent: "com.google.cloud.bigquery.ModelInfo"
  langs:
  - "java"
  name: "hashCode()"
  nameWithType: "ModelInfo.hashCode()"
  fullName: "com.google.cloud.bigquery.ModelInfo.hashCode()"
  overload: "com.google.cloud.bigquery.ModelInfo.hashCode*"
  overridden: "java.lang.Object.hashCode()"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public int hashCode()"
    return:
      type: "int"
- uid: "com.google.cloud.bigquery.ModelInfo.newBuilder(com.google.cloud.bigquery.ModelId)"
  id: "newBuilder(com.google.cloud.bigquery.ModelId)"
  parent: "com.google.cloud.bigquery.ModelInfo"
  langs:
  - "java"
  name: "newBuilder(ModelId modelId)"
  nameWithType: "ModelInfo.newBuilder(ModelId modelId)"
  fullName: "com.google.cloud.bigquery.ModelInfo.newBuilder(ModelId modelId)"
  overload: "com.google.cloud.bigquery.ModelInfo.newBuilder*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns a builder for a `ModelInfo` object given table identity."
  syntax:
    content: "public static ModelInfo.Builder newBuilder(ModelId modelId)"
    parameters:
    - id: "modelId"
      type: "com.google.cloud.bigquery.ModelId"
    return:
      type: "com.google.cloud.bigquery.ModelInfo.Builder"
- uid: "com.google.cloud.bigquery.ModelInfo.of(com.google.cloud.bigquery.ModelId)"
  id: "of(com.google.cloud.bigquery.ModelId)"
  parent: "com.google.cloud.bigquery.ModelInfo"
  langs:
  - "java"
  name: "of(ModelId modelId)"
  nameWithType: "ModelInfo.of(ModelId modelId)"
  fullName: "com.google.cloud.bigquery.ModelInfo.of(ModelId modelId)"
  overload: "com.google.cloud.bigquery.ModelInfo.of*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns a `ModelInfo` object given table identity."
  syntax:
    content: "public static ModelInfo of(ModelId modelId)"
    parameters:
    - id: "modelId"
      type: "com.google.cloud.bigquery.ModelId"
    return:
      type: "com.google.cloud.bigquery.ModelInfo"
- uid: "com.google.cloud.bigquery.ModelInfo.toBuilder()"
  id: "toBuilder()"
  parent: "com.google.cloud.bigquery.ModelInfo"
  langs:
  - "java"
  name: "toBuilder()"
  nameWithType: "ModelInfo.toBuilder()"
  fullName: "com.google.cloud.bigquery.ModelInfo.toBuilder()"
  overload: "com.google.cloud.bigquery.ModelInfo.toBuilder*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public ModelInfo.Builder toBuilder()"
    return:
      type: "com.google.cloud.bigquery.ModelInfo.Builder"
- uid: "com.google.cloud.bigquery.ModelInfo.toString()"
  id: "toString()"
  parent: "com.google.cloud.bigquery.ModelInfo"
  langs:
  - "java"
  name: "toString()"
  nameWithType: "ModelInfo.toString()"
  fullName: "com.google.cloud.bigquery.ModelInfo.toString()"
  overload: "com.google.cloud.bigquery.ModelInfo.toString*"
  overridden: "java.lang.Object.toString()"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public String toString()"
    return:
      type: "java.lang.String"
references:
- uid: "com.google.cloud.bigquery.ModelInfo.BuilderImpl"
  spec.java:
  - uid: "com.google.cloud.bigquery.ModelInfo.BuilderImpl"
    name: "BuilderImpl"
    fullName: "com.google.cloud.bigquery.ModelInfo.BuilderImpl"
- uid: "com.google.cloud.bigquery.ModelInfo.ModelInfo*"
  name: "ModelInfo"
  nameWithType: "ModelInfo.ModelInfo"
  fullName: "com.google.cloud.bigquery.ModelInfo.ModelInfo"
  package: "com.google.cloud.bigquery"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.google.cloud.bigquery.ModelInfo.getEtag*"
  name: "getEtag"
  nameWithType: "ModelInfo.getEtag"
  fullName: "com.google.cloud.bigquery.ModelInfo.getEtag"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.ModelId"
  name: "ModelId"
  nameWithType: "ModelId"
  fullName: "com.google.cloud.bigquery.ModelId"
- uid: "com.google.cloud.bigquery.ModelInfo.getModelId*"
  name: "getModelId"
  nameWithType: "ModelInfo.getModelId"
  fullName: "com.google.cloud.bigquery.ModelInfo.getModelId"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.ModelInfo.getModelType*"
  name: "getModelType"
  nameWithType: "ModelInfo.getModelType"
  fullName: "com.google.cloud.bigquery.ModelInfo.getModelType"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.ModelInfo.getDescription*"
  name: "getDescription"
  nameWithType: "ModelInfo.getDescription"
  fullName: "com.google.cloud.bigquery.ModelInfo.getDescription"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.ModelInfo.getFriendlyName*"
  name: "getFriendlyName"
  nameWithType: "ModelInfo.getFriendlyName"
  fullName: "com.google.cloud.bigquery.ModelInfo.getFriendlyName"
  package: "com.google.cloud.bigquery"
- uid: "java.lang.Long"
  spec.java:
  - uid: "java.lang.Long"
    name: "Long"
    fullName: "java.lang.Long"
- uid: "com.google.cloud.bigquery.ModelInfo.getCreationTime*"
  name: "getCreationTime"
  nameWithType: "ModelInfo.getCreationTime"
  fullName: "com.google.cloud.bigquery.ModelInfo.getCreationTime"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.ModelInfo.getLastModifiedTime*"
  name: "getLastModifiedTime"
  nameWithType: "ModelInfo.getLastModifiedTime"
  fullName: "com.google.cloud.bigquery.ModelInfo.getLastModifiedTime"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.ModelInfo.getExpirationTime*"
  name: "getExpirationTime"
  nameWithType: "ModelInfo.getExpirationTime"
  fullName: "com.google.cloud.bigquery.ModelInfo.getExpirationTime"
  package: "com.google.cloud.bigquery"
- uid: "java.util.Map<java.lang.String,java.lang.String>"
  spec.java:
  - uid: "java.util.Map"
    name: "Map"
    fullName: "java.util.Map"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ","
    fullName: ","
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ">"
    fullName: ">"
- uid: "com.google.cloud.bigquery.ModelInfo.getLabels*"
  name: "getLabels"
  nameWithType: "ModelInfo.getLabels"
  fullName: "com.google.cloud.bigquery.ModelInfo.getLabels"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.ModelInfo.getLocation*"
  name: "getLocation"
  nameWithType: "ModelInfo.getLocation"
  fullName: "com.google.cloud.bigquery.ModelInfo.getLocation"
  package: "com.google.cloud.bigquery"
- uid: "com.google.common.collect.ImmutableList<com.google.api.services.bigquery.model.TrainingRun>"
  spec.java:
  - uid: "com.google.common.collect.ImmutableList"
    name: "ImmutableList"
    fullName: "com.google.common.collect.ImmutableList"
  - name: "<"
    fullName: "<"
  - uid: "com.google.api.services.bigquery.model.TrainingRun"
    name: "TrainingRun"
    fullName: "com.google.api.services.bigquery.model.TrainingRun"
  - name: ">"
    fullName: ">"
- uid: "com.google.cloud.bigquery.ModelInfo.getTrainingRuns*"
  name: "getTrainingRuns"
  nameWithType: "ModelInfo.getTrainingRuns"
  fullName: "com.google.cloud.bigquery.ModelInfo.getTrainingRuns"
  package: "com.google.cloud.bigquery"
- uid: "com.google.common.collect.ImmutableList<com.google.cloud.bigquery.StandardSQLField>"
  spec.java:
  - uid: "com.google.common.collect.ImmutableList"
    name: "ImmutableList"
    fullName: "com.google.common.collect.ImmutableList"
  - name: "<"
    fullName: "<"
  - uid: "com.google.cloud.bigquery.StandardSQLField"
    name: "StandardSQLField"
    fullName: "com.google.cloud.bigquery.StandardSQLField"
  - name: ">"
    fullName: ">"
- uid: "com.google.cloud.bigquery.ModelInfo.getLabelColumns*"
  name: "getLabelColumns"
  nameWithType: "ModelInfo.getLabelColumns"
  fullName: "com.google.cloud.bigquery.ModelInfo.getLabelColumns"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.ModelInfo.getFeatureColumns*"
  name: "getFeatureColumns"
  nameWithType: "ModelInfo.getFeatureColumns"
  fullName: "com.google.cloud.bigquery.ModelInfo.getFeatureColumns"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.EncryptionConfiguration"
  name: "EncryptionConfiguration"
  nameWithType: "EncryptionConfiguration"
  fullName: "com.google.cloud.bigquery.EncryptionConfiguration"
- uid: "com.google.cloud.bigquery.ModelInfo.getEncryptionConfiguration*"
  name: "getEncryptionConfiguration"
  nameWithType: "ModelInfo.getEncryptionConfiguration"
  fullName: "com.google.cloud.bigquery.ModelInfo.getEncryptionConfiguration"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.ModelInfo.Builder"
  name: "ModelInfo.Builder"
  nameWithType: "ModelInfo.Builder"
  fullName: "com.google.cloud.bigquery.ModelInfo.Builder"
- uid: "com.google.cloud.bigquery.ModelInfo.toBuilder*"
  name: "toBuilder"
  nameWithType: "ModelInfo.toBuilder"
  fullName: "com.google.cloud.bigquery.ModelInfo.toBuilder"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.ModelInfo.toString*"
  name: "toString"
  nameWithType: "ModelInfo.toString"
  fullName: "com.google.cloud.bigquery.ModelInfo.toString"
  package: "com.google.cloud.bigquery"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "com.google.cloud.bigquery.ModelInfo.hashCode*"
  name: "hashCode"
  nameWithType: "ModelInfo.hashCode"
  fullName: "com.google.cloud.bigquery.ModelInfo.hashCode"
  package: "com.google.cloud.bigquery"
- uid: "java.lang.Object"
  spec.java:
  - uid: "java.lang.Object"
    name: "Object"
    fullName: "java.lang.Object"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "com.google.cloud.bigquery.ModelInfo.equals*"
  name: "equals"
  nameWithType: "ModelInfo.equals"
  fullName: "com.google.cloud.bigquery.ModelInfo.equals"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.ModelInfo.newBuilder*"
  name: "newBuilder"
  nameWithType: "ModelInfo.newBuilder"
  fullName: "com.google.cloud.bigquery.ModelInfo.newBuilder"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.ModelInfo.of*"
  name: "of"
  nameWithType: "ModelInfo.of"
  fullName: "com.google.cloud.bigquery.ModelInfo.of"
  package: "com.google.cloud.bigquery"
- uid: "java.io.Serializable"
  name: "Serializable"
  nameWithType: "Serializable"
  fullName: "java.io.Serializable"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.util.Map"
  name: "Map"
  nameWithType: "Map"
  fullName: "java.util.Map"
- uid: "java.lang.String,java.lang.String"
  name: "String,String"
  nameWithType: "String,String"
  fullName: "java.lang.String,java.lang.String"
- uid: "com.google.common.collect.ImmutableList"
  name: "ImmutableList"
  nameWithType: "ImmutableList"
  fullName: "com.google.common.collect.ImmutableList"
- uid: "com.google.api.services.bigquery.model.TrainingRun"
  name: "TrainingRun"
  nameWithType: "TrainingRun"
  fullName: "com.google.api.services.bigquery.model.TrainingRun"
- uid: "com.google.cloud.bigquery.StandardSQLField"
  name: "StandardSQLField"
  nameWithType: "StandardSQLField"
  fullName: "com.google.cloud.bigquery.StandardSQLField"
