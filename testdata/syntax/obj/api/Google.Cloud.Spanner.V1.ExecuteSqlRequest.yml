### YamlMime:ManagedReference
items:
- uid: Google.Cloud.Spanner.V1.ExecuteSqlRequest
  commentId: T:Google.Cloud.Spanner.V1.ExecuteSqlRequest
  id: ExecuteSqlRequest
  parent: Google.Cloud.Spanner.V1
  children:
  - Google.Cloud.Spanner.V1.ExecuteSqlRequest.#ctor
  - Google.Cloud.Spanner.V1.ExecuteSqlRequest.#ctor(Google.Cloud.Spanner.V1.ExecuteSqlRequest)
  - Google.Cloud.Spanner.V1.ExecuteSqlRequest.Params
  - Google.Cloud.Spanner.V1.ExecuteSqlRequest.ParamTypes
  - Google.Cloud.Spanner.V1.ExecuteSqlRequest.PartitionToken
  - Google.Cloud.Spanner.V1.ExecuteSqlRequest.QueryMode
  - Google.Cloud.Spanner.V1.ExecuteSqlRequest.QueryOptions
  - Google.Cloud.Spanner.V1.ExecuteSqlRequest.ResumeToken
  - Google.Cloud.Spanner.V1.ExecuteSqlRequest.Seqno
  - Google.Cloud.Spanner.V1.ExecuteSqlRequest.Session
  - Google.Cloud.Spanner.V1.ExecuteSqlRequest.SessionAsSessionName
  - Google.Cloud.Spanner.V1.ExecuteSqlRequest.Sql
  - Google.Cloud.Spanner.V1.ExecuteSqlRequest.Transaction
  langs:
  - csharp
  - vb
  name: ExecuteSqlRequest
  nameWithType: ExecuteSqlRequest
  fullName: Google.Cloud.Spanner.V1.ExecuteSqlRequest
  type: Class
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerResourceNames.g.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: ExecuteSqlRequest
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerResourceNames.g.cs
    startLine: 351
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nThe request for [ExecuteSql][google.spanner.v1.Spanner.ExecuteSql] and\n[ExecuteStreamingSql][google.spanner.v1.Spanner.ExecuteStreamingSql].\n"
  example: []
  syntax:
    content: 'public sealed class ExecuteSqlRequest : IMessage<ExecuteSqlRequest>, IEquatable<ExecuteSqlRequest>, IDeepCloneable<ExecuteSqlRequest>, IBufferMessage, IMessage'
    content.vb: >-
      Public NotInheritable Class ExecuteSqlRequest
          Implements IMessage(Of ExecuteSqlRequest), IEquatable(Of ExecuteSqlRequest), IDeepCloneable(Of ExecuteSqlRequest), IBufferMessage, IMessage
  inheritance:
  - System.Object
  implements:
  - Google.Protobuf.IMessage{Google.Cloud.Spanner.V1.ExecuteSqlRequest}
  - System.IEquatable{Google.Cloud.Spanner.V1.ExecuteSqlRequest}
  - Google.Protobuf.IDeepCloneable{Google.Cloud.Spanner.V1.ExecuteSqlRequest}
  - Google.Protobuf.IBufferMessage
  - Google.Protobuf.IMessage
  inheritedMembers:
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Google.Cloud.Spanner.V1.ExecuteSqlRequest.#ctor
  commentId: M:Google.Cloud.Spanner.V1.ExecuteSqlRequest.#ctor
  id: '#ctor'
  parent: Google.Cloud.Spanner.V1.ExecuteSqlRequest
  langs:
  - csharp
  - vb
  name: ExecuteSqlRequest()
  nameWithType: ExecuteSqlRequest.ExecuteSqlRequest()
  fullName: Google.Cloud.Spanner.V1.ExecuteSqlRequest.ExecuteSqlRequest()
  type: Constructor
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Spanner.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: .ctor
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Spanner.cs
    startLine: 2103
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  syntax:
    content: public ExecuteSqlRequest()
    content.vb: Public Sub New
  overload: Google.Cloud.Spanner.V1.ExecuteSqlRequest.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Cloud.Spanner.V1.ExecuteSqlRequest.#ctor(Google.Cloud.Spanner.V1.ExecuteSqlRequest)
  commentId: M:Google.Cloud.Spanner.V1.ExecuteSqlRequest.#ctor(Google.Cloud.Spanner.V1.ExecuteSqlRequest)
  id: '#ctor(Google.Cloud.Spanner.V1.ExecuteSqlRequest)'
  parent: Google.Cloud.Spanner.V1.ExecuteSqlRequest
  langs:
  - csharp
  - vb
  name: ExecuteSqlRequest(ExecuteSqlRequest)
  nameWithType: ExecuteSqlRequest.ExecuteSqlRequest(ExecuteSqlRequest)
  fullName: Google.Cloud.Spanner.V1.ExecuteSqlRequest.ExecuteSqlRequest(Google.Cloud.Spanner.V1.ExecuteSqlRequest)
  type: Constructor
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Spanner.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: .ctor
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Spanner.cs
    startLine: 2110
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  syntax:
    content: public ExecuteSqlRequest(ExecuteSqlRequest other)
    parameters:
    - id: other
      type: Google.Cloud.Spanner.V1.ExecuteSqlRequest
    content.vb: Public Sub New(other As ExecuteSqlRequest)
  overload: Google.Cloud.Spanner.V1.ExecuteSqlRequest.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Cloud.Spanner.V1.ExecuteSqlRequest.Session
  commentId: P:Google.Cloud.Spanner.V1.ExecuteSqlRequest.Session
  id: Session
  parent: Google.Cloud.Spanner.V1.ExecuteSqlRequest
  langs:
  - csharp
  - vb
  name: Session
  nameWithType: ExecuteSqlRequest.Session
  fullName: Google.Cloud.Spanner.V1.ExecuteSqlRequest.Session
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Spanner.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: Session
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Spanner.cs
    startLine: 2136
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nRequired. The session in which the SQL query should be performed.\n"
  example: []
  syntax:
    content: public string Session { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Session As String
  overload: Google.Cloud.Spanner.V1.ExecuteSqlRequest.Session*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Cloud.Spanner.V1.ExecuteSqlRequest.Transaction
  commentId: P:Google.Cloud.Spanner.V1.ExecuteSqlRequest.Transaction
  id: Transaction
  parent: Google.Cloud.Spanner.V1.ExecuteSqlRequest
  langs:
  - csharp
  - vb
  name: Transaction
  nameWithType: ExecuteSqlRequest.Transaction
  fullName: Google.Cloud.Spanner.V1.ExecuteSqlRequest.Transaction
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Spanner.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: Transaction
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Spanner.cs
    startLine: 2159
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nThe transaction to use.\n\nFor queries, if none is provided, the default is a temporary read-only\ntransaction with strong concurrency.\n\nStandard DML statements require a read-write transaction. To protect\nagainst replays, single-use transactions are not supported.  The caller\nmust either supply an existing transaction ID or begin a new transaction.\n\nPartitioned DML requires an existing Partitioned DML transaction ID.\n"
  example: []
  syntax:
    content: public TransactionSelector Transaction { get; set; }
    parameters: []
    return:
      type: Google.Cloud.Spanner.V1.TransactionSelector
    content.vb: Public Property Transaction As TransactionSelector
  overload: Google.Cloud.Spanner.V1.ExecuteSqlRequest.Transaction*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Cloud.Spanner.V1.ExecuteSqlRequest.Sql
  commentId: P:Google.Cloud.Spanner.V1.ExecuteSqlRequest.Sql
  id: Sql
  parent: Google.Cloud.Spanner.V1.ExecuteSqlRequest
  langs:
  - csharp
  - vb
  name: Sql
  nameWithType: ExecuteSqlRequest.Sql
  fullName: Google.Cloud.Spanner.V1.ExecuteSqlRequest.Sql
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Spanner.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: Sql
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Spanner.cs
    startLine: 2173
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nRequired. The SQL string.\n"
  example: []
  syntax:
    content: public string Sql { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Sql As String
  overload: Google.Cloud.Spanner.V1.ExecuteSqlRequest.Sql*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Cloud.Spanner.V1.ExecuteSqlRequest.Params
  commentId: P:Google.Cloud.Spanner.V1.ExecuteSqlRequest.Params
  id: Params
  parent: Google.Cloud.Spanner.V1.ExecuteSqlRequest
  langs:
  - csharp
  - vb
  name: Params
  nameWithType: ExecuteSqlRequest.Params
  fullName: Google.Cloud.Spanner.V1.ExecuteSqlRequest.Params
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Spanner.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: Params
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Spanner.cs
    startLine: 2199
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nParameter names and values that bind to placeholders in the SQL string.\n\nA parameter placeholder consists of the `@` character followed by the\nparameter name (for example, `@firstName`). Parameter names must conform\nto the naming requirements of identifiers as specified at\nhttps://cloud.google.com/spanner/docs/lexical#identifiers.\n\nParameters can appear anywhere that a literal value is expected.  The same\nparameter name can be used more than once, for example:\n\n`&quot;WHERE id > @msg_id AND id &lt; @msg_id + 100&quot;`\n\nIt is an error to execute a SQL statement with unbound parameters.\n"
  example: []
  syntax:
    content: public Struct Params { get; set; }
    parameters: []
    return:
      type: Google.Protobuf.WellKnownTypes.Struct
    content.vb: Public Property Params As Struct
  overload: Google.Cloud.Spanner.V1.ExecuteSqlRequest.Params*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Cloud.Spanner.V1.ExecuteSqlRequest.ParamTypes
  commentId: P:Google.Cloud.Spanner.V1.ExecuteSqlRequest.ParamTypes
  id: ParamTypes
  parent: Google.Cloud.Spanner.V1.ExecuteSqlRequest
  langs:
  - csharp
  - vb
  name: ParamTypes
  nameWithType: ExecuteSqlRequest.ParamTypes
  fullName: Google.Cloud.Spanner.V1.ExecuteSqlRequest.ParamTypes
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Spanner.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: ParamTypes
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Spanner.cs
    startLine: 2222
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nIt is not always possible for Cloud Spanner to infer the right SQL type\nfrom a JSON value.  For example, values of type `BYTES` and values\nof type `STRING` both appear in [params][google.spanner.v1.ExecuteSqlRequest.params] as JSON strings.\n\nIn these cases, `param_types` can be used to specify the exact\nSQL type for some or all of the SQL statement parameters. See the\ndefinition of [Type][google.spanner.v1.Type] for more information\nabout SQL types.\n"
  example: []
  syntax:
    content: public MapField<string, Type> ParamTypes { get; }
    parameters: []
    return:
      type: Google.Protobuf.Collections.MapField{System.String,Google.Cloud.Spanner.V1.Type}
    content.vb: Public ReadOnly Property ParamTypes As MapField(Of String, Type)
  overload: Google.Cloud.Spanner.V1.ExecuteSqlRequest.ParamTypes*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Cloud.Spanner.V1.ExecuteSqlRequest.ResumeToken
  commentId: P:Google.Cloud.Spanner.V1.ExecuteSqlRequest.ResumeToken
  id: ResumeToken
  parent: Google.Cloud.Spanner.V1.ExecuteSqlRequest
  langs:
  - csharp
  - vb
  name: ResumeToken
  nameWithType: ExecuteSqlRequest.ResumeToken
  fullName: Google.Cloud.Spanner.V1.ExecuteSqlRequest.ResumeToken
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Spanner.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: ResumeToken
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Spanner.cs
    startLine: 2238
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nIf this request is resuming a previously interrupted SQL statement\nexecution, `resume_token` should be copied from the last\n[PartialResultSet][google.spanner.v1.PartialResultSet] yielded before the interruption. Doing this\nenables the new SQL statement execution to resume where the last one left\noff. The rest of the request parameters must exactly match the\nrequest that yielded this token.\n"
  example: []
  syntax:
    content: public ByteString ResumeToken { get; set; }
    parameters: []
    return:
      type: Google.Protobuf.ByteString
    content.vb: Public Property ResumeToken As ByteString
  overload: Google.Cloud.Spanner.V1.ExecuteSqlRequest.ResumeToken*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Cloud.Spanner.V1.ExecuteSqlRequest.QueryMode
  commentId: P:Google.Cloud.Spanner.V1.ExecuteSqlRequest.QueryMode
  id: QueryMode
  parent: Google.Cloud.Spanner.V1.ExecuteSqlRequest
  langs:
  - csharp
  - vb
  name: QueryMode
  nameWithType: ExecuteSqlRequest.QueryMode
  fullName: Google.Cloud.Spanner.V1.ExecuteSqlRequest.QueryMode
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Spanner.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: QueryMode
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Spanner.cs
    startLine: 2254
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nUsed to control the amount of debugging information returned in\n[ResultSetStats][google.spanner.v1.ResultSetStats]. If [partition_token][google.spanner.v1.ExecuteSqlRequest.partition_token] is set, [query_mode][google.spanner.v1.ExecuteSqlRequest.query_mode] can only\nbe set to [QueryMode.NORMAL][google.spanner.v1.ExecuteSqlRequest.QueryMode.NORMAL].\n"
  example: []
  syntax:
    content: public ExecuteSqlRequest.Types.QueryMode QueryMode { get; set; }
    parameters: []
    return:
      type: Google.Cloud.Spanner.V1.ExecuteSqlRequest.Types.QueryMode
    content.vb: Public Property QueryMode As ExecuteSqlRequest.Types.QueryMode
  overload: Google.Cloud.Spanner.V1.ExecuteSqlRequest.QueryMode*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Cloud.Spanner.V1.ExecuteSqlRequest.PartitionToken
  commentId: P:Google.Cloud.Spanner.V1.ExecuteSqlRequest.PartitionToken
  id: PartitionToken
  parent: Google.Cloud.Spanner.V1.ExecuteSqlRequest
  langs:
  - csharp
  - vb
  name: PartitionToken
  nameWithType: ExecuteSqlRequest.PartitionToken
  fullName: Google.Cloud.Spanner.V1.ExecuteSqlRequest.PartitionToken
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Spanner.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: PartitionToken
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Spanner.cs
    startLine: 2271
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nIf present, results will be restricted to the specified partition\npreviously created using PartitionQuery().  There must be an exact\nmatch for the values of fields common to this message and the\nPartitionQueryRequest message used to create this partition_token.\n"
  example: []
  syntax:
    content: public ByteString PartitionToken { get; set; }
    parameters: []
    return:
      type: Google.Protobuf.ByteString
    content.vb: Public Property PartitionToken As ByteString
  overload: Google.Cloud.Spanner.V1.ExecuteSqlRequest.PartitionToken*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Cloud.Spanner.V1.ExecuteSqlRequest.Seqno
  commentId: P:Google.Cloud.Spanner.V1.ExecuteSqlRequest.Seqno
  id: Seqno
  parent: Google.Cloud.Spanner.V1.ExecuteSqlRequest
  langs:
  - csharp
  - vb
  name: Seqno
  nameWithType: ExecuteSqlRequest.Seqno
  fullName: Google.Cloud.Spanner.V1.ExecuteSqlRequest.Seqno
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Spanner.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: Seqno
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Spanner.cs
    startLine: 2294
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nA per-transaction sequence number used to identify this request. This field\nmakes each request idempotent such that if the request is received multiple\ntimes, at most one will succeed.\n\nThe sequence number must be monotonically increasing within the\ntransaction. If a request arrives for the first time with an out-of-order\nsequence number, the transaction may be aborted. Replays of previously\nhandled requests will yield the same response as the first execution.\n\nRequired for DML statements. Ignored for queries.\n"
  example: []
  syntax:
    content: public long Seqno { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property Seqno As Long
  overload: Google.Cloud.Spanner.V1.ExecuteSqlRequest.Seqno*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Cloud.Spanner.V1.ExecuteSqlRequest.QueryOptions
  commentId: P:Google.Cloud.Spanner.V1.ExecuteSqlRequest.QueryOptions
  id: QueryOptions
  parent: Google.Cloud.Spanner.V1.ExecuteSqlRequest
  langs:
  - csharp
  - vb
  name: QueryOptions
  nameWithType: ExecuteSqlRequest.QueryOptions
  fullName: Google.Cloud.Spanner.V1.ExecuteSqlRequest.QueryOptions
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Spanner.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: QueryOptions
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Spanner.cs
    startLine: 2308
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nQuery optimizer configuration to use for the given query.\n"
  example: []
  syntax:
    content: public ExecuteSqlRequest.Types.QueryOptions QueryOptions { get; set; }
    parameters: []
    return:
      type: Google.Cloud.Spanner.V1.ExecuteSqlRequest.Types.QueryOptions
    content.vb: Public Property QueryOptions As ExecuteSqlRequest.Types.QueryOptions
  overload: Google.Cloud.Spanner.V1.ExecuteSqlRequest.QueryOptions*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Cloud.Spanner.V1.ExecuteSqlRequest.SessionAsSessionName
  commentId: P:Google.Cloud.Spanner.V1.ExecuteSqlRequest.SessionAsSessionName
  id: SessionAsSessionName
  parent: Google.Cloud.Spanner.V1.ExecuteSqlRequest
  langs:
  - csharp
  - vb
  name: SessionAsSessionName
  nameWithType: ExecuteSqlRequest.SessionAsSessionName
  fullName: Google.Cloud.Spanner.V1.ExecuteSqlRequest.SessionAsSessionName
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerResourceNames.g.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: SessionAsSessionName
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerResourceNames.g.cs
    startLine: 356
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\n<xref href=\"Google.Cloud.Spanner.V1.SessionName\" data-throw-if-not-resolved=\"false\"></xref>-typed view over the <xref href=\"Google.Cloud.Spanner.V1.ExecuteSqlRequest.Session\" data-throw-if-not-resolved=\"false\"></xref> resource name property.\n"
  example: []
  syntax:
    content: public SessionName SessionAsSessionName { get; set; }
    parameters: []
    return:
      type: Google.Cloud.Spanner.V1.SessionName
    content.vb: Public Property SessionAsSessionName As SessionName
  overload: Google.Cloud.Spanner.V1.ExecuteSqlRequest.SessionAsSessionName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Google.Cloud.Spanner.V1
  commentId: N:Google.Cloud.Spanner.V1
  name: Google.Cloud.Spanner.V1
  nameWithType: Google.Cloud.Spanner.V1
  fullName: Google.Cloud.Spanner.V1
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Google.Protobuf.IMessage{Google.Cloud.Spanner.V1.ExecuteSqlRequest}
  commentId: T:Google.Protobuf.IMessage{Google.Cloud.Spanner.V1.ExecuteSqlRequest}
  parent: Google.Protobuf
  definition: Google.Protobuf.IMessage`1
  name: IMessage<ExecuteSqlRequest>
  nameWithType: IMessage<ExecuteSqlRequest>
  fullName: Google.Protobuf.IMessage<Google.Cloud.Spanner.V1.ExecuteSqlRequest>
  nameWithType.vb: IMessage(Of ExecuteSqlRequest)
  fullName.vb: Google.Protobuf.IMessage(Of Google.Cloud.Spanner.V1.ExecuteSqlRequest)
  name.vb: IMessage(Of ExecuteSqlRequest)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Spanner.V1.ExecuteSqlRequest
    name: ExecuteSqlRequest
    nameWithType: ExecuteSqlRequest
    fullName: Google.Cloud.Spanner.V1.ExecuteSqlRequest
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Spanner.V1.ExecuteSqlRequest
    name: ExecuteSqlRequest
    nameWithType: ExecuteSqlRequest
    fullName: Google.Cloud.Spanner.V1.ExecuteSqlRequest
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable{Google.Cloud.Spanner.V1.ExecuteSqlRequest}
  commentId: T:System.IEquatable{Google.Cloud.Spanner.V1.ExecuteSqlRequest}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<ExecuteSqlRequest>
  nameWithType: IEquatable<ExecuteSqlRequest>
  fullName: System.IEquatable<Google.Cloud.Spanner.V1.ExecuteSqlRequest>
  nameWithType.vb: IEquatable(Of ExecuteSqlRequest)
  fullName.vb: System.IEquatable(Of Google.Cloud.Spanner.V1.ExecuteSqlRequest)
  name.vb: IEquatable(Of ExecuteSqlRequest)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Spanner.V1.ExecuteSqlRequest
    name: ExecuteSqlRequest
    nameWithType: ExecuteSqlRequest
    fullName: Google.Cloud.Spanner.V1.ExecuteSqlRequest
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Spanner.V1.ExecuteSqlRequest
    name: ExecuteSqlRequest
    nameWithType: ExecuteSqlRequest
    fullName: Google.Cloud.Spanner.V1.ExecuteSqlRequest
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IDeepCloneable{Google.Cloud.Spanner.V1.ExecuteSqlRequest}
  commentId: T:Google.Protobuf.IDeepCloneable{Google.Cloud.Spanner.V1.ExecuteSqlRequest}
  parent: Google.Protobuf
  definition: Google.Protobuf.IDeepCloneable`1
  name: IDeepCloneable<ExecuteSqlRequest>
  nameWithType: IDeepCloneable<ExecuteSqlRequest>
  fullName: Google.Protobuf.IDeepCloneable<Google.Cloud.Spanner.V1.ExecuteSqlRequest>
  nameWithType.vb: IDeepCloneable(Of ExecuteSqlRequest)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of Google.Cloud.Spanner.V1.ExecuteSqlRequest)
  name.vb: IDeepCloneable(Of ExecuteSqlRequest)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Spanner.V1.ExecuteSqlRequest
    name: ExecuteSqlRequest
    nameWithType: ExecuteSqlRequest
    fullName: Google.Cloud.Spanner.V1.ExecuteSqlRequest
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Spanner.V1.ExecuteSqlRequest
    name: ExecuteSqlRequest
    nameWithType: ExecuteSqlRequest
    fullName: Google.Cloud.Spanner.V1.ExecuteSqlRequest
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IBufferMessage
  commentId: T:Google.Protobuf.IBufferMessage
  parent: Google.Protobuf
  isExternal: true
  name: IBufferMessage
  nameWithType: IBufferMessage
  fullName: Google.Protobuf.IBufferMessage
- uid: Google.Protobuf.IMessage
  commentId: T:Google.Protobuf.IMessage
  parent: Google.Protobuf
  isExternal: true
  name: IMessage
  nameWithType: IMessage
  fullName: Google.Protobuf.IMessage
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Protobuf.IMessage`1
  commentId: T:Google.Protobuf.IMessage`1
  isExternal: true
  name: IMessage<T>
  nameWithType: IMessage<T>
  fullName: Google.Protobuf.IMessage<T>
  nameWithType.vb: IMessage(Of T)
  fullName.vb: Google.Protobuf.IMessage(Of T)
  name.vb: IMessage(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf
  commentId: N:Google.Protobuf
  isExternal: true
  name: Google.Protobuf
  nameWithType: Google.Protobuf
  fullName: Google.Protobuf
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IDeepCloneable`1
  commentId: T:Google.Protobuf.IDeepCloneable`1
  isExternal: true
  name: IDeepCloneable<T>
  nameWithType: IDeepCloneable<T>
  fullName: Google.Protobuf.IDeepCloneable<T>
  nameWithType.vb: IDeepCloneable(Of T)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of T)
  name.vb: IDeepCloneable(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Cloud.Spanner.V1.ExecuteSqlRequest.#ctor*
  commentId: Overload:Google.Cloud.Spanner.V1.ExecuteSqlRequest.#ctor
  name: ExecuteSqlRequest
  nameWithType: ExecuteSqlRequest.ExecuteSqlRequest
  fullName: Google.Cloud.Spanner.V1.ExecuteSqlRequest.ExecuteSqlRequest
- uid: Google.Cloud.Spanner.V1.ExecuteSqlRequest
  commentId: T:Google.Cloud.Spanner.V1.ExecuteSqlRequest
  parent: Google.Cloud.Spanner.V1
  name: ExecuteSqlRequest
  nameWithType: ExecuteSqlRequest
  fullName: Google.Cloud.Spanner.V1.ExecuteSqlRequest
- uid: Google.Cloud.Spanner.V1.ExecuteSqlRequest.Session*
  commentId: Overload:Google.Cloud.Spanner.V1.ExecuteSqlRequest.Session
  name: Session
  nameWithType: ExecuteSqlRequest.Session
  fullName: Google.Cloud.Spanner.V1.ExecuteSqlRequest.Session
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Google.Cloud.Spanner.V1.ExecuteSqlRequest.Transaction*
  commentId: Overload:Google.Cloud.Spanner.V1.ExecuteSqlRequest.Transaction
  name: Transaction
  nameWithType: ExecuteSqlRequest.Transaction
  fullName: Google.Cloud.Spanner.V1.ExecuteSqlRequest.Transaction
- uid: Google.Cloud.Spanner.V1.TransactionSelector
  commentId: T:Google.Cloud.Spanner.V1.TransactionSelector
  parent: Google.Cloud.Spanner.V1
  name: TransactionSelector
  nameWithType: TransactionSelector
  fullName: Google.Cloud.Spanner.V1.TransactionSelector
- uid: Google.Cloud.Spanner.V1.ExecuteSqlRequest.Sql*
  commentId: Overload:Google.Cloud.Spanner.V1.ExecuteSqlRequest.Sql
  name: Sql
  nameWithType: ExecuteSqlRequest.Sql
  fullName: Google.Cloud.Spanner.V1.ExecuteSqlRequest.Sql
- uid: Google.Cloud.Spanner.V1.ExecuteSqlRequest.Params*
  commentId: Overload:Google.Cloud.Spanner.V1.ExecuteSqlRequest.Params
  name: Params
  nameWithType: ExecuteSqlRequest.Params
  fullName: Google.Cloud.Spanner.V1.ExecuteSqlRequest.Params
- uid: Google.Protobuf.WellKnownTypes.Struct
  commentId: T:Google.Protobuf.WellKnownTypes.Struct
  parent: Google.Protobuf.WellKnownTypes
  isExternal: true
  name: Struct
  nameWithType: Struct
  fullName: Google.Protobuf.WellKnownTypes.Struct
- uid: Google.Protobuf.WellKnownTypes
  commentId: N:Google.Protobuf.WellKnownTypes
  isExternal: true
  name: Google.Protobuf.WellKnownTypes
  nameWithType: Google.Protobuf.WellKnownTypes
  fullName: Google.Protobuf.WellKnownTypes
- uid: Google.Cloud.Spanner.V1.ExecuteSqlRequest.ParamTypes*
  commentId: Overload:Google.Cloud.Spanner.V1.ExecuteSqlRequest.ParamTypes
  name: ParamTypes
  nameWithType: ExecuteSqlRequest.ParamTypes
  fullName: Google.Cloud.Spanner.V1.ExecuteSqlRequest.ParamTypes
- uid: Google.Protobuf.Collections.MapField{System.String,Google.Cloud.Spanner.V1.Type}
  commentId: T:Google.Protobuf.Collections.MapField{System.String,Google.Cloud.Spanner.V1.Type}
  parent: Google.Protobuf.Collections
  definition: Google.Protobuf.Collections.MapField`2
  name: MapField<String, Type>
  nameWithType: MapField<String, Type>
  fullName: Google.Protobuf.Collections.MapField<System.String, Google.Cloud.Spanner.V1.Type>
  nameWithType.vb: MapField(Of String, Type)
  fullName.vb: Google.Protobuf.Collections.MapField(Of System.String, Google.Cloud.Spanner.V1.Type)
  name.vb: MapField(Of String, Type)
  spec.csharp:
  - uid: Google.Protobuf.Collections.MapField`2
    name: MapField
    nameWithType: MapField
    fullName: Google.Protobuf.Collections.MapField
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Google.Cloud.Spanner.V1.Type
    name: Type
    nameWithType: Type
    fullName: Google.Cloud.Spanner.V1.Type
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.Collections.MapField`2
    name: MapField
    nameWithType: MapField
    fullName: Google.Protobuf.Collections.MapField
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Google.Cloud.Spanner.V1.Type
    name: Type
    nameWithType: Type
    fullName: Google.Cloud.Spanner.V1.Type
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.Collections.MapField`2
  commentId: T:Google.Protobuf.Collections.MapField`2
  isExternal: true
  name: MapField<TKey, TValue>
  nameWithType: MapField<TKey, TValue>
  fullName: Google.Protobuf.Collections.MapField<TKey, TValue>
  nameWithType.vb: MapField(Of TKey, TValue)
  fullName.vb: Google.Protobuf.Collections.MapField(Of TKey, TValue)
  name.vb: MapField(Of TKey, TValue)
  spec.csharp:
  - uid: Google.Protobuf.Collections.MapField`2
    name: MapField
    nameWithType: MapField
    fullName: Google.Protobuf.Collections.MapField
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.Collections.MapField`2
    name: MapField
    nameWithType: MapField
    fullName: Google.Protobuf.Collections.MapField
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.Collections
  commentId: N:Google.Protobuf.Collections
  isExternal: true
  name: Google.Protobuf.Collections
  nameWithType: Google.Protobuf.Collections
  fullName: Google.Protobuf.Collections
- uid: Google.Cloud.Spanner.V1.ExecuteSqlRequest.ResumeToken*
  commentId: Overload:Google.Cloud.Spanner.V1.ExecuteSqlRequest.ResumeToken
  name: ResumeToken
  nameWithType: ExecuteSqlRequest.ResumeToken
  fullName: Google.Cloud.Spanner.V1.ExecuteSqlRequest.ResumeToken
- uid: Google.Protobuf.ByteString
  commentId: T:Google.Protobuf.ByteString
  parent: Google.Protobuf
  isExternal: true
  name: ByteString
  nameWithType: ByteString
  fullName: Google.Protobuf.ByteString
- uid: Google.Cloud.Spanner.V1.ExecuteSqlRequest.QueryMode*
  commentId: Overload:Google.Cloud.Spanner.V1.ExecuteSqlRequest.QueryMode
  name: QueryMode
  nameWithType: ExecuteSqlRequest.QueryMode
  fullName: Google.Cloud.Spanner.V1.ExecuteSqlRequest.QueryMode
- uid: Google.Cloud.Spanner.V1.ExecuteSqlRequest.Types.QueryMode
  commentId: T:Google.Cloud.Spanner.V1.ExecuteSqlRequest.Types.QueryMode
  parent: Google.Cloud.Spanner.V1
  name: ExecuteSqlRequest.Types.QueryMode
  nameWithType: ExecuteSqlRequest.Types.QueryMode
  fullName: Google.Cloud.Spanner.V1.ExecuteSqlRequest.Types.QueryMode
- uid: Google.Cloud.Spanner.V1.ExecuteSqlRequest.PartitionToken*
  commentId: Overload:Google.Cloud.Spanner.V1.ExecuteSqlRequest.PartitionToken
  name: PartitionToken
  nameWithType: ExecuteSqlRequest.PartitionToken
  fullName: Google.Cloud.Spanner.V1.ExecuteSqlRequest.PartitionToken
- uid: Google.Cloud.Spanner.V1.ExecuteSqlRequest.Seqno*
  commentId: Overload:Google.Cloud.Spanner.V1.ExecuteSqlRequest.Seqno
  name: Seqno
  nameWithType: ExecuteSqlRequest.Seqno
  fullName: Google.Cloud.Spanner.V1.ExecuteSqlRequest.Seqno
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Google.Cloud.Spanner.V1.ExecuteSqlRequest.QueryOptions*
  commentId: Overload:Google.Cloud.Spanner.V1.ExecuteSqlRequest.QueryOptions
  name: QueryOptions
  nameWithType: ExecuteSqlRequest.QueryOptions
  fullName: Google.Cloud.Spanner.V1.ExecuteSqlRequest.QueryOptions
- uid: Google.Cloud.Spanner.V1.ExecuteSqlRequest.Types.QueryOptions
  commentId: T:Google.Cloud.Spanner.V1.ExecuteSqlRequest.Types.QueryOptions
  parent: Google.Cloud.Spanner.V1
  name: ExecuteSqlRequest.Types.QueryOptions
  nameWithType: ExecuteSqlRequest.Types.QueryOptions
  fullName: Google.Cloud.Spanner.V1.ExecuteSqlRequest.Types.QueryOptions
- uid: Google.Cloud.Spanner.V1.SessionName
  commentId: T:Google.Cloud.Spanner.V1.SessionName
  parent: Google.Cloud.Spanner.V1
  name: SessionName
  nameWithType: SessionName
  fullName: Google.Cloud.Spanner.V1.SessionName
- uid: Google.Cloud.Spanner.V1.ExecuteSqlRequest.Session
  commentId: P:Google.Cloud.Spanner.V1.ExecuteSqlRequest.Session
  isExternal: true
- uid: Google.Cloud.Spanner.V1.ExecuteSqlRequest.SessionAsSessionName*
  commentId: Overload:Google.Cloud.Spanner.V1.ExecuteSqlRequest.SessionAsSessionName
  name: SessionAsSessionName
  nameWithType: ExecuteSqlRequest.SessionAsSessionName
  fullName: Google.Cloud.Spanner.V1.ExecuteSqlRequest.SessionAsSessionName
