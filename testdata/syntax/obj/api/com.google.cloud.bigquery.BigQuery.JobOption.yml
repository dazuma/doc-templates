### YamlMime:ManagedReference
items:
- uid: "com.google.cloud.bigquery.BigQuery.JobOption"
  id: "JobOption"
  parent: "com.google.cloud.bigquery"
  children:
  - "com.google.cloud.bigquery.BigQuery.JobOption.fields(com.google.cloud.bigquery.BigQuery.JobField...)"
  langs:
  - "java"
  name: "BigQuery.JobOption"
  nameWithType: "BigQuery.JobOption"
  fullName: "com.google.cloud.bigquery.BigQuery.JobOption"
  type: "Class"
  package: "com.google.cloud.bigquery"
  summary: "Class for specifying table get and create options."
  syntax:
    content: "public static class BigQuery.JobOption extends Option"
  inheritance:
  - "java.lang.Object"
  - "com.google.cloud.bigquery.Option"
  inheritedMembers:
  - "com.google.cloud.bigquery.Option.equals(java.lang.Object)"
  - "com.google.cloud.bigquery.Option.hashCode()"
  - "com.google.cloud.bigquery.Option.toString()"
  - "java.lang.Object.clone()"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.google.cloud.bigquery.BigQuery.JobOption.JobOption(com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,java.lang.Object)"
  id: "JobOption(com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,java.lang.Object)"
  parent: "com.google.cloud.bigquery.BigQuery.JobOption"
  langs:
  - "java"
  name: "JobOption(BigQueryRpc.Option option, Object value)"
  nameWithType: "BigQuery.JobOption.JobOption(BigQueryRpc.Option option, Object value)"
  fullName: "com.google.cloud.bigquery.BigQuery.JobOption.JobOption(BigQueryRpc.Option option, Object value)"
  overload: "com.google.cloud.bigquery.BigQuery.JobOption.JobOption*"
  type: "Constructor"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "private JobOption(BigQueryRpc.Option option, Object value)"
    parameters:
    - id: "option"
      type: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option"
    - id: "value"
      type: "java.lang.Object"
- uid: "com.google.cloud.bigquery.BigQuery.JobOption.fields(com.google.cloud.bigquery.BigQuery.JobField...)"
  id: "fields(com.google.cloud.bigquery.BigQuery.JobField...)"
  parent: "com.google.cloud.bigquery.BigQuery.JobOption"
  langs:
  - "java"
  name: "fields(BigQuery.JobField[] fields)"
  nameWithType: "BigQuery.JobOption.fields(BigQuery.JobField[] fields)"
  fullName: "com.google.cloud.bigquery.BigQuery.JobOption.fields(BigQuery.JobField[] fields)"
  overload: "com.google.cloud.bigquery.BigQuery.JobOption.fields*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns an option to specify the job's fields to be returned by the RPC call. If this option is not provided all job's fields are returned. `JobOption.fields()` can be used to specify only the fields of interest. <xref uid=\"com.google.cloud.bigquery.Job.getJobId*\" data-throw-if-not-resolved=\"false\">Job#getJobId()</xref> as well as type-specific configuration (e.g. <xref uid=\"com.google.cloud.bigquery.QueryJobConfiguration.getQuery()\" data-throw-if-not-resolved=\"false\">QueryJobConfiguration#getQuery()</xref> for Query Jobs) are always returned, even if not specified."
  syntax:
    content: "public static BigQuery.JobOption fields(BigQuery.JobField[] fields)"
    parameters:
    - id: "fields"
      type: "com.google.cloud.bigquery.BigQuery.JobField[]"
    return:
      type: "com.google.cloud.bigquery.BigQuery.JobOption"
references:
- uid: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option"
  name: "BigQueryRpc.Option"
  nameWithType: "BigQueryRpc.Option"
  fullName: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option"
- uid: "java.lang.Object"
  spec.java:
  - uid: "java.lang.Object"
    name: "Object"
    fullName: "java.lang.Object"
- uid: "com.google.cloud.bigquery.BigQuery.JobOption.JobOption*"
  name: "JobOption"
  nameWithType: "BigQuery.JobOption.JobOption"
  fullName: "com.google.cloud.bigquery.BigQuery.JobOption.JobOption"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.BigQuery.JobField[]"
  spec.java:
  - uid: "com.google.cloud.bigquery.BigQuery.JobField"
    name: "JobField"
    fullName: "com.google.cloud.bigquery.BigQuery.JobField"
  - name: "[]"
    fullName: "[]"
- uid: "com.google.cloud.bigquery.BigQuery.JobOption.fields*"
  name: "fields"
  nameWithType: "BigQuery.JobOption.fields"
  fullName: "com.google.cloud.bigquery.BigQuery.JobOption.fields"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.Option"
  name: "Option"
  nameWithType: "Option"
  fullName: "com.google.cloud.bigquery.Option"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "com.google.cloud.bigquery.Option.equals(java.lang.Object)"
  name: "Option.equals(Object)"
  nameWithType: "Option.equals(Object)"
  fullName: "com.google.cloud.bigquery.Option.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "com.google.cloud.bigquery.Option.toString()"
  name: "Option.toString()"
  nameWithType: "Option.toString()"
  fullName: "com.google.cloud.bigquery.Option.toString()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "com.google.cloud.bigquery.Option.hashCode()"
  name: "Option.hashCode()"
  nameWithType: "Option.hashCode()"
  fullName: "com.google.cloud.bigquery.Option.hashCode()"
