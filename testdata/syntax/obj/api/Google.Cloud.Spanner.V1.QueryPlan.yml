### YamlMime:ManagedReference
items:
- uid: Google.Cloud.Spanner.V1.QueryPlan
  commentId: T:Google.Cloud.Spanner.V1.QueryPlan
  id: QueryPlan
  parent: Google.Cloud.Spanner.V1
  children:
  - Google.Cloud.Spanner.V1.QueryPlan.#ctor
  - Google.Cloud.Spanner.V1.QueryPlan.#ctor(Google.Cloud.Spanner.V1.QueryPlan)
  - Google.Cloud.Spanner.V1.QueryPlan.PlanNodes
  langs:
  - csharp
  - vb
  name: QueryPlan
  nameWithType: QueryPlan
  fullName: Google.Cloud.Spanner.V1.QueryPlan
  type: Class
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/QueryPlan.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: QueryPlan
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/QueryPlan.cs
    startLine: 1015
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nContains an ordered list of nodes appearing in the query plan.\n"
  example: []
  syntax:
    content: 'public sealed class QueryPlan : IMessage<QueryPlan>, IEquatable<QueryPlan>, IDeepCloneable<QueryPlan>, IBufferMessage, IMessage'
    content.vb: >-
      Public NotInheritable Class QueryPlan
          Implements IMessage(Of QueryPlan), IEquatable(Of QueryPlan), IDeepCloneable(Of QueryPlan), IBufferMessage, IMessage
  inheritance:
  - System.Object
  implements:
  - Google.Protobuf.IMessage{Google.Cloud.Spanner.V1.QueryPlan}
  - System.IEquatable{Google.Cloud.Spanner.V1.QueryPlan}
  - Google.Protobuf.IDeepCloneable{Google.Cloud.Spanner.V1.QueryPlan}
  - Google.Protobuf.IBufferMessage
  - Google.Protobuf.IMessage
  inheritedMembers:
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Google.Cloud.Spanner.V1.QueryPlan.#ctor
  commentId: M:Google.Cloud.Spanner.V1.QueryPlan.#ctor
  id: '#ctor'
  parent: Google.Cloud.Spanner.V1.QueryPlan
  langs:
  - csharp
  - vb
  name: QueryPlan()
  nameWithType: QueryPlan.QueryPlan()
  fullName: Google.Cloud.Spanner.V1.QueryPlan.QueryPlan()
  type: Constructor
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/QueryPlan.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: .ctor
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/QueryPlan.cs
    startLine: 1035
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  syntax:
    content: public QueryPlan()
    content.vb: Public Sub New
  overload: Google.Cloud.Spanner.V1.QueryPlan.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Cloud.Spanner.V1.QueryPlan.#ctor(Google.Cloud.Spanner.V1.QueryPlan)
  commentId: M:Google.Cloud.Spanner.V1.QueryPlan.#ctor(Google.Cloud.Spanner.V1.QueryPlan)
  id: '#ctor(Google.Cloud.Spanner.V1.QueryPlan)'
  parent: Google.Cloud.Spanner.V1.QueryPlan
  langs:
  - csharp
  - vb
  name: QueryPlan(QueryPlan)
  nameWithType: QueryPlan.QueryPlan(QueryPlan)
  fullName: Google.Cloud.Spanner.V1.QueryPlan.QueryPlan(Google.Cloud.Spanner.V1.QueryPlan)
  type: Constructor
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/QueryPlan.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: .ctor
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/QueryPlan.cs
    startLine: 1042
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  syntax:
    content: public QueryPlan(QueryPlan other)
    parameters:
    - id: other
      type: Google.Cloud.Spanner.V1.QueryPlan
    content.vb: Public Sub New(other As QueryPlan)
  overload: Google.Cloud.Spanner.V1.QueryPlan.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Cloud.Spanner.V1.QueryPlan.PlanNodes
  commentId: P:Google.Cloud.Spanner.V1.QueryPlan.PlanNodes
  id: PlanNodes
  parent: Google.Cloud.Spanner.V1.QueryPlan
  langs:
  - csharp
  - vb
  name: PlanNodes
  nameWithType: QueryPlan.PlanNodes
  fullName: Google.Cloud.Spanner.V1.QueryPlan.PlanNodes
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/QueryPlan.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: PlanNodes
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/QueryPlan.cs
    startLine: 1063
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nThe nodes in the query plan. Plan nodes are returned in pre-order starting\nwith the plan root. Each [PlanNode][google.spanner.v1.PlanNode]&apos;s `id` corresponds to its index in\n`plan_nodes`.\n"
  example: []
  syntax:
    content: public RepeatedField<PlanNode> PlanNodes { get; }
    parameters: []
    return:
      type: Google.Protobuf.Collections.RepeatedField{Google.Cloud.Spanner.V1.PlanNode}
    content.vb: Public ReadOnly Property PlanNodes As RepeatedField(Of PlanNode)
  overload: Google.Cloud.Spanner.V1.QueryPlan.PlanNodes*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Google.Cloud.Spanner.V1
  commentId: N:Google.Cloud.Spanner.V1
  name: Google.Cloud.Spanner.V1
  nameWithType: Google.Cloud.Spanner.V1
  fullName: Google.Cloud.Spanner.V1
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Google.Protobuf.IMessage{Google.Cloud.Spanner.V1.QueryPlan}
  commentId: T:Google.Protobuf.IMessage{Google.Cloud.Spanner.V1.QueryPlan}
  parent: Google.Protobuf
  definition: Google.Protobuf.IMessage`1
  name: IMessage<QueryPlan>
  nameWithType: IMessage<QueryPlan>
  fullName: Google.Protobuf.IMessage<Google.Cloud.Spanner.V1.QueryPlan>
  nameWithType.vb: IMessage(Of QueryPlan)
  fullName.vb: Google.Protobuf.IMessage(Of Google.Cloud.Spanner.V1.QueryPlan)
  name.vb: IMessage(Of QueryPlan)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Spanner.V1.QueryPlan
    name: QueryPlan
    nameWithType: QueryPlan
    fullName: Google.Cloud.Spanner.V1.QueryPlan
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Spanner.V1.QueryPlan
    name: QueryPlan
    nameWithType: QueryPlan
    fullName: Google.Cloud.Spanner.V1.QueryPlan
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable{Google.Cloud.Spanner.V1.QueryPlan}
  commentId: T:System.IEquatable{Google.Cloud.Spanner.V1.QueryPlan}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<QueryPlan>
  nameWithType: IEquatable<QueryPlan>
  fullName: System.IEquatable<Google.Cloud.Spanner.V1.QueryPlan>
  nameWithType.vb: IEquatable(Of QueryPlan)
  fullName.vb: System.IEquatable(Of Google.Cloud.Spanner.V1.QueryPlan)
  name.vb: IEquatable(Of QueryPlan)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Spanner.V1.QueryPlan
    name: QueryPlan
    nameWithType: QueryPlan
    fullName: Google.Cloud.Spanner.V1.QueryPlan
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Spanner.V1.QueryPlan
    name: QueryPlan
    nameWithType: QueryPlan
    fullName: Google.Cloud.Spanner.V1.QueryPlan
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IDeepCloneable{Google.Cloud.Spanner.V1.QueryPlan}
  commentId: T:Google.Protobuf.IDeepCloneable{Google.Cloud.Spanner.V1.QueryPlan}
  parent: Google.Protobuf
  definition: Google.Protobuf.IDeepCloneable`1
  name: IDeepCloneable<QueryPlan>
  nameWithType: IDeepCloneable<QueryPlan>
  fullName: Google.Protobuf.IDeepCloneable<Google.Cloud.Spanner.V1.QueryPlan>
  nameWithType.vb: IDeepCloneable(Of QueryPlan)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of Google.Cloud.Spanner.V1.QueryPlan)
  name.vb: IDeepCloneable(Of QueryPlan)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Spanner.V1.QueryPlan
    name: QueryPlan
    nameWithType: QueryPlan
    fullName: Google.Cloud.Spanner.V1.QueryPlan
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Spanner.V1.QueryPlan
    name: QueryPlan
    nameWithType: QueryPlan
    fullName: Google.Cloud.Spanner.V1.QueryPlan
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IBufferMessage
  commentId: T:Google.Protobuf.IBufferMessage
  parent: Google.Protobuf
  isExternal: true
  name: IBufferMessage
  nameWithType: IBufferMessage
  fullName: Google.Protobuf.IBufferMessage
- uid: Google.Protobuf.IMessage
  commentId: T:Google.Protobuf.IMessage
  parent: Google.Protobuf
  isExternal: true
  name: IMessage
  nameWithType: IMessage
  fullName: Google.Protobuf.IMessage
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Protobuf.IMessage`1
  commentId: T:Google.Protobuf.IMessage`1
  isExternal: true
  name: IMessage<T>
  nameWithType: IMessage<T>
  fullName: Google.Protobuf.IMessage<T>
  nameWithType.vb: IMessage(Of T)
  fullName.vb: Google.Protobuf.IMessage(Of T)
  name.vb: IMessage(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf
  commentId: N:Google.Protobuf
  isExternal: true
  name: Google.Protobuf
  nameWithType: Google.Protobuf
  fullName: Google.Protobuf
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IDeepCloneable`1
  commentId: T:Google.Protobuf.IDeepCloneable`1
  isExternal: true
  name: IDeepCloneable<T>
  nameWithType: IDeepCloneable<T>
  fullName: Google.Protobuf.IDeepCloneable<T>
  nameWithType.vb: IDeepCloneable(Of T)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of T)
  name.vb: IDeepCloneable(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Cloud.Spanner.V1.QueryPlan.#ctor*
  commentId: Overload:Google.Cloud.Spanner.V1.QueryPlan.#ctor
  name: QueryPlan
  nameWithType: QueryPlan.QueryPlan
  fullName: Google.Cloud.Spanner.V1.QueryPlan.QueryPlan
- uid: Google.Cloud.Spanner.V1.QueryPlan
  commentId: T:Google.Cloud.Spanner.V1.QueryPlan
  parent: Google.Cloud.Spanner.V1
  name: QueryPlan
  nameWithType: QueryPlan
  fullName: Google.Cloud.Spanner.V1.QueryPlan
- uid: Google.Cloud.Spanner.V1.QueryPlan.PlanNodes*
  commentId: Overload:Google.Cloud.Spanner.V1.QueryPlan.PlanNodes
  name: PlanNodes
  nameWithType: QueryPlan.PlanNodes
  fullName: Google.Cloud.Spanner.V1.QueryPlan.PlanNodes
- uid: Google.Protobuf.Collections.RepeatedField{Google.Cloud.Spanner.V1.PlanNode}
  commentId: T:Google.Protobuf.Collections.RepeatedField{Google.Cloud.Spanner.V1.PlanNode}
  parent: Google.Protobuf.Collections
  definition: Google.Protobuf.Collections.RepeatedField`1
  name: RepeatedField<PlanNode>
  nameWithType: RepeatedField<PlanNode>
  fullName: Google.Protobuf.Collections.RepeatedField<Google.Cloud.Spanner.V1.PlanNode>
  nameWithType.vb: RepeatedField(Of PlanNode)
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of Google.Cloud.Spanner.V1.PlanNode)
  name.vb: RepeatedField(Of PlanNode)
  spec.csharp:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    nameWithType: RepeatedField
    fullName: Google.Protobuf.Collections.RepeatedField
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Spanner.V1.PlanNode
    name: PlanNode
    nameWithType: PlanNode
    fullName: Google.Cloud.Spanner.V1.PlanNode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    nameWithType: RepeatedField
    fullName: Google.Protobuf.Collections.RepeatedField
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Spanner.V1.PlanNode
    name: PlanNode
    nameWithType: PlanNode
    fullName: Google.Cloud.Spanner.V1.PlanNode
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.Collections.RepeatedField`1
  commentId: T:Google.Protobuf.Collections.RepeatedField`1
  isExternal: true
  name: RepeatedField<T>
  nameWithType: RepeatedField<T>
  fullName: Google.Protobuf.Collections.RepeatedField<T>
  nameWithType.vb: RepeatedField(Of T)
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of T)
  name.vb: RepeatedField(Of T)
  spec.csharp:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    nameWithType: RepeatedField
    fullName: Google.Protobuf.Collections.RepeatedField
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    nameWithType: RepeatedField
    fullName: Google.Protobuf.Collections.RepeatedField
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.Collections
  commentId: N:Google.Protobuf.Collections
  isExternal: true
  name: Google.Protobuf.Collections
  nameWithType: Google.Protobuf.Collections
  fullName: Google.Protobuf.Collections
