### YamlMime:ManagedReference
items:
- uid: "com.google.cloud.bigquery.ViewDefinition"
  id: "ViewDefinition"
  parent: "com.google.cloud.bigquery"
  children:
  - "com.google.cloud.bigquery.ViewDefinition.Builder"
  - "com.google.cloud.bigquery.ViewDefinition.ViewDefinition()"
  - "com.google.cloud.bigquery.ViewDefinition.getQuery()"
  - "com.google.cloud.bigquery.ViewDefinition.getUserDefinedFunctions()"
  - "com.google.cloud.bigquery.ViewDefinition.newBuilder(java.lang.String)"
  - "com.google.cloud.bigquery.ViewDefinition.newBuilder(java.lang.String,com.google.cloud.bigquery.UserDefinedFunction...)"
  - "com.google.cloud.bigquery.ViewDefinition.newBuilder(java.lang.String,java.util.List<com.google.cloud.bigquery.UserDefinedFunction>)"
  - "com.google.cloud.bigquery.ViewDefinition.of(java.lang.String)"
  - "com.google.cloud.bigquery.ViewDefinition.of(java.lang.String,com.google.cloud.bigquery.UserDefinedFunction...)"
  - "com.google.cloud.bigquery.ViewDefinition.of(java.lang.String,java.util.List<com.google.cloud.bigquery.UserDefinedFunction>)"
  - "com.google.cloud.bigquery.ViewDefinition.toBuilder()"
  - "com.google.cloud.bigquery.ViewDefinition.useLegacySql()"
  langs:
  - "java"
  name: "ViewDefinition"
  nameWithType: "ViewDefinition"
  fullName: "com.google.cloud.bigquery.ViewDefinition"
  type: "Class"
  package: "com.google.cloud.bigquery"
  summary: "Google BigQuery view table definition. BigQuery's views are logical views, not materialized views, which means that the query that defines the view is re-executed every time the view is queried."
  syntax:
    content: "public abstract class ViewDefinition extends TableDefinition"
  inheritance:
  - "java.lang.Object"
  - "com.google.cloud.bigquery.TableDefinition"
  inheritedMembers:
  - "com.google.cloud.bigquery.TableDefinition.getSchema()"
  - "com.google.cloud.bigquery.TableDefinition.getType()"
  - "com.google.cloud.bigquery.TableDefinition.toBuilder()"
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.google.cloud.bigquery.ViewDefinition.ViewDefinition()"
  id: "ViewDefinition()"
  parent: "com.google.cloud.bigquery.ViewDefinition"
  langs:
  - "java"
  name: "ViewDefinition()"
  nameWithType: "ViewDefinition.ViewDefinition()"
  fullName: "com.google.cloud.bigquery.ViewDefinition.ViewDefinition()"
  overload: "com.google.cloud.bigquery.ViewDefinition.ViewDefinition*"
  type: "Constructor"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public ViewDefinition()"
- uid: "com.google.cloud.bigquery.ViewDefinition.getQuery()"
  id: "getQuery()"
  parent: "com.google.cloud.bigquery.ViewDefinition"
  langs:
  - "java"
  name: "getQuery()"
  nameWithType: "ViewDefinition.getQuery()"
  fullName: "com.google.cloud.bigquery.ViewDefinition.getQuery()"
  overload: "com.google.cloud.bigquery.ViewDefinition.getQuery*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns the query used to create the view."
  syntax:
    content: "public abstract String getQuery()"
    return:
      type: "java.lang.String"
- uid: "com.google.cloud.bigquery.ViewDefinition.getUserDefinedFunctions()"
  id: "getUserDefinedFunctions()"
  parent: "com.google.cloud.bigquery.ViewDefinition"
  langs:
  - "java"
  name: "getUserDefinedFunctions()"
  nameWithType: "ViewDefinition.getUserDefinedFunctions()"
  fullName: "com.google.cloud.bigquery.ViewDefinition.getUserDefinedFunctions()"
  overload: "com.google.cloud.bigquery.ViewDefinition.getUserDefinedFunctions*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns user defined functions that can be used by <xref uid=\"com.google.cloud.bigquery.ViewDefinition.getQuery()\" data-throw-if-not-resolved=\"false\">#getQuery()</xref>. Returns `null` if not set."
  syntax:
    content: "public List<UserDefinedFunction> getUserDefinedFunctions()"
    return:
      type: "java.util.List<com.google.cloud.bigquery.UserDefinedFunction>"
- uid: "com.google.cloud.bigquery.ViewDefinition.newBuilder(java.lang.String)"
  id: "newBuilder(java.lang.String)"
  parent: "com.google.cloud.bigquery.ViewDefinition"
  langs:
  - "java"
  name: "newBuilder(String query)"
  nameWithType: "ViewDefinition.newBuilder(String query)"
  fullName: "com.google.cloud.bigquery.ViewDefinition.newBuilder(String query)"
  overload: "com.google.cloud.bigquery.ViewDefinition.newBuilder*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns a builder for a BigQuery view definition."
  syntax:
    content: "public static ViewDefinition.Builder newBuilder(String query)"
    parameters:
    - id: "query"
      type: "java.lang.String"
      description: "the query used to generate the view"
    return:
      type: "com.google.cloud.bigquery.ViewDefinition.Builder"
- uid: "com.google.cloud.bigquery.ViewDefinition.newBuilder(java.lang.String,com.google.cloud.bigquery.UserDefinedFunction...)"
  id: "newBuilder(java.lang.String,com.google.cloud.bigquery.UserDefinedFunction...)"
  parent: "com.google.cloud.bigquery.ViewDefinition"
  langs:
  - "java"
  name: "newBuilder(String query, UserDefinedFunction[] functions)"
  nameWithType: "ViewDefinition.newBuilder(String query, UserDefinedFunction[] functions)"
  fullName: "com.google.cloud.bigquery.ViewDefinition.newBuilder(String query, UserDefinedFunction[] functions)"
  overload: "com.google.cloud.bigquery.ViewDefinition.newBuilder*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns a builder for a BigQuery view definition."
  syntax:
    content: "public static ViewDefinition.Builder newBuilder(String query, UserDefinedFunction[] functions)"
    parameters:
    - id: "query"
      type: "java.lang.String"
      description: "the query used to generate the table"
    - id: "functions"
      type: "com.google.cloud.bigquery.UserDefinedFunction[]"
      description: "user-defined functions that can be used by the query"
    return:
      type: "com.google.cloud.bigquery.ViewDefinition.Builder"
- uid: "com.google.cloud.bigquery.ViewDefinition.newBuilder(java.lang.String,java.util.List<com.google.cloud.bigquery.UserDefinedFunction>)"
  id: "newBuilder(java.lang.String,java.util.List<com.google.cloud.bigquery.UserDefinedFunction>)"
  parent: "com.google.cloud.bigquery.ViewDefinition"
  langs:
  - "java"
  name: "newBuilder(String query, List<UserDefinedFunction> functions)"
  nameWithType: "ViewDefinition.newBuilder(String query, List<UserDefinedFunction> functions)"
  fullName: "com.google.cloud.bigquery.ViewDefinition.newBuilder(String query, List<UserDefinedFunction> functions)"
  overload: "com.google.cloud.bigquery.ViewDefinition.newBuilder*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns a builder for a BigQuery view definition."
  syntax:
    content: "public static ViewDefinition.Builder newBuilder(String query, List<UserDefinedFunction> functions)"
    parameters:
    - id: "query"
      type: "java.lang.String"
      description: "the query used to generate the table"
    - id: "functions"
      type: "java.util.List<com.google.cloud.bigquery.UserDefinedFunction>"
      description: "user-defined functions that can be used by the query"
    return:
      type: "com.google.cloud.bigquery.ViewDefinition.Builder"
- uid: "com.google.cloud.bigquery.ViewDefinition.of(java.lang.String)"
  id: "of(java.lang.String)"
  parent: "com.google.cloud.bigquery.ViewDefinition"
  langs:
  - "java"
  name: "of(String query)"
  nameWithType: "ViewDefinition.of(String query)"
  fullName: "com.google.cloud.bigquery.ViewDefinition.of(String query)"
  overload: "com.google.cloud.bigquery.ViewDefinition.of*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Creates a BigQuery view definition given the query used to generate the table."
  syntax:
    content: "public static ViewDefinition of(String query)"
    parameters:
    - id: "query"
      type: "java.lang.String"
      description: "the query used to generate the table"
    return:
      type: "com.google.cloud.bigquery.ViewDefinition"
- uid: "com.google.cloud.bigquery.ViewDefinition.of(java.lang.String,com.google.cloud.bigquery.UserDefinedFunction...)"
  id: "of(java.lang.String,com.google.cloud.bigquery.UserDefinedFunction...)"
  parent: "com.google.cloud.bigquery.ViewDefinition"
  langs:
  - "java"
  name: "of(String query, UserDefinedFunction[] functions)"
  nameWithType: "ViewDefinition.of(String query, UserDefinedFunction[] functions)"
  fullName: "com.google.cloud.bigquery.ViewDefinition.of(String query, UserDefinedFunction[] functions)"
  overload: "com.google.cloud.bigquery.ViewDefinition.of*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Creates a BigQuery view definition given a query and some user-defined functions."
  syntax:
    content: "public static ViewDefinition of(String query, UserDefinedFunction[] functions)"
    parameters:
    - id: "query"
      type: "java.lang.String"
      description: "the query used to generate the table"
    - id: "functions"
      type: "com.google.cloud.bigquery.UserDefinedFunction[]"
      description: "user-defined functions that can be used by the query"
    return:
      type: "com.google.cloud.bigquery.ViewDefinition"
- uid: "com.google.cloud.bigquery.ViewDefinition.of(java.lang.String,java.util.List<com.google.cloud.bigquery.UserDefinedFunction>)"
  id: "of(java.lang.String,java.util.List<com.google.cloud.bigquery.UserDefinedFunction>)"
  parent: "com.google.cloud.bigquery.ViewDefinition"
  langs:
  - "java"
  name: "of(String query, List<UserDefinedFunction> functions)"
  nameWithType: "ViewDefinition.of(String query, List<UserDefinedFunction> functions)"
  fullName: "com.google.cloud.bigquery.ViewDefinition.of(String query, List<UserDefinedFunction> functions)"
  overload: "com.google.cloud.bigquery.ViewDefinition.of*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Creates a BigQuery view definition given a query and some user-defined functions."
  syntax:
    content: "public static ViewDefinition of(String query, List<UserDefinedFunction> functions)"
    parameters:
    - id: "query"
      type: "java.lang.String"
      description: "the query used to generate the table"
    - id: "functions"
      type: "java.util.List<com.google.cloud.bigquery.UserDefinedFunction>"
      description: "user-defined functions that can be used by the query"
    return:
      type: "com.google.cloud.bigquery.ViewDefinition"
- uid: "com.google.cloud.bigquery.ViewDefinition.toBuilder()"
  id: "toBuilder()"
  parent: "com.google.cloud.bigquery.ViewDefinition"
  langs:
  - "java"
  name: "toBuilder()"
  nameWithType: "ViewDefinition.toBuilder()"
  fullName: "com.google.cloud.bigquery.ViewDefinition.toBuilder()"
  overload: "com.google.cloud.bigquery.ViewDefinition.toBuilder*"
  overridden: "com.google.cloud.bigquery.TableDefinition.toBuilder()"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns a builder for the `ViewInfo` object."
  syntax:
    content: "public abstract ViewDefinition.Builder toBuilder()"
    return:
      type: "com.google.cloud.bigquery.ViewDefinition.Builder"
- uid: "com.google.cloud.bigquery.ViewDefinition.useLegacySql()"
  id: "useLegacySql()"
  parent: "com.google.cloud.bigquery.ViewDefinition"
  langs:
  - "java"
  name: "useLegacySql()"
  nameWithType: "ViewDefinition.useLegacySql()"
  fullName: "com.google.cloud.bigquery.ViewDefinition.useLegacySql()"
  overload: "com.google.cloud.bigquery.ViewDefinition.useLegacySql*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns whether to use BigQuery's legacy SQL dialect for this query. By default this property is set to `false`. If set to `false`, the query will use BigQuery's [Standard SQL][]. If set to `null` or `true`, legacy SQL dialect is used. This property is experimental and might be subject to change.\n\n\n[Standard SQL]: https://cloud.google.com/bigquery/sql-reference/"
  syntax:
    content: "public Boolean useLegacySql()"
    return:
      type: "java.lang.Boolean"
references:
- uid: "com.google.cloud.bigquery.ViewDefinition.ViewDefinition*"
  name: "ViewDefinition"
  nameWithType: "ViewDefinition.ViewDefinition"
  fullName: "com.google.cloud.bigquery.ViewDefinition.ViewDefinition"
  package: "com.google.cloud.bigquery"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.google.cloud.bigquery.ViewDefinition.getQuery*"
  name: "getQuery"
  nameWithType: "ViewDefinition.getQuery"
  fullName: "com.google.cloud.bigquery.ViewDefinition.getQuery"
  package: "com.google.cloud.bigquery"
- uid: "java.util.List<com.google.cloud.bigquery.UserDefinedFunction>"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "com.google.cloud.bigquery.UserDefinedFunction"
    name: "UserDefinedFunction"
    fullName: "com.google.cloud.bigquery.UserDefinedFunction"
  - name: ">"
    fullName: ">"
- uid: "com.google.cloud.bigquery.ViewDefinition.getUserDefinedFunctions*"
  name: "getUserDefinedFunctions"
  nameWithType: "ViewDefinition.getUserDefinedFunctions"
  fullName: "com.google.cloud.bigquery.ViewDefinition.getUserDefinedFunctions"
  package: "com.google.cloud.bigquery"
- uid: "java.lang.Boolean"
  spec.java:
  - uid: "java.lang.Boolean"
    name: "Boolean"
    fullName: "java.lang.Boolean"
- uid: "com.google.cloud.bigquery.ViewDefinition.useLegacySql*"
  name: "useLegacySql"
  nameWithType: "ViewDefinition.useLegacySql"
  fullName: "com.google.cloud.bigquery.ViewDefinition.useLegacySql"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.ViewDefinition.Builder"
  name: "ViewDefinition.Builder"
  nameWithType: "ViewDefinition.Builder"
  fullName: "com.google.cloud.bigquery.ViewDefinition.Builder"
- uid: "com.google.cloud.bigquery.ViewDefinition.toBuilder*"
  name: "toBuilder"
  nameWithType: "ViewDefinition.toBuilder"
  fullName: "com.google.cloud.bigquery.ViewDefinition.toBuilder"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.ViewDefinition.newBuilder*"
  name: "newBuilder"
  nameWithType: "ViewDefinition.newBuilder"
  fullName: "com.google.cloud.bigquery.ViewDefinition.newBuilder"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.UserDefinedFunction[]"
  spec.java:
  - uid: "com.google.cloud.bigquery.UserDefinedFunction"
    name: "UserDefinedFunction"
    fullName: "com.google.cloud.bigquery.UserDefinedFunction"
  - name: "[]"
    fullName: "[]"
- uid: "com.google.cloud.bigquery.ViewDefinition.of*"
  name: "of"
  nameWithType: "ViewDefinition.of"
  fullName: "com.google.cloud.bigquery.ViewDefinition.of"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.TableDefinition"
  name: "TableDefinition"
  nameWithType: "TableDefinition"
  fullName: "com.google.cloud.bigquery.TableDefinition"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "com.google.cloud.bigquery.TableDefinition.toBuilder()"
  name: "TableDefinition.toBuilder()"
  nameWithType: "TableDefinition.toBuilder()"
  fullName: "com.google.cloud.bigquery.TableDefinition.toBuilder()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "com.google.cloud.bigquery.TableDefinition.getType()"
  name: "TableDefinition.getType()"
  nameWithType: "TableDefinition.getType()"
  fullName: "com.google.cloud.bigquery.TableDefinition.getType()"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "com.google.cloud.bigquery.TableDefinition.getSchema()"
  name: "TableDefinition.getSchema()"
  nameWithType: "TableDefinition.getSchema()"
  fullName: "com.google.cloud.bigquery.TableDefinition.getSchema()"
- uid: "java.util.List"
  name: "List"
  nameWithType: "List"
  fullName: "java.util.List"
- uid: "com.google.cloud.bigquery.UserDefinedFunction"
  name: "UserDefinedFunction"
  nameWithType: "UserDefinedFunction"
  fullName: "com.google.cloud.bigquery.UserDefinedFunction"
