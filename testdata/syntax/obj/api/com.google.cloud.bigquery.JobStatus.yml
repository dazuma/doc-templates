### YamlMime:ManagedReference
items:
- uid: "com.google.cloud.bigquery.JobStatus"
  id: "JobStatus"
  parent: "com.google.cloud.bigquery"
  children:
  - "com.google.cloud.bigquery.JobStatus.State"
  - "com.google.cloud.bigquery.JobStatus.equals(java.lang.Object)"
  - "com.google.cloud.bigquery.JobStatus.getError()"
  - "com.google.cloud.bigquery.JobStatus.getExecutionErrors()"
  - "com.google.cloud.bigquery.JobStatus.getState()"
  - "com.google.cloud.bigquery.JobStatus.hashCode()"
  - "com.google.cloud.bigquery.JobStatus.toString()"
  langs:
  - "java"
  name: "JobStatus"
  nameWithType: "JobStatus"
  fullName: "com.google.cloud.bigquery.JobStatus"
  type: "Class"
  package: "com.google.cloud.bigquery"
  summary: "A Google BigQuery Job status. Objects of this class can be examined when polling an asynchronous job to see if the job completed."
  syntax:
    content: "public class JobStatus implements Serializable"
  inheritance:
  - "java.lang.Object"
  implements:
  - "java.io.Serializable"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.google.cloud.bigquery.JobStatus.JobStatus(com.google.cloud.bigquery.JobStatus.State)"
  id: "JobStatus(com.google.cloud.bigquery.JobStatus.State)"
  parent: "com.google.cloud.bigquery.JobStatus"
  langs:
  - "java"
  name: "JobStatus(JobStatus.State state)"
  nameWithType: "JobStatus.JobStatus(JobStatus.State state)"
  fullName: "com.google.cloud.bigquery.JobStatus.JobStatus(JobStatus.State state)"
  overload: "com.google.cloud.bigquery.JobStatus.JobStatus*"
  type: "Constructor"
  package: "com.google.cloud.bigquery"
  syntax:
    content: " JobStatus(JobStatus.State state)"
    parameters:
    - id: "state"
      type: "com.google.cloud.bigquery.JobStatus.State"
- uid: "com.google.cloud.bigquery.JobStatus.JobStatus(com.google.cloud.bigquery.JobStatus.State,com.google.cloud.bigquery.BigQueryError,java.util.List<com.google.cloud.bigquery.BigQueryError>)"
  id: "JobStatus(com.google.cloud.bigquery.JobStatus.State,com.google.cloud.bigquery.BigQueryError,java.util.List<com.google.cloud.bigquery.BigQueryError>)"
  parent: "com.google.cloud.bigquery.JobStatus"
  langs:
  - "java"
  name: "JobStatus(JobStatus.State state, BigQueryError error, List<BigQueryError> executionErrors)"
  nameWithType: "JobStatus.JobStatus(JobStatus.State state, BigQueryError error, List<BigQueryError> executionErrors)"
  fullName: "com.google.cloud.bigquery.JobStatus.JobStatus(JobStatus.State state, BigQueryError error, List<BigQueryError> executionErrors)"
  overload: "com.google.cloud.bigquery.JobStatus.JobStatus*"
  type: "Constructor"
  package: "com.google.cloud.bigquery"
  syntax:
    content: " JobStatus(JobStatus.State state, BigQueryError error, List<BigQueryError> executionErrors)"
    parameters:
    - id: "state"
      type: "com.google.cloud.bigquery.JobStatus.State"
    - id: "error"
      type: "com.google.cloud.bigquery.BigQueryError"
    - id: "executionErrors"
      type: "java.util.List<com.google.cloud.bigquery.BigQueryError>"
- uid: "com.google.cloud.bigquery.JobStatus.equals(java.lang.Object)"
  id: "equals(java.lang.Object)"
  parent: "com.google.cloud.bigquery.JobStatus"
  langs:
  - "java"
  name: "equals(Object obj)"
  nameWithType: "JobStatus.equals(Object obj)"
  fullName: "com.google.cloud.bigquery.JobStatus.equals(Object obj)"
  overload: "com.google.cloud.bigquery.JobStatus.equals*"
  overridden: "java.lang.Object.equals(java.lang.Object)"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public final boolean equals(Object obj)"
    parameters:
    - id: "obj"
      type: "java.lang.Object"
    return:
      type: "boolean"
- uid: "com.google.cloud.bigquery.JobStatus.getError()"
  id: "getError()"
  parent: "com.google.cloud.bigquery.JobStatus"
  langs:
  - "java"
  name: "getError()"
  nameWithType: "JobStatus.getError()"
  fullName: "com.google.cloud.bigquery.JobStatus.getError()"
  overload: "com.google.cloud.bigquery.JobStatus.getError*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns the final error result of the job. If present, indicates that the job has completed and was unsuccessful."
  syntax:
    content: "public BigQueryError getError()"
    return:
      type: "com.google.cloud.bigquery.BigQueryError"
- uid: "com.google.cloud.bigquery.JobStatus.getExecutionErrors()"
  id: "getExecutionErrors()"
  parent: "com.google.cloud.bigquery.JobStatus"
  langs:
  - "java"
  name: "getExecutionErrors()"
  nameWithType: "JobStatus.getExecutionErrors()"
  fullName: "com.google.cloud.bigquery.JobStatus.getExecutionErrors()"
  overload: "com.google.cloud.bigquery.JobStatus.getExecutionErrors*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns all errors encountered during the running of the job. Errors here do not necessarily mean that the job has completed or was unsuccessful."
  syntax:
    content: "public List<BigQueryError> getExecutionErrors()"
    return:
      type: "java.util.List<com.google.cloud.bigquery.BigQueryError>"
- uid: "com.google.cloud.bigquery.JobStatus.getState()"
  id: "getState()"
  parent: "com.google.cloud.bigquery.JobStatus"
  langs:
  - "java"
  name: "getState()"
  nameWithType: "JobStatus.getState()"
  fullName: "com.google.cloud.bigquery.JobStatus.getState()"
  overload: "com.google.cloud.bigquery.JobStatus.getState*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns the state of the job. A <xref uid=\"\" data-throw-if-not-resolved=\"false\">State#PENDING</xref> job is waiting to be executed. A <xref uid=\"\" data-throw-if-not-resolved=\"false\">State#RUNNING</xref> is being executed. A <xref uid=\"\" data-throw-if-not-resolved=\"false\">State#DONE</xref> job has completed either succeeding or failing. If failed <xref uid=\"com.google.cloud.bigquery.JobStatus.getError()\" data-throw-if-not-resolved=\"false\">#getError()</xref> will be non-null."
  syntax:
    content: "public JobStatus.State getState()"
    return:
      type: "com.google.cloud.bigquery.JobStatus.State"
- uid: "com.google.cloud.bigquery.JobStatus.hashCode()"
  id: "hashCode()"
  parent: "com.google.cloud.bigquery.JobStatus"
  langs:
  - "java"
  name: "hashCode()"
  nameWithType: "JobStatus.hashCode()"
  fullName: "com.google.cloud.bigquery.JobStatus.hashCode()"
  overload: "com.google.cloud.bigquery.JobStatus.hashCode*"
  overridden: "java.lang.Object.hashCode()"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public final int hashCode()"
    return:
      type: "int"
- uid: "com.google.cloud.bigquery.JobStatus.toString()"
  id: "toString()"
  parent: "com.google.cloud.bigquery.JobStatus"
  langs:
  - "java"
  name: "toString()"
  nameWithType: "JobStatus.toString()"
  fullName: "com.google.cloud.bigquery.JobStatus.toString()"
  overload: "com.google.cloud.bigquery.JobStatus.toString*"
  overridden: "java.lang.Object.toString()"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public String toString()"
    return:
      type: "java.lang.String"
references:
- uid: "com.google.cloud.bigquery.JobStatus.State"
  name: "JobStatus.State"
  nameWithType: "JobStatus.State"
  fullName: "com.google.cloud.bigquery.JobStatus.State"
- uid: "com.google.cloud.bigquery.JobStatus.JobStatus*"
  name: "JobStatus"
  nameWithType: "JobStatus.JobStatus"
  fullName: "com.google.cloud.bigquery.JobStatus.JobStatus"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.BigQueryError"
  name: "BigQueryError"
  nameWithType: "BigQueryError"
  fullName: "com.google.cloud.bigquery.BigQueryError"
- uid: "java.util.List<com.google.cloud.bigquery.BigQueryError>"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "com.google.cloud.bigquery.BigQueryError"
    name: "BigQueryError"
    fullName: "com.google.cloud.bigquery.BigQueryError"
  - name: ">"
    fullName: ">"
- uid: "com.google.cloud.bigquery.JobStatus.getState*"
  name: "getState"
  nameWithType: "JobStatus.getState"
  fullName: "com.google.cloud.bigquery.JobStatus.getState"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.JobStatus.getError*"
  name: "getError"
  nameWithType: "JobStatus.getError"
  fullName: "com.google.cloud.bigquery.JobStatus.getError"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.JobStatus.getExecutionErrors*"
  name: "getExecutionErrors"
  nameWithType: "JobStatus.getExecutionErrors"
  fullName: "com.google.cloud.bigquery.JobStatus.getExecutionErrors"
  package: "com.google.cloud.bigquery"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.google.cloud.bigquery.JobStatus.toString*"
  name: "toString"
  nameWithType: "JobStatus.toString"
  fullName: "com.google.cloud.bigquery.JobStatus.toString"
  package: "com.google.cloud.bigquery"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "com.google.cloud.bigquery.JobStatus.hashCode*"
  name: "hashCode"
  nameWithType: "JobStatus.hashCode"
  fullName: "com.google.cloud.bigquery.JobStatus.hashCode"
  package: "com.google.cloud.bigquery"
- uid: "java.lang.Object"
  spec.java:
  - uid: "java.lang.Object"
    name: "Object"
    fullName: "java.lang.Object"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "com.google.cloud.bigquery.JobStatus.equals*"
  name: "equals"
  nameWithType: "JobStatus.equals"
  fullName: "com.google.cloud.bigquery.JobStatus.equals"
  package: "com.google.cloud.bigquery"
- uid: "java.io.Serializable"
  name: "Serializable"
  nameWithType: "Serializable"
  fullName: "java.io.Serializable"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.util.List"
  name: "List"
  nameWithType: "List"
  fullName: "java.util.List"
