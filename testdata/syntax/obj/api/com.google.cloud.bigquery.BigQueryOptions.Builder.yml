### YamlMime:ManagedReference
items:
- uid: "com.google.cloud.bigquery.BigQueryOptions.Builder"
  id: "Builder"
  parent: "com.google.cloud.bigquery"
  children:
  - "com.google.cloud.bigquery.BigQueryOptions.Builder.build()"
  - "com.google.cloud.bigquery.BigQueryOptions.Builder.setLocation(java.lang.String)"
  - "com.google.cloud.bigquery.BigQueryOptions.Builder.setTransportOptions(com.google.cloud.TransportOptions)"
  langs:
  - "java"
  name: "BigQueryOptions.Builder"
  nameWithType: "BigQueryOptions.Builder"
  fullName: "com.google.cloud.bigquery.BigQueryOptions.Builder"
  type: "Class"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public static class BigQueryOptions.Builder extends ServiceOptions.Builder<BigQuery,BigQueryOptions,BigQueryOptions.Builder>"
  inheritance:
  - "java.lang.Object"
  - "com.google.cloud.ServiceOptions.Builder"
  inheritedMembers:
  - "com.google.cloud.ServiceOptions.Builder.build()"
  - "com.google.cloud.ServiceOptions.Builder.getAllowedClientLibTokens()"
  - "com.google.cloud.ServiceOptions.Builder.self()"
  - "com.google.cloud.ServiceOptions.Builder.setClientLibToken(java.lang.String)"
  - "com.google.cloud.ServiceOptions.Builder.setClock(com.google.api.core.ApiClock)"
  - "com.google.cloud.ServiceOptions.Builder.setCredentials(com.google.auth.Credentials)"
  - "com.google.cloud.ServiceOptions.Builder.setHeaderProvider(com.google.api.gax.rpc.HeaderProvider)"
  - "com.google.cloud.ServiceOptions.Builder.setHost(java.lang.String)"
  - "com.google.cloud.ServiceOptions.Builder.setProjectId(java.lang.String)"
  - "com.google.cloud.ServiceOptions.Builder.setQuotaProjectId(java.lang.String)"
  - "com.google.cloud.ServiceOptions.Builder.setRetrySettings(com.google.api.gax.retrying.RetrySettings)"
  - "com.google.cloud.ServiceOptions.Builder.setServiceFactory(com.google.cloud.ServiceFactory<ServiceT,OptionsT>)"
  - "com.google.cloud.ServiceOptions.Builder.setServiceRpcFactory(com.google.cloud.spi.ServiceRpcFactory<OptionsT>)"
  - "com.google.cloud.ServiceOptions.Builder.setTransportOptions(com.google.cloud.TransportOptions)"
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.google.cloud.bigquery.BigQueryOptions.Builder.Builder()"
  id: "Builder()"
  parent: "com.google.cloud.bigquery.BigQueryOptions.Builder"
  langs:
  - "java"
  name: "Builder()"
  nameWithType: "BigQueryOptions.Builder.Builder()"
  fullName: "com.google.cloud.bigquery.BigQueryOptions.Builder.Builder()"
  overload: "com.google.cloud.bigquery.BigQueryOptions.Builder.Builder*"
  type: "Constructor"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "private Builder()"
- uid: "com.google.cloud.bigquery.BigQueryOptions.Builder.Builder(com.google.cloud.bigquery.BigQueryOptions)"
  id: "Builder(com.google.cloud.bigquery.BigQueryOptions)"
  parent: "com.google.cloud.bigquery.BigQueryOptions.Builder"
  langs:
  - "java"
  name: "Builder(BigQueryOptions options)"
  nameWithType: "BigQueryOptions.Builder.Builder(BigQueryOptions options)"
  fullName: "com.google.cloud.bigquery.BigQueryOptions.Builder.Builder(BigQueryOptions options)"
  overload: "com.google.cloud.bigquery.BigQueryOptions.Builder.Builder*"
  type: "Constructor"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "private Builder(BigQueryOptions options)"
    parameters:
    - id: "options"
      type: "com.google.cloud.bigquery.BigQueryOptions"
- uid: "com.google.cloud.bigquery.BigQueryOptions.Builder.build()"
  id: "build()"
  parent: "com.google.cloud.bigquery.BigQueryOptions.Builder"
  langs:
  - "java"
  name: "build()"
  nameWithType: "BigQueryOptions.Builder.build()"
  fullName: "com.google.cloud.bigquery.BigQueryOptions.Builder.build()"
  overload: "com.google.cloud.bigquery.BigQueryOptions.Builder.build*"
  overridden: "com.google.cloud.ServiceOptions.Builder.build()"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public BigQueryOptions build()"
    return:
      type: "com.google.cloud.bigquery.BigQueryOptions"
- uid: "com.google.cloud.bigquery.BigQueryOptions.Builder.setLocation(java.lang.String)"
  id: "setLocation(java.lang.String)"
  parent: "com.google.cloud.bigquery.BigQueryOptions.Builder"
  langs:
  - "java"
  name: "setLocation(String location)"
  nameWithType: "BigQueryOptions.Builder.setLocation(String location)"
  fullName: "com.google.cloud.bigquery.BigQueryOptions.Builder.setLocation(String location)"
  overload: "com.google.cloud.bigquery.BigQueryOptions.Builder.setLocation*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public BigQueryOptions.Builder setLocation(String location)"
    parameters:
    - id: "location"
      type: "java.lang.String"
    return:
      type: "com.google.cloud.bigquery.BigQueryOptions.Builder"
- uid: "com.google.cloud.bigquery.BigQueryOptions.Builder.setTransportOptions(com.google.cloud.TransportOptions)"
  id: "setTransportOptions(com.google.cloud.TransportOptions)"
  parent: "com.google.cloud.bigquery.BigQueryOptions.Builder"
  langs:
  - "java"
  name: "setTransportOptions(TransportOptions transportOptions)"
  nameWithType: "BigQueryOptions.Builder.setTransportOptions(TransportOptions transportOptions)"
  fullName: "com.google.cloud.bigquery.BigQueryOptions.Builder.setTransportOptions(TransportOptions transportOptions)"
  overload: "com.google.cloud.bigquery.BigQueryOptions.Builder.setTransportOptions*"
  overridden: "com.google.cloud.ServiceOptions.Builder.setTransportOptions(com.google.cloud.TransportOptions)"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public BigQueryOptions.Builder setTransportOptions(TransportOptions transportOptions)"
    parameters:
    - id: "transportOptions"
      type: "com.google.cloud.TransportOptions"
    return:
      type: "com.google.cloud.bigquery.BigQueryOptions.Builder"
references:
- uid: "com.google.cloud.bigquery.BigQueryOptions.Builder.Builder*"
  name: "Builder"
  nameWithType: "BigQueryOptions.Builder.Builder"
  fullName: "com.google.cloud.bigquery.BigQueryOptions.Builder.Builder"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.BigQueryOptions"
  name: "BigQueryOptions"
  nameWithType: "BigQueryOptions"
  fullName: "com.google.cloud.bigquery.BigQueryOptions"
- uid: "com.google.cloud.TransportOptions"
  spec.java:
  - uid: "com.google.cloud.TransportOptions"
    name: "TransportOptions"
    fullName: "com.google.cloud.TransportOptions"
- uid: "com.google.cloud.bigquery.BigQueryOptions.Builder.setTransportOptions*"
  name: "setTransportOptions"
  nameWithType: "BigQueryOptions.Builder.setTransportOptions"
  fullName: "com.google.cloud.bigquery.BigQueryOptions.Builder.setTransportOptions"
  package: "com.google.cloud.bigquery"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.google.cloud.bigquery.BigQueryOptions.Builder.setLocation*"
  name: "setLocation"
  nameWithType: "BigQueryOptions.Builder.setLocation"
  fullName: "com.google.cloud.bigquery.BigQueryOptions.Builder.setLocation"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.BigQueryOptions.Builder.build*"
  name: "build"
  nameWithType: "BigQueryOptions.Builder.build"
  fullName: "com.google.cloud.bigquery.BigQueryOptions.Builder.build"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.ServiceOptions.Builder<com.google.cloud.bigquery.BigQuery,com.google.cloud.bigquery.BigQueryOptions,com.google.cloud.bigquery.BigQueryOptions.Builder>"
  name: "ServiceOptions.Builder<BigQuery,BigQueryOptions,BigQueryOptions.Builder>"
  nameWithType: "ServiceOptions.Builder<BigQuery,BigQueryOptions,BigQueryOptions.Builder>"
  fullName: "com.google.cloud.ServiceOptions.Builder<com.google.cloud.bigquery.BigQuery,com.google.cloud.bigquery.BigQueryOptions,com.google.cloud.bigquery.BigQueryOptions.Builder>"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "com.google.cloud.ServiceOptions.Builder.getAllowedClientLibTokens()"
  name: "ServiceOptions.Builder.getAllowedClientLibTokens()"
  nameWithType: "ServiceOptions.Builder.getAllowedClientLibTokens()"
  fullName: "com.google.cloud.ServiceOptions.Builder.getAllowedClientLibTokens()"
- uid: "com.google.cloud.ServiceOptions.Builder.self()"
  name: "ServiceOptions.Builder.self()"
  nameWithType: "ServiceOptions.Builder.self()"
  fullName: "com.google.cloud.ServiceOptions.Builder.self()"
- uid: "com.google.cloud.ServiceOptions.Builder.setHost(java.lang.String)"
  name: "ServiceOptions.Builder.setHost(String)"
  nameWithType: "ServiceOptions.Builder.setHost(String)"
  fullName: "com.google.cloud.ServiceOptions.Builder.setHost(java.lang.String)"
- uid: "com.google.cloud.ServiceOptions.Builder.setProjectId(java.lang.String)"
  name: "ServiceOptions.Builder.setProjectId(String)"
  nameWithType: "ServiceOptions.Builder.setProjectId(String)"
  fullName: "com.google.cloud.ServiceOptions.Builder.setProjectId(java.lang.String)"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "com.google.cloud.ServiceOptions.Builder.setQuotaProjectId(java.lang.String)"
  name: "ServiceOptions.Builder.setQuotaProjectId(String)"
  nameWithType: "ServiceOptions.Builder.setQuotaProjectId(String)"
  fullName: "com.google.cloud.ServiceOptions.Builder.setQuotaProjectId(java.lang.String)"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "com.google.cloud.ServiceOptions.Builder.setServiceFactory(com.google.cloud.ServiceFactory<ServiceT,OptionsT>)"
  name: "ServiceOptions.Builder.setServiceFactory(ServiceFactory<ServiceT,OptionsT>)"
  nameWithType: "ServiceOptions.Builder.setServiceFactory(ServiceFactory<ServiceT,OptionsT>)"
  fullName: "com.google.cloud.ServiceOptions.Builder.setServiceFactory(com.google.cloud.ServiceFactory<ServiceT,OptionsT>)"
- uid: "com.google.cloud.ServiceOptions.Builder.setCredentials(com.google.auth.Credentials)"
  name: "ServiceOptions.Builder.setCredentials(Credentials)"
  nameWithType: "ServiceOptions.Builder.setCredentials(Credentials)"
  fullName: "com.google.cloud.ServiceOptions.Builder.setCredentials(com.google.auth.Credentials)"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "com.google.cloud.ServiceOptions.Builder.setRetrySettings(com.google.api.gax.retrying.RetrySettings)"
  name: "ServiceOptions.Builder.setRetrySettings(RetrySettings)"
  nameWithType: "ServiceOptions.Builder.setRetrySettings(RetrySettings)"
  fullName: "com.google.cloud.ServiceOptions.Builder.setRetrySettings(com.google.api.gax.retrying.RetrySettings)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "com.google.cloud.ServiceOptions.Builder.setClientLibToken(java.lang.String)"
  name: "ServiceOptions.Builder.setClientLibToken(String)"
  nameWithType: "ServiceOptions.Builder.setClientLibToken(String)"
  fullName: "com.google.cloud.ServiceOptions.Builder.setClientLibToken(java.lang.String)"
- uid: "com.google.cloud.ServiceOptions.Builder.setServiceRpcFactory(com.google.cloud.spi.ServiceRpcFactory<OptionsT>)"
  name: "ServiceOptions.Builder.setServiceRpcFactory(ServiceRpcFactory<OptionsT>)"
  nameWithType: "ServiceOptions.Builder.setServiceRpcFactory(ServiceRpcFactory<OptionsT>)"
  fullName: "com.google.cloud.ServiceOptions.Builder.setServiceRpcFactory(com.google.cloud.spi.ServiceRpcFactory<OptionsT>)"
- uid: "com.google.cloud.ServiceOptions.Builder.setTransportOptions(com.google.cloud.TransportOptions)"
  name: "ServiceOptions.Builder.setTransportOptions(TransportOptions)"
  nameWithType: "ServiceOptions.Builder.setTransportOptions(TransportOptions)"
  fullName: "com.google.cloud.ServiceOptions.Builder.setTransportOptions(com.google.cloud.TransportOptions)"
- uid: "com.google.cloud.ServiceOptions.Builder.setHeaderProvider(com.google.api.gax.rpc.HeaderProvider)"
  name: "ServiceOptions.Builder.setHeaderProvider(HeaderProvider)"
  nameWithType: "ServiceOptions.Builder.setHeaderProvider(HeaderProvider)"
  fullName: "com.google.cloud.ServiceOptions.Builder.setHeaderProvider(com.google.api.gax.rpc.HeaderProvider)"
- uid: "com.google.cloud.ServiceOptions.Builder.build()"
  name: "ServiceOptions.Builder.build()"
  nameWithType: "ServiceOptions.Builder.build()"
  fullName: "com.google.cloud.ServiceOptions.Builder.build()"
- uid: "com.google.cloud.ServiceOptions.Builder.setClock(com.google.api.core.ApiClock)"
  name: "ServiceOptions.Builder.setClock(ApiClock)"
  nameWithType: "ServiceOptions.Builder.setClock(ApiClock)"
  fullName: "com.google.cloud.ServiceOptions.Builder.setClock(com.google.api.core.ApiClock)"
- uid: "com.google.cloud.ServiceOptions.Builder"
  name: "ServiceOptions.Builder"
  nameWithType: "ServiceOptions.Builder"
  fullName: "com.google.cloud.ServiceOptions.Builder"
- uid: "com.google.cloud.bigquery.BigQuery,com.google.cloud.bigquery.BigQueryOptions,com.google.cloud.bigquery.BigQueryOptions.Builder"
  name: "BigQuery,BigQueryOptions,BigQueryOptions.Builder"
  nameWithType: "BigQuery,BigQueryOptions,BigQueryOptions.Builder"
  fullName: "com.google.cloud.bigquery.BigQuery,com.google.cloud.bigquery.BigQueryOptions,com.google.cloud.bigquery.BigQueryOptions.Builder"
- uid: "ServiceT,OptionsT>)"
  name: "ServiceT,OptionsT>)"
  nameWithType: "ServiceT,OptionsT>)"
  fullName: "ServiceT,OptionsT>)"
- uid: "com.google.cloud.ServiceOptions.Builder.setServiceFactory(com.google.cloud.ServiceFactory"
  name: "ServiceOptions.Builder.setServiceFactory(ServiceFactory"
  nameWithType: "ServiceOptions.Builder.setServiceFactory(ServiceFactory"
  fullName: "com.google.cloud.ServiceOptions.Builder.setServiceFactory(com.google.cloud.ServiceFactory"
- uid: "com.google.cloud.ServiceOptions.Builder.setServiceRpcFactory(com.google.cloud.spi.ServiceRpcFactory"
  name: "ServiceOptions.Builder.setServiceRpcFactory(ServiceRpcFactory"
  nameWithType: "ServiceOptions.Builder.setServiceRpcFactory(ServiceRpcFactory"
  fullName: "com.google.cloud.ServiceOptions.Builder.setServiceRpcFactory(com.google.cloud.spi.ServiceRpcFactory"
- uid: "OptionsT>)"
  name: "OptionsT>)"
  nameWithType: "OptionsT>)"
  fullName: "OptionsT>)"
