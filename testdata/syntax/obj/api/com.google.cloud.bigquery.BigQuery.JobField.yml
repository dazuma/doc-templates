### YamlMime:ManagedReference
items:
- uid: "com.google.cloud.bigquery.BigQuery.JobField"
  id: "JobField"
  parent: "com.google.cloud.bigquery"
  children:
  - "com.google.cloud.bigquery.BigQuery.JobField.CONFIGURATION"
  - "com.google.cloud.bigquery.BigQuery.JobField.ETAG"
  - "com.google.cloud.bigquery.BigQuery.JobField.ID"
  - "com.google.cloud.bigquery.BigQuery.JobField.JOB_REFERENCE"
  - "com.google.cloud.bigquery.BigQuery.JobField.SELF_LINK"
  - "com.google.cloud.bigquery.BigQuery.JobField.STATISTICS"
  - "com.google.cloud.bigquery.BigQuery.JobField.STATUS"
  - "com.google.cloud.bigquery.BigQuery.JobField.USER_EMAIL"
  - "com.google.cloud.bigquery.BigQuery.JobField.getSelector()"
  - "com.google.cloud.bigquery.BigQuery.JobField.valueOf(java.lang.String)"
  - "com.google.cloud.bigquery.BigQuery.JobField.values()"
  langs:
  - "java"
  name: "BigQuery.JobField"
  nameWithType: "BigQuery.JobField"
  fullName: "com.google.cloud.bigquery.BigQuery.JobField"
  type: "Enum"
  package: "com.google.cloud.bigquery"
  summary: "Fields of a BigQuery Job resource."
  syntax:
    content: "public enum BigQuery.JobField extends Enum<BigQuery.JobField> implements FieldSelector"
  inheritance:
  - "java.lang.Object"
  - "java.lang.Enum"
  implements:
  - "com.google.cloud.FieldSelector"
  inheritedMembers:
  - "java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)"
  - "java.lang.Enum.clone()"
  - "java.lang.Enum.compareTo(E)"
  - "java.lang.Enum.equals(java.lang.Object)"
  - "java.lang.Enum.finalize()"
  - "java.lang.Enum.getDeclaringClass()"
  - "java.lang.Enum.hashCode()"
  - "java.lang.Enum.name()"
  - "java.lang.Enum.ordinal()"
  - "java.lang.Enum.toString()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.google.cloud.bigquery.BigQuery.JobField.CONFIGURATION"
  id: "CONFIGURATION"
  parent: "com.google.cloud.bigquery.BigQuery.JobField"
  langs:
  - "java"
  name: "CONFIGURATION"
  nameWithType: "BigQuery.JobField.CONFIGURATION"
  fullName: "com.google.cloud.bigquery.BigQuery.JobField.CONFIGURATION"
  type: "Field"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public static final BigQuery.JobField CONFIGURATION"
    return:
      type: "com.google.cloud.bigquery.BigQuery.JobField"
- uid: "com.google.cloud.bigquery.BigQuery.JobField.ETAG"
  id: "ETAG"
  parent: "com.google.cloud.bigquery.BigQuery.JobField"
  langs:
  - "java"
  name: "ETAG"
  nameWithType: "BigQuery.JobField.ETAG"
  fullName: "com.google.cloud.bigquery.BigQuery.JobField.ETAG"
  type: "Field"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public static final BigQuery.JobField ETAG"
    return:
      type: "com.google.cloud.bigquery.BigQuery.JobField"
- uid: "com.google.cloud.bigquery.BigQuery.JobField.ID"
  id: "ID"
  parent: "com.google.cloud.bigquery.BigQuery.JobField"
  langs:
  - "java"
  name: "ID"
  nameWithType: "BigQuery.JobField.ID"
  fullName: "com.google.cloud.bigquery.BigQuery.JobField.ID"
  type: "Field"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public static final BigQuery.JobField ID"
    return:
      type: "com.google.cloud.bigquery.BigQuery.JobField"
- uid: "com.google.cloud.bigquery.BigQuery.JobField.JOB_REFERENCE"
  id: "JOB_REFERENCE"
  parent: "com.google.cloud.bigquery.BigQuery.JobField"
  langs:
  - "java"
  name: "JOB_REFERENCE"
  nameWithType: "BigQuery.JobField.JOB_REFERENCE"
  fullName: "com.google.cloud.bigquery.BigQuery.JobField.JOB_REFERENCE"
  type: "Field"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public static final BigQuery.JobField JOB_REFERENCE"
    return:
      type: "com.google.cloud.bigquery.BigQuery.JobField"
- uid: "com.google.cloud.bigquery.BigQuery.JobField.JobField(java.lang.String)"
  id: "JobField(java.lang.String)"
  parent: "com.google.cloud.bigquery.BigQuery.JobField"
  langs:
  - "java"
  name: "JobField(String selector)"
  nameWithType: "BigQuery.JobField.JobField(String selector)"
  fullName: "com.google.cloud.bigquery.BigQuery.JobField.JobField(String selector)"
  overload: "com.google.cloud.bigquery.BigQuery.JobField.JobField*"
  type: "Constructor"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "private JobField(String selector)"
    parameters:
    - id: "selector"
      type: "java.lang.String"
- uid: "com.google.cloud.bigquery.BigQuery.JobField.SELF_LINK"
  id: "SELF_LINK"
  parent: "com.google.cloud.bigquery.BigQuery.JobField"
  langs:
  - "java"
  name: "SELF_LINK"
  nameWithType: "BigQuery.JobField.SELF_LINK"
  fullName: "com.google.cloud.bigquery.BigQuery.JobField.SELF_LINK"
  type: "Field"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public static final BigQuery.JobField SELF_LINK"
    return:
      type: "com.google.cloud.bigquery.BigQuery.JobField"
- uid: "com.google.cloud.bigquery.BigQuery.JobField.STATISTICS"
  id: "STATISTICS"
  parent: "com.google.cloud.bigquery.BigQuery.JobField"
  langs:
  - "java"
  name: "STATISTICS"
  nameWithType: "BigQuery.JobField.STATISTICS"
  fullName: "com.google.cloud.bigquery.BigQuery.JobField.STATISTICS"
  type: "Field"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public static final BigQuery.JobField STATISTICS"
    return:
      type: "com.google.cloud.bigquery.BigQuery.JobField"
- uid: "com.google.cloud.bigquery.BigQuery.JobField.STATUS"
  id: "STATUS"
  parent: "com.google.cloud.bigquery.BigQuery.JobField"
  langs:
  - "java"
  name: "STATUS"
  nameWithType: "BigQuery.JobField.STATUS"
  fullName: "com.google.cloud.bigquery.BigQuery.JobField.STATUS"
  type: "Field"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public static final BigQuery.JobField STATUS"
    return:
      type: "com.google.cloud.bigquery.BigQuery.JobField"
- uid: "com.google.cloud.bigquery.BigQuery.JobField.USER_EMAIL"
  id: "USER_EMAIL"
  parent: "com.google.cloud.bigquery.BigQuery.JobField"
  langs:
  - "java"
  name: "USER_EMAIL"
  nameWithType: "BigQuery.JobField.USER_EMAIL"
  fullName: "com.google.cloud.bigquery.BigQuery.JobField.USER_EMAIL"
  type: "Field"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public static final BigQuery.JobField USER_EMAIL"
    return:
      type: "com.google.cloud.bigquery.BigQuery.JobField"
- uid: "com.google.cloud.bigquery.BigQuery.JobField.getSelector()"
  id: "getSelector()"
  parent: "com.google.cloud.bigquery.BigQuery.JobField"
  langs:
  - "java"
  name: "getSelector()"
  nameWithType: "BigQuery.JobField.getSelector()"
  fullName: "com.google.cloud.bigquery.BigQuery.JobField.getSelector()"
  overload: "com.google.cloud.bigquery.BigQuery.JobField.getSelector*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public String getSelector()"
    return:
      type: "java.lang.String"
- uid: "com.google.cloud.bigquery.BigQuery.JobField.valueOf(java.lang.String)"
  id: "valueOf(java.lang.String)"
  parent: "com.google.cloud.bigquery.BigQuery.JobField"
  langs:
  - "java"
  name: "valueOf(String name)"
  nameWithType: "BigQuery.JobField.valueOf(String name)"
  fullName: "com.google.cloud.bigquery.BigQuery.JobField.valueOf(String name)"
  overload: "com.google.cloud.bigquery.BigQuery.JobField.valueOf*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public static BigQuery.JobField valueOf(String name)"
    parameters:
    - id: "name"
      type: "java.lang.String"
    return:
      type: "com.google.cloud.bigquery.BigQuery.JobField"
- uid: "com.google.cloud.bigquery.BigQuery.JobField.values()"
  id: "values()"
  parent: "com.google.cloud.bigquery.BigQuery.JobField"
  langs:
  - "java"
  name: "values()"
  nameWithType: "BigQuery.JobField.values()"
  fullName: "com.google.cloud.bigquery.BigQuery.JobField.values()"
  overload: "com.google.cloud.bigquery.BigQuery.JobField.values*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public static BigQuery.JobField[] values()"
    return:
      type: "com.google.cloud.bigquery.BigQuery.JobField[]"
references:
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.google.cloud.bigquery.BigQuery.JobField.JobField*"
  name: "JobField"
  nameWithType: "BigQuery.JobField.JobField"
  fullName: "com.google.cloud.bigquery.BigQuery.JobField.JobField"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.BigQuery.JobField[]"
  spec.java:
  - uid: "com.google.cloud.bigquery.BigQuery.JobField"
    name: "JobField"
    fullName: "com.google.cloud.bigquery.BigQuery.JobField"
  - name: "[]"
    fullName: "[]"
- uid: "com.google.cloud.bigquery.BigQuery.JobField.values*"
  name: "values"
  nameWithType: "BigQuery.JobField.values"
  fullName: "com.google.cloud.bigquery.BigQuery.JobField.values"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.BigQuery.JobField.valueOf*"
  name: "valueOf"
  nameWithType: "BigQuery.JobField.valueOf"
  fullName: "com.google.cloud.bigquery.BigQuery.JobField.valueOf"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.BigQuery.JobField.getSelector*"
  name: "getSelector"
  nameWithType: "BigQuery.JobField.getSelector"
  fullName: "com.google.cloud.bigquery.BigQuery.JobField.getSelector"
  package: "com.google.cloud.bigquery"
- uid: "java.lang.Enum<com.google.cloud.bigquery.BigQuery.JobField>"
  name: "Enum<BigQuery.JobField>"
  nameWithType: "Enum<BigQuery.JobField>"
  fullName: "java.lang.Enum<com.google.cloud.bigquery.BigQuery.JobField>"
- uid: "com.google.cloud.FieldSelector"
  name: "FieldSelector"
  nameWithType: "FieldSelector"
  fullName: "com.google.cloud.FieldSelector"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Enum.toString()"
  name: "Enum.toString()"
  nameWithType: "Enum.toString()"
  fullName: "java.lang.Enum.toString()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Enum.clone()"
  name: "Enum.clone()"
  nameWithType: "Enum.clone()"
  fullName: "java.lang.Enum.clone()"
- uid: "java.lang.Enum.finalize()"
  name: "Enum.finalize()"
  nameWithType: "Enum.finalize()"
  fullName: "java.lang.Enum.finalize()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Enum.compareTo(E)"
  name: "Enum.compareTo(E)"
  nameWithType: "Enum.compareTo(E)"
  fullName: "java.lang.Enum.compareTo(E)"
- uid: "java.lang.Enum.name()"
  name: "Enum.name()"
  nameWithType: "Enum.name()"
  fullName: "java.lang.Enum.name()"
- uid: "java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)"
  name: "Enum.<T>valueOf(Class<T>,String)"
  nameWithType: "Enum.<T>valueOf(Class<T>,String)"
  fullName: "java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Enum.getDeclaringClass()"
  name: "Enum.getDeclaringClass()"
  nameWithType: "Enum.getDeclaringClass()"
  fullName: "java.lang.Enum.getDeclaringClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Enum.ordinal()"
  name: "Enum.ordinal()"
  nameWithType: "Enum.ordinal()"
  fullName: "java.lang.Enum.ordinal()"
- uid: "java.lang.Enum.hashCode()"
  name: "Enum.hashCode()"
  nameWithType: "Enum.hashCode()"
  fullName: "java.lang.Enum.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Enum.equals(java.lang.Object)"
  name: "Enum.equals(Object)"
  nameWithType: "Enum.equals(Object)"
  fullName: "java.lang.Enum.equals(java.lang.Object)"
- uid: "java.lang.Enum"
  name: "Enum"
  nameWithType: "Enum"
  fullName: "java.lang.Enum"
- uid: "java.lang.Enum."
  name: "Enum."
  nameWithType: "Enum."
  fullName: "java.lang.Enum."
- uid: "T>,java.lang.String)"
  name: "T>,String)"
  nameWithType: "T>,String)"
  fullName: "T>,java.lang.String)"
- uid: "T>valueOf(java.lang.Class"
  name: "T>valueOf(Class"
  nameWithType: "T>valueOf(Class"
  fullName: "T>valueOf(java.lang.Class"
