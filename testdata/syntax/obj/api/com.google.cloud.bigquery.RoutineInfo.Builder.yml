### YamlMime:ManagedReference
items:
- uid: "com.google.cloud.bigquery.RoutineInfo.Builder"
  id: "Builder"
  parent: "com.google.cloud.bigquery"
  children:
  - "com.google.cloud.bigquery.RoutineInfo.Builder.Builder()"
  - "com.google.cloud.bigquery.RoutineInfo.Builder.build()"
  - "com.google.cloud.bigquery.RoutineInfo.Builder.setArguments(java.util.List<com.google.cloud.bigquery.RoutineArgument>)"
  - "com.google.cloud.bigquery.RoutineInfo.Builder.setBody(java.lang.String)"
  - "com.google.cloud.bigquery.RoutineInfo.Builder.setDeterminismLevel(java.lang.String)"
  - "com.google.cloud.bigquery.RoutineInfo.Builder.setImportedLibraries(java.util.List<java.lang.String>)"
  - "com.google.cloud.bigquery.RoutineInfo.Builder.setLanguage(java.lang.String)"
  - "com.google.cloud.bigquery.RoutineInfo.Builder.setReturnType(com.google.cloud.bigquery.StandardSQLDataType)"
  - "com.google.cloud.bigquery.RoutineInfo.Builder.setRoutineType(java.lang.String)"
  langs:
  - "java"
  name: "RoutineInfo.Builder"
  nameWithType: "RoutineInfo.Builder"
  fullName: "com.google.cloud.bigquery.RoutineInfo.Builder"
  type: "Class"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public abstract static class RoutineInfo.Builder"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.google.cloud.bigquery.RoutineInfo.Builder.Builder()"
  id: "Builder()"
  parent: "com.google.cloud.bigquery.RoutineInfo.Builder"
  langs:
  - "java"
  name: "Builder()"
  nameWithType: "RoutineInfo.Builder.Builder()"
  fullName: "com.google.cloud.bigquery.RoutineInfo.Builder.Builder()"
  overload: "com.google.cloud.bigquery.RoutineInfo.Builder.Builder*"
  type: "Constructor"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public Builder()"
- uid: "com.google.cloud.bigquery.RoutineInfo.Builder.build()"
  id: "build()"
  parent: "com.google.cloud.bigquery.RoutineInfo.Builder"
  langs:
  - "java"
  name: "build()"
  nameWithType: "RoutineInfo.Builder.build()"
  fullName: "com.google.cloud.bigquery.RoutineInfo.Builder.build()"
  overload: "com.google.cloud.bigquery.RoutineInfo.Builder.build*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Creates a `RoutineInfo` object."
  syntax:
    content: "public abstract RoutineInfo build()"
    return:
      type: "com.google.cloud.bigquery.RoutineInfo"
- uid: "com.google.cloud.bigquery.RoutineInfo.Builder.setArguments(java.util.List<com.google.cloud.bigquery.RoutineArgument>)"
  id: "setArguments(java.util.List<com.google.cloud.bigquery.RoutineArgument>)"
  parent: "com.google.cloud.bigquery.RoutineInfo.Builder"
  langs:
  - "java"
  name: "setArguments(List<RoutineArgument> argumentList)"
  nameWithType: "RoutineInfo.Builder.setArguments(List<RoutineArgument> argumentList)"
  fullName: "com.google.cloud.bigquery.RoutineInfo.Builder.setArguments(List<RoutineArgument> argumentList)"
  overload: "com.google.cloud.bigquery.RoutineInfo.Builder.setArguments*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Specifies the list of input/output arguments for the routine."
  syntax:
    content: "public abstract RoutineInfo.Builder setArguments(List<RoutineArgument> argumentList)"
    parameters:
    - id: "argumentList"
      type: "java.util.List<com.google.cloud.bigquery.RoutineArgument>"
    return:
      type: "com.google.cloud.bigquery.RoutineInfo.Builder"
- uid: "com.google.cloud.bigquery.RoutineInfo.Builder.setBody(java.lang.String)"
  id: "setBody(java.lang.String)"
  parent: "com.google.cloud.bigquery.RoutineInfo.Builder"
  langs:
  - "java"
  name: "setBody(String body)"
  nameWithType: "RoutineInfo.Builder.setBody(String body)"
  fullName: "com.google.cloud.bigquery.RoutineInfo.Builder.setBody(String body)"
  overload: "com.google.cloud.bigquery.RoutineInfo.Builder.setBody*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Required. The body of the routine.\n\nFor functions, this is the expression in the AS clause.\n\nIf language=SQL, it is the substring inside (but excluding) the parentheses. For example, for the function created with the following statement:\n\nCREATE FUNCTION JoinLines(x string, y string) as (concat(x, \"\\\\n\", y))\n\nThe definitionBody is concat(x, \"\\\\n\", y) (\\\\n is not replaced with linebreak).\n\nIf language=JAVASCRIPT, it is the evaluated string in the AS clause. For example, for the function created with the following statement:\n\nCREATE FUNCTION f() RETURNS STRING LANGUAGE js AS 'return \"\\\\n\";\\\\n'\n\nThe definitionBody is\n\nreturn \"\\\\n\";\\\\n\n\nNote that both \\\\n are replaced with linebreaks."
  syntax:
    content: "public abstract RoutineInfo.Builder setBody(String body)"
    parameters:
    - id: "body"
      type: "java.lang.String"
    return:
      type: "com.google.cloud.bigquery.RoutineInfo.Builder"
- uid: "com.google.cloud.bigquery.RoutineInfo.Builder.setDeterminismLevel(java.lang.String)"
  id: "setDeterminismLevel(java.lang.String)"
  parent: "com.google.cloud.bigquery.RoutineInfo.Builder"
  langs:
  - "java"
  name: "setDeterminismLevel(String determinismLevel)"
  nameWithType: "RoutineInfo.Builder.setDeterminismLevel(String determinismLevel)"
  fullName: "com.google.cloud.bigquery.RoutineInfo.Builder.setDeterminismLevel(String determinismLevel)"
  overload: "com.google.cloud.bigquery.RoutineInfo.Builder.setDeterminismLevel*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Sets the JavaScript UDF determinism levels (e.g. DETERMINISM\\_LEVEL\\_UNSPECIFIED, DETERMINISTIC, NOT\\_DETERMINISTIC) only applicable to Javascript UDFs."
  syntax:
    content: "public abstract RoutineInfo.Builder setDeterminismLevel(String determinismLevel)"
    parameters:
    - id: "determinismLevel"
      type: "java.lang.String"
    return:
      type: "com.google.cloud.bigquery.RoutineInfo.Builder"
- uid: "com.google.cloud.bigquery.RoutineInfo.Builder.setImportedLibraries(java.util.List<java.lang.String>)"
  id: "setImportedLibraries(java.util.List<java.lang.String>)"
  parent: "com.google.cloud.bigquery.RoutineInfo.Builder"
  langs:
  - "java"
  name: "setImportedLibraries(List<String> importedLibrariesList)"
  nameWithType: "RoutineInfo.Builder.setImportedLibraries(List<String> importedLibrariesList)"
  fullName: "com.google.cloud.bigquery.RoutineInfo.Builder.setImportedLibraries(List<String> importedLibrariesList)"
  overload: "com.google.cloud.bigquery.RoutineInfo.Builder.setImportedLibraries*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Optional. If language = \"JAVASCRIPT\", this field stores the path of the imported JAVASCRIPT libraries as a list of gs:// URLs."
  syntax:
    content: "public abstract RoutineInfo.Builder setImportedLibraries(List<String> importedLibrariesList)"
    parameters:
    - id: "importedLibrariesList"
      type: "java.util.List<java.lang.String>"
    return:
      type: "com.google.cloud.bigquery.RoutineInfo.Builder"
- uid: "com.google.cloud.bigquery.RoutineInfo.Builder.setLanguage(java.lang.String)"
  id: "setLanguage(java.lang.String)"
  parent: "com.google.cloud.bigquery.RoutineInfo.Builder"
  langs:
  - "java"
  name: "setLanguage(String language)"
  nameWithType: "RoutineInfo.Builder.setLanguage(String language)"
  fullName: "com.google.cloud.bigquery.RoutineInfo.Builder.setLanguage(String language)"
  overload: "com.google.cloud.bigquery.RoutineInfo.Builder.setLanguage*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Sets the language for the routine (e.g. SQL or JAVASCRIPT)"
  syntax:
    content: "public abstract RoutineInfo.Builder setLanguage(String language)"
    parameters:
    - id: "language"
      type: "java.lang.String"
    return:
      type: "com.google.cloud.bigquery.RoutineInfo.Builder"
- uid: "com.google.cloud.bigquery.RoutineInfo.Builder.setReturnType(com.google.cloud.bigquery.StandardSQLDataType)"
  id: "setReturnType(com.google.cloud.bigquery.StandardSQLDataType)"
  parent: "com.google.cloud.bigquery.RoutineInfo.Builder"
  langs:
  - "java"
  name: "setReturnType(StandardSQLDataType returnType)"
  nameWithType: "RoutineInfo.Builder.setReturnType(StandardSQLDataType returnType)"
  fullName: "com.google.cloud.bigquery.RoutineInfo.Builder.setReturnType(StandardSQLDataType returnType)"
  overload: "com.google.cloud.bigquery.RoutineInfo.Builder.setReturnType*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Sets the return type of the routine.\n\nOptional if language = \"SQL\"; required otherwise.\n\nIf absent, the return type is inferred from definitionBody at query time in each query that references this routine. If present, then the evaluated result will be cast to the specified returned type at query time."
  syntax:
    content: "public abstract RoutineInfo.Builder setReturnType(StandardSQLDataType returnType)"
    parameters:
    - id: "returnType"
      type: "com.google.cloud.bigquery.StandardSQLDataType"
    return:
      type: "com.google.cloud.bigquery.RoutineInfo.Builder"
- uid: "com.google.cloud.bigquery.RoutineInfo.Builder.setRoutineType(java.lang.String)"
  id: "setRoutineType(java.lang.String)"
  parent: "com.google.cloud.bigquery.RoutineInfo.Builder"
  langs:
  - "java"
  name: "setRoutineType(String routineType)"
  nameWithType: "RoutineInfo.Builder.setRoutineType(String routineType)"
  fullName: "com.google.cloud.bigquery.RoutineInfo.Builder.setRoutineType(String routineType)"
  overload: "com.google.cloud.bigquery.RoutineInfo.Builder.setRoutineType*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Sets the routine type for the Builder (e.g. SCALAR\\_FUNCTION).\n\nSee https://cloud.google.com/bigquery/docs/reference/rest/v2/routines"
  syntax:
    content: "public abstract RoutineInfo.Builder setRoutineType(String routineType)"
    parameters:
    - id: "routineType"
      type: "java.lang.String"
    return:
      type: "com.google.cloud.bigquery.RoutineInfo.Builder"
references:
- uid: "com.google.cloud.bigquery.RoutineInfo.Builder.Builder*"
  name: "Builder"
  nameWithType: "RoutineInfo.Builder.Builder"
  fullName: "com.google.cloud.bigquery.RoutineInfo.Builder.Builder"
  package: "com.google.cloud.bigquery"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.google.cloud.bigquery.RoutineInfo.Builder.setRoutineType*"
  name: "setRoutineType"
  nameWithType: "RoutineInfo.Builder.setRoutineType"
  fullName: "com.google.cloud.bigquery.RoutineInfo.Builder.setRoutineType"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.RoutineInfo.Builder.setDeterminismLevel*"
  name: "setDeterminismLevel"
  nameWithType: "RoutineInfo.Builder.setDeterminismLevel"
  fullName: "com.google.cloud.bigquery.RoutineInfo.Builder.setDeterminismLevel"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.RoutineInfo.Builder.setLanguage*"
  name: "setLanguage"
  nameWithType: "RoutineInfo.Builder.setLanguage"
  fullName: "com.google.cloud.bigquery.RoutineInfo.Builder.setLanguage"
  package: "com.google.cloud.bigquery"
- uid: "java.util.List<com.google.cloud.bigquery.RoutineArgument>"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "com.google.cloud.bigquery.RoutineArgument"
    name: "RoutineArgument"
    fullName: "com.google.cloud.bigquery.RoutineArgument"
  - name: ">"
    fullName: ">"
- uid: "com.google.cloud.bigquery.RoutineInfo.Builder.setArguments*"
  name: "setArguments"
  nameWithType: "RoutineInfo.Builder.setArguments"
  fullName: "com.google.cloud.bigquery.RoutineInfo.Builder.setArguments"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.StandardSQLDataType"
  name: "StandardSQLDataType"
  nameWithType: "StandardSQLDataType"
  fullName: "com.google.cloud.bigquery.StandardSQLDataType"
- uid: "com.google.cloud.bigquery.RoutineInfo.Builder.setReturnType*"
  name: "setReturnType"
  nameWithType: "RoutineInfo.Builder.setReturnType"
  fullName: "com.google.cloud.bigquery.RoutineInfo.Builder.setReturnType"
  package: "com.google.cloud.bigquery"
- uid: "java.util.List<java.lang.String>"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ">"
    fullName: ">"
- uid: "com.google.cloud.bigquery.RoutineInfo.Builder.setImportedLibraries*"
  name: "setImportedLibraries"
  nameWithType: "RoutineInfo.Builder.setImportedLibraries"
  fullName: "com.google.cloud.bigquery.RoutineInfo.Builder.setImportedLibraries"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.RoutineInfo.Builder.setBody*"
  name: "setBody"
  nameWithType: "RoutineInfo.Builder.setBody"
  fullName: "com.google.cloud.bigquery.RoutineInfo.Builder.setBody"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.RoutineInfo"
  name: "RoutineInfo"
  nameWithType: "RoutineInfo"
  fullName: "com.google.cloud.bigquery.RoutineInfo"
- uid: "com.google.cloud.bigquery.RoutineInfo.Builder.build*"
  name: "build"
  nameWithType: "RoutineInfo.Builder.build"
  fullName: "com.google.cloud.bigquery.RoutineInfo.Builder.build"
  package: "com.google.cloud.bigquery"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.util.List"
  name: "List"
  nameWithType: "List"
  fullName: "java.util.List"
- uid: "com.google.cloud.bigquery.RoutineArgument"
  name: "RoutineArgument"
  nameWithType: "RoutineArgument"
  fullName: "com.google.cloud.bigquery.RoutineArgument"
