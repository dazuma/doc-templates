### YamlMime:ManagedReference
items:
- uid: Google.Cloud.Spanner.V1.PooledSession
  commentId: T:Google.Cloud.Spanner.V1.PooledSession
  id: PooledSession
  parent: Google.Cloud.Spanner.V1
  children:
  - Google.Cloud.Spanner.V1.PooledSession.CommitAsync(Google.Cloud.Spanner.V1.CommitRequest,Google.Api.Gax.Grpc.CallSettings)
  - Google.Cloud.Spanner.V1.PooledSession.Dispose
  - Google.Cloud.Spanner.V1.PooledSession.ExecuteBatchDmlAsync(Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest,Google.Api.Gax.Grpc.CallSettings)
  - Google.Cloud.Spanner.V1.PooledSession.ExecuteSqlAsync(Google.Cloud.Spanner.V1.ExecuteSqlRequest,Google.Api.Gax.Grpc.CallSettings)
  - Google.Cloud.Spanner.V1.PooledSession.ExecuteSqlStreamReader(Google.Cloud.Spanner.V1.ExecuteSqlRequest,Google.Api.Gax.Grpc.CallSettings)
  - Google.Cloud.Spanner.V1.PooledSession.PartitionQueryAsync(Google.Cloud.Spanner.V1.PartitionQueryRequest,Google.Api.Gax.Grpc.CallSettings)
  - Google.Cloud.Spanner.V1.PooledSession.ReleaseToPool(System.Boolean)
  - Google.Cloud.Spanner.V1.PooledSession.RollbackAsync(Google.Cloud.Spanner.V1.RollbackRequest,Google.Api.Gax.Grpc.CallSettings)
  - Google.Cloud.Spanner.V1.PooledSession.SessionName
  - Google.Cloud.Spanner.V1.PooledSession.TransactionId
  - Google.Cloud.Spanner.V1.PooledSession.WithFreshTransactionOrNewAsync(Google.Cloud.Spanner.V1.TransactionOptions,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: PooledSession
  nameWithType: PooledSession
  fullName: Google.Cloud.Spanner.V1.PooledSession
  type: Class
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/PooledSession.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: PooledSession
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/PooledSession.cs
    startLine: 41
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nA session from a <xref href=\"Google.Cloud.Spanner.V1.SessionPool\" data-throw-if-not-resolved=\"false\"></xref>, with an associated transaction if\nrequested. Instances must be released back to the pool via <xref href=\"Google.Cloud.Spanner.V1.PooledSession.ReleaseToPool(System.Boolean)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\n<p>\nEach method in this class modifies requests passed as arguments to RPC methods, to populate\nthe session and transaction properties.\n</p>\n<p>\nThis class keeps track of successful RPCs to update its internal refresh timer. This can&apos;t\nbe applied for streaming SQL calls, as <xref href=\"Google.Cloud.Spanner.V1.ReliableStreamReader\" data-throw-if-not-resolved=\"false\"></xref> performs the actual\nRPCs in that case.\n</p>\n"
  example: []
  syntax:
    content: 'public sealed class PooledSession : IDisposable'
    content.vb: >-
      Public NotInheritable Class PooledSession
          Implements IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Google.Cloud.Spanner.V1.PooledSession.SessionName
  commentId: P:Google.Cloud.Spanner.V1.PooledSession.SessionName
  id: SessionName
  parent: Google.Cloud.Spanner.V1.PooledSession
  langs:
  - csharp
  - vb
  name: SessionName
  nameWithType: PooledSession.SessionName
  fullName: Google.Cloud.Spanner.V1.PooledSession.SessionName
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/PooledSession.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: SessionName
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/PooledSession.cs
    startLine: 48
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nThe name of the session. This is never null.\n"
  example: []
  syntax:
    content: public SessionName SessionName { get; }
    parameters: []
    return:
      type: Google.Cloud.Spanner.V1.SessionName
    content.vb: Public ReadOnly Property SessionName As SessionName
  overload: Google.Cloud.Spanner.V1.PooledSession.SessionName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Cloud.Spanner.V1.PooledSession.TransactionId
  commentId: P:Google.Cloud.Spanner.V1.PooledSession.TransactionId
  id: TransactionId
  parent: Google.Cloud.Spanner.V1.PooledSession
  langs:
  - csharp
  - vb
  name: TransactionId
  nameWithType: PooledSession.TransactionId
  fullName: Google.Cloud.Spanner.V1.PooledSession.TransactionId
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/PooledSession.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: TransactionId
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/PooledSession.cs
    startLine: 53
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nThe ID of the transaction. May be null.\n"
  example: []
  syntax:
    content: public ByteString TransactionId { get; }
    parameters: []
    return:
      type: Google.Protobuf.ByteString
    content.vb: Public ReadOnly Property TransactionId As ByteString
  overload: Google.Cloud.Spanner.V1.PooledSession.TransactionId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Cloud.Spanner.V1.PooledSession.WithFreshTransactionOrNewAsync(Google.Cloud.Spanner.V1.TransactionOptions,System.Threading.CancellationToken)
  commentId: M:Google.Cloud.Spanner.V1.PooledSession.WithFreshTransactionOrNewAsync(Google.Cloud.Spanner.V1.TransactionOptions,System.Threading.CancellationToken)
  id: WithFreshTransactionOrNewAsync(Google.Cloud.Spanner.V1.TransactionOptions,System.Threading.CancellationToken)
  parent: Google.Cloud.Spanner.V1.PooledSession
  langs:
  - csharp
  - vb
  name: WithFreshTransactionOrNewAsync(TransactionOptions, CancellationToken)
  nameWithType: PooledSession.WithFreshTransactionOrNewAsync(TransactionOptions, CancellationToken)
  fullName: Google.Cloud.Spanner.V1.PooledSession.WithFreshTransactionOrNewAsync(Google.Cloud.Spanner.V1.TransactionOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/PooledSession.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: WithFreshTransactionOrNewAsync
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/PooledSession.cs
    startLine: 149
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nAlways returns a new instance of <xref href=\"Google.Cloud.Spanner.V1.PooledSession\" data-throw-if-not-resolved=\"false\"></xref>. The new instance can:\n1. represent the same session as this one, but will have a fresh transaction of the\nsame type as this <xref href=\"Google.Cloud.Spanner.V1.PooledSession\" data-throw-if-not-resolved=\"false\"></xref> did.\n2. represent an entirely different session with a fresh transaction of the same type\nas this <xref href=\"Google.Cloud.Spanner.V1.PooledSession\" data-throw-if-not-resolved=\"false\"></xref> did.\nThis method will always try to get a fresh transaction for this session.\nIf the session has expired or it fails to get a fresh transaction, then it will\nacquire a session in the normal way.\nThis <xref href=\"Google.Cloud.Spanner.V1.PooledSession\" data-throw-if-not-resolved=\"false\"></xref> instance will be disposed of to ensure that all operations\nwith the underlying session are done through the new instance.\n"
  remarks: "\nUse this method when executing operations that are best done using the same\nsession. For instance, when retrying aborted commits it is better if the transaction work and commit\nare retried with the same session, because after each abort the sessions&apos; lock priority increments.\n"
  example: []
  syntax:
    content: public Task<PooledSession> WithFreshTransactionOrNewAsync(TransactionOptions transactionOptions, CancellationToken cancellationToken)
    parameters:
    - id: transactionOptions
      type: Google.Cloud.Spanner.V1.TransactionOptions
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Google.Cloud.Spanner.V1.PooledSession}
      description: A new instance of <xref href="Google.Cloud.Spanner.V1.PooledSession" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function WithFreshTransactionOrNewAsync(transactionOptions As TransactionOptions, cancellationToken As CancellationToken) As Task(Of PooledSession)
  overload: Google.Cloud.Spanner.V1.PooledSession.WithFreshTransactionOrNewAsync*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: >-
      If this <xref href="Google.Cloud.Spanner.V1.PooledSession.TransactionMode" data-throw-if-not-resolved="false"></xref>

      is <xref href="Google.Cloud.Spanner.V1.TransactionOptions.ModeOneofCase.None" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Cloud.Spanner.V1.PooledSession.Dispose
  commentId: M:Google.Cloud.Spanner.V1.PooledSession.Dispose
  id: Dispose
  parent: Google.Cloud.Spanner.V1.PooledSession
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: PooledSession.Dispose()
  fullName: Google.Cloud.Spanner.V1.PooledSession.Dispose()
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/PooledSession.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: Dispose
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/PooledSession.cs
    startLine: 182
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nReleases this session back to the session pool. This method should only be called once per instance; subsequent\ncalls are ignored. No other methods can be called after this.\n"
  remarks: "\nThis method is equivalent to calling <xref href=\"Google.Cloud.Spanner.V1.PooledSession.ReleaseToPool(System.Boolean)\" data-throw-if-not-resolved=\"false\"></xref> with an argument of <code>false</code>.\n"
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: Google.Cloud.Spanner.V1.PooledSession.Dispose*
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Cloud.Spanner.V1.PooledSession.ReleaseToPool(System.Boolean)
  commentId: M:Google.Cloud.Spanner.V1.PooledSession.ReleaseToPool(System.Boolean)
  id: ReleaseToPool(System.Boolean)
  parent: Google.Cloud.Spanner.V1.PooledSession
  langs:
  - csharp
  - vb
  name: ReleaseToPool(Boolean)
  nameWithType: PooledSession.ReleaseToPool(Boolean)
  fullName: Google.Cloud.Spanner.V1.PooledSession.ReleaseToPool(System.Boolean)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/PooledSession.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: ReleaseToPool
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/PooledSession.cs
    startLine: 210
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nReturns this session to the session pool from which it was acquired, unless\nit has become invalid. This method should only be called once per instance; subsequent\ncalls are ignored. No other methods can be called after this.\n"
  example: []
  syntax:
    content: public void ReleaseToPool(bool forceDelete)
    parameters:
    - id: forceDelete
      type: System.Boolean
      description: true to force the session to be deleted; false to allow the session to be reused.
    content.vb: Public Sub ReleaseToPool(forceDelete As Boolean)
  overload: Google.Cloud.Spanner.V1.PooledSession.ReleaseToPool*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Cloud.Spanner.V1.PooledSession.CommitAsync(Google.Cloud.Spanner.V1.CommitRequest,Google.Api.Gax.Grpc.CallSettings)
  commentId: M:Google.Cloud.Spanner.V1.PooledSession.CommitAsync(Google.Cloud.Spanner.V1.CommitRequest,Google.Api.Gax.Grpc.CallSettings)
  id: CommitAsync(Google.Cloud.Spanner.V1.CommitRequest,Google.Api.Gax.Grpc.CallSettings)
  parent: Google.Cloud.Spanner.V1.PooledSession
  langs:
  - csharp
  - vb
  name: CommitAsync(CommitRequest, CallSettings)
  nameWithType: PooledSession.CommitAsync(CommitRequest, CallSettings)
  fullName: Google.Cloud.Spanner.V1.PooledSession.CommitAsync(Google.Cloud.Spanner.V1.CommitRequest, Google.Api.Gax.Grpc.CallSettings)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/PooledSession.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: CommitAsync
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/PooledSession.cs
    startLine: 232
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nExecutes a Commit RPC asynchronously.\n"
  example: []
  syntax:
    content: public Task<CommitResponse> CommitAsync(CommitRequest request, CallSettings callSettings)
    parameters:
    - id: request
      type: Google.Cloud.Spanner.V1.CommitRequest
      description: >-
        The commit request. Must not be null. The request will be modified with session and transaction details

        from this object.
    - id: callSettings
      type: Google.Api.Gax.Grpc.CallSettings
      description: If not null, applies overrides to this RPC call.
    return:
      type: System.Threading.Tasks.Task{Google.Cloud.Spanner.V1.CommitResponse}
      description: A task representing the asynchronous operation. When the task completes, the result is the response from the RPC.
    content.vb: Public Function CommitAsync(request As CommitRequest, callSettings As CallSettings) As Task(Of CommitResponse)
  overload: Google.Cloud.Spanner.V1.PooledSession.CommitAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Cloud.Spanner.V1.PooledSession.RollbackAsync(Google.Cloud.Spanner.V1.RollbackRequest,Google.Api.Gax.Grpc.CallSettings)
  commentId: M:Google.Cloud.Spanner.V1.PooledSession.RollbackAsync(Google.Cloud.Spanner.V1.RollbackRequest,Google.Api.Gax.Grpc.CallSettings)
  id: RollbackAsync(Google.Cloud.Spanner.V1.RollbackRequest,Google.Api.Gax.Grpc.CallSettings)
  parent: Google.Cloud.Spanner.V1.PooledSession
  langs:
  - csharp
  - vb
  name: RollbackAsync(RollbackRequest, CallSettings)
  nameWithType: PooledSession.RollbackAsync(RollbackRequest, CallSettings)
  fullName: Google.Cloud.Spanner.V1.PooledSession.RollbackAsync(Google.Cloud.Spanner.V1.RollbackRequest, Google.Api.Gax.Grpc.CallSettings)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/PooledSession.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: RollbackAsync
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/PooledSession.cs
    startLine: 252
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nExecutes a Rollback RPC asynchronously.\n"
  example: []
  syntax:
    content: public Task RollbackAsync(RollbackRequest request, CallSettings callSettings)
    parameters:
    - id: request
      type: Google.Cloud.Spanner.V1.RollbackRequest
      description: >-
        The rollback request. Must not be null. The request will be modified with session and transaction details

        from this object.
    - id: callSettings
      type: Google.Api.Gax.Grpc.CallSettings
      description: If not null, applies overrides to this RPC call.
    return:
      type: System.Threading.Tasks.Task
      description: A task representing the asynchronous operation.
    content.vb: Public Function RollbackAsync(request As RollbackRequest, callSettings As CallSettings) As Task
  overload: Google.Cloud.Spanner.V1.PooledSession.RollbackAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Cloud.Spanner.V1.PooledSession.PartitionQueryAsync(Google.Cloud.Spanner.V1.PartitionQueryRequest,Google.Api.Gax.Grpc.CallSettings)
  commentId: M:Google.Cloud.Spanner.V1.PooledSession.PartitionQueryAsync(Google.Cloud.Spanner.V1.PartitionQueryRequest,Google.Api.Gax.Grpc.CallSettings)
  id: PartitionQueryAsync(Google.Cloud.Spanner.V1.PartitionQueryRequest,Google.Api.Gax.Grpc.CallSettings)
  parent: Google.Cloud.Spanner.V1.PooledSession
  langs:
  - csharp
  - vb
  name: PartitionQueryAsync(PartitionQueryRequest, CallSettings)
  nameWithType: PooledSession.PartitionQueryAsync(PartitionQueryRequest, CallSettings)
  fullName: Google.Cloud.Spanner.V1.PooledSession.PartitionQueryAsync(Google.Cloud.Spanner.V1.PartitionQueryRequest, Google.Api.Gax.Grpc.CallSettings)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/PooledSession.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: PartitionQueryAsync
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/PooledSession.cs
    startLine: 271
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nExecutes a PartitionQuery RPC asynchronously.\n"
  example: []
  syntax:
    content: public Task<PartitionResponse> PartitionQueryAsync(PartitionQueryRequest request, CallSettings callSettings)
    parameters:
    - id: request
      type: Google.Cloud.Spanner.V1.PartitionQueryRequest
      description: >-
        The partitioning request. Must not be null. The request will be modified with session details

        from this object.
    - id: callSettings
      type: Google.Api.Gax.Grpc.CallSettings
      description: If not null, applies overrides to this RPC call.
    return:
      type: System.Threading.Tasks.Task{Google.Cloud.Spanner.V1.PartitionResponse}
      description: A task representing the asynchronous operation. When the task completes, the result is the response from the RPC.
    content.vb: Public Function PartitionQueryAsync(request As PartitionQueryRequest, callSettings As CallSettings) As Task(Of PartitionResponse)
  overload: Google.Cloud.Spanner.V1.PooledSession.PartitionQueryAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Cloud.Spanner.V1.PooledSession.ExecuteSqlStreamReader(Google.Cloud.Spanner.V1.ExecuteSqlRequest,Google.Api.Gax.Grpc.CallSettings)
  commentId: M:Google.Cloud.Spanner.V1.PooledSession.ExecuteSqlStreamReader(Google.Cloud.Spanner.V1.ExecuteSqlRequest,Google.Api.Gax.Grpc.CallSettings)
  id: ExecuteSqlStreamReader(Google.Cloud.Spanner.V1.ExecuteSqlRequest,Google.Api.Gax.Grpc.CallSettings)
  parent: Google.Cloud.Spanner.V1.PooledSession
  langs:
  - csharp
  - vb
  name: ExecuteSqlStreamReader(ExecuteSqlRequest, CallSettings)
  nameWithType: PooledSession.ExecuteSqlStreamReader(ExecuteSqlRequest, CallSettings)
  fullName: Google.Cloud.Spanner.V1.PooledSession.ExecuteSqlStreamReader(Google.Cloud.Spanner.V1.ExecuteSqlRequest, Google.Api.Gax.Grpc.CallSettings)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/PooledSession.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: ExecuteSqlStreamReader
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/PooledSession.cs
    startLine: 289
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nCreates a <xref href=\"Google.Cloud.Spanner.V1.ReliableStreamReader\" data-throw-if-not-resolved=\"false\"></xref> for the given request\n"
  example: []
  syntax:
    content: public ReliableStreamReader ExecuteSqlStreamReader(ExecuteSqlRequest request, CallSettings callSettings)
    parameters:
    - id: request
      type: Google.Cloud.Spanner.V1.ExecuteSqlRequest
      description: >-
        The query request. Must not be null. The request will be modified with session and transaction details

        from this object. If this object&apos;s <xref href="Google.Cloud.Spanner.V1.PooledSession.TransactionId" data-throw-if-not-resolved="false"></xref> is null, the request&apos;s transaction is not modified.
    - id: callSettings
      type: Google.Api.Gax.Grpc.CallSettings
      description: If not null, applies overrides to this RPC call.
    return:
      type: Google.Cloud.Spanner.V1.ReliableStreamReader
      description: A <xref href="Google.Cloud.Spanner.V1.ReliableStreamReader" data-throw-if-not-resolved="false"></xref> for the streaming SQL request.
    content.vb: Public Function ExecuteSqlStreamReader(request As ExecuteSqlRequest, callSettings As CallSettings) As ReliableStreamReader
  overload: Google.Cloud.Spanner.V1.PooledSession.ExecuteSqlStreamReader*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Cloud.Spanner.V1.PooledSession.ExecuteSqlAsync(Google.Cloud.Spanner.V1.ExecuteSqlRequest,Google.Api.Gax.Grpc.CallSettings)
  commentId: M:Google.Cloud.Spanner.V1.PooledSession.ExecuteSqlAsync(Google.Cloud.Spanner.V1.ExecuteSqlRequest,Google.Api.Gax.Grpc.CallSettings)
  id: ExecuteSqlAsync(Google.Cloud.Spanner.V1.ExecuteSqlRequest,Google.Api.Gax.Grpc.CallSettings)
  parent: Google.Cloud.Spanner.V1.PooledSession
  langs:
  - csharp
  - vb
  name: ExecuteSqlAsync(ExecuteSqlRequest, CallSettings)
  nameWithType: PooledSession.ExecuteSqlAsync(ExecuteSqlRequest, CallSettings)
  fullName: Google.Cloud.Spanner.V1.PooledSession.ExecuteSqlAsync(Google.Cloud.Spanner.V1.ExecuteSqlRequest, Google.Api.Gax.Grpc.CallSettings)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/PooledSession.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: ExecuteSqlAsync
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/PooledSession.cs
    startLine: 311
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nExecutes an ExecuteSql RPC asynchronously.\n"
  example: []
  syntax:
    content: public Task<ResultSet> ExecuteSqlAsync(ExecuteSqlRequest request, CallSettings callSettings)
    parameters:
    - id: request
      type: Google.Cloud.Spanner.V1.ExecuteSqlRequest
      description: >-
        The query request. Must not be null. The request will be modified with session and transaction details

        from this object. If this object&apos;s <xref href="Google.Cloud.Spanner.V1.PooledSession.TransactionId" data-throw-if-not-resolved="false"></xref> is null, the request&apos;s transaction is not modified.
    - id: callSettings
      type: Google.Api.Gax.Grpc.CallSettings
      description: If not null, applies overrides to this RPC call.
    return:
      type: System.Threading.Tasks.Task{Google.Cloud.Spanner.V1.ResultSet}
      description: A task representing the asynchronous operation. When the task completes, the result is the response from the RPC.
    content.vb: Public Function ExecuteSqlAsync(request As ExecuteSqlRequest, callSettings As CallSettings) As Task(Of ResultSet)
  overload: Google.Cloud.Spanner.V1.PooledSession.ExecuteSqlAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Cloud.Spanner.V1.PooledSession.ExecuteBatchDmlAsync(Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest,Google.Api.Gax.Grpc.CallSettings)
  commentId: M:Google.Cloud.Spanner.V1.PooledSession.ExecuteBatchDmlAsync(Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest,Google.Api.Gax.Grpc.CallSettings)
  id: ExecuteBatchDmlAsync(Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest,Google.Api.Gax.Grpc.CallSettings)
  parent: Google.Cloud.Spanner.V1.PooledSession
  langs:
  - csharp
  - vb
  name: ExecuteBatchDmlAsync(ExecuteBatchDmlRequest, CallSettings)
  nameWithType: PooledSession.ExecuteBatchDmlAsync(ExecuteBatchDmlRequest, CallSettings)
  fullName: Google.Cloud.Spanner.V1.PooledSession.ExecuteBatchDmlAsync(Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest, Google.Api.Gax.Grpc.CallSettings)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/PooledSession.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: ExecuteBatchDmlAsync
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/PooledSession.cs
    startLine: 330
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nExecutes an ExecuteBatchDml RPC asynchronously.\n"
  example: []
  syntax:
    content: public Task<ExecuteBatchDmlResponse> ExecuteBatchDmlAsync(ExecuteBatchDmlRequest request, CallSettings callSettings)
    parameters:
    - id: request
      type: Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest
      description: >-
        The query request. Must not be null. The request will be modified with session and transaction details

        from this object. If this object&apos;s <xref href="Google.Cloud.Spanner.V1.PooledSession.TransactionId" data-throw-if-not-resolved="false"></xref> is null, the request&apos;s transaction is not modified.
    - id: callSettings
      type: Google.Api.Gax.Grpc.CallSettings
      description: If not null, applies overrides to this RPC call.
    return:
      type: System.Threading.Tasks.Task{Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse}
      description: A task representing the asynchronous operation. When the task completes, the result is the response from the RPC.
    content.vb: Public Function ExecuteBatchDmlAsync(request As ExecuteBatchDmlRequest, callSettings As CallSettings) As Task(Of ExecuteBatchDmlResponse)
  overload: Google.Cloud.Spanner.V1.PooledSession.ExecuteBatchDmlAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Google.Cloud.Spanner.V1.SessionPool
  commentId: T:Google.Cloud.Spanner.V1.SessionPool
  name: SessionPool
  nameWithType: SessionPool
  fullName: Google.Cloud.Spanner.V1.SessionPool
- uid: Google.Cloud.Spanner.V1.PooledSession.ReleaseToPool(System.Boolean)
  commentId: M:Google.Cloud.Spanner.V1.PooledSession.ReleaseToPool(System.Boolean)
  isExternal: true
- uid: Google.Cloud.Spanner.V1.ReliableStreamReader
  commentId: T:Google.Cloud.Spanner.V1.ReliableStreamReader
  parent: Google.Cloud.Spanner.V1
  name: ReliableStreamReader
  nameWithType: ReliableStreamReader
  fullName: Google.Cloud.Spanner.V1.ReliableStreamReader
- uid: Google.Cloud.Spanner.V1
  commentId: N:Google.Cloud.Spanner.V1
  name: Google.Cloud.Spanner.V1
  nameWithType: Google.Cloud.Spanner.V1
  fullName: Google.Cloud.Spanner.V1
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Cloud.Spanner.V1.PooledSession.SessionName*
  commentId: Overload:Google.Cloud.Spanner.V1.PooledSession.SessionName
  name: SessionName
  nameWithType: PooledSession.SessionName
  fullName: Google.Cloud.Spanner.V1.PooledSession.SessionName
- uid: Google.Cloud.Spanner.V1.SessionName
  commentId: T:Google.Cloud.Spanner.V1.SessionName
  parent: Google.Cloud.Spanner.V1
  name: SessionName
  nameWithType: SessionName
  fullName: Google.Cloud.Spanner.V1.SessionName
- uid: Google.Cloud.Spanner.V1.PooledSession.TransactionId*
  commentId: Overload:Google.Cloud.Spanner.V1.PooledSession.TransactionId
  name: TransactionId
  nameWithType: PooledSession.TransactionId
  fullName: Google.Cloud.Spanner.V1.PooledSession.TransactionId
- uid: Google.Protobuf.ByteString
  commentId: T:Google.Protobuf.ByteString
  parent: Google.Protobuf
  isExternal: true
  name: ByteString
  nameWithType: ByteString
  fullName: Google.Protobuf.ByteString
- uid: Google.Protobuf
  commentId: N:Google.Protobuf
  isExternal: true
  name: Google.Protobuf
  nameWithType: Google.Protobuf
  fullName: Google.Protobuf
- uid: Google.Cloud.Spanner.V1.PooledSession
  commentId: T:Google.Cloud.Spanner.V1.PooledSession
  parent: Google.Cloud.Spanner.V1
  name: PooledSession
  nameWithType: PooledSession
  fullName: Google.Cloud.Spanner.V1.PooledSession
- uid: Google.Cloud.Spanner.V1.PooledSession.TransactionMode
  commentId: P:Google.Cloud.Spanner.V1.PooledSession.TransactionMode
  isExternal: true
- uid: Google.Cloud.Spanner.V1.TransactionOptions.ModeOneofCase.None
  commentId: F:Google.Cloud.Spanner.V1.TransactionOptions.ModeOneofCase.None
  isExternal: true
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  isExternal: true
- uid: Google.Cloud.Spanner.V1.PooledSession.WithFreshTransactionOrNewAsync*
  commentId: Overload:Google.Cloud.Spanner.V1.PooledSession.WithFreshTransactionOrNewAsync
  name: WithFreshTransactionOrNewAsync
  nameWithType: PooledSession.WithFreshTransactionOrNewAsync
  fullName: Google.Cloud.Spanner.V1.PooledSession.WithFreshTransactionOrNewAsync
- uid: Google.Cloud.Spanner.V1.TransactionOptions
  commentId: T:Google.Cloud.Spanner.V1.TransactionOptions
  parent: Google.Cloud.Spanner.V1
  name: TransactionOptions
  nameWithType: TransactionOptions
  fullName: Google.Cloud.Spanner.V1.TransactionOptions
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{Google.Cloud.Spanner.V1.PooledSession}
  commentId: T:System.Threading.Tasks.Task{Google.Cloud.Spanner.V1.PooledSession}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<PooledSession>
  nameWithType: Task<PooledSession>
  fullName: System.Threading.Tasks.Task<Google.Cloud.Spanner.V1.PooledSession>
  nameWithType.vb: Task(Of PooledSession)
  fullName.vb: System.Threading.Tasks.Task(Of Google.Cloud.Spanner.V1.PooledSession)
  name.vb: Task(Of PooledSession)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Spanner.V1.PooledSession
    name: PooledSession
    nameWithType: PooledSession
    fullName: Google.Cloud.Spanner.V1.PooledSession
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Spanner.V1.PooledSession
    name: PooledSession
    nameWithType: PooledSession
    fullName: Google.Cloud.Spanner.V1.PooledSession
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Google.Cloud.Spanner.V1.PooledSession.Dispose*
  commentId: Overload:Google.Cloud.Spanner.V1.PooledSession.Dispose
  name: Dispose
  nameWithType: PooledSession.Dispose
  fullName: Google.Cloud.Spanner.V1.PooledSession.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Cloud.Spanner.V1.PooledSession.ReleaseToPool*
  commentId: Overload:Google.Cloud.Spanner.V1.PooledSession.ReleaseToPool
  name: ReleaseToPool
  nameWithType: PooledSession.ReleaseToPool
  fullName: Google.Cloud.Spanner.V1.PooledSession.ReleaseToPool
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Google.Cloud.Spanner.V1.PooledSession.CommitAsync*
  commentId: Overload:Google.Cloud.Spanner.V1.PooledSession.CommitAsync
  name: CommitAsync
  nameWithType: PooledSession.CommitAsync
  fullName: Google.Cloud.Spanner.V1.PooledSession.CommitAsync
- uid: Google.Cloud.Spanner.V1.CommitRequest
  commentId: T:Google.Cloud.Spanner.V1.CommitRequest
  parent: Google.Cloud.Spanner.V1
  name: CommitRequest
  nameWithType: CommitRequest
  fullName: Google.Cloud.Spanner.V1.CommitRequest
- uid: Google.Api.Gax.Grpc.CallSettings
  commentId: T:Google.Api.Gax.Grpc.CallSettings
  parent: Google.Api.Gax.Grpc
  isExternal: true
  name: CallSettings
  nameWithType: CallSettings
  fullName: Google.Api.Gax.Grpc.CallSettings
- uid: System.Threading.Tasks.Task{Google.Cloud.Spanner.V1.CommitResponse}
  commentId: T:System.Threading.Tasks.Task{Google.Cloud.Spanner.V1.CommitResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<CommitResponse>
  nameWithType: Task<CommitResponse>
  fullName: System.Threading.Tasks.Task<Google.Cloud.Spanner.V1.CommitResponse>
  nameWithType.vb: Task(Of CommitResponse)
  fullName.vb: System.Threading.Tasks.Task(Of Google.Cloud.Spanner.V1.CommitResponse)
  name.vb: Task(Of CommitResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Spanner.V1.CommitResponse
    name: CommitResponse
    nameWithType: CommitResponse
    fullName: Google.Cloud.Spanner.V1.CommitResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Spanner.V1.CommitResponse
    name: CommitResponse
    nameWithType: CommitResponse
    fullName: Google.Cloud.Spanner.V1.CommitResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Api.Gax.Grpc
  commentId: N:Google.Api.Gax.Grpc
  isExternal: true
  name: Google.Api.Gax.Grpc
  nameWithType: Google.Api.Gax.Grpc
  fullName: Google.Api.Gax.Grpc
- uid: Google.Cloud.Spanner.V1.PooledSession.RollbackAsync*
  commentId: Overload:Google.Cloud.Spanner.V1.PooledSession.RollbackAsync
  name: RollbackAsync
  nameWithType: PooledSession.RollbackAsync
  fullName: Google.Cloud.Spanner.V1.PooledSession.RollbackAsync
- uid: Google.Cloud.Spanner.V1.RollbackRequest
  commentId: T:Google.Cloud.Spanner.V1.RollbackRequest
  parent: Google.Cloud.Spanner.V1
  name: RollbackRequest
  nameWithType: RollbackRequest
  fullName: Google.Cloud.Spanner.V1.RollbackRequest
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Google.Cloud.Spanner.V1.PooledSession.PartitionQueryAsync*
  commentId: Overload:Google.Cloud.Spanner.V1.PooledSession.PartitionQueryAsync
  name: PartitionQueryAsync
  nameWithType: PooledSession.PartitionQueryAsync
  fullName: Google.Cloud.Spanner.V1.PooledSession.PartitionQueryAsync
- uid: Google.Cloud.Spanner.V1.PartitionQueryRequest
  commentId: T:Google.Cloud.Spanner.V1.PartitionQueryRequest
  parent: Google.Cloud.Spanner.V1
  name: PartitionQueryRequest
  nameWithType: PartitionQueryRequest
  fullName: Google.Cloud.Spanner.V1.PartitionQueryRequest
- uid: System.Threading.Tasks.Task{Google.Cloud.Spanner.V1.PartitionResponse}
  commentId: T:System.Threading.Tasks.Task{Google.Cloud.Spanner.V1.PartitionResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<PartitionResponse>
  nameWithType: Task<PartitionResponse>
  fullName: System.Threading.Tasks.Task<Google.Cloud.Spanner.V1.PartitionResponse>
  nameWithType.vb: Task(Of PartitionResponse)
  fullName.vb: System.Threading.Tasks.Task(Of Google.Cloud.Spanner.V1.PartitionResponse)
  name.vb: Task(Of PartitionResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Spanner.V1.PartitionResponse
    name: PartitionResponse
    nameWithType: PartitionResponse
    fullName: Google.Cloud.Spanner.V1.PartitionResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Spanner.V1.PartitionResponse
    name: PartitionResponse
    nameWithType: PartitionResponse
    fullName: Google.Cloud.Spanner.V1.PartitionResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Cloud.Spanner.V1.PooledSession.TransactionId
  commentId: P:Google.Cloud.Spanner.V1.PooledSession.TransactionId
  isExternal: true
- uid: Google.Cloud.Spanner.V1.PooledSession.ExecuteSqlStreamReader*
  commentId: Overload:Google.Cloud.Spanner.V1.PooledSession.ExecuteSqlStreamReader
  name: ExecuteSqlStreamReader
  nameWithType: PooledSession.ExecuteSqlStreamReader
  fullName: Google.Cloud.Spanner.V1.PooledSession.ExecuteSqlStreamReader
- uid: Google.Cloud.Spanner.V1.ExecuteSqlRequest
  commentId: T:Google.Cloud.Spanner.V1.ExecuteSqlRequest
  parent: Google.Cloud.Spanner.V1
  name: ExecuteSqlRequest
  nameWithType: ExecuteSqlRequest
  fullName: Google.Cloud.Spanner.V1.ExecuteSqlRequest
- uid: Google.Cloud.Spanner.V1.PooledSession.ExecuteSqlAsync*
  commentId: Overload:Google.Cloud.Spanner.V1.PooledSession.ExecuteSqlAsync
  name: ExecuteSqlAsync
  nameWithType: PooledSession.ExecuteSqlAsync
  fullName: Google.Cloud.Spanner.V1.PooledSession.ExecuteSqlAsync
- uid: System.Threading.Tasks.Task{Google.Cloud.Spanner.V1.ResultSet}
  commentId: T:System.Threading.Tasks.Task{Google.Cloud.Spanner.V1.ResultSet}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ResultSet>
  nameWithType: Task<ResultSet>
  fullName: System.Threading.Tasks.Task<Google.Cloud.Spanner.V1.ResultSet>
  nameWithType.vb: Task(Of ResultSet)
  fullName.vb: System.Threading.Tasks.Task(Of Google.Cloud.Spanner.V1.ResultSet)
  name.vb: Task(Of ResultSet)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Spanner.V1.ResultSet
    name: ResultSet
    nameWithType: ResultSet
    fullName: Google.Cloud.Spanner.V1.ResultSet
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Spanner.V1.ResultSet
    name: ResultSet
    nameWithType: ResultSet
    fullName: Google.Cloud.Spanner.V1.ResultSet
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Cloud.Spanner.V1.PooledSession.ExecuteBatchDmlAsync*
  commentId: Overload:Google.Cloud.Spanner.V1.PooledSession.ExecuteBatchDmlAsync
  name: ExecuteBatchDmlAsync
  nameWithType: PooledSession.ExecuteBatchDmlAsync
  fullName: Google.Cloud.Spanner.V1.PooledSession.ExecuteBatchDmlAsync
- uid: Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest
  commentId: T:Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest
  parent: Google.Cloud.Spanner.V1
  name: ExecuteBatchDmlRequest
  nameWithType: ExecuteBatchDmlRequest
  fullName: Google.Cloud.Spanner.V1.ExecuteBatchDmlRequest
- uid: System.Threading.Tasks.Task{Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse}
  commentId: T:System.Threading.Tasks.Task{Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ExecuteBatchDmlResponse>
  nameWithType: Task<ExecuteBatchDmlResponse>
  fullName: System.Threading.Tasks.Task<Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse>
  nameWithType.vb: Task(Of ExecuteBatchDmlResponse)
  fullName.vb: System.Threading.Tasks.Task(Of Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse)
  name.vb: Task(Of ExecuteBatchDmlResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse
    name: ExecuteBatchDmlResponse
    nameWithType: ExecuteBatchDmlResponse
    fullName: Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse
    name: ExecuteBatchDmlResponse
    nameWithType: ExecuteBatchDmlResponse
    fullName: Google.Cloud.Spanner.V1.ExecuteBatchDmlResponse
  - name: )
    nameWithType: )
    fullName: )
