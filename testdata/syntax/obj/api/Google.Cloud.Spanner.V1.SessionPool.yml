### YamlMime:ManagedReference
items:
- uid: Google.Cloud.Spanner.V1.SessionPool
  commentId: T:Google.Cloud.Spanner.V1.SessionPool
  id: SessionPool
  parent: Google.Cloud.Spanner.V1
  children:
  - Google.Cloud.Spanner.V1.SessionPool.#ctor(Google.Cloud.Spanner.V1.SpannerClient,Google.Cloud.Spanner.V1.SessionPoolOptions)
  - Google.Cloud.Spanner.V1.SessionPool.AcquireSessionAsync(Google.Cloud.Spanner.Common.V1.DatabaseName,Google.Cloud.Spanner.V1.TransactionOptions,System.Threading.CancellationToken)
  - Google.Cloud.Spanner.V1.SessionPool.CreateDetachedSession(Google.Cloud.Spanner.V1.SessionName,Google.Protobuf.ByteString,Google.Cloud.Spanner.V1.TransactionOptions.ModeOneofCase)
  - Google.Cloud.Spanner.V1.SessionPool.GetStatisticsSnapshot
  - Google.Cloud.Spanner.V1.SessionPool.GetStatisticsSnapshot(Google.Cloud.Spanner.Common.V1.DatabaseName)
  - Google.Cloud.Spanner.V1.SessionPool.Options
  - Google.Cloud.Spanner.V1.SessionPool.ShutdownPoolAsync(Google.Cloud.Spanner.Common.V1.DatabaseName,System.Threading.CancellationToken)
  - Google.Cloud.Spanner.V1.SessionPool.WhenPoolReady(Google.Cloud.Spanner.Common.V1.DatabaseName,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: SessionPool
  nameWithType: SessionPool
  fullName: Google.Cloud.Spanner.V1.SessionPool
  type: Class
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SessionPool.TargetedSessionPool.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: SessionPool
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SessionPool.TargetedSessionPool.cs
    startLine: 29
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nA pool of sessions associated with a SpannerClient.\nSessions can be acquired by specifying the desired transaction options, if any.\nA session/transaction pair is then returned, which should be returned to the pool when\nit is no longer required. Sessions are kept alive automatically, and retired if they\nare expired by the server.\n"
  example: []
  syntax:
    content: public sealed class SessionPool
    content.vb: Public NotInheritable Class SessionPool
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Google.Cloud.Spanner.V1.SessionPool.Options
  commentId: P:Google.Cloud.Spanner.V1.SessionPool.Options
  id: Options
  parent: Google.Cloud.Spanner.V1.SessionPool
  langs:
  - csharp
  - vb
  name: Options
  nameWithType: SessionPool.Options
  fullName: Google.Cloud.Spanner.V1.SessionPool.Options
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SessionPool.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: Options
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SessionPool.cs
    startLine: 47
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nThe options governing this session pool.\n"
  example: []
  syntax:
    content: public SessionPoolOptions Options { get; }
    parameters: []
    return:
      type: Google.Cloud.Spanner.V1.SessionPoolOptions
    content.vb: Public ReadOnly Property Options As SessionPoolOptions
  overload: Google.Cloud.Spanner.V1.SessionPool.Options*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Cloud.Spanner.V1.SessionPool.#ctor(Google.Cloud.Spanner.V1.SpannerClient,Google.Cloud.Spanner.V1.SessionPoolOptions)
  commentId: M:Google.Cloud.Spanner.V1.SessionPool.#ctor(Google.Cloud.Spanner.V1.SpannerClient,Google.Cloud.Spanner.V1.SessionPoolOptions)
  id: '#ctor(Google.Cloud.Spanner.V1.SpannerClient,Google.Cloud.Spanner.V1.SessionPoolOptions)'
  parent: Google.Cloud.Spanner.V1.SessionPool
  langs:
  - csharp
  - vb
  name: SessionPool(SpannerClient, SessionPoolOptions)
  nameWithType: SessionPool.SessionPool(SpannerClient, SessionPoolOptions)
  fullName: Google.Cloud.Spanner.V1.SessionPool.SessionPool(Google.Cloud.Spanner.V1.SpannerClient, Google.Cloud.Spanner.V1.SessionPoolOptions)
  type: Constructor
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SessionPool.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: .ctor
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SessionPool.cs
    startLine: 62
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nCreates a session pool for the given client.\n"
  example: []
  syntax:
    content: public SessionPool(SpannerClient client, SessionPoolOptions options)
    parameters:
    - id: client
      type: Google.Cloud.Spanner.V1.SpannerClient
      description: The client to use for this session pool. Must not be null.
    - id: options
      type: Google.Cloud.Spanner.V1.SessionPoolOptions
      description: The options for this session pool. Must not be null.
    content.vb: Public Sub New(client As SpannerClient, options As SessionPoolOptions)
  overload: Google.Cloud.Spanner.V1.SessionPool.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Cloud.Spanner.V1.SessionPool.GetStatisticsSnapshot
  commentId: M:Google.Cloud.Spanner.V1.SessionPool.GetStatisticsSnapshot
  id: GetStatisticsSnapshot
  parent: Google.Cloud.Spanner.V1.SessionPool
  langs:
  - csharp
  - vb
  name: GetStatisticsSnapshot()
  nameWithType: SessionPool.GetStatisticsSnapshot()
  fullName: Google.Cloud.Spanner.V1.SessionPool.GetStatisticsSnapshot()
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SessionPool.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: GetStatisticsSnapshot
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SessionPool.cs
    startLine: 129
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nProvides a snapshot of statistics for this pool.\n"
  example: []
  syntax:
    content: public SessionPool.Statistics GetStatisticsSnapshot()
    return:
      type: Google.Cloud.Spanner.V1.SessionPool.Statistics
      description: A snapshot of statistics for this pool.
    content.vb: Public Function GetStatisticsSnapshot As SessionPool.Statistics
  overload: Google.Cloud.Spanner.V1.SessionPool.GetStatisticsSnapshot*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Cloud.Spanner.V1.SessionPool.GetStatisticsSnapshot(Google.Cloud.Spanner.Common.V1.DatabaseName)
  commentId: M:Google.Cloud.Spanner.V1.SessionPool.GetStatisticsSnapshot(Google.Cloud.Spanner.Common.V1.DatabaseName)
  id: GetStatisticsSnapshot(Google.Cloud.Spanner.Common.V1.DatabaseName)
  parent: Google.Cloud.Spanner.V1.SessionPool
  langs:
  - csharp
  - vb
  name: GetStatisticsSnapshot(DatabaseName)
  nameWithType: SessionPool.GetStatisticsSnapshot(DatabaseName)
  fullName: Google.Cloud.Spanner.V1.SessionPool.GetStatisticsSnapshot(Google.Cloud.Spanner.Common.V1.DatabaseName)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SessionPool.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: GetStatisticsSnapshot
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SessionPool.cs
    startLine: 136
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nProvides a snapshot of statistics for a database-specific pool.\n"
  example: []
  syntax:
    content: public SessionPool.DatabaseStatistics GetStatisticsSnapshot(DatabaseName databaseName)
    parameters:
    - id: databaseName
      type: Google.Cloud.Spanner.Common.V1.DatabaseName
    return:
      type: Google.Cloud.Spanner.V1.SessionPool.DatabaseStatistics
      description: A snapshot of statistics for this pool.
    content.vb: Public Function GetStatisticsSnapshot(databaseName As DatabaseName) As SessionPool.DatabaseStatistics
  overload: Google.Cloud.Spanner.V1.SessionPool.GetStatisticsSnapshot*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Cloud.Spanner.V1.SessionPool.AcquireSessionAsync(Google.Cloud.Spanner.Common.V1.DatabaseName,Google.Cloud.Spanner.V1.TransactionOptions,System.Threading.CancellationToken)
  commentId: M:Google.Cloud.Spanner.V1.SessionPool.AcquireSessionAsync(Google.Cloud.Spanner.Common.V1.DatabaseName,Google.Cloud.Spanner.V1.TransactionOptions,System.Threading.CancellationToken)
  id: AcquireSessionAsync(Google.Cloud.Spanner.Common.V1.DatabaseName,Google.Cloud.Spanner.V1.TransactionOptions,System.Threading.CancellationToken)
  parent: Google.Cloud.Spanner.V1.SessionPool
  langs:
  - csharp
  - vb
  name: AcquireSessionAsync(DatabaseName, TransactionOptions, CancellationToken)
  nameWithType: SessionPool.AcquireSessionAsync(DatabaseName, TransactionOptions, CancellationToken)
  fullName: Google.Cloud.Spanner.V1.SessionPool.AcquireSessionAsync(Google.Cloud.Spanner.Common.V1.DatabaseName, Google.Cloud.Spanner.V1.TransactionOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SessionPool.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: AcquireSessionAsync
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SessionPool.cs
    startLine: 150
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nAsynchronously acquires a session, potentially associated with a transaction.\n"
  example: []
  syntax:
    content: public Task<PooledSession> AcquireSessionAsync(DatabaseName databaseName, TransactionOptions transactionOptions, CancellationToken cancellationToken)
    parameters:
    - id: databaseName
      type: Google.Cloud.Spanner.Common.V1.DatabaseName
      description: The name of the database to acquire the session for.
    - id: transactionOptions
      type: Google.Cloud.Spanner.V1.TransactionOptions
      description: >-
        The transaction options required for the session. After the operation completes,

        this value is no longer used, so modifications to the object will not affect the transaction. May be null.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: An optional token for canceling the call.
    return:
      type: System.Threading.Tasks.Task{Google.Cloud.Spanner.V1.PooledSession}
      description: The <xref href="Google.Cloud.Spanner.V1.PooledSession" data-throw-if-not-resolved="false"></xref> representing the client, session and transaction.
    content.vb: Public Function AcquireSessionAsync(databaseName As DatabaseName, transactionOptions As TransactionOptions, cancellationToken As CancellationToken) As Task(Of PooledSession)
  overload: Google.Cloud.Spanner.V1.SessionPool.AcquireSessionAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Cloud.Spanner.V1.SessionPool.CreateDetachedSession(Google.Cloud.Spanner.V1.SessionName,Google.Protobuf.ByteString,Google.Cloud.Spanner.V1.TransactionOptions.ModeOneofCase)
  commentId: M:Google.Cloud.Spanner.V1.SessionPool.CreateDetachedSession(Google.Cloud.Spanner.V1.SessionName,Google.Protobuf.ByteString,Google.Cloud.Spanner.V1.TransactionOptions.ModeOneofCase)
  id: CreateDetachedSession(Google.Cloud.Spanner.V1.SessionName,Google.Protobuf.ByteString,Google.Cloud.Spanner.V1.TransactionOptions.ModeOneofCase)
  parent: Google.Cloud.Spanner.V1.SessionPool
  langs:
  - csharp
  - vb
  name: CreateDetachedSession(SessionName, ByteString, TransactionOptions.ModeOneofCase)
  nameWithType: SessionPool.CreateDetachedSession(SessionName, ByteString, TransactionOptions.ModeOneofCase)
  fullName: Google.Cloud.Spanner.V1.SessionPool.CreateDetachedSession(Google.Cloud.Spanner.V1.SessionName, Google.Protobuf.ByteString, Google.Cloud.Spanner.V1.TransactionOptions.ModeOneofCase)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SessionPool.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: CreateDetachedSession
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SessionPool.cs
    startLine: 171
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nCreates a <xref href=\"Google.Cloud.Spanner.V1.PooledSession\" data-throw-if-not-resolved=\"false\"></xref> with a known name and transaction ID/mode, with the client associated\nwith this pool, but is otherwise not part of this pool. This method does not query the server for the session state.\nWhen the returned <xref href=\"Google.Cloud.Spanner.V1.PooledSession\" data-throw-if-not-resolved=\"false\"></xref> is released, it will not become part of this pool, and the transaction\nwill not be rolled back.\n"
  remarks: "\nThis is typically used for partitioned queries, where the same session is used across multiple machines, so should\nnot be reused by the pool.\n"
  example: []
  syntax:
    content: public PooledSession CreateDetachedSession(SessionName sessionName, ByteString transactionId, TransactionOptions.ModeOneofCase transactionMode)
    parameters:
    - id: sessionName
      type: Google.Cloud.Spanner.V1.SessionName
      description: The name of the transaction. Must not be null.
    - id: transactionId
      type: Google.Protobuf.ByteString
      description: The ID of the transaction. Must not be null.
    - id: transactionMode
      type: Google.Cloud.Spanner.V1.TransactionOptions.ModeOneofCase
      description: The mode of the transaction.
    return:
      type: Google.Cloud.Spanner.V1.PooledSession
      description: A <xref href="Google.Cloud.Spanner.V1.PooledSession" data-throw-if-not-resolved="false"></xref> for the given session and transaction.
    content.vb: Public Function CreateDetachedSession(sessionName As SessionName, transactionId As ByteString, transactionMode As TransactionOptions.ModeOneofCase) As PooledSession
  overload: Google.Cloud.Spanner.V1.SessionPool.CreateDetachedSession*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Cloud.Spanner.V1.SessionPool.WhenPoolReady(Google.Cloud.Spanner.Common.V1.DatabaseName,System.Threading.CancellationToken)
  commentId: M:Google.Cloud.Spanner.V1.SessionPool.WhenPoolReady(Google.Cloud.Spanner.Common.V1.DatabaseName,System.Threading.CancellationToken)
  id: WhenPoolReady(Google.Cloud.Spanner.Common.V1.DatabaseName,System.Threading.CancellationToken)
  parent: Google.Cloud.Spanner.V1.SessionPool
  langs:
  - csharp
  - vb
  name: WhenPoolReady(DatabaseName, CancellationToken)
  nameWithType: SessionPool.WhenPoolReady(DatabaseName, CancellationToken)
  fullName: Google.Cloud.Spanner.V1.SessionPool.WhenPoolReady(Google.Cloud.Spanner.Common.V1.DatabaseName, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SessionPool.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: WhenPoolReady
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SessionPool.cs
    startLine: 188
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nReturns a task indicating when the session pool associated with the given database name is populated up to its minimum size.\n"
  remarks: "\nIf the pool is unhealthy or becomes unhealthy before it reaches its minimum size,\nthe returned task will be faulted with an <xref href=\"Grpc.Core.RpcException\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public Task WhenPoolReady(DatabaseName databaseName, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: databaseName
      type: Google.Cloud.Spanner.Common.V1.DatabaseName
      description: The database whose session pool should be populated. Must not be null.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: An optional token for canceling the call.
    return:
      type: System.Threading.Tasks.Task
      description: A task which will complete when the session pool has reached its minimum size.
    content.vb: Public Function WhenPoolReady(databaseName As DatabaseName, cancellationToken As CancellationToken = Nothing) As Task
  overload: Google.Cloud.Spanner.V1.SessionPool.WhenPoolReady*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Cloud.Spanner.V1.SessionPool.ShutdownPoolAsync(Google.Cloud.Spanner.Common.V1.DatabaseName,System.Threading.CancellationToken)
  commentId: M:Google.Cloud.Spanner.V1.SessionPool.ShutdownPoolAsync(Google.Cloud.Spanner.Common.V1.DatabaseName,System.Threading.CancellationToken)
  id: ShutdownPoolAsync(Google.Cloud.Spanner.Common.V1.DatabaseName,System.Threading.CancellationToken)
  parent: Google.Cloud.Spanner.V1.SessionPool
  langs:
  - csharp
  - vb
  name: ShutdownPoolAsync(DatabaseName, CancellationToken)
  nameWithType: SessionPool.ShutdownPoolAsync(DatabaseName, CancellationToken)
  fullName: Google.Cloud.Spanner.V1.SessionPool.ShutdownPoolAsync(Google.Cloud.Spanner.Common.V1.DatabaseName, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SessionPool.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: ShutdownPoolAsync
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SessionPool.cs
    startLine: 206
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nShuts down the session pool associated with the given database name.\nFurther attempts to acquire sessions will fail immediately.\n"
  remarks: "\nThis call will delete all pooled sessions, and wait for all active sessions to be released back to the pool\nand also deleted.\n"
  example: []
  syntax:
    content: public Task ShutdownPoolAsync(DatabaseName databaseName, CancellationToken cancellationToken)
    parameters:
    - id: databaseName
      type: Google.Cloud.Spanner.Common.V1.DatabaseName
      description: The database whose session pool should be shut down. Must not be null.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: An optional token for canceling the returned task. This does not cancel the shutdown itself.
    return:
      type: System.Threading.Tasks.Task
      description: A task which will complete when the session pool has finished shutting down.
    content.vb: Public Function ShutdownPoolAsync(databaseName As DatabaseName, cancellationToken As CancellationToken) As Task
  overload: Google.Cloud.Spanner.V1.SessionPool.ShutdownPoolAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Google.Cloud.Spanner.V1
  commentId: N:Google.Cloud.Spanner.V1
  name: Google.Cloud.Spanner.V1
  nameWithType: Google.Cloud.Spanner.V1
  fullName: Google.Cloud.Spanner.V1
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Cloud.Spanner.V1.SessionPool.Options*
  commentId: Overload:Google.Cloud.Spanner.V1.SessionPool.Options
  name: Options
  nameWithType: SessionPool.Options
  fullName: Google.Cloud.Spanner.V1.SessionPool.Options
- uid: Google.Cloud.Spanner.V1.SessionPoolOptions
  commentId: T:Google.Cloud.Spanner.V1.SessionPoolOptions
  parent: Google.Cloud.Spanner.V1
  name: SessionPoolOptions
  nameWithType: SessionPoolOptions
  fullName: Google.Cloud.Spanner.V1.SessionPoolOptions
- uid: Google.Cloud.Spanner.V1.SessionPool.#ctor*
  commentId: Overload:Google.Cloud.Spanner.V1.SessionPool.#ctor
  name: SessionPool
  nameWithType: SessionPool.SessionPool
  fullName: Google.Cloud.Spanner.V1.SessionPool.SessionPool
- uid: Google.Cloud.Spanner.V1.SpannerClient
  commentId: T:Google.Cloud.Spanner.V1.SpannerClient
  parent: Google.Cloud.Spanner.V1
  name: SpannerClient
  nameWithType: SpannerClient
  fullName: Google.Cloud.Spanner.V1.SpannerClient
- uid: Google.Cloud.Spanner.V1.SessionPool.GetStatisticsSnapshot*
  commentId: Overload:Google.Cloud.Spanner.V1.SessionPool.GetStatisticsSnapshot
  name: GetStatisticsSnapshot
  nameWithType: SessionPool.GetStatisticsSnapshot
  fullName: Google.Cloud.Spanner.V1.SessionPool.GetStatisticsSnapshot
- uid: Google.Cloud.Spanner.V1.SessionPool.Statistics
  commentId: T:Google.Cloud.Spanner.V1.SessionPool.Statistics
  parent: Google.Cloud.Spanner.V1
  name: SessionPool.Statistics
  nameWithType: SessionPool.Statistics
  fullName: Google.Cloud.Spanner.V1.SessionPool.Statistics
- uid: Google.Cloud.Spanner.Common.V1.DatabaseName
  commentId: T:Google.Cloud.Spanner.Common.V1.DatabaseName
  parent: Google.Cloud.Spanner.Common.V1
  name: DatabaseName
  nameWithType: DatabaseName
  fullName: Google.Cloud.Spanner.Common.V1.DatabaseName
- uid: Google.Cloud.Spanner.V1.SessionPool.DatabaseStatistics
  commentId: T:Google.Cloud.Spanner.V1.SessionPool.DatabaseStatistics
  parent: Google.Cloud.Spanner.V1
  name: SessionPool.DatabaseStatistics
  nameWithType: SessionPool.DatabaseStatistics
  fullName: Google.Cloud.Spanner.V1.SessionPool.DatabaseStatistics
- uid: Google.Cloud.Spanner.Common.V1
  commentId: N:Google.Cloud.Spanner.Common.V1
  name: Google.Cloud.Spanner.Common.V1
  nameWithType: Google.Cloud.Spanner.Common.V1
  fullName: Google.Cloud.Spanner.Common.V1
- uid: Google.Cloud.Spanner.V1.PooledSession
  commentId: T:Google.Cloud.Spanner.V1.PooledSession
  parent: Google.Cloud.Spanner.V1
  name: PooledSession
  nameWithType: PooledSession
  fullName: Google.Cloud.Spanner.V1.PooledSession
- uid: Google.Cloud.Spanner.V1.SessionPool.AcquireSessionAsync*
  commentId: Overload:Google.Cloud.Spanner.V1.SessionPool.AcquireSessionAsync
  name: AcquireSessionAsync
  nameWithType: SessionPool.AcquireSessionAsync
  fullName: Google.Cloud.Spanner.V1.SessionPool.AcquireSessionAsync
- uid: Google.Cloud.Spanner.V1.TransactionOptions
  commentId: T:Google.Cloud.Spanner.V1.TransactionOptions
  parent: Google.Cloud.Spanner.V1
  name: TransactionOptions
  nameWithType: TransactionOptions
  fullName: Google.Cloud.Spanner.V1.TransactionOptions
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{Google.Cloud.Spanner.V1.PooledSession}
  commentId: T:System.Threading.Tasks.Task{Google.Cloud.Spanner.V1.PooledSession}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<PooledSession>
  nameWithType: Task<PooledSession>
  fullName: System.Threading.Tasks.Task<Google.Cloud.Spanner.V1.PooledSession>
  nameWithType.vb: Task(Of PooledSession)
  fullName.vb: System.Threading.Tasks.Task(Of Google.Cloud.Spanner.V1.PooledSession)
  name.vb: Task(Of PooledSession)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Spanner.V1.PooledSession
    name: PooledSession
    nameWithType: PooledSession
    fullName: Google.Cloud.Spanner.V1.PooledSession
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Spanner.V1.PooledSession
    name: PooledSession
    nameWithType: PooledSession
    fullName: Google.Cloud.Spanner.V1.PooledSession
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Google.Cloud.Spanner.V1.SessionPool.CreateDetachedSession*
  commentId: Overload:Google.Cloud.Spanner.V1.SessionPool.CreateDetachedSession
  name: CreateDetachedSession
  nameWithType: SessionPool.CreateDetachedSession
  fullName: Google.Cloud.Spanner.V1.SessionPool.CreateDetachedSession
- uid: Google.Cloud.Spanner.V1.SessionName
  commentId: T:Google.Cloud.Spanner.V1.SessionName
  parent: Google.Cloud.Spanner.V1
  name: SessionName
  nameWithType: SessionName
  fullName: Google.Cloud.Spanner.V1.SessionName
- uid: Google.Protobuf.ByteString
  commentId: T:Google.Protobuf.ByteString
  parent: Google.Protobuf
  isExternal: true
  name: ByteString
  nameWithType: ByteString
  fullName: Google.Protobuf.ByteString
- uid: Google.Cloud.Spanner.V1.TransactionOptions.ModeOneofCase
  commentId: T:Google.Cloud.Spanner.V1.TransactionOptions.ModeOneofCase
  parent: Google.Cloud.Spanner.V1
  name: TransactionOptions.ModeOneofCase
  nameWithType: TransactionOptions.ModeOneofCase
  fullName: Google.Cloud.Spanner.V1.TransactionOptions.ModeOneofCase
- uid: Google.Protobuf
  commentId: N:Google.Protobuf
  isExternal: true
  name: Google.Protobuf
  nameWithType: Google.Protobuf
  fullName: Google.Protobuf
- uid: Grpc.Core.RpcException
  commentId: T:Grpc.Core.RpcException
  parent: Grpc.Core
  isExternal: true
  name: RpcException
  nameWithType: RpcException
  fullName: Grpc.Core.RpcException
- uid: Google.Cloud.Spanner.V1.SessionPool.WhenPoolReady*
  commentId: Overload:Google.Cloud.Spanner.V1.SessionPool.WhenPoolReady
  name: WhenPoolReady
  nameWithType: SessionPool.WhenPoolReady
  fullName: Google.Cloud.Spanner.V1.SessionPool.WhenPoolReady
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Grpc.Core
  commentId: N:Grpc.Core
  isExternal: true
  name: Grpc.Core
  nameWithType: Grpc.Core
  fullName: Grpc.Core
- uid: Google.Cloud.Spanner.V1.SessionPool.ShutdownPoolAsync*
  commentId: Overload:Google.Cloud.Spanner.V1.SessionPool.ShutdownPoolAsync
  name: ShutdownPoolAsync
  nameWithType: SessionPool.ShutdownPoolAsync
  fullName: Google.Cloud.Spanner.V1.SessionPool.ShutdownPoolAsync
