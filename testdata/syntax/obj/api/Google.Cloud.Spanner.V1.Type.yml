### YamlMime:ManagedReference
items:
- uid: Google.Cloud.Spanner.V1.Type
  commentId: T:Google.Cloud.Spanner.V1.Type
  id: Type
  parent: Google.Cloud.Spanner.V1
  children:
  - Google.Cloud.Spanner.V1.Type.#ctor
  - Google.Cloud.Spanner.V1.Type.#ctor(Google.Cloud.Spanner.V1.Type)
  - Google.Cloud.Spanner.V1.Type.ArrayElementType
  - Google.Cloud.Spanner.V1.Type.Code
  - Google.Cloud.Spanner.V1.Type.StructType
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: Type
  fullName: Google.Cloud.Spanner.V1.Type
  type: Class
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Type.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: Type
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Type.cs
    startLine: 137
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\n`Type` indicates the type of a Cloud Spanner value, as might be stored in a\ntable cell or returned from an SQL query.\n"
  example: []
  syntax:
    content: 'public sealed class Type : IMessage<Type>, IEquatable<Type>, IDeepCloneable<Type>, IBufferMessage, IMessage'
    content.vb: >-
      Public NotInheritable Class Type
          Implements IMessage(Of Type), IEquatable(Of Type), IDeepCloneable(Of Type), IBufferMessage, IMessage
  inheritance:
  - System.Object
  implements:
  - Google.Protobuf.IMessage{Google.Cloud.Spanner.V1.Type}
  - System.IEquatable{Google.Cloud.Spanner.V1.Type}
  - Google.Protobuf.IDeepCloneable{Google.Cloud.Spanner.V1.Type}
  - Google.Protobuf.IBufferMessage
  - Google.Protobuf.IMessage
  inheritedMembers:
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Google.Cloud.Spanner.V1.Type.#ctor
  commentId: M:Google.Cloud.Spanner.V1.Type.#ctor
  id: '#ctor'
  parent: Google.Cloud.Spanner.V1.Type
  langs:
  - csharp
  - vb
  name: Type()
  nameWithType: Type.Type()
  fullName: Google.Cloud.Spanner.V1.Type.Type()
  type: Constructor
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Type.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: .ctor
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Type.cs
    startLine: 157
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  syntax:
    content: public Type()
    content.vb: Public Sub New
  overload: Google.Cloud.Spanner.V1.Type.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Cloud.Spanner.V1.Type.#ctor(Google.Cloud.Spanner.V1.Type)
  commentId: M:Google.Cloud.Spanner.V1.Type.#ctor(Google.Cloud.Spanner.V1.Type)
  id: '#ctor(Google.Cloud.Spanner.V1.Type)'
  parent: Google.Cloud.Spanner.V1.Type
  langs:
  - csharp
  - vb
  name: Type(Type)
  nameWithType: Type.Type(Type)
  fullName: Google.Cloud.Spanner.V1.Type.Type(Google.Cloud.Spanner.V1.Type)
  type: Constructor
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Type.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: .ctor
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Type.cs
    startLine: 164
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  syntax:
    content: public Type(Type other)
    parameters:
    - id: other
      type: Google.Cloud.Spanner.V1.Type
    content.vb: Public Sub New(other As Type)
  overload: Google.Cloud.Spanner.V1.Type.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Cloud.Spanner.V1.Type.Code
  commentId: P:Google.Cloud.Spanner.V1.Type.Code
  id: Code
  parent: Google.Cloud.Spanner.V1.Type
  langs:
  - csharp
  - vb
  name: Code
  nameWithType: Type.Code
  fullName: Google.Cloud.Spanner.V1.Type.Code
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Type.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: Code
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Type.cs
    startLine: 183
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nRequired. The [TypeCode][google.spanner.v1.TypeCode] for this type.\n"
  example: []
  syntax:
    content: public TypeCode Code { get; set; }
    parameters: []
    return:
      type: Google.Cloud.Spanner.V1.TypeCode
    content.vb: Public Property Code As TypeCode
  overload: Google.Cloud.Spanner.V1.Type.Code*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Cloud.Spanner.V1.Type.ArrayElementType
  commentId: P:Google.Cloud.Spanner.V1.Type.ArrayElementType
  id: ArrayElementType
  parent: Google.Cloud.Spanner.V1.Type
  langs:
  - csharp
  - vb
  name: ArrayElementType
  nameWithType: Type.ArrayElementType
  fullName: Google.Cloud.Spanner.V1.Type.ArrayElementType
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Type.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: ArrayElementType
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Type.cs
    startLine: 198
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nIf [code][google.spanner.v1.Type.code] == [ARRAY][google.spanner.v1.TypeCode.ARRAY], then `array_element_type`\nis the type of the array elements.\n"
  example: []
  syntax:
    content: public Type ArrayElementType { get; set; }
    parameters: []
    return:
      type: Google.Cloud.Spanner.V1.Type
    content.vb: Public Property ArrayElementType As Type
  overload: Google.Cloud.Spanner.V1.Type.ArrayElementType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Cloud.Spanner.V1.Type.StructType
  commentId: P:Google.Cloud.Spanner.V1.Type.StructType
  id: StructType
  parent: Google.Cloud.Spanner.V1.Type
  langs:
  - csharp
  - vb
  name: StructType
  nameWithType: Type.StructType
  fullName: Google.Cloud.Spanner.V1.Type.StructType
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Type.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: StructType
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Type.cs
    startLine: 213
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nIf [code][google.spanner.v1.Type.code] == [STRUCT][google.spanner.v1.TypeCode.STRUCT], then `struct_type`\nprovides type information for the struct&apos;s fields.\n"
  example: []
  syntax:
    content: public StructType StructType { get; set; }
    parameters: []
    return:
      type: Google.Cloud.Spanner.V1.StructType
    content.vb: Public Property StructType As StructType
  overload: Google.Cloud.Spanner.V1.Type.StructType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Google.Cloud.Spanner.V1
  commentId: N:Google.Cloud.Spanner.V1
  name: Google.Cloud.Spanner.V1
  nameWithType: Google.Cloud.Spanner.V1
  fullName: Google.Cloud.Spanner.V1
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Google.Protobuf.IMessage{Google.Cloud.Spanner.V1.Type}
  commentId: T:Google.Protobuf.IMessage{Google.Cloud.Spanner.V1.Type}
  parent: Google.Protobuf
  definition: Google.Protobuf.IMessage`1
  name: IMessage<Type>
  nameWithType: IMessage<Type>
  fullName: Google.Protobuf.IMessage<Google.Cloud.Spanner.V1.Type>
  nameWithType.vb: IMessage(Of Type)
  fullName.vb: Google.Protobuf.IMessage(Of Google.Cloud.Spanner.V1.Type)
  name.vb: IMessage(Of Type)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Spanner.V1.Type
    name: Type
    nameWithType: Type
    fullName: Google.Cloud.Spanner.V1.Type
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Spanner.V1.Type
    name: Type
    nameWithType: Type
    fullName: Google.Cloud.Spanner.V1.Type
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable{Google.Cloud.Spanner.V1.Type}
  commentId: T:System.IEquatable{Google.Cloud.Spanner.V1.Type}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<Type>
  nameWithType: IEquatable<Type>
  fullName: System.IEquatable<Google.Cloud.Spanner.V1.Type>
  nameWithType.vb: IEquatable(Of Type)
  fullName.vb: System.IEquatable(Of Google.Cloud.Spanner.V1.Type)
  name.vb: IEquatable(Of Type)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Spanner.V1.Type
    name: Type
    nameWithType: Type
    fullName: Google.Cloud.Spanner.V1.Type
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Spanner.V1.Type
    name: Type
    nameWithType: Type
    fullName: Google.Cloud.Spanner.V1.Type
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IDeepCloneable{Google.Cloud.Spanner.V1.Type}
  commentId: T:Google.Protobuf.IDeepCloneable{Google.Cloud.Spanner.V1.Type}
  parent: Google.Protobuf
  definition: Google.Protobuf.IDeepCloneable`1
  name: IDeepCloneable<Type>
  nameWithType: IDeepCloneable<Type>
  fullName: Google.Protobuf.IDeepCloneable<Google.Cloud.Spanner.V1.Type>
  nameWithType.vb: IDeepCloneable(Of Type)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of Google.Cloud.Spanner.V1.Type)
  name.vb: IDeepCloneable(Of Type)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Spanner.V1.Type
    name: Type
    nameWithType: Type
    fullName: Google.Cloud.Spanner.V1.Type
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Spanner.V1.Type
    name: Type
    nameWithType: Type
    fullName: Google.Cloud.Spanner.V1.Type
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IBufferMessage
  commentId: T:Google.Protobuf.IBufferMessage
  parent: Google.Protobuf
  isExternal: true
  name: IBufferMessage
  nameWithType: IBufferMessage
  fullName: Google.Protobuf.IBufferMessage
- uid: Google.Protobuf.IMessage
  commentId: T:Google.Protobuf.IMessage
  parent: Google.Protobuf
  isExternal: true
  name: IMessage
  nameWithType: IMessage
  fullName: Google.Protobuf.IMessage
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Protobuf.IMessage`1
  commentId: T:Google.Protobuf.IMessage`1
  isExternal: true
  name: IMessage<T>
  nameWithType: IMessage<T>
  fullName: Google.Protobuf.IMessage<T>
  nameWithType.vb: IMessage(Of T)
  fullName.vb: Google.Protobuf.IMessage(Of T)
  name.vb: IMessage(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf
  commentId: N:Google.Protobuf
  isExternal: true
  name: Google.Protobuf
  nameWithType: Google.Protobuf
  fullName: Google.Protobuf
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IDeepCloneable`1
  commentId: T:Google.Protobuf.IDeepCloneable`1
  isExternal: true
  name: IDeepCloneable<T>
  nameWithType: IDeepCloneable<T>
  fullName: Google.Protobuf.IDeepCloneable<T>
  nameWithType.vb: IDeepCloneable(Of T)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of T)
  name.vb: IDeepCloneable(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Cloud.Spanner.V1.Type.#ctor*
  commentId: Overload:Google.Cloud.Spanner.V1.Type.#ctor
  name: Type
  nameWithType: Type.Type
  fullName: Google.Cloud.Spanner.V1.Type.Type
- uid: Google.Cloud.Spanner.V1.Type
  commentId: T:Google.Cloud.Spanner.V1.Type
  parent: Google.Cloud.Spanner.V1
  name: Type
  nameWithType: Type
  fullName: Google.Cloud.Spanner.V1.Type
- uid: Google.Cloud.Spanner.V1.Type.Code*
  commentId: Overload:Google.Cloud.Spanner.V1.Type.Code
  name: Code
  nameWithType: Type.Code
  fullName: Google.Cloud.Spanner.V1.Type.Code
- uid: Google.Cloud.Spanner.V1.TypeCode
  commentId: T:Google.Cloud.Spanner.V1.TypeCode
  parent: Google.Cloud.Spanner.V1
  name: TypeCode
  nameWithType: TypeCode
  fullName: Google.Cloud.Spanner.V1.TypeCode
- uid: Google.Cloud.Spanner.V1.Type.ArrayElementType*
  commentId: Overload:Google.Cloud.Spanner.V1.Type.ArrayElementType
  name: ArrayElementType
  nameWithType: Type.ArrayElementType
  fullName: Google.Cloud.Spanner.V1.Type.ArrayElementType
- uid: Google.Cloud.Spanner.V1.Type.StructType*
  commentId: Overload:Google.Cloud.Spanner.V1.Type.StructType
  name: StructType
  nameWithType: Type.StructType
  fullName: Google.Cloud.Spanner.V1.Type.StructType
- uid: Google.Cloud.Spanner.V1.StructType
  commentId: T:Google.Cloud.Spanner.V1.StructType
  parent: Google.Cloud.Spanner.V1
  name: StructType
  nameWithType: StructType
  fullName: Google.Cloud.Spanner.V1.StructType
