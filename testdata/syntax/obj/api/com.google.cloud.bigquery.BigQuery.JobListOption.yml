### YamlMime:ManagedReference
items:
- uid: "com.google.cloud.bigquery.BigQuery.JobListOption"
  id: "JobListOption"
  parent: "com.google.cloud.bigquery"
  children:
  - "com.google.cloud.bigquery.BigQuery.JobListOption.allUsers()"
  - "com.google.cloud.bigquery.BigQuery.JobListOption.fields(com.google.cloud.bigquery.BigQuery.JobField...)"
  - "com.google.cloud.bigquery.BigQuery.JobListOption.maxCreationTime(long)"
  - "com.google.cloud.bigquery.BigQuery.JobListOption.minCreationTime(long)"
  - "com.google.cloud.bigquery.BigQuery.JobListOption.pageSize(long)"
  - "com.google.cloud.bigquery.BigQuery.JobListOption.pageToken(java.lang.String)"
  - "com.google.cloud.bigquery.BigQuery.JobListOption.parentJobId(java.lang.String)"
  - "com.google.cloud.bigquery.BigQuery.JobListOption.stateFilter(com.google.cloud.bigquery.JobStatus.State...)"
  langs:
  - "java"
  name: "BigQuery.JobListOption"
  nameWithType: "BigQuery.JobListOption"
  fullName: "com.google.cloud.bigquery.BigQuery.JobListOption"
  type: "Class"
  package: "com.google.cloud.bigquery"
  summary: "Class for specifying job list options."
  syntax:
    content: "public static class BigQuery.JobListOption extends Option"
  inheritance:
  - "java.lang.Object"
  - "com.google.cloud.bigquery.Option"
  inheritedMembers:
  - "com.google.cloud.bigquery.Option.equals(java.lang.Object)"
  - "com.google.cloud.bigquery.Option.hashCode()"
  - "com.google.cloud.bigquery.Option.toString()"
  - "java.lang.Object.clone()"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.google.cloud.bigquery.BigQuery.JobListOption.JobListOption(com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,java.lang.Object)"
  id: "JobListOption(com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option,java.lang.Object)"
  parent: "com.google.cloud.bigquery.BigQuery.JobListOption"
  langs:
  - "java"
  name: "JobListOption(BigQueryRpc.Option option, Object value)"
  nameWithType: "BigQuery.JobListOption.JobListOption(BigQueryRpc.Option option, Object value)"
  fullName: "com.google.cloud.bigquery.BigQuery.JobListOption.JobListOption(BigQueryRpc.Option option, Object value)"
  overload: "com.google.cloud.bigquery.BigQuery.JobListOption.JobListOption*"
  type: "Constructor"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "private JobListOption(BigQueryRpc.Option option, Object value)"
    parameters:
    - id: "option"
      type: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option"
    - id: "value"
      type: "java.lang.Object"
- uid: "com.google.cloud.bigquery.BigQuery.JobListOption.allUsers()"
  id: "allUsers()"
  parent: "com.google.cloud.bigquery.BigQuery.JobListOption"
  langs:
  - "java"
  name: "allUsers()"
  nameWithType: "BigQuery.JobListOption.allUsers()"
  fullName: "com.google.cloud.bigquery.BigQuery.JobListOption.allUsers()"
  overload: "com.google.cloud.bigquery.BigQuery.JobListOption.allUsers*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns an option to list all jobs, even the ones issued by other users."
  syntax:
    content: "public static BigQuery.JobListOption allUsers()"
    return:
      type: "com.google.cloud.bigquery.BigQuery.JobListOption"
- uid: "com.google.cloud.bigquery.BigQuery.JobListOption.fields(com.google.cloud.bigquery.BigQuery.JobField...)"
  id: "fields(com.google.cloud.bigquery.BigQuery.JobField...)"
  parent: "com.google.cloud.bigquery.BigQuery.JobListOption"
  langs:
  - "java"
  name: "fields(BigQuery.JobField[] fields)"
  nameWithType: "BigQuery.JobListOption.fields(BigQuery.JobField[] fields)"
  fullName: "com.google.cloud.bigquery.BigQuery.JobListOption.fields(BigQuery.JobField[] fields)"
  overload: "com.google.cloud.bigquery.BigQuery.JobListOption.fields*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns an option to specify the job's fields to be returned by the RPC call. If this option is not provided all job's fields are returned. `JobOption.fields()` can be used to specify only the fields of interest. <xref uid=\"com.google.cloud.bigquery.Job.getJobId*\" data-throw-if-not-resolved=\"false\">Job#getJobId()</xref>, <xref uid=\"com.google.cloud.bigquery.JobStatus.getState()\" data-throw-if-not-resolved=\"false\">JobStatus#getState()</xref>, <xref uid=\"com.google.cloud.bigquery.JobStatus.getError()\" data-throw-if-not-resolved=\"false\">JobStatus#getError()</xref> as well as type-specific configuration (e.g. <xref uid=\"com.google.cloud.bigquery.QueryJobConfiguration.getQuery()\" data-throw-if-not-resolved=\"false\">QueryJobConfiguration#getQuery()</xref> for Query Jobs) are always returned, even if not specified. <xref uid=\"com.google.cloud.bigquery.BigQuery.JobField.SELF_LINK\" data-throw-if-not-resolved=\"false\">JobField#SELF_LINK</xref> and <xref uid=\"com.google.cloud.bigquery.BigQuery.JobField.ETAG\" data-throw-if-not-resolved=\"false\">JobField#ETAG</xref> can not be selected when listing jobs."
  syntax:
    content: "public static BigQuery.JobListOption fields(BigQuery.JobField[] fields)"
    parameters:
    - id: "fields"
      type: "com.google.cloud.bigquery.BigQuery.JobField[]"
    return:
      type: "com.google.cloud.bigquery.BigQuery.JobListOption"
- uid: "com.google.cloud.bigquery.BigQuery.JobListOption.maxCreationTime(long)"
  id: "maxCreationTime(long)"
  parent: "com.google.cloud.bigquery.BigQuery.JobListOption"
  langs:
  - "java"
  name: "maxCreationTime(long maxCreationTime)"
  nameWithType: "BigQuery.JobListOption.maxCreationTime(long maxCreationTime)"
  fullName: "com.google.cloud.bigquery.BigQuery.JobListOption.maxCreationTime(long maxCreationTime)"
  overload: "com.google.cloud.bigquery.BigQuery.JobListOption.maxCreationTime*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns an option to filter out jobs after the given maximum creation time."
  syntax:
    content: "public static BigQuery.JobListOption maxCreationTime(long maxCreationTime)"
    parameters:
    - id: "maxCreationTime"
      type: "long"
    return:
      type: "com.google.cloud.bigquery.BigQuery.JobListOption"
- uid: "com.google.cloud.bigquery.BigQuery.JobListOption.minCreationTime(long)"
  id: "minCreationTime(long)"
  parent: "com.google.cloud.bigquery.BigQuery.JobListOption"
  langs:
  - "java"
  name: "minCreationTime(long minCreationTime)"
  nameWithType: "BigQuery.JobListOption.minCreationTime(long minCreationTime)"
  fullName: "com.google.cloud.bigquery.BigQuery.JobListOption.minCreationTime(long minCreationTime)"
  overload: "com.google.cloud.bigquery.BigQuery.JobListOption.minCreationTime*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns an option to filter out jobs before the given minimum creation time."
  syntax:
    content: "public static BigQuery.JobListOption minCreationTime(long minCreationTime)"
    parameters:
    - id: "minCreationTime"
      type: "long"
    return:
      type: "com.google.cloud.bigquery.BigQuery.JobListOption"
- uid: "com.google.cloud.bigquery.BigQuery.JobListOption.pageSize(long)"
  id: "pageSize(long)"
  parent: "com.google.cloud.bigquery.BigQuery.JobListOption"
  langs:
  - "java"
  name: "pageSize(long pageSize)"
  nameWithType: "BigQuery.JobListOption.pageSize(long pageSize)"
  fullName: "com.google.cloud.bigquery.BigQuery.JobListOption.pageSize(long pageSize)"
  overload: "com.google.cloud.bigquery.BigQuery.JobListOption.pageSize*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns an option to specify the maximum number of jobs returned per page."
  syntax:
    content: "public static BigQuery.JobListOption pageSize(long pageSize)"
    parameters:
    - id: "pageSize"
      type: "long"
    return:
      type: "com.google.cloud.bigquery.BigQuery.JobListOption"
- uid: "com.google.cloud.bigquery.BigQuery.JobListOption.pageToken(java.lang.String)"
  id: "pageToken(java.lang.String)"
  parent: "com.google.cloud.bigquery.BigQuery.JobListOption"
  langs:
  - "java"
  name: "pageToken(String pageToken)"
  nameWithType: "BigQuery.JobListOption.pageToken(String pageToken)"
  fullName: "com.google.cloud.bigquery.BigQuery.JobListOption.pageToken(String pageToken)"
  overload: "com.google.cloud.bigquery.BigQuery.JobListOption.pageToken*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns an option to specify the page token from which to start listing jobs."
  syntax:
    content: "public static BigQuery.JobListOption pageToken(String pageToken)"
    parameters:
    - id: "pageToken"
      type: "java.lang.String"
    return:
      type: "com.google.cloud.bigquery.BigQuery.JobListOption"
- uid: "com.google.cloud.bigquery.BigQuery.JobListOption.parentJobId(java.lang.String)"
  id: "parentJobId(java.lang.String)"
  parent: "com.google.cloud.bigquery.BigQuery.JobListOption"
  langs:
  - "java"
  name: "parentJobId(String parentJobId)"
  nameWithType: "BigQuery.JobListOption.parentJobId(String parentJobId)"
  fullName: "com.google.cloud.bigquery.BigQuery.JobListOption.parentJobId(String parentJobId)"
  overload: "com.google.cloud.bigquery.BigQuery.JobListOption.parentJobId*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns an option to list only child job from specify parent job id."
  syntax:
    content: "public static BigQuery.JobListOption parentJobId(String parentJobId)"
    parameters:
    - id: "parentJobId"
      type: "java.lang.String"
    return:
      type: "com.google.cloud.bigquery.BigQuery.JobListOption"
- uid: "com.google.cloud.bigquery.BigQuery.JobListOption.stateFilter(com.google.cloud.bigquery.JobStatus.State...)"
  id: "stateFilter(com.google.cloud.bigquery.JobStatus.State...)"
  parent: "com.google.cloud.bigquery.BigQuery.JobListOption"
  langs:
  - "java"
  name: "stateFilter(JobStatus.State[] stateFilters)"
  nameWithType: "BigQuery.JobListOption.stateFilter(JobStatus.State[] stateFilters)"
  fullName: "com.google.cloud.bigquery.BigQuery.JobListOption.stateFilter(JobStatus.State[] stateFilters)"
  overload: "com.google.cloud.bigquery.BigQuery.JobListOption.stateFilter*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns an option to list only jobs that match the provided state filters."
  syntax:
    content: "public static BigQuery.JobListOption stateFilter(JobStatus.State[] stateFilters)"
    parameters:
    - id: "stateFilters"
      type: "com.google.cloud.bigquery.JobStatus.State[]"
    return:
      type: "com.google.cloud.bigquery.BigQuery.JobListOption"
references:
- uid: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option"
  name: "BigQueryRpc.Option"
  nameWithType: "BigQueryRpc.Option"
  fullName: "com.google.cloud.bigquery.spi.v2.BigQueryRpc.Option"
- uid: "java.lang.Object"
  spec.java:
  - uid: "java.lang.Object"
    name: "Object"
    fullName: "java.lang.Object"
- uid: "com.google.cloud.bigquery.BigQuery.JobListOption.JobListOption*"
  name: "JobListOption"
  nameWithType: "BigQuery.JobListOption.JobListOption"
  fullName: "com.google.cloud.bigquery.BigQuery.JobListOption.JobListOption"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.BigQuery.JobListOption.allUsers*"
  name: "allUsers"
  nameWithType: "BigQuery.JobListOption.allUsers"
  fullName: "com.google.cloud.bigquery.BigQuery.JobListOption.allUsers"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.JobStatus.State[]"
  spec.java:
  - uid: "com.google.cloud.bigquery.JobStatus.State"
    name: "State"
    fullName: "com.google.cloud.bigquery.JobStatus.State"
  - name: "[]"
    fullName: "[]"
- uid: "com.google.cloud.bigquery.BigQuery.JobListOption.stateFilter*"
  name: "stateFilter"
  nameWithType: "BigQuery.JobListOption.stateFilter"
  fullName: "com.google.cloud.bigquery.BigQuery.JobListOption.stateFilter"
  package: "com.google.cloud.bigquery"
- uid: "long"
  spec.java:
  - uid: "long"
    name: "long"
    fullName: "long"
- uid: "com.google.cloud.bigquery.BigQuery.JobListOption.minCreationTime*"
  name: "minCreationTime"
  nameWithType: "BigQuery.JobListOption.minCreationTime"
  fullName: "com.google.cloud.bigquery.BigQuery.JobListOption.minCreationTime"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.BigQuery.JobListOption.maxCreationTime*"
  name: "maxCreationTime"
  nameWithType: "BigQuery.JobListOption.maxCreationTime"
  fullName: "com.google.cloud.bigquery.BigQuery.JobListOption.maxCreationTime"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.BigQuery.JobListOption.pageSize*"
  name: "pageSize"
  nameWithType: "BigQuery.JobListOption.pageSize"
  fullName: "com.google.cloud.bigquery.BigQuery.JobListOption.pageSize"
  package: "com.google.cloud.bigquery"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.google.cloud.bigquery.BigQuery.JobListOption.pageToken*"
  name: "pageToken"
  nameWithType: "BigQuery.JobListOption.pageToken"
  fullName: "com.google.cloud.bigquery.BigQuery.JobListOption.pageToken"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.BigQuery.JobListOption.parentJobId*"
  name: "parentJobId"
  nameWithType: "BigQuery.JobListOption.parentJobId"
  fullName: "com.google.cloud.bigquery.BigQuery.JobListOption.parentJobId"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.BigQuery.JobField[]"
  spec.java:
  - uid: "com.google.cloud.bigquery.BigQuery.JobField"
    name: "JobField"
    fullName: "com.google.cloud.bigquery.BigQuery.JobField"
  - name: "[]"
    fullName: "[]"
- uid: "com.google.cloud.bigquery.BigQuery.JobListOption.fields*"
  name: "fields"
  nameWithType: "BigQuery.JobListOption.fields"
  fullName: "com.google.cloud.bigquery.BigQuery.JobListOption.fields"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.Option"
  name: "Option"
  nameWithType: "Option"
  fullName: "com.google.cloud.bigquery.Option"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "com.google.cloud.bigquery.Option.equals(java.lang.Object)"
  name: "Option.equals(Object)"
  nameWithType: "Option.equals(Object)"
  fullName: "com.google.cloud.bigquery.Option.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "com.google.cloud.bigquery.Option.toString()"
  name: "Option.toString()"
  nameWithType: "Option.toString()"
  fullName: "com.google.cloud.bigquery.Option.toString()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "com.google.cloud.bigquery.Option.hashCode()"
  name: "Option.hashCode()"
  nameWithType: "Option.hashCode()"
  fullName: "com.google.cloud.bigquery.Option.hashCode()"
