### YamlMime:ManagedReference
items:
- uid: "com.google.cloud.bigquery.GoogleSheetsOptions.Builder"
  id: "Builder"
  parent: "com.google.cloud.bigquery"
  children:
  - "com.google.cloud.bigquery.GoogleSheetsOptions.Builder.build()"
  - "com.google.cloud.bigquery.GoogleSheetsOptions.Builder.setRange(java.lang.String)"
  - "com.google.cloud.bigquery.GoogleSheetsOptions.Builder.setSkipLeadingRows(long)"
  langs:
  - "java"
  name: "GoogleSheetsOptions.Builder"
  nameWithType: "GoogleSheetsOptions.Builder"
  fullName: "com.google.cloud.bigquery.GoogleSheetsOptions.Builder"
  type: "Class"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public static final class GoogleSheetsOptions.Builder"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.google.cloud.bigquery.GoogleSheetsOptions.Builder.Builder()"
  id: "Builder()"
  parent: "com.google.cloud.bigquery.GoogleSheetsOptions.Builder"
  langs:
  - "java"
  name: "Builder()"
  nameWithType: "GoogleSheetsOptions.Builder.Builder()"
  fullName: "com.google.cloud.bigquery.GoogleSheetsOptions.Builder.Builder()"
  overload: "com.google.cloud.bigquery.GoogleSheetsOptions.Builder.Builder*"
  type: "Constructor"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "private Builder()"
- uid: "com.google.cloud.bigquery.GoogleSheetsOptions.Builder.Builder(com.google.cloud.bigquery.GoogleSheetsOptions)"
  id: "Builder(com.google.cloud.bigquery.GoogleSheetsOptions)"
  parent: "com.google.cloud.bigquery.GoogleSheetsOptions.Builder"
  langs:
  - "java"
  name: "Builder(GoogleSheetsOptions options)"
  nameWithType: "GoogleSheetsOptions.Builder.Builder(GoogleSheetsOptions options)"
  fullName: "com.google.cloud.bigquery.GoogleSheetsOptions.Builder.Builder(GoogleSheetsOptions options)"
  overload: "com.google.cloud.bigquery.GoogleSheetsOptions.Builder.Builder*"
  type: "Constructor"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "private Builder(GoogleSheetsOptions options)"
    parameters:
    - id: "options"
      type: "com.google.cloud.bigquery.GoogleSheetsOptions"
- uid: "com.google.cloud.bigquery.GoogleSheetsOptions.Builder.build()"
  id: "build()"
  parent: "com.google.cloud.bigquery.GoogleSheetsOptions.Builder"
  langs:
  - "java"
  name: "build()"
  nameWithType: "GoogleSheetsOptions.Builder.build()"
  fullName: "com.google.cloud.bigquery.GoogleSheetsOptions.Builder.build()"
  overload: "com.google.cloud.bigquery.GoogleSheetsOptions.Builder.build*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Creates a <xref uid=\"com.google.cloud.bigquery.GoogleSheetsOptions\" data-throw-if-not-resolved=\"false\">GoogleSheetsOptions</xref> object."
  syntax:
    content: "public GoogleSheetsOptions build()"
    return:
      type: "com.google.cloud.bigquery.GoogleSheetsOptions"
- uid: "com.google.cloud.bigquery.GoogleSheetsOptions.Builder.setRange(java.lang.String)"
  id: "setRange(java.lang.String)"
  parent: "com.google.cloud.bigquery.GoogleSheetsOptions.Builder"
  langs:
  - "java"
  name: "setRange(String range)"
  nameWithType: "GoogleSheetsOptions.Builder.setRange(String range)"
  fullName: "com.google.cloud.bigquery.GoogleSheetsOptions.Builder.setRange(String range)"
  overload: "com.google.cloud.bigquery.GoogleSheetsOptions.Builder.setRange*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "\\[Optional\\] Range of a sheet to query from. Only used when non-empty. Typical format: sheet\\_name!top\\_left\\_cell\\_id:bottom\\_right\\_cell\\_id For example: sheet1!A1:B20"
  syntax:
    content: "public GoogleSheetsOptions.Builder setRange(String range)"
    parameters:
    - id: "range"
      type: "java.lang.String"
      description: "or <code>null</code> for none"
    return:
      type: "com.google.cloud.bigquery.GoogleSheetsOptions.Builder"
- uid: "com.google.cloud.bigquery.GoogleSheetsOptions.Builder.setSkipLeadingRows(long)"
  id: "setSkipLeadingRows(long)"
  parent: "com.google.cloud.bigquery.GoogleSheetsOptions.Builder"
  langs:
  - "java"
  name: "setSkipLeadingRows(long skipLeadingRows)"
  nameWithType: "GoogleSheetsOptions.Builder.setSkipLeadingRows(long skipLeadingRows)"
  fullName: "com.google.cloud.bigquery.GoogleSheetsOptions.Builder.setSkipLeadingRows(long skipLeadingRows)"
  overload: "com.google.cloud.bigquery.GoogleSheetsOptions.Builder.setSkipLeadingRows*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Sets the number of rows at the top of a sheet that BigQuery will skip when reading the data. The default value is 0. This property is useful if you have header rows that should be skipped."
  syntax:
    content: "public GoogleSheetsOptions.Builder setSkipLeadingRows(long skipLeadingRows)"
    parameters:
    - id: "skipLeadingRows"
      type: "long"
    return:
      type: "com.google.cloud.bigquery.GoogleSheetsOptions.Builder"
references:
- uid: "com.google.cloud.bigquery.GoogleSheetsOptions.Builder.Builder*"
  name: "Builder"
  nameWithType: "GoogleSheetsOptions.Builder.Builder"
  fullName: "com.google.cloud.bigquery.GoogleSheetsOptions.Builder.Builder"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.GoogleSheetsOptions"
  name: "GoogleSheetsOptions"
  nameWithType: "GoogleSheetsOptions"
  fullName: "com.google.cloud.bigquery.GoogleSheetsOptions"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.google.cloud.bigquery.GoogleSheetsOptions.Builder.setRange*"
  name: "setRange"
  nameWithType: "GoogleSheetsOptions.Builder.setRange"
  fullName: "com.google.cloud.bigquery.GoogleSheetsOptions.Builder.setRange"
  package: "com.google.cloud.bigquery"
- uid: "long"
  spec.java:
  - uid: "long"
    name: "long"
    fullName: "long"
- uid: "com.google.cloud.bigquery.GoogleSheetsOptions.Builder.setSkipLeadingRows*"
  name: "setSkipLeadingRows"
  nameWithType: "GoogleSheetsOptions.Builder.setSkipLeadingRows"
  fullName: "com.google.cloud.bigquery.GoogleSheetsOptions.Builder.setSkipLeadingRows"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.GoogleSheetsOptions.Builder.build*"
  name: "build"
  nameWithType: "GoogleSheetsOptions.Builder.build"
  fullName: "com.google.cloud.bigquery.GoogleSheetsOptions.Builder.build"
  package: "com.google.cloud.bigquery"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
