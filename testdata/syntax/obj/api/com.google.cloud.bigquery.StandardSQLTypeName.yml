### YamlMime:ManagedReference
items:
- uid: "com.google.cloud.bigquery.StandardSQLTypeName"
  id: "StandardSQLTypeName"
  parent: "com.google.cloud.bigquery"
  children:
  - "com.google.cloud.bigquery.StandardSQLTypeName.ARRAY"
  - "com.google.cloud.bigquery.StandardSQLTypeName.BIGNUMERIC"
  - "com.google.cloud.bigquery.StandardSQLTypeName.BOOL"
  - "com.google.cloud.bigquery.StandardSQLTypeName.BYTES"
  - "com.google.cloud.bigquery.StandardSQLTypeName.DATE"
  - "com.google.cloud.bigquery.StandardSQLTypeName.DATETIME"
  - "com.google.cloud.bigquery.StandardSQLTypeName.FLOAT64"
  - "com.google.cloud.bigquery.StandardSQLTypeName.GEOGRAPHY"
  - "com.google.cloud.bigquery.StandardSQLTypeName.INT64"
  - "com.google.cloud.bigquery.StandardSQLTypeName.NUMERIC"
  - "com.google.cloud.bigquery.StandardSQLTypeName.STRING"
  - "com.google.cloud.bigquery.StandardSQLTypeName.STRUCT"
  - "com.google.cloud.bigquery.StandardSQLTypeName.TIME"
  - "com.google.cloud.bigquery.StandardSQLTypeName.TIMESTAMP"
  - "com.google.cloud.bigquery.StandardSQLTypeName.valueOf(java.lang.String)"
  - "com.google.cloud.bigquery.StandardSQLTypeName.values()"
  langs:
  - "java"
  name: "StandardSQLTypeName"
  nameWithType: "StandardSQLTypeName"
  fullName: "com.google.cloud.bigquery.StandardSQLTypeName"
  type: "Enum"
  package: "com.google.cloud.bigquery"
  summary: "A type used in standard SQL contexts. For example, these types are used in queries with query parameters, which requires usage of standard SQL."
  syntax:
    content: "public enum StandardSQLTypeName extends Enum<StandardSQLTypeName>"
  inheritance:
  - "java.lang.Object"
  - "java.lang.Enum"
  inheritedMembers:
  - "java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)"
  - "java.lang.Enum.clone()"
  - "java.lang.Enum.compareTo(E)"
  - "java.lang.Enum.equals(java.lang.Object)"
  - "java.lang.Enum.finalize()"
  - "java.lang.Enum.getDeclaringClass()"
  - "java.lang.Enum.hashCode()"
  - "java.lang.Enum.name()"
  - "java.lang.Enum.ordinal()"
  - "java.lang.Enum.toString()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.google.cloud.bigquery.StandardSQLTypeName.ARRAY"
  id: "ARRAY"
  parent: "com.google.cloud.bigquery.StandardSQLTypeName"
  langs:
  - "java"
  name: "ARRAY"
  nameWithType: "StandardSQLTypeName.ARRAY"
  fullName: "com.google.cloud.bigquery.StandardSQLTypeName.ARRAY"
  type: "Field"
  package: "com.google.cloud.bigquery"
  summary: "Ordered list of zero or more elements of any non-array type."
  syntax:
    content: "public static final StandardSQLTypeName ARRAY"
    return:
      type: "com.google.cloud.bigquery.StandardSQLTypeName"
- uid: "com.google.cloud.bigquery.StandardSQLTypeName.BIGNUMERIC"
  id: "BIGNUMERIC"
  parent: "com.google.cloud.bigquery.StandardSQLTypeName"
  langs:
  - "java"
  name: "BIGNUMERIC"
  nameWithType: "StandardSQLTypeName.BIGNUMERIC"
  fullName: "com.google.cloud.bigquery.StandardSQLTypeName.BIGNUMERIC"
  type: "Field"
  package: "com.google.cloud.bigquery"
  summary: "A decimal value with 76+ digits of precision (the 77th digit is partial) and 38 digits of scale"
  syntax:
    content: "public static final StandardSQLTypeName BIGNUMERIC"
    return:
      type: "com.google.cloud.bigquery.StandardSQLTypeName"
- uid: "com.google.cloud.bigquery.StandardSQLTypeName.BOOL"
  id: "BOOL"
  parent: "com.google.cloud.bigquery.StandardSQLTypeName"
  langs:
  - "java"
  name: "BOOL"
  nameWithType: "StandardSQLTypeName.BOOL"
  fullName: "com.google.cloud.bigquery.StandardSQLTypeName.BOOL"
  type: "Field"
  package: "com.google.cloud.bigquery"
  summary: "A Boolean value (true or false)."
  syntax:
    content: "public static final StandardSQLTypeName BOOL"
    return:
      type: "com.google.cloud.bigquery.StandardSQLTypeName"
- uid: "com.google.cloud.bigquery.StandardSQLTypeName.BYTES"
  id: "BYTES"
  parent: "com.google.cloud.bigquery.StandardSQLTypeName"
  langs:
  - "java"
  name: "BYTES"
  nameWithType: "StandardSQLTypeName.BYTES"
  fullName: "com.google.cloud.bigquery.StandardSQLTypeName.BYTES"
  type: "Field"
  package: "com.google.cloud.bigquery"
  summary: "Variable-length binary data."
  syntax:
    content: "public static final StandardSQLTypeName BYTES"
    return:
      type: "com.google.cloud.bigquery.StandardSQLTypeName"
- uid: "com.google.cloud.bigquery.StandardSQLTypeName.DATE"
  id: "DATE"
  parent: "com.google.cloud.bigquery.StandardSQLTypeName"
  langs:
  - "java"
  name: "DATE"
  nameWithType: "StandardSQLTypeName.DATE"
  fullName: "com.google.cloud.bigquery.StandardSQLTypeName.DATE"
  type: "Field"
  package: "com.google.cloud.bigquery"
  summary: "Represents a logical calendar date. Values range between the years 1 and 9999, inclusive."
  syntax:
    content: "public static final StandardSQLTypeName DATE"
    return:
      type: "com.google.cloud.bigquery.StandardSQLTypeName"
- uid: "com.google.cloud.bigquery.StandardSQLTypeName.DATETIME"
  id: "DATETIME"
  parent: "com.google.cloud.bigquery.StandardSQLTypeName"
  langs:
  - "java"
  name: "DATETIME"
  nameWithType: "StandardSQLTypeName.DATETIME"
  fullName: "com.google.cloud.bigquery.StandardSQLTypeName.DATETIME"
  type: "Field"
  package: "com.google.cloud.bigquery"
  summary: "Represents a year, month, day, hour, minute, second, and subsecond (microsecond precision)."
  syntax:
    content: "public static final StandardSQLTypeName DATETIME"
    return:
      type: "com.google.cloud.bigquery.StandardSQLTypeName"
- uid: "com.google.cloud.bigquery.StandardSQLTypeName.FLOAT64"
  id: "FLOAT64"
  parent: "com.google.cloud.bigquery.StandardSQLTypeName"
  langs:
  - "java"
  name: "FLOAT64"
  nameWithType: "StandardSQLTypeName.FLOAT64"
  fullName: "com.google.cloud.bigquery.StandardSQLTypeName.FLOAT64"
  type: "Field"
  package: "com.google.cloud.bigquery"
  summary: "A 64-bit IEEE binary floating-point value."
  syntax:
    content: "public static final StandardSQLTypeName FLOAT64"
    return:
      type: "com.google.cloud.bigquery.StandardSQLTypeName"
- uid: "com.google.cloud.bigquery.StandardSQLTypeName.GEOGRAPHY"
  id: "GEOGRAPHY"
  parent: "com.google.cloud.bigquery.StandardSQLTypeName"
  langs:
  - "java"
  name: "GEOGRAPHY"
  nameWithType: "StandardSQLTypeName.GEOGRAPHY"
  fullName: "com.google.cloud.bigquery.StandardSQLTypeName.GEOGRAPHY"
  type: "Field"
  package: "com.google.cloud.bigquery"
  summary: "Represents a set of geographic points, represented as a Well Known Text (WKT) string."
  syntax:
    content: "public static final StandardSQLTypeName GEOGRAPHY"
    return:
      type: "com.google.cloud.bigquery.StandardSQLTypeName"
- uid: "com.google.cloud.bigquery.StandardSQLTypeName.INT64"
  id: "INT64"
  parent: "com.google.cloud.bigquery.StandardSQLTypeName"
  langs:
  - "java"
  name: "INT64"
  nameWithType: "StandardSQLTypeName.INT64"
  fullName: "com.google.cloud.bigquery.StandardSQLTypeName.INT64"
  type: "Field"
  package: "com.google.cloud.bigquery"
  summary: "A 64-bit signed integer value."
  syntax:
    content: "public static final StandardSQLTypeName INT64"
    return:
      type: "com.google.cloud.bigquery.StandardSQLTypeName"
- uid: "com.google.cloud.bigquery.StandardSQLTypeName.NUMERIC"
  id: "NUMERIC"
  parent: "com.google.cloud.bigquery.StandardSQLTypeName"
  langs:
  - "java"
  name: "NUMERIC"
  nameWithType: "StandardSQLTypeName.NUMERIC"
  fullName: "com.google.cloud.bigquery.StandardSQLTypeName.NUMERIC"
  type: "Field"
  package: "com.google.cloud.bigquery"
  summary: "A decimal value with 38 digits of precision and 9 digits of scale."
  syntax:
    content: "public static final StandardSQLTypeName NUMERIC"
    return:
      type: "com.google.cloud.bigquery.StandardSQLTypeName"
- uid: "com.google.cloud.bigquery.StandardSQLTypeName.STRING"
  id: "STRING"
  parent: "com.google.cloud.bigquery.StandardSQLTypeName"
  langs:
  - "java"
  name: "STRING"
  nameWithType: "StandardSQLTypeName.STRING"
  fullName: "com.google.cloud.bigquery.StandardSQLTypeName.STRING"
  type: "Field"
  package: "com.google.cloud.bigquery"
  summary: "Variable-length character (Unicode) data."
  syntax:
    content: "public static final StandardSQLTypeName STRING"
    return:
      type: "com.google.cloud.bigquery.StandardSQLTypeName"
- uid: "com.google.cloud.bigquery.StandardSQLTypeName.STRUCT"
  id: "STRUCT"
  parent: "com.google.cloud.bigquery.StandardSQLTypeName"
  langs:
  - "java"
  name: "STRUCT"
  nameWithType: "StandardSQLTypeName.STRUCT"
  fullName: "com.google.cloud.bigquery.StandardSQLTypeName.STRUCT"
  type: "Field"
  package: "com.google.cloud.bigquery"
  summary: "Container of ordered fields each with a type (required) and field name (optional)."
  syntax:
    content: "public static final StandardSQLTypeName STRUCT"
    return:
      type: "com.google.cloud.bigquery.StandardSQLTypeName"
- uid: "com.google.cloud.bigquery.StandardSQLTypeName.StandardSQLTypeName()"
  id: "StandardSQLTypeName()"
  parent: "com.google.cloud.bigquery.StandardSQLTypeName"
  langs:
  - "java"
  name: "StandardSQLTypeName()"
  nameWithType: "StandardSQLTypeName.StandardSQLTypeName()"
  fullName: "com.google.cloud.bigquery.StandardSQLTypeName.StandardSQLTypeName()"
  overload: "com.google.cloud.bigquery.StandardSQLTypeName.StandardSQLTypeName*"
  type: "Constructor"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "private StandardSQLTypeName()"
- uid: "com.google.cloud.bigquery.StandardSQLTypeName.TIME"
  id: "TIME"
  parent: "com.google.cloud.bigquery.StandardSQLTypeName"
  langs:
  - "java"
  name: "TIME"
  nameWithType: "StandardSQLTypeName.TIME"
  fullName: "com.google.cloud.bigquery.StandardSQLTypeName.TIME"
  type: "Field"
  package: "com.google.cloud.bigquery"
  summary: "Represents a time, independent of a specific date, to microsecond precision."
  syntax:
    content: "public static final StandardSQLTypeName TIME"
    return:
      type: "com.google.cloud.bigquery.StandardSQLTypeName"
- uid: "com.google.cloud.bigquery.StandardSQLTypeName.TIMESTAMP"
  id: "TIMESTAMP"
  parent: "com.google.cloud.bigquery.StandardSQLTypeName"
  langs:
  - "java"
  name: "TIMESTAMP"
  nameWithType: "StandardSQLTypeName.TIMESTAMP"
  fullName: "com.google.cloud.bigquery.StandardSQLTypeName.TIMESTAMP"
  type: "Field"
  package: "com.google.cloud.bigquery"
  summary: "Represents an absolute point in time, with microsecond precision. Values range between the years 1 and 9999, inclusive."
  syntax:
    content: "public static final StandardSQLTypeName TIMESTAMP"
    return:
      type: "com.google.cloud.bigquery.StandardSQLTypeName"
- uid: "com.google.cloud.bigquery.StandardSQLTypeName.valueOf(java.lang.String)"
  id: "valueOf(java.lang.String)"
  parent: "com.google.cloud.bigquery.StandardSQLTypeName"
  langs:
  - "java"
  name: "valueOf(String name)"
  nameWithType: "StandardSQLTypeName.valueOf(String name)"
  fullName: "com.google.cloud.bigquery.StandardSQLTypeName.valueOf(String name)"
  overload: "com.google.cloud.bigquery.StandardSQLTypeName.valueOf*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public static StandardSQLTypeName valueOf(String name)"
    parameters:
    - id: "name"
      type: "java.lang.String"
    return:
      type: "com.google.cloud.bigquery.StandardSQLTypeName"
- uid: "com.google.cloud.bigquery.StandardSQLTypeName.values()"
  id: "values()"
  parent: "com.google.cloud.bigquery.StandardSQLTypeName"
  langs:
  - "java"
  name: "values()"
  nameWithType: "StandardSQLTypeName.values()"
  fullName: "com.google.cloud.bigquery.StandardSQLTypeName.values()"
  overload: "com.google.cloud.bigquery.StandardSQLTypeName.values*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public static StandardSQLTypeName[] values()"
    return:
      type: "com.google.cloud.bigquery.StandardSQLTypeName[]"
references:
- uid: "com.google.cloud.bigquery.StandardSQLTypeName.StandardSQLTypeName*"
  name: "StandardSQLTypeName"
  nameWithType: "StandardSQLTypeName.StandardSQLTypeName"
  fullName: "com.google.cloud.bigquery.StandardSQLTypeName.StandardSQLTypeName"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.StandardSQLTypeName[]"
  spec.java:
  - uid: "com.google.cloud.bigquery.StandardSQLTypeName"
    name: "StandardSQLTypeName"
    fullName: "com.google.cloud.bigquery.StandardSQLTypeName"
  - name: "[]"
    fullName: "[]"
- uid: "com.google.cloud.bigquery.StandardSQLTypeName.values*"
  name: "values"
  nameWithType: "StandardSQLTypeName.values"
  fullName: "com.google.cloud.bigquery.StandardSQLTypeName.values"
  package: "com.google.cloud.bigquery"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.google.cloud.bigquery.StandardSQLTypeName.valueOf*"
  name: "valueOf"
  nameWithType: "StandardSQLTypeName.valueOf"
  fullName: "com.google.cloud.bigquery.StandardSQLTypeName.valueOf"
  package: "com.google.cloud.bigquery"
- uid: "java.lang.Enum<com.google.cloud.bigquery.StandardSQLTypeName>"
  name: "Enum<StandardSQLTypeName>"
  nameWithType: "Enum<StandardSQLTypeName>"
  fullName: "java.lang.Enum<com.google.cloud.bigquery.StandardSQLTypeName>"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Enum.toString()"
  name: "Enum.toString()"
  nameWithType: "Enum.toString()"
  fullName: "java.lang.Enum.toString()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Enum.clone()"
  name: "Enum.clone()"
  nameWithType: "Enum.clone()"
  fullName: "java.lang.Enum.clone()"
- uid: "java.lang.Enum.finalize()"
  name: "Enum.finalize()"
  nameWithType: "Enum.finalize()"
  fullName: "java.lang.Enum.finalize()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Enum.compareTo(E)"
  name: "Enum.compareTo(E)"
  nameWithType: "Enum.compareTo(E)"
  fullName: "java.lang.Enum.compareTo(E)"
- uid: "java.lang.Enum.name()"
  name: "Enum.name()"
  nameWithType: "Enum.name()"
  fullName: "java.lang.Enum.name()"
- uid: "java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)"
  name: "Enum.<T>valueOf(Class<T>,String)"
  nameWithType: "Enum.<T>valueOf(Class<T>,String)"
  fullName: "java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Enum.getDeclaringClass()"
  name: "Enum.getDeclaringClass()"
  nameWithType: "Enum.getDeclaringClass()"
  fullName: "java.lang.Enum.getDeclaringClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Enum.ordinal()"
  name: "Enum.ordinal()"
  nameWithType: "Enum.ordinal()"
  fullName: "java.lang.Enum.ordinal()"
- uid: "java.lang.Enum.hashCode()"
  name: "Enum.hashCode()"
  nameWithType: "Enum.hashCode()"
  fullName: "java.lang.Enum.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Enum.equals(java.lang.Object)"
  name: "Enum.equals(Object)"
  nameWithType: "Enum.equals(Object)"
  fullName: "java.lang.Enum.equals(java.lang.Object)"
- uid: "java.lang.Enum"
  name: "Enum"
  nameWithType: "Enum"
  fullName: "java.lang.Enum"
- uid: "java.lang.Enum."
  name: "Enum."
  nameWithType: "Enum."
  fullName: "java.lang.Enum."
- uid: "T>,java.lang.String)"
  name: "T>,String)"
  nameWithType: "T>,String)"
  fullName: "T>,java.lang.String)"
- uid: "T>valueOf(java.lang.Class"
  name: "T>valueOf(Class"
  nameWithType: "T>valueOf(Class"
  fullName: "T>valueOf(java.lang.Class"
