### YamlMime:ManagedReference
items:
- uid: Google.Cloud.Spanner.V1.ResultSet
  commentId: T:Google.Cloud.Spanner.V1.ResultSet
  id: ResultSet
  parent: Google.Cloud.Spanner.V1
  children:
  - Google.Cloud.Spanner.V1.ResultSet.#ctor
  - Google.Cloud.Spanner.V1.ResultSet.#ctor(Google.Cloud.Spanner.V1.ResultSet)
  - Google.Cloud.Spanner.V1.ResultSet.Metadata
  - Google.Cloud.Spanner.V1.ResultSet.Rows
  - Google.Cloud.Spanner.V1.ResultSet.Stats
  langs:
  - csharp
  - vb
  name: ResultSet
  nameWithType: ResultSet
  fullName: Google.Cloud.Spanner.V1.ResultSet
  type: Class
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/ResultSet.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: ResultSet
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/ResultSet.cs
    startLine: 68
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nResults from [Read][google.spanner.v1.Spanner.Read] or\n[ExecuteSql][google.spanner.v1.Spanner.ExecuteSql].\n"
  example: []
  syntax:
    content: 'public sealed class ResultSet : IMessage<ResultSet>, IEquatable<ResultSet>, IDeepCloneable<ResultSet>, IBufferMessage, IMessage'
    content.vb: >-
      Public NotInheritable Class ResultSet
          Implements IMessage(Of ResultSet), IEquatable(Of ResultSet), IDeepCloneable(Of ResultSet), IBufferMessage, IMessage
  inheritance:
  - System.Object
  implements:
  - Google.Protobuf.IMessage{Google.Cloud.Spanner.V1.ResultSet}
  - System.IEquatable{Google.Cloud.Spanner.V1.ResultSet}
  - Google.Protobuf.IDeepCloneable{Google.Cloud.Spanner.V1.ResultSet}
  - Google.Protobuf.IBufferMessage
  - Google.Protobuf.IMessage
  inheritedMembers:
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Google.Cloud.Spanner.V1.ResultSet.#ctor
  commentId: M:Google.Cloud.Spanner.V1.ResultSet.#ctor
  id: '#ctor'
  parent: Google.Cloud.Spanner.V1.ResultSet
  langs:
  - csharp
  - vb
  name: ResultSet()
  nameWithType: ResultSet.ResultSet()
  fullName: Google.Cloud.Spanner.V1.ResultSet.ResultSet()
  type: Constructor
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/ResultSet.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: .ctor
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/ResultSet.cs
    startLine: 88
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  syntax:
    content: public ResultSet()
    content.vb: Public Sub New
  overload: Google.Cloud.Spanner.V1.ResultSet.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Cloud.Spanner.V1.ResultSet.#ctor(Google.Cloud.Spanner.V1.ResultSet)
  commentId: M:Google.Cloud.Spanner.V1.ResultSet.#ctor(Google.Cloud.Spanner.V1.ResultSet)
  id: '#ctor(Google.Cloud.Spanner.V1.ResultSet)'
  parent: Google.Cloud.Spanner.V1.ResultSet
  langs:
  - csharp
  - vb
  name: ResultSet(ResultSet)
  nameWithType: ResultSet.ResultSet(ResultSet)
  fullName: Google.Cloud.Spanner.V1.ResultSet.ResultSet(Google.Cloud.Spanner.V1.ResultSet)
  type: Constructor
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/ResultSet.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: .ctor
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/ResultSet.cs
    startLine: 95
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  syntax:
    content: public ResultSet(ResultSet other)
    parameters:
    - id: other
      type: Google.Cloud.Spanner.V1.ResultSet
    content.vb: Public Sub New(other As ResultSet)
  overload: Google.Cloud.Spanner.V1.ResultSet.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Cloud.Spanner.V1.ResultSet.Metadata
  commentId: P:Google.Cloud.Spanner.V1.ResultSet.Metadata
  id: Metadata
  parent: Google.Cloud.Spanner.V1.ResultSet
  langs:
  - csharp
  - vb
  name: Metadata
  nameWithType: ResultSet.Metadata
  fullName: Google.Cloud.Spanner.V1.ResultSet.Metadata
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/ResultSet.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: Metadata
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/ResultSet.cs
    startLine: 114
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nMetadata about the result set, such as row type information.\n"
  example: []
  syntax:
    content: public ResultSetMetadata Metadata { get; set; }
    parameters: []
    return:
      type: Google.Cloud.Spanner.V1.ResultSetMetadata
    content.vb: Public Property Metadata As ResultSetMetadata
  overload: Google.Cloud.Spanner.V1.ResultSet.Metadata*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Cloud.Spanner.V1.ResultSet.Rows
  commentId: P:Google.Cloud.Spanner.V1.ResultSet.Rows
  id: Rows
  parent: Google.Cloud.Spanner.V1.ResultSet
  langs:
  - csharp
  - vb
  name: Rows
  nameWithType: ResultSet.Rows
  fullName: Google.Cloud.Spanner.V1.ResultSet.Rows
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/ResultSet.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: Rows
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/ResultSet.cs
    startLine: 135
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nEach element in `rows` is a row whose format is defined by\n[metadata.row_type][google.spanner.v1.ResultSetMetadata.row_type]. The ith element\nin each row matches the ith field in\n[metadata.row_type][google.spanner.v1.ResultSetMetadata.row_type]. Elements are\nencoded based on type as described\n[here][google.spanner.v1.TypeCode].\n"
  example: []
  syntax:
    content: public RepeatedField<ListValue> Rows { get; }
    parameters: []
    return:
      type: Google.Protobuf.Collections.RepeatedField{Google.Protobuf.WellKnownTypes.ListValue}
    content.vb: Public ReadOnly Property Rows As RepeatedField(Of ListValue)
  overload: Google.Cloud.Spanner.V1.ResultSet.Rows*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Cloud.Spanner.V1.ResultSet.Stats
  commentId: P:Google.Cloud.Spanner.V1.ResultSet.Stats
  id: Stats
  parent: Google.Cloud.Spanner.V1.ResultSet
  langs:
  - csharp
  - vb
  name: Stats
  nameWithType: ResultSet.Stats
  fullName: Google.Cloud.Spanner.V1.ResultSet.Stats
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/ResultSet.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: Stats
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/ResultSet.cs
    startLine: 153
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nQuery plan and execution statistics for the SQL statement that\nproduced this result set. These can be requested by setting\n[ExecuteSqlRequest.query_mode][google.spanner.v1.ExecuteSqlRequest.query_mode].\nDML statements always produce stats containing the number of rows\nmodified, unless executed using the\n[ExecuteSqlRequest.QueryMode.PLAN][google.spanner.v1.ExecuteSqlRequest.QueryMode.PLAN] [ExecuteSqlRequest.query_mode][google.spanner.v1.ExecuteSqlRequest.query_mode].\nOther fields may or may not be populated, based on the\n[ExecuteSqlRequest.query_mode][google.spanner.v1.ExecuteSqlRequest.query_mode].\n"
  example: []
  syntax:
    content: public ResultSetStats Stats { get; set; }
    parameters: []
    return:
      type: Google.Cloud.Spanner.V1.ResultSetStats
    content.vb: Public Property Stats As ResultSetStats
  overload: Google.Cloud.Spanner.V1.ResultSet.Stats*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Google.Cloud.Spanner.V1
  commentId: N:Google.Cloud.Spanner.V1
  name: Google.Cloud.Spanner.V1
  nameWithType: Google.Cloud.Spanner.V1
  fullName: Google.Cloud.Spanner.V1
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Google.Protobuf.IMessage{Google.Cloud.Spanner.V1.ResultSet}
  commentId: T:Google.Protobuf.IMessage{Google.Cloud.Spanner.V1.ResultSet}
  parent: Google.Protobuf
  definition: Google.Protobuf.IMessage`1
  name: IMessage<ResultSet>
  nameWithType: IMessage<ResultSet>
  fullName: Google.Protobuf.IMessage<Google.Cloud.Spanner.V1.ResultSet>
  nameWithType.vb: IMessage(Of ResultSet)
  fullName.vb: Google.Protobuf.IMessage(Of Google.Cloud.Spanner.V1.ResultSet)
  name.vb: IMessage(Of ResultSet)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Spanner.V1.ResultSet
    name: ResultSet
    nameWithType: ResultSet
    fullName: Google.Cloud.Spanner.V1.ResultSet
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Spanner.V1.ResultSet
    name: ResultSet
    nameWithType: ResultSet
    fullName: Google.Cloud.Spanner.V1.ResultSet
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable{Google.Cloud.Spanner.V1.ResultSet}
  commentId: T:System.IEquatable{Google.Cloud.Spanner.V1.ResultSet}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<ResultSet>
  nameWithType: IEquatable<ResultSet>
  fullName: System.IEquatable<Google.Cloud.Spanner.V1.ResultSet>
  nameWithType.vb: IEquatable(Of ResultSet)
  fullName.vb: System.IEquatable(Of Google.Cloud.Spanner.V1.ResultSet)
  name.vb: IEquatable(Of ResultSet)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Spanner.V1.ResultSet
    name: ResultSet
    nameWithType: ResultSet
    fullName: Google.Cloud.Spanner.V1.ResultSet
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Spanner.V1.ResultSet
    name: ResultSet
    nameWithType: ResultSet
    fullName: Google.Cloud.Spanner.V1.ResultSet
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IDeepCloneable{Google.Cloud.Spanner.V1.ResultSet}
  commentId: T:Google.Protobuf.IDeepCloneable{Google.Cloud.Spanner.V1.ResultSet}
  parent: Google.Protobuf
  definition: Google.Protobuf.IDeepCloneable`1
  name: IDeepCloneable<ResultSet>
  nameWithType: IDeepCloneable<ResultSet>
  fullName: Google.Protobuf.IDeepCloneable<Google.Cloud.Spanner.V1.ResultSet>
  nameWithType.vb: IDeepCloneable(Of ResultSet)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of Google.Cloud.Spanner.V1.ResultSet)
  name.vb: IDeepCloneable(Of ResultSet)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Spanner.V1.ResultSet
    name: ResultSet
    nameWithType: ResultSet
    fullName: Google.Cloud.Spanner.V1.ResultSet
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Spanner.V1.ResultSet
    name: ResultSet
    nameWithType: ResultSet
    fullName: Google.Cloud.Spanner.V1.ResultSet
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IBufferMessage
  commentId: T:Google.Protobuf.IBufferMessage
  parent: Google.Protobuf
  isExternal: true
  name: IBufferMessage
  nameWithType: IBufferMessage
  fullName: Google.Protobuf.IBufferMessage
- uid: Google.Protobuf.IMessage
  commentId: T:Google.Protobuf.IMessage
  parent: Google.Protobuf
  isExternal: true
  name: IMessage
  nameWithType: IMessage
  fullName: Google.Protobuf.IMessage
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Protobuf.IMessage`1
  commentId: T:Google.Protobuf.IMessage`1
  isExternal: true
  name: IMessage<T>
  nameWithType: IMessage<T>
  fullName: Google.Protobuf.IMessage<T>
  nameWithType.vb: IMessage(Of T)
  fullName.vb: Google.Protobuf.IMessage(Of T)
  name.vb: IMessage(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf
  commentId: N:Google.Protobuf
  isExternal: true
  name: Google.Protobuf
  nameWithType: Google.Protobuf
  fullName: Google.Protobuf
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IDeepCloneable`1
  commentId: T:Google.Protobuf.IDeepCloneable`1
  isExternal: true
  name: IDeepCloneable<T>
  nameWithType: IDeepCloneable<T>
  fullName: Google.Protobuf.IDeepCloneable<T>
  nameWithType.vb: IDeepCloneable(Of T)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of T)
  name.vb: IDeepCloneable(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Cloud.Spanner.V1.ResultSet.#ctor*
  commentId: Overload:Google.Cloud.Spanner.V1.ResultSet.#ctor
  name: ResultSet
  nameWithType: ResultSet.ResultSet
  fullName: Google.Cloud.Spanner.V1.ResultSet.ResultSet
- uid: Google.Cloud.Spanner.V1.ResultSet
  commentId: T:Google.Cloud.Spanner.V1.ResultSet
  parent: Google.Cloud.Spanner.V1
  name: ResultSet
  nameWithType: ResultSet
  fullName: Google.Cloud.Spanner.V1.ResultSet
- uid: Google.Cloud.Spanner.V1.ResultSet.Metadata*
  commentId: Overload:Google.Cloud.Spanner.V1.ResultSet.Metadata
  name: Metadata
  nameWithType: ResultSet.Metadata
  fullName: Google.Cloud.Spanner.V1.ResultSet.Metadata
- uid: Google.Cloud.Spanner.V1.ResultSetMetadata
  commentId: T:Google.Cloud.Spanner.V1.ResultSetMetadata
  parent: Google.Cloud.Spanner.V1
  name: ResultSetMetadata
  nameWithType: ResultSetMetadata
  fullName: Google.Cloud.Spanner.V1.ResultSetMetadata
- uid: Google.Cloud.Spanner.V1.ResultSet.Rows*
  commentId: Overload:Google.Cloud.Spanner.V1.ResultSet.Rows
  name: Rows
  nameWithType: ResultSet.Rows
  fullName: Google.Cloud.Spanner.V1.ResultSet.Rows
- uid: Google.Protobuf.Collections.RepeatedField{Google.Protobuf.WellKnownTypes.ListValue}
  commentId: T:Google.Protobuf.Collections.RepeatedField{Google.Protobuf.WellKnownTypes.ListValue}
  parent: Google.Protobuf.Collections
  definition: Google.Protobuf.Collections.RepeatedField`1
  name: RepeatedField<ListValue>
  nameWithType: RepeatedField<ListValue>
  fullName: Google.Protobuf.Collections.RepeatedField<Google.Protobuf.WellKnownTypes.ListValue>
  nameWithType.vb: RepeatedField(Of ListValue)
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of Google.Protobuf.WellKnownTypes.ListValue)
  name.vb: RepeatedField(Of ListValue)
  spec.csharp:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    nameWithType: RepeatedField
    fullName: Google.Protobuf.Collections.RepeatedField
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Protobuf.WellKnownTypes.ListValue
    name: ListValue
    nameWithType: ListValue
    fullName: Google.Protobuf.WellKnownTypes.ListValue
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    nameWithType: RepeatedField
    fullName: Google.Protobuf.Collections.RepeatedField
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Protobuf.WellKnownTypes.ListValue
    name: ListValue
    nameWithType: ListValue
    fullName: Google.Protobuf.WellKnownTypes.ListValue
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.Collections.RepeatedField`1
  commentId: T:Google.Protobuf.Collections.RepeatedField`1
  isExternal: true
  name: RepeatedField<T>
  nameWithType: RepeatedField<T>
  fullName: Google.Protobuf.Collections.RepeatedField<T>
  nameWithType.vb: RepeatedField(Of T)
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of T)
  name.vb: RepeatedField(Of T)
  spec.csharp:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    nameWithType: RepeatedField
    fullName: Google.Protobuf.Collections.RepeatedField
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    nameWithType: RepeatedField
    fullName: Google.Protobuf.Collections.RepeatedField
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.Collections
  commentId: N:Google.Protobuf.Collections
  isExternal: true
  name: Google.Protobuf.Collections
  nameWithType: Google.Protobuf.Collections
  fullName: Google.Protobuf.Collections
- uid: Google.Cloud.Spanner.V1.ResultSet.Stats*
  commentId: Overload:Google.Cloud.Spanner.V1.ResultSet.Stats
  name: Stats
  nameWithType: ResultSet.Stats
  fullName: Google.Cloud.Spanner.V1.ResultSet.Stats
- uid: Google.Cloud.Spanner.V1.ResultSetStats
  commentId: T:Google.Cloud.Spanner.V1.ResultSetStats
  parent: Google.Cloud.Spanner.V1
  name: ResultSetStats
  nameWithType: ResultSetStats
  fullName: Google.Cloud.Spanner.V1.ResultSetStats
