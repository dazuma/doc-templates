### YamlMime:ManagedReference
items:
- uid: "com.google.cloud.bigquery.Acl.View"
  id: "View"
  parent: "com.google.cloud.bigquery"
  children:
  - "com.google.cloud.bigquery.Acl.View.View(com.google.cloud.bigquery.TableId)"
  - "com.google.cloud.bigquery.Acl.View.equals(java.lang.Object)"
  - "com.google.cloud.bigquery.Acl.View.getId()"
  - "com.google.cloud.bigquery.Acl.View.hashCode()"
  - "com.google.cloud.bigquery.Acl.View.toString()"
  langs:
  - "java"
  name: "Acl.View"
  nameWithType: "Acl.View"
  fullName: "com.google.cloud.bigquery.Acl.View"
  type: "Class"
  package: "com.google.cloud.bigquery"
  summary: "Class for a BigQuery View entity. Objects of this class represent a view from a different dataset to grant access to. Queries executed against that view will have read access to tables in this dataset. The role field is not required when this field is set. If that view is updated by any user, access to the view needs to be granted again via an update operation."
  syntax:
    content: "public static final class Acl.View extends Acl.Entity"
  inheritance:
  - "java.lang.Object"
  - "com.google.cloud.bigquery.Acl.Entity"
  inheritedMembers:
  - "com.google.cloud.bigquery.Acl.Entity.getType()"
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.google.cloud.bigquery.Acl.View.View(com.google.cloud.bigquery.TableId)"
  id: "View(com.google.cloud.bigquery.TableId)"
  parent: "com.google.cloud.bigquery.Acl.View"
  langs:
  - "java"
  name: "View(TableId id)"
  nameWithType: "Acl.View.View(TableId id)"
  fullName: "com.google.cloud.bigquery.Acl.View.View(TableId id)"
  overload: "com.google.cloud.bigquery.Acl.View.View*"
  type: "Constructor"
  package: "com.google.cloud.bigquery"
  summary: "Creates a View entity given the view's id."
  syntax:
    content: "public View(TableId id)"
    parameters:
    - id: "id"
      type: "com.google.cloud.bigquery.TableId"
- uid: "com.google.cloud.bigquery.Acl.View.equals(java.lang.Object)"
  id: "equals(java.lang.Object)"
  parent: "com.google.cloud.bigquery.Acl.View"
  langs:
  - "java"
  name: "equals(Object obj)"
  nameWithType: "Acl.View.equals(Object obj)"
  fullName: "com.google.cloud.bigquery.Acl.View.equals(Object obj)"
  overload: "com.google.cloud.bigquery.Acl.View.equals*"
  overridden: "java.lang.Object.equals(java.lang.Object)"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public boolean equals(Object obj)"
    parameters:
    - id: "obj"
      type: "java.lang.Object"
    return:
      type: "boolean"
- uid: "com.google.cloud.bigquery.Acl.View.getId()"
  id: "getId()"
  parent: "com.google.cloud.bigquery.Acl.View"
  langs:
  - "java"
  name: "getId()"
  nameWithType: "Acl.View.getId()"
  fullName: "com.google.cloud.bigquery.Acl.View.getId()"
  overload: "com.google.cloud.bigquery.Acl.View.getId*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  summary: "Returns table's identity."
  syntax:
    content: "public TableId getId()"
    return:
      type: "com.google.cloud.bigquery.TableId"
- uid: "com.google.cloud.bigquery.Acl.View.hashCode()"
  id: "hashCode()"
  parent: "com.google.cloud.bigquery.Acl.View"
  langs:
  - "java"
  name: "hashCode()"
  nameWithType: "Acl.View.hashCode()"
  fullName: "com.google.cloud.bigquery.Acl.View.hashCode()"
  overload: "com.google.cloud.bigquery.Acl.View.hashCode*"
  overridden: "java.lang.Object.hashCode()"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public int hashCode()"
    return:
      type: "int"
- uid: "com.google.cloud.bigquery.Acl.View.toString()"
  id: "toString()"
  parent: "com.google.cloud.bigquery.Acl.View"
  langs:
  - "java"
  name: "toString()"
  nameWithType: "Acl.View.toString()"
  fullName: "com.google.cloud.bigquery.Acl.View.toString()"
  overload: "com.google.cloud.bigquery.Acl.View.toString*"
  overridden: "java.lang.Object.toString()"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public String toString()"
    return:
      type: "java.lang.String"
references:
- uid: "com.google.cloud.bigquery.TableId"
  name: "TableId"
  nameWithType: "TableId"
  fullName: "com.google.cloud.bigquery.TableId"
- uid: "com.google.cloud.bigquery.Acl.View.View*"
  name: "View"
  nameWithType: "Acl.View.View"
  fullName: "com.google.cloud.bigquery.Acl.View.View"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.Acl.View.getId*"
  name: "getId"
  nameWithType: "Acl.View.getId"
  fullName: "com.google.cloud.bigquery.Acl.View.getId"
  package: "com.google.cloud.bigquery"
- uid: "java.lang.Object"
  spec.java:
  - uid: "java.lang.Object"
    name: "Object"
    fullName: "java.lang.Object"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "com.google.cloud.bigquery.Acl.View.equals*"
  name: "equals"
  nameWithType: "Acl.View.equals"
  fullName: "com.google.cloud.bigquery.Acl.View.equals"
  package: "com.google.cloud.bigquery"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "com.google.cloud.bigquery.Acl.View.hashCode*"
  name: "hashCode"
  nameWithType: "Acl.View.hashCode"
  fullName: "com.google.cloud.bigquery.Acl.View.hashCode"
  package: "com.google.cloud.bigquery"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.google.cloud.bigquery.Acl.View.toString*"
  name: "toString"
  nameWithType: "Acl.View.toString"
  fullName: "com.google.cloud.bigquery.Acl.View.toString"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.Acl.Entity"
  name: "Acl.Entity"
  nameWithType: "Acl.Entity"
  fullName: "com.google.cloud.bigquery.Acl.Entity"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "com.google.cloud.bigquery.Acl.Entity.getType()"
  name: "Acl.Entity.getType()"
  nameWithType: "Acl.Entity.getType()"
  fullName: "com.google.cloud.bigquery.Acl.Entity.getType()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
