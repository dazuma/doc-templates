### YamlMime:ManagedReference
items:
- uid: Google.Cloud.Spanner.V1.Session
  commentId: T:Google.Cloud.Spanner.V1.Session
  id: Session
  parent: Google.Cloud.Spanner.V1
  children:
  - Google.Cloud.Spanner.V1.Session.#ctor
  - Google.Cloud.Spanner.V1.Session.#ctor(Google.Cloud.Spanner.V1.Session)
  - Google.Cloud.Spanner.V1.Session.ApproximateLastUseTime
  - Google.Cloud.Spanner.V1.Session.CreateTime
  - Google.Cloud.Spanner.V1.Session.Labels
  - Google.Cloud.Spanner.V1.Session.Name
  - Google.Cloud.Spanner.V1.Session.SessionName
  langs:
  - csharp
  - vb
  name: Session
  nameWithType: Session
  fullName: Google.Cloud.Spanner.V1.Session
  type: Class
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerResourceNames.g.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: Session
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerResourceNames.g.cs
    startLine: 303
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nA session in the Cloud Spanner API.\n"
  example: []
  syntax:
    content: 'public sealed class Session : IMessage<Session>, IEquatable<Session>, IDeepCloneable<Session>, IBufferMessage, IMessage'
    content.vb: >-
      Public NotInheritable Class Session
          Implements IMessage(Of Session), IEquatable(Of Session), IDeepCloneable(Of Session), IBufferMessage, IMessage
  inheritance:
  - System.Object
  implements:
  - Google.Protobuf.IMessage{Google.Cloud.Spanner.V1.Session}
  - System.IEquatable{Google.Cloud.Spanner.V1.Session}
  - Google.Protobuf.IDeepCloneable{Google.Cloud.Spanner.V1.Session}
  - Google.Protobuf.IBufferMessage
  - Google.Protobuf.IMessage
  inheritedMembers:
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Google.Cloud.Spanner.V1.Session.#ctor
  commentId: M:Google.Cloud.Spanner.V1.Session.#ctor
  id: '#ctor'
  parent: Google.Cloud.Spanner.V1.Session
  langs:
  - csharp
  - vb
  name: Session()
  nameWithType: Session.Session()
  fullName: Google.Cloud.Spanner.V1.Session.Session()
  type: Constructor
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Spanner.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: .ctor
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Spanner.cs
    startLine: 920
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  syntax:
    content: public Session()
    content.vb: Public Sub New
  overload: Google.Cloud.Spanner.V1.Session.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Cloud.Spanner.V1.Session.#ctor(Google.Cloud.Spanner.V1.Session)
  commentId: M:Google.Cloud.Spanner.V1.Session.#ctor(Google.Cloud.Spanner.V1.Session)
  id: '#ctor(Google.Cloud.Spanner.V1.Session)'
  parent: Google.Cloud.Spanner.V1.Session
  langs:
  - csharp
  - vb
  name: Session(Session)
  nameWithType: Session.Session(Session)
  fullName: Google.Cloud.Spanner.V1.Session.Session(Google.Cloud.Spanner.V1.Session)
  type: Constructor
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Spanner.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: .ctor
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Spanner.cs
    startLine: 927
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  syntax:
    content: public Session(Session other)
    parameters:
    - id: other
      type: Google.Cloud.Spanner.V1.Session
    content.vb: Public Sub New(other As Session)
  overload: Google.Cloud.Spanner.V1.Session.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Cloud.Spanner.V1.Session.Name
  commentId: P:Google.Cloud.Spanner.V1.Session.Name
  id: Name
  parent: Google.Cloud.Spanner.V1.Session
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: Session.Name
  fullName: Google.Cloud.Spanner.V1.Session.Name
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Spanner.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: Name
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Spanner.cs
    startLine: 947
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nOutput only. The name of the session. This is always system-assigned.\n"
  example: []
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: Google.Cloud.Spanner.V1.Session.Name*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Cloud.Spanner.V1.Session.Labels
  commentId: P:Google.Cloud.Spanner.V1.Session.Labels
  id: Labels
  parent: Google.Cloud.Spanner.V1.Session
  langs:
  - csharp
  - vb
  name: Labels
  nameWithType: Session.Labels
  fullName: Google.Cloud.Spanner.V1.Session.Labels
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Spanner.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: Labels
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Spanner.cs
    startLine: 971
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nThe labels for the session.\n\n* Label keys must be between 1 and 63 characters long and must conform to\nthe following regular expression: `[a-z]([-a-z0-9]*[a-z0-9])?`.\n* Label values must be between 0 and 63 characters long and must conform\nto the regular expression `([a-z]([-a-z0-9]*[a-z0-9])?)?`.\n* No more than 64 labels can be associated with a given session.\n\nSee https://goo.gl/xmQnxf for more information on and examples of labels.\n"
  example: []
  syntax:
    content: public MapField<string, string> Labels { get; }
    parameters: []
    return:
      type: Google.Protobuf.Collections.MapField{System.String,System.String}
    content.vb: Public ReadOnly Property Labels As MapField(Of String, String)
  overload: Google.Cloud.Spanner.V1.Session.Labels*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Cloud.Spanner.V1.Session.CreateTime
  commentId: P:Google.Cloud.Spanner.V1.Session.CreateTime
  id: CreateTime
  parent: Google.Cloud.Spanner.V1.Session
  langs:
  - csharp
  - vb
  name: CreateTime
  nameWithType: Session.CreateTime
  fullName: Google.Cloud.Spanner.V1.Session.CreateTime
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Spanner.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: CreateTime
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Spanner.cs
    startLine: 982
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nOutput only. The timestamp when the session is created.\n"
  example: []
  syntax:
    content: public Timestamp CreateTime { get; set; }
    parameters: []
    return:
      type: Google.Protobuf.WellKnownTypes.Timestamp
    content.vb: Public Property CreateTime As Timestamp
  overload: Google.Cloud.Spanner.V1.Session.CreateTime*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Cloud.Spanner.V1.Session.ApproximateLastUseTime
  commentId: P:Google.Cloud.Spanner.V1.Session.ApproximateLastUseTime
  id: ApproximateLastUseTime
  parent: Google.Cloud.Spanner.V1.Session
  langs:
  - csharp
  - vb
  name: ApproximateLastUseTime
  nameWithType: Session.ApproximateLastUseTime
  fullName: Google.Cloud.Spanner.V1.Session.ApproximateLastUseTime
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Spanner.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: ApproximateLastUseTime
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/Spanner.cs
    startLine: 997
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nOutput only. The approximate timestamp when the session is last used. It is\ntypically earlier than the actual last use time.\n"
  example: []
  syntax:
    content: public Timestamp ApproximateLastUseTime { get; set; }
    parameters: []
    return:
      type: Google.Protobuf.WellKnownTypes.Timestamp
    content.vb: Public Property ApproximateLastUseTime As Timestamp
  overload: Google.Cloud.Spanner.V1.Session.ApproximateLastUseTime*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Cloud.Spanner.V1.Session.SessionName
  commentId: P:Google.Cloud.Spanner.V1.Session.SessionName
  id: SessionName
  parent: Google.Cloud.Spanner.V1.Session
  langs:
  - csharp
  - vb
  name: SessionName
  nameWithType: Session.SessionName
  fullName: Google.Cloud.Spanner.V1.Session.SessionName
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerResourceNames.g.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: SessionName
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/SpannerResourceNames.g.cs
    startLine: 308
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\n<xref href=\"Google.Cloud.Spanner.V1.SessionName\" data-throw-if-not-resolved=\"false\"></xref>-typed view over the <xref href=\"Google.Cloud.Spanner.V1.Session.Name\" data-throw-if-not-resolved=\"false\"></xref> resource name property.\n"
  example: []
  syntax:
    content: public SessionName SessionName { get; set; }
    parameters: []
    return:
      type: Google.Cloud.Spanner.V1.SessionName
    content.vb: Public Property SessionName As SessionName
  overload: Google.Cloud.Spanner.V1.Session.SessionName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Google.Cloud.Spanner.V1
  commentId: N:Google.Cloud.Spanner.V1
  name: Google.Cloud.Spanner.V1
  nameWithType: Google.Cloud.Spanner.V1
  fullName: Google.Cloud.Spanner.V1
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Google.Protobuf.IMessage{Google.Cloud.Spanner.V1.Session}
  commentId: T:Google.Protobuf.IMessage{Google.Cloud.Spanner.V1.Session}
  parent: Google.Protobuf
  definition: Google.Protobuf.IMessage`1
  name: IMessage<Session>
  nameWithType: IMessage<Session>
  fullName: Google.Protobuf.IMessage<Google.Cloud.Spanner.V1.Session>
  nameWithType.vb: IMessage(Of Session)
  fullName.vb: Google.Protobuf.IMessage(Of Google.Cloud.Spanner.V1.Session)
  name.vb: IMessage(Of Session)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Spanner.V1.Session
    name: Session
    nameWithType: Session
    fullName: Google.Cloud.Spanner.V1.Session
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Spanner.V1.Session
    name: Session
    nameWithType: Session
    fullName: Google.Cloud.Spanner.V1.Session
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable{Google.Cloud.Spanner.V1.Session}
  commentId: T:System.IEquatable{Google.Cloud.Spanner.V1.Session}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<Session>
  nameWithType: IEquatable<Session>
  fullName: System.IEquatable<Google.Cloud.Spanner.V1.Session>
  nameWithType.vb: IEquatable(Of Session)
  fullName.vb: System.IEquatable(Of Google.Cloud.Spanner.V1.Session)
  name.vb: IEquatable(Of Session)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Spanner.V1.Session
    name: Session
    nameWithType: Session
    fullName: Google.Cloud.Spanner.V1.Session
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Spanner.V1.Session
    name: Session
    nameWithType: Session
    fullName: Google.Cloud.Spanner.V1.Session
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IDeepCloneable{Google.Cloud.Spanner.V1.Session}
  commentId: T:Google.Protobuf.IDeepCloneable{Google.Cloud.Spanner.V1.Session}
  parent: Google.Protobuf
  definition: Google.Protobuf.IDeepCloneable`1
  name: IDeepCloneable<Session>
  nameWithType: IDeepCloneable<Session>
  fullName: Google.Protobuf.IDeepCloneable<Google.Cloud.Spanner.V1.Session>
  nameWithType.vb: IDeepCloneable(Of Session)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of Google.Cloud.Spanner.V1.Session)
  name.vb: IDeepCloneable(Of Session)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Spanner.V1.Session
    name: Session
    nameWithType: Session
    fullName: Google.Cloud.Spanner.V1.Session
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Spanner.V1.Session
    name: Session
    nameWithType: Session
    fullName: Google.Cloud.Spanner.V1.Session
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IBufferMessage
  commentId: T:Google.Protobuf.IBufferMessage
  parent: Google.Protobuf
  isExternal: true
  name: IBufferMessage
  nameWithType: IBufferMessage
  fullName: Google.Protobuf.IBufferMessage
- uid: Google.Protobuf.IMessage
  commentId: T:Google.Protobuf.IMessage
  parent: Google.Protobuf
  isExternal: true
  name: IMessage
  nameWithType: IMessage
  fullName: Google.Protobuf.IMessage
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Protobuf.IMessage`1
  commentId: T:Google.Protobuf.IMessage`1
  isExternal: true
  name: IMessage<T>
  nameWithType: IMessage<T>
  fullName: Google.Protobuf.IMessage<T>
  nameWithType.vb: IMessage(Of T)
  fullName.vb: Google.Protobuf.IMessage(Of T)
  name.vb: IMessage(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf
  commentId: N:Google.Protobuf
  isExternal: true
  name: Google.Protobuf
  nameWithType: Google.Protobuf
  fullName: Google.Protobuf
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IDeepCloneable`1
  commentId: T:Google.Protobuf.IDeepCloneable`1
  isExternal: true
  name: IDeepCloneable<T>
  nameWithType: IDeepCloneable<T>
  fullName: Google.Protobuf.IDeepCloneable<T>
  nameWithType.vb: IDeepCloneable(Of T)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of T)
  name.vb: IDeepCloneable(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Cloud.Spanner.V1.Session.#ctor*
  commentId: Overload:Google.Cloud.Spanner.V1.Session.#ctor
  name: Session
  nameWithType: Session.Session
  fullName: Google.Cloud.Spanner.V1.Session.Session
- uid: Google.Cloud.Spanner.V1.Session
  commentId: T:Google.Cloud.Spanner.V1.Session
  parent: Google.Cloud.Spanner.V1
  name: Session
  nameWithType: Session
  fullName: Google.Cloud.Spanner.V1.Session
- uid: Google.Cloud.Spanner.V1.Session.Name*
  commentId: Overload:Google.Cloud.Spanner.V1.Session.Name
  name: Name
  nameWithType: Session.Name
  fullName: Google.Cloud.Spanner.V1.Session.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Google.Cloud.Spanner.V1.Session.Labels*
  commentId: Overload:Google.Cloud.Spanner.V1.Session.Labels
  name: Labels
  nameWithType: Session.Labels
  fullName: Google.Cloud.Spanner.V1.Session.Labels
- uid: Google.Protobuf.Collections.MapField{System.String,System.String}
  commentId: T:Google.Protobuf.Collections.MapField{System.String,System.String}
  parent: Google.Protobuf.Collections
  definition: Google.Protobuf.Collections.MapField`2
  name: MapField<String, String>
  nameWithType: MapField<String, String>
  fullName: Google.Protobuf.Collections.MapField<System.String, System.String>
  nameWithType.vb: MapField(Of String, String)
  fullName.vb: Google.Protobuf.Collections.MapField(Of System.String, System.String)
  name.vb: MapField(Of String, String)
  spec.csharp:
  - uid: Google.Protobuf.Collections.MapField`2
    name: MapField
    nameWithType: MapField
    fullName: Google.Protobuf.Collections.MapField
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.Collections.MapField`2
    name: MapField
    nameWithType: MapField
    fullName: Google.Protobuf.Collections.MapField
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.Collections.MapField`2
  commentId: T:Google.Protobuf.Collections.MapField`2
  isExternal: true
  name: MapField<TKey, TValue>
  nameWithType: MapField<TKey, TValue>
  fullName: Google.Protobuf.Collections.MapField<TKey, TValue>
  nameWithType.vb: MapField(Of TKey, TValue)
  fullName.vb: Google.Protobuf.Collections.MapField(Of TKey, TValue)
  name.vb: MapField(Of TKey, TValue)
  spec.csharp:
  - uid: Google.Protobuf.Collections.MapField`2
    name: MapField
    nameWithType: MapField
    fullName: Google.Protobuf.Collections.MapField
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.Collections.MapField`2
    name: MapField
    nameWithType: MapField
    fullName: Google.Protobuf.Collections.MapField
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.Collections
  commentId: N:Google.Protobuf.Collections
  isExternal: true
  name: Google.Protobuf.Collections
  nameWithType: Google.Protobuf.Collections
  fullName: Google.Protobuf.Collections
- uid: Google.Cloud.Spanner.V1.Session.CreateTime*
  commentId: Overload:Google.Cloud.Spanner.V1.Session.CreateTime
  name: CreateTime
  nameWithType: Session.CreateTime
  fullName: Google.Cloud.Spanner.V1.Session.CreateTime
- uid: Google.Protobuf.WellKnownTypes.Timestamp
  commentId: T:Google.Protobuf.WellKnownTypes.Timestamp
  parent: Google.Protobuf.WellKnownTypes
  isExternal: true
  name: Timestamp
  nameWithType: Timestamp
  fullName: Google.Protobuf.WellKnownTypes.Timestamp
- uid: Google.Protobuf.WellKnownTypes
  commentId: N:Google.Protobuf.WellKnownTypes
  isExternal: true
  name: Google.Protobuf.WellKnownTypes
  nameWithType: Google.Protobuf.WellKnownTypes
  fullName: Google.Protobuf.WellKnownTypes
- uid: Google.Cloud.Spanner.V1.Session.ApproximateLastUseTime*
  commentId: Overload:Google.Cloud.Spanner.V1.Session.ApproximateLastUseTime
  name: ApproximateLastUseTime
  nameWithType: Session.ApproximateLastUseTime
  fullName: Google.Cloud.Spanner.V1.Session.ApproximateLastUseTime
- uid: Google.Cloud.Spanner.V1.SessionName
  commentId: T:Google.Cloud.Spanner.V1.SessionName
  parent: Google.Cloud.Spanner.V1
  name: SessionName
  nameWithType: SessionName
  fullName: Google.Cloud.Spanner.V1.SessionName
- uid: Google.Cloud.Spanner.V1.Session.Name
  commentId: P:Google.Cloud.Spanner.V1.Session.Name
  isExternal: true
- uid: Google.Cloud.Spanner.V1.Session.SessionName*
  commentId: Overload:Google.Cloud.Spanner.V1.Session.SessionName
  name: SessionName
  nameWithType: Session.SessionName
  fullName: Google.Cloud.Spanner.V1.Session.SessionName
