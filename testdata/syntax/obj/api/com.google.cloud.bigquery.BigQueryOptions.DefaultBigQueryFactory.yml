### YamlMime:ManagedReference
items:
- uid: "com.google.cloud.bigquery.BigQueryOptions.DefaultBigQueryFactory"
  id: "DefaultBigQueryFactory"
  parent: "com.google.cloud.bigquery"
  children:
  - "com.google.cloud.bigquery.BigQueryOptions.DefaultBigQueryFactory.DefaultBigQueryFactory()"
  - "com.google.cloud.bigquery.BigQueryOptions.DefaultBigQueryFactory.create(com.google.cloud.bigquery.BigQueryOptions)"
  langs:
  - "java"
  name: "BigQueryOptions.DefaultBigQueryFactory"
  nameWithType: "BigQueryOptions.DefaultBigQueryFactory"
  fullName: "com.google.cloud.bigquery.BigQueryOptions.DefaultBigQueryFactory"
  type: "Class"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public static class BigQueryOptions.DefaultBigQueryFactory implements BigQueryFactory"
  inheritance:
  - "java.lang.Object"
  implements:
  - "com.google.cloud.bigquery.BigQueryFactory"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.google.cloud.bigquery.BigQueryOptions.DefaultBigQueryFactory.DefaultBigQueryFactory()"
  id: "DefaultBigQueryFactory()"
  parent: "com.google.cloud.bigquery.BigQueryOptions.DefaultBigQueryFactory"
  langs:
  - "java"
  name: "DefaultBigQueryFactory()"
  nameWithType: "BigQueryOptions.DefaultBigQueryFactory.DefaultBigQueryFactory()"
  fullName: "com.google.cloud.bigquery.BigQueryOptions.DefaultBigQueryFactory.DefaultBigQueryFactory()"
  overload: "com.google.cloud.bigquery.BigQueryOptions.DefaultBigQueryFactory.DefaultBigQueryFactory*"
  type: "Constructor"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public DefaultBigQueryFactory()"
- uid: "com.google.cloud.bigquery.BigQueryOptions.DefaultBigQueryFactory.create(com.google.cloud.bigquery.BigQueryOptions)"
  id: "create(com.google.cloud.bigquery.BigQueryOptions)"
  parent: "com.google.cloud.bigquery.BigQueryOptions.DefaultBigQueryFactory"
  langs:
  - "java"
  name: "create(BigQueryOptions options)"
  nameWithType: "BigQueryOptions.DefaultBigQueryFactory.create(BigQueryOptions options)"
  fullName: "com.google.cloud.bigquery.BigQueryOptions.DefaultBigQueryFactory.create(BigQueryOptions options)"
  overload: "com.google.cloud.bigquery.BigQueryOptions.DefaultBigQueryFactory.create*"
  type: "Method"
  package: "com.google.cloud.bigquery"
  syntax:
    content: "public BigQuery create(BigQueryOptions options)"
    parameters:
    - id: "options"
      type: "com.google.cloud.bigquery.BigQueryOptions"
    return:
      type: "com.google.cloud.bigquery.BigQuery"
references:
- uid: "com.google.cloud.bigquery.BigQueryOptions.DefaultBigQueryFactory.DefaultBigQueryFactory*"
  name: "DefaultBigQueryFactory"
  nameWithType: "BigQueryOptions.DefaultBigQueryFactory.DefaultBigQueryFactory"
  fullName: "com.google.cloud.bigquery.BigQueryOptions.DefaultBigQueryFactory.DefaultBigQueryFactory"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.BigQueryOptions"
  name: "BigQueryOptions"
  nameWithType: "BigQueryOptions"
  fullName: "com.google.cloud.bigquery.BigQueryOptions"
- uid: "com.google.cloud.bigquery.BigQuery"
  name: "BigQuery"
  nameWithType: "BigQuery"
  fullName: "com.google.cloud.bigquery.BigQuery"
- uid: "com.google.cloud.bigquery.BigQueryOptions.DefaultBigQueryFactory.create*"
  name: "create"
  nameWithType: "BigQueryOptions.DefaultBigQueryFactory.create"
  fullName: "com.google.cloud.bigquery.BigQueryOptions.DefaultBigQueryFactory.create"
  package: "com.google.cloud.bigquery"
- uid: "com.google.cloud.bigquery.BigQueryFactory"
  name: "BigQueryFactory"
  nameWithType: "BigQueryFactory"
  fullName: "com.google.cloud.bigquery.BigQueryFactory"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
