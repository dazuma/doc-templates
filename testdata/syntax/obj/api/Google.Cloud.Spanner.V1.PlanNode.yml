### YamlMime:ManagedReference
items:
- uid: Google.Cloud.Spanner.V1.PlanNode
  commentId: T:Google.Cloud.Spanner.V1.PlanNode
  id: PlanNode
  parent: Google.Cloud.Spanner.V1
  children:
  - Google.Cloud.Spanner.V1.PlanNode.#ctor
  - Google.Cloud.Spanner.V1.PlanNode.#ctor(Google.Cloud.Spanner.V1.PlanNode)
  - Google.Cloud.Spanner.V1.PlanNode.ChildLinks
  - Google.Cloud.Spanner.V1.PlanNode.DisplayName
  - Google.Cloud.Spanner.V1.PlanNode.ExecutionStats
  - Google.Cloud.Spanner.V1.PlanNode.Index
  - Google.Cloud.Spanner.V1.PlanNode.Kind
  - Google.Cloud.Spanner.V1.PlanNode.Metadata
  - Google.Cloud.Spanner.V1.PlanNode.ShortRepresentation
  langs:
  - csharp
  - vb
  name: PlanNode
  nameWithType: PlanNode
  fullName: Google.Cloud.Spanner.V1.PlanNode
  type: Class
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/QueryPlan.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: PlanNode
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/QueryPlan.cs
    startLine: 64
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nNode information for nodes appearing in a [QueryPlan.plan_nodes][google.spanner.v1.QueryPlan.plan_nodes].\n"
  example: []
  syntax:
    content: 'public sealed class PlanNode : IMessage<PlanNode>, IEquatable<PlanNode>, IDeepCloneable<PlanNode>, IBufferMessage, IMessage'
    content.vb: >-
      Public NotInheritable Class PlanNode
          Implements IMessage(Of PlanNode), IEquatable(Of PlanNode), IDeepCloneable(Of PlanNode), IBufferMessage, IMessage
  inheritance:
  - System.Object
  implements:
  - Google.Protobuf.IMessage{Google.Cloud.Spanner.V1.PlanNode}
  - System.IEquatable{Google.Cloud.Spanner.V1.PlanNode}
  - Google.Protobuf.IDeepCloneable{Google.Cloud.Spanner.V1.PlanNode}
  - Google.Protobuf.IBufferMessage
  - Google.Protobuf.IMessage
  inheritedMembers:
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Google.Cloud.Spanner.V1.PlanNode.#ctor
  commentId: M:Google.Cloud.Spanner.V1.PlanNode.#ctor
  id: '#ctor'
  parent: Google.Cloud.Spanner.V1.PlanNode
  langs:
  - csharp
  - vb
  name: PlanNode()
  nameWithType: PlanNode.PlanNode()
  fullName: Google.Cloud.Spanner.V1.PlanNode.PlanNode()
  type: Constructor
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/QueryPlan.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: .ctor
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/QueryPlan.cs
    startLine: 84
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  syntax:
    content: public PlanNode()
    content.vb: Public Sub New
  overload: Google.Cloud.Spanner.V1.PlanNode.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Cloud.Spanner.V1.PlanNode.#ctor(Google.Cloud.Spanner.V1.PlanNode)
  commentId: M:Google.Cloud.Spanner.V1.PlanNode.#ctor(Google.Cloud.Spanner.V1.PlanNode)
  id: '#ctor(Google.Cloud.Spanner.V1.PlanNode)'
  parent: Google.Cloud.Spanner.V1.PlanNode
  langs:
  - csharp
  - vb
  name: PlanNode(PlanNode)
  nameWithType: PlanNode.PlanNode(PlanNode)
  fullName: Google.Cloud.Spanner.V1.PlanNode.PlanNode(Google.Cloud.Spanner.V1.PlanNode)
  type: Constructor
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/QueryPlan.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: .ctor
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/QueryPlan.cs
    startLine: 91
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  syntax:
    content: public PlanNode(PlanNode other)
    parameters:
    - id: other
      type: Google.Cloud.Spanner.V1.PlanNode
    content.vb: Public Sub New(other As PlanNode)
  overload: Google.Cloud.Spanner.V1.PlanNode.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Google.Cloud.Spanner.V1.PlanNode.Index
  commentId: P:Google.Cloud.Spanner.V1.PlanNode.Index
  id: Index
  parent: Google.Cloud.Spanner.V1.PlanNode
  langs:
  - csharp
  - vb
  name: Index
  nameWithType: PlanNode.Index
  fullName: Google.Cloud.Spanner.V1.PlanNode.Index
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/QueryPlan.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: Index
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/QueryPlan.cs
    startLine: 114
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nThe `PlanNode`&apos;s index in [node list][google.spanner.v1.QueryPlan.plan_nodes].\n"
  example: []
  syntax:
    content: public int Index { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Index As Integer
  overload: Google.Cloud.Spanner.V1.PlanNode.Index*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Cloud.Spanner.V1.PlanNode.Kind
  commentId: P:Google.Cloud.Spanner.V1.PlanNode.Kind
  id: Kind
  parent: Google.Cloud.Spanner.V1.PlanNode
  langs:
  - csharp
  - vb
  name: Kind
  nameWithType: PlanNode.Kind
  fullName: Google.Cloud.Spanner.V1.PlanNode.Kind
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/QueryPlan.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: Kind
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/QueryPlan.cs
    startLine: 132
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nUsed to determine the type of node. May be needed for visualizing\ndifferent kinds of nodes differently. For example, If the node is a\n[SCALAR][google.spanner.v1.PlanNode.Kind.SCALAR] node, it will have a condensed representation\nwhich can be used to directly embed a description of the node in its\nparent.\n"
  example: []
  syntax:
    content: public PlanNode.Types.Kind Kind { get; set; }
    parameters: []
    return:
      type: Google.Cloud.Spanner.V1.PlanNode.Types.Kind
    content.vb: Public Property Kind As PlanNode.Types.Kind
  overload: Google.Cloud.Spanner.V1.PlanNode.Kind*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Cloud.Spanner.V1.PlanNode.DisplayName
  commentId: P:Google.Cloud.Spanner.V1.PlanNode.DisplayName
  id: DisplayName
  parent: Google.Cloud.Spanner.V1.PlanNode
  langs:
  - csharp
  - vb
  name: DisplayName
  nameWithType: PlanNode.DisplayName
  fullName: Google.Cloud.Spanner.V1.PlanNode.DisplayName
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/QueryPlan.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: DisplayName
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/QueryPlan.cs
    startLine: 146
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nThe display name for the node.\n"
  example: []
  syntax:
    content: public string DisplayName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property DisplayName As String
  overload: Google.Cloud.Spanner.V1.PlanNode.DisplayName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Cloud.Spanner.V1.PlanNode.ChildLinks
  commentId: P:Google.Cloud.Spanner.V1.PlanNode.ChildLinks
  id: ChildLinks
  parent: Google.Cloud.Spanner.V1.PlanNode
  langs:
  - csharp
  - vb
  name: ChildLinks
  nameWithType: PlanNode.ChildLinks
  fullName: Google.Cloud.Spanner.V1.PlanNode.ChildLinks
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/QueryPlan.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: ChildLinks
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/QueryPlan.cs
    startLine: 162
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nList of child node `index`es and their relationship to this parent.\n"
  example: []
  syntax:
    content: public RepeatedField<PlanNode.Types.ChildLink> ChildLinks { get; }
    parameters: []
    return:
      type: Google.Protobuf.Collections.RepeatedField{Google.Cloud.Spanner.V1.PlanNode.Types.ChildLink}
    content.vb: Public ReadOnly Property ChildLinks As RepeatedField(Of PlanNode.Types.ChildLink)
  overload: Google.Cloud.Spanner.V1.PlanNode.ChildLinks*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Google.Cloud.Spanner.V1.PlanNode.ShortRepresentation
  commentId: P:Google.Cloud.Spanner.V1.PlanNode.ShortRepresentation
  id: ShortRepresentation
  parent: Google.Cloud.Spanner.V1.PlanNode
  langs:
  - csharp
  - vb
  name: ShortRepresentation
  nameWithType: PlanNode.ShortRepresentation
  fullName: Google.Cloud.Spanner.V1.PlanNode.ShortRepresentation
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/QueryPlan.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: ShortRepresentation
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/QueryPlan.cs
    startLine: 173
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nCondensed representation for [SCALAR][google.spanner.v1.PlanNode.Kind.SCALAR] nodes.\n"
  example: []
  syntax:
    content: public PlanNode.Types.ShortRepresentation ShortRepresentation { get; set; }
    parameters: []
    return:
      type: Google.Cloud.Spanner.V1.PlanNode.Types.ShortRepresentation
    content.vb: Public Property ShortRepresentation As PlanNode.Types.ShortRepresentation
  overload: Google.Cloud.Spanner.V1.PlanNode.ShortRepresentation*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Cloud.Spanner.V1.PlanNode.Metadata
  commentId: P:Google.Cloud.Spanner.V1.PlanNode.Metadata
  id: Metadata
  parent: Google.Cloud.Spanner.V1.PlanNode
  langs:
  - csharp
  - vb
  name: Metadata
  nameWithType: PlanNode.Metadata
  fullName: Google.Cloud.Spanner.V1.PlanNode.Metadata
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/QueryPlan.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: Metadata
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/QueryPlan.cs
    startLine: 194
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nAttributes relevant to the node contained in a group of key-value pairs.\nFor example, a Parameter Reference node could have the following\ninformation in its metadata:\n\n{\n &quot;parameter_reference&quot;: &quot;param1&quot;,\n &quot;parameter_type&quot;: &quot;array&quot;\n}\n"
  example: []
  syntax:
    content: public Struct Metadata { get; set; }
    parameters: []
    return:
      type: Google.Protobuf.WellKnownTypes.Struct
    content.vb: Public Property Metadata As Struct
  overload: Google.Cloud.Spanner.V1.PlanNode.Metadata*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Google.Cloud.Spanner.V1.PlanNode.ExecutionStats
  commentId: P:Google.Cloud.Spanner.V1.PlanNode.ExecutionStats
  id: ExecutionStats
  parent: Google.Cloud.Spanner.V1.PlanNode
  langs:
  - csharp
  - vb
  name: ExecutionStats
  nameWithType: PlanNode.ExecutionStats
  fullName: Google.Cloud.Spanner.V1.PlanNode.ExecutionStats
  type: Property
  source:
    remote:
      path: apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/QueryPlan.cs
      branch: c0943b21872eacb5bb6cb8702a5ef26436cc6930
      repo: git@github.com:googleapis/google-cloud-dotnet.git
    id: ExecutionStats
    path: ../../../apis/Google.Cloud.Spanner.V1/Google.Cloud.Spanner.V1/QueryPlan.cs
    startLine: 211
  assemblies:
  - Google.Cloud.Spanner.V1
  namespace: Google.Cloud.Spanner.V1
  summary: "\nThe execution statistics associated with the node, contained in a group of\nkey-value pairs. Only present if the plan was returned as a result of a\nprofile query. For example, number of executions, number of rows/time per\nexecution etc.\n"
  example: []
  syntax:
    content: public Struct ExecutionStats { get; set; }
    parameters: []
    return:
      type: Google.Protobuf.WellKnownTypes.Struct
    content.vb: Public Property ExecutionStats As Struct
  overload: Google.Cloud.Spanner.V1.PlanNode.ExecutionStats*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Google.Cloud.Spanner.V1
  commentId: N:Google.Cloud.Spanner.V1
  name: Google.Cloud.Spanner.V1
  nameWithType: Google.Cloud.Spanner.V1
  fullName: Google.Cloud.Spanner.V1
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Google.Protobuf.IMessage{Google.Cloud.Spanner.V1.PlanNode}
  commentId: T:Google.Protobuf.IMessage{Google.Cloud.Spanner.V1.PlanNode}
  parent: Google.Protobuf
  definition: Google.Protobuf.IMessage`1
  name: IMessage<PlanNode>
  nameWithType: IMessage<PlanNode>
  fullName: Google.Protobuf.IMessage<Google.Cloud.Spanner.V1.PlanNode>
  nameWithType.vb: IMessage(Of PlanNode)
  fullName.vb: Google.Protobuf.IMessage(Of Google.Cloud.Spanner.V1.PlanNode)
  name.vb: IMessage(Of PlanNode)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Spanner.V1.PlanNode
    name: PlanNode
    nameWithType: PlanNode
    fullName: Google.Cloud.Spanner.V1.PlanNode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Spanner.V1.PlanNode
    name: PlanNode
    nameWithType: PlanNode
    fullName: Google.Cloud.Spanner.V1.PlanNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable{Google.Cloud.Spanner.V1.PlanNode}
  commentId: T:System.IEquatable{Google.Cloud.Spanner.V1.PlanNode}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<PlanNode>
  nameWithType: IEquatable<PlanNode>
  fullName: System.IEquatable<Google.Cloud.Spanner.V1.PlanNode>
  nameWithType.vb: IEquatable(Of PlanNode)
  fullName.vb: System.IEquatable(Of Google.Cloud.Spanner.V1.PlanNode)
  name.vb: IEquatable(Of PlanNode)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Spanner.V1.PlanNode
    name: PlanNode
    nameWithType: PlanNode
    fullName: Google.Cloud.Spanner.V1.PlanNode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Spanner.V1.PlanNode
    name: PlanNode
    nameWithType: PlanNode
    fullName: Google.Cloud.Spanner.V1.PlanNode
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IDeepCloneable{Google.Cloud.Spanner.V1.PlanNode}
  commentId: T:Google.Protobuf.IDeepCloneable{Google.Cloud.Spanner.V1.PlanNode}
  parent: Google.Protobuf
  definition: Google.Protobuf.IDeepCloneable`1
  name: IDeepCloneable<PlanNode>
  nameWithType: IDeepCloneable<PlanNode>
  fullName: Google.Protobuf.IDeepCloneable<Google.Cloud.Spanner.V1.PlanNode>
  nameWithType.vb: IDeepCloneable(Of PlanNode)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of Google.Cloud.Spanner.V1.PlanNode)
  name.vb: IDeepCloneable(Of PlanNode)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Spanner.V1.PlanNode
    name: PlanNode
    nameWithType: PlanNode
    fullName: Google.Cloud.Spanner.V1.PlanNode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Spanner.V1.PlanNode
    name: PlanNode
    nameWithType: PlanNode
    fullName: Google.Cloud.Spanner.V1.PlanNode
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IBufferMessage
  commentId: T:Google.Protobuf.IBufferMessage
  parent: Google.Protobuf
  isExternal: true
  name: IBufferMessage
  nameWithType: IBufferMessage
  fullName: Google.Protobuf.IBufferMessage
- uid: Google.Protobuf.IMessage
  commentId: T:Google.Protobuf.IMessage
  parent: Google.Protobuf
  isExternal: true
  name: IMessage
  nameWithType: IMessage
  fullName: Google.Protobuf.IMessage
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Protobuf.IMessage`1
  commentId: T:Google.Protobuf.IMessage`1
  isExternal: true
  name: IMessage<T>
  nameWithType: IMessage<T>
  fullName: Google.Protobuf.IMessage<T>
  nameWithType.vb: IMessage(Of T)
  fullName.vb: Google.Protobuf.IMessage(Of T)
  name.vb: IMessage(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf
  commentId: N:Google.Protobuf
  isExternal: true
  name: Google.Protobuf
  nameWithType: Google.Protobuf
  fullName: Google.Protobuf
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IDeepCloneable`1
  commentId: T:Google.Protobuf.IDeepCloneable`1
  isExternal: true
  name: IDeepCloneable<T>
  nameWithType: IDeepCloneable<T>
  fullName: Google.Protobuf.IDeepCloneable<T>
  nameWithType.vb: IDeepCloneable(Of T)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of T)
  name.vb: IDeepCloneable(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Cloud.Spanner.V1.PlanNode.#ctor*
  commentId: Overload:Google.Cloud.Spanner.V1.PlanNode.#ctor
  name: PlanNode
  nameWithType: PlanNode.PlanNode
  fullName: Google.Cloud.Spanner.V1.PlanNode.PlanNode
- uid: Google.Cloud.Spanner.V1.PlanNode
  commentId: T:Google.Cloud.Spanner.V1.PlanNode
  parent: Google.Cloud.Spanner.V1
  name: PlanNode
  nameWithType: PlanNode
  fullName: Google.Cloud.Spanner.V1.PlanNode
- uid: Google.Cloud.Spanner.V1.PlanNode.Index*
  commentId: Overload:Google.Cloud.Spanner.V1.PlanNode.Index
  name: Index
  nameWithType: PlanNode.Index
  fullName: Google.Cloud.Spanner.V1.PlanNode.Index
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Google.Cloud.Spanner.V1.PlanNode.Kind*
  commentId: Overload:Google.Cloud.Spanner.V1.PlanNode.Kind
  name: Kind
  nameWithType: PlanNode.Kind
  fullName: Google.Cloud.Spanner.V1.PlanNode.Kind
- uid: Google.Cloud.Spanner.V1.PlanNode.Types.Kind
  commentId: T:Google.Cloud.Spanner.V1.PlanNode.Types.Kind
  parent: Google.Cloud.Spanner.V1
  name: PlanNode.Types.Kind
  nameWithType: PlanNode.Types.Kind
  fullName: Google.Cloud.Spanner.V1.PlanNode.Types.Kind
- uid: Google.Cloud.Spanner.V1.PlanNode.DisplayName*
  commentId: Overload:Google.Cloud.Spanner.V1.PlanNode.DisplayName
  name: DisplayName
  nameWithType: PlanNode.DisplayName
  fullName: Google.Cloud.Spanner.V1.PlanNode.DisplayName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Google.Cloud.Spanner.V1.PlanNode.ChildLinks*
  commentId: Overload:Google.Cloud.Spanner.V1.PlanNode.ChildLinks
  name: ChildLinks
  nameWithType: PlanNode.ChildLinks
  fullName: Google.Cloud.Spanner.V1.PlanNode.ChildLinks
- uid: Google.Protobuf.Collections.RepeatedField{Google.Cloud.Spanner.V1.PlanNode.Types.ChildLink}
  commentId: T:Google.Protobuf.Collections.RepeatedField{Google.Cloud.Spanner.V1.PlanNode.Types.ChildLink}
  parent: Google.Protobuf.Collections
  definition: Google.Protobuf.Collections.RepeatedField`1
  name: RepeatedField<PlanNode.Types.ChildLink>
  nameWithType: RepeatedField<PlanNode.Types.ChildLink>
  fullName: Google.Protobuf.Collections.RepeatedField<Google.Cloud.Spanner.V1.PlanNode.Types.ChildLink>
  nameWithType.vb: RepeatedField(Of PlanNode.Types.ChildLink)
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of Google.Cloud.Spanner.V1.PlanNode.Types.ChildLink)
  name.vb: RepeatedField(Of PlanNode.Types.ChildLink)
  spec.csharp:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    nameWithType: RepeatedField
    fullName: Google.Protobuf.Collections.RepeatedField
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Spanner.V1.PlanNode.Types.ChildLink
    name: PlanNode.Types.ChildLink
    nameWithType: PlanNode.Types.ChildLink
    fullName: Google.Cloud.Spanner.V1.PlanNode.Types.ChildLink
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    nameWithType: RepeatedField
    fullName: Google.Protobuf.Collections.RepeatedField
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Spanner.V1.PlanNode.Types.ChildLink
    name: PlanNode.Types.ChildLink
    nameWithType: PlanNode.Types.ChildLink
    fullName: Google.Cloud.Spanner.V1.PlanNode.Types.ChildLink
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.Collections.RepeatedField`1
  commentId: T:Google.Protobuf.Collections.RepeatedField`1
  isExternal: true
  name: RepeatedField<T>
  nameWithType: RepeatedField<T>
  fullName: Google.Protobuf.Collections.RepeatedField<T>
  nameWithType.vb: RepeatedField(Of T)
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of T)
  name.vb: RepeatedField(Of T)
  spec.csharp:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    nameWithType: RepeatedField
    fullName: Google.Protobuf.Collections.RepeatedField
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    nameWithType: RepeatedField
    fullName: Google.Protobuf.Collections.RepeatedField
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.Collections
  commentId: N:Google.Protobuf.Collections
  isExternal: true
  name: Google.Protobuf.Collections
  nameWithType: Google.Protobuf.Collections
  fullName: Google.Protobuf.Collections
- uid: Google.Cloud.Spanner.V1.PlanNode.ShortRepresentation*
  commentId: Overload:Google.Cloud.Spanner.V1.PlanNode.ShortRepresentation
  name: ShortRepresentation
  nameWithType: PlanNode.ShortRepresentation
  fullName: Google.Cloud.Spanner.V1.PlanNode.ShortRepresentation
- uid: Google.Cloud.Spanner.V1.PlanNode.Types.ShortRepresentation
  commentId: T:Google.Cloud.Spanner.V1.PlanNode.Types.ShortRepresentation
  parent: Google.Cloud.Spanner.V1
  name: PlanNode.Types.ShortRepresentation
  nameWithType: PlanNode.Types.ShortRepresentation
  fullName: Google.Cloud.Spanner.V1.PlanNode.Types.ShortRepresentation
- uid: Google.Cloud.Spanner.V1.PlanNode.Metadata*
  commentId: Overload:Google.Cloud.Spanner.V1.PlanNode.Metadata
  name: Metadata
  nameWithType: PlanNode.Metadata
  fullName: Google.Cloud.Spanner.V1.PlanNode.Metadata
- uid: Google.Protobuf.WellKnownTypes.Struct
  commentId: T:Google.Protobuf.WellKnownTypes.Struct
  parent: Google.Protobuf.WellKnownTypes
  isExternal: true
  name: Struct
  nameWithType: Struct
  fullName: Google.Protobuf.WellKnownTypes.Struct
- uid: Google.Protobuf.WellKnownTypes
  commentId: N:Google.Protobuf.WellKnownTypes
  isExternal: true
  name: Google.Protobuf.WellKnownTypes
  nameWithType: Google.Protobuf.WellKnownTypes
  fullName: Google.Protobuf.WellKnownTypes
- uid: Google.Cloud.Spanner.V1.PlanNode.ExecutionStats*
  commentId: Overload:Google.Cloud.Spanner.V1.PlanNode.ExecutionStats
  name: ExecutionStats
  nameWithType: PlanNode.ExecutionStats
  fullName: Google.Cloud.Spanner.V1.PlanNode.ExecutionStats
